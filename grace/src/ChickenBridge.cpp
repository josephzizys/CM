/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-11 12:58
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[920];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,52,56,49,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,53,48,51,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,53,49,51,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,53,49,57,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,56,52,53,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,56,51,52,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,56,52,51,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,55,56,49,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,56,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,56,54,51,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,56,55,56,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,23),40,100,111,49,55,49,32,116,97,105,108,49,55,51,32,102,108,97,103,49,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,54,57,32,108,49,55,48,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,55,57,32,112,114,111,112,49,56,48,32,46,32,100,101,102,49,56,49,41,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,100,111,49,56,55,32,102,49,56,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,56,53,32,98,49,56,54,41};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,50,49,50,50,52,32,97,50,50,48,50,50,53,32,97,50,49,57,50,50,54,32,97,50,49,56,50,50,55,32,97,50,49,55,50,50,56,32,97,50,49,54,50,50,57,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,51,54,50,51,57,32,97,50,51,53,50,52,48,32,97,50,51,52,50,52,49,32,97,50,51,51,50,52,50,32,97,50,51,50,50,52,51,32,97,50,51,49,50,52,52,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,52,53,50,52,56,41};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,53,48,50,53,51,32,97,50,52,57,50,53,52,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,53,56,50,54,49,32,97,50,53,55,50,54,50,32,97,50,53,54,50,54,51,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,54,53,50,54,56,41,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,55,48,50,55,51,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,55,55,50,56,48,32,97,50,55,54,50,56,49,32,97,50,55,53,50,56,50,32,97,50,55,52,50,56,51,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,56,56,50,57,49,32,97,50,56,55,50,57,50,32,97,50,56,54,50,57,51,32,97,50,56,53,50,57,52,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,57,54,50,57,57,41,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,49,48,51,49,51,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,49,52,51,49,55,41,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,49,56,51,50,49,41,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,52,54,51,52,57,32,97,51,52,53,51,53,48,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,53,50,51,53,53,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,54,52,51,54,55,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,55,50,51,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,97,55,56,55,54,32,122,51,57,55,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,57,49,32,120,49,51,57,50,32,120,50,51,57,51,32,121,49,51,57,52,32,121,50,51,57,53,32,46,32,98,51,57,54,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,12),40,97,55,57,49,54,32,122,52,48,57,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,55,57,52,50,32,122,52,49,48,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,57,56,32,120,49,51,57,57,32,120,50,52,48,48,32,105,49,52,48,49,32,46,32,97,114,103,115,52,48,50,41,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,49,50,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,49,51,41};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,49,52,32,46,32,97,114,103,115,52,49,53,41};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,56,49,48,52,32,110,52,49,56,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,49,54,32,115,116,101,112,115,52,49,55,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,49,50,56,32,118,52,50,50,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,49,57,32,112,108,97,99,101,115,52,50,48,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,49,55,52,32,120,52,54,51,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,50,51,32,46,32,97,114,103,115,52,50,52,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,54,56,41,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,52,55,55,32,116,97,105,108,52,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,54,57,32,99,111,111,114,100,115,52,55,48,32,98,97,115,101,52,55,49,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,56,55,32,46,32,97,114,103,115,52,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,57,48,32,108,111,119,52,57,49,32,104,105,103,104,52,57,50,32,46,32,97,114,103,115,52,57,51,41};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,48,54,32,108,98,53,48,55,32,117,98,53,48,56,32,109,111,100,101,53,48,57,41,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,55,50,57,32,110,53,49,52,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,57,57,32,108,98,53,48,48,32,117,98,53,48,49,32,46,32,109,111,100,101,53,48,50,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,27),40,100,111,53,50,54,32,105,53,50,56,32,107,53,50,57,32,108,53,51,48,32,116,53,51,49,41,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,49,56,32,107,101,121,110,117,109,53,49,57,32,46,32,97,114,103,115,53,50,48,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,52,48,32,98,53,52,49,41,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,52,50,41};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,52,51,32,46,32,97,114,103,115,53,52,52,41,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,57,48,32,118,97,114,105,53,57,49,32,109,111,100,101,53,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,12),40,97,57,50,53,56,32,118,53,57,55,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,56,54,32,118,97,114,105,53,56,55,32,46,32,109,111,100,101,53,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,22),40,100,111,54,48,51,32,105,54,48,53,32,106,54,48,54,32,118,54,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,49,50,41,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,49,51,41,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,53,54,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,53,55,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,53,57,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,55,49,32,105,54,55,51,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,15),40,100,111,54,56,55,32,116,97,105,108,54,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,51,32,105,54,56,53,32,110,54,56,54,41,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,54,48,32,115,117,109,54,54,49,32,46,32,97,114,103,115,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,7),40,97,57,57,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,7),40,97,57,57,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,52,48,32,111,99,116,55,52,49,32,101,114,114,55,52,50,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,7),40,97,57,57,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,7),40,97,57,57,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,52,56,32,100,111,99,116,55,52,57,32,101,114,114,63,55,53,48,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,51,32,116,97,105,108,55,53,53,32,100,101,102,111,55,53,54,32,116,104,105,115,55,53,55,32,114,101,115,108,55,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,39),40,100,111,55,54,55,32,116,97,105,108,55,54,57,32,100,101,102,111,55,55,48,32,116,104,105,115,55,55,49,32,114,101,115,108,55,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,54,53,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,39),40,100,111,55,56,51,32,116,97,105,108,55,56,53,32,100,101,102,111,55,56,54,32,116,104,105,115,55,56,55,32,114,101,115,108,55,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,56,49,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,57,55,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,23),40,100,111,56,48,51,32,116,97,105,108,56,48,53,32,108,97,115,116,56,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,48,48,41,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,13),40,97,49,48,53,53,57,32,122,56,49,48,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,57,56,41,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,23),40,100,111,56,49,56,32,116,97,105,108,56,50,48,32,108,97,115,116,56,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,49,53,32,111,114,105,103,56,49,54,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,13),40,97,49,48,55,49,50,32,122,56,50,53,41,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,49,49,32,121,56,49,50,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,18),40,97,49,48,55,55,53,32,97,56,50,56,32,98,56,50,57,41,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,18),40,97,49,48,56,51,51,32,97,56,51,48,32,98,56,51,49,41,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,50,54,32,46,32,109,111,100,101,56,50,55,41};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,49,49,32,115,105,122,101,57,49,50,32,102,114,101,113,115,57,49,51,32,97,109,112,115,57,49,52,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,49,53,41};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,49,57,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,50,50,32,118,97,108,57,50,51,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,50,53,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,50,56,32,118,97,108,57,50,57,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,51,49,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,51,52,32,118,97,108,57,51,53,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,51,55,41,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,12),40,100,111,57,53,52,32,105,57,53,54,41,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,52,56,41,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,13),40,97,49,49,49,50,57,32,97,57,54,53,41,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,54,50,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,13),40,97,49,49,49,54,48,32,97,57,55,50,41,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,54,57,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,49,57,48,32,104,57,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,50,54,50,32,107,57,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,50,57,53,32,104,49,48,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,51,48,53,32,104,49,48,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,20),40,97,49,49,51,53,57,32,97,49,48,48,56,32,98,49,48,48,57,41,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,20),40,97,49,49,51,55,52,32,97,49,48,49,48,32,98,49,48,49,49,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,50,51,32,46,32,97,114,103,115,49,48,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,35),40,100,111,49,50,56,50,32,116,97,105,108,49,50,56,52,32,115,105,122,101,49,50,56,53,32,97,109,112,108,49,50,56,54,41,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,54,48,32,105,49,50,54,50,32,102,49,50,54,51,32,120,49,50,54,52,41,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,24),40,100,111,49,50,53,52,32,110,101,103,49,50,53,54,32,112,111,115,49,50,53,55,41};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,24),40,102,95,55,56,53,52,32,97,51,56,53,51,56,56,32,97,51,56,52,51,56,57,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,52,50,32,107,49,50,52,52,32,102,49,50,52,53,32,97,49,50,52,54,41,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,51,52,32,109,114,97,116,105,111,49,50,51,53,32,105,110,100,101,120,49,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,47),40,100,111,49,50,57,57,32,102,114,101,113,115,49,51,48,49,32,97,109,112,115,49,51,48,50,32,108,97,115,116,102,49,51,48,51,32,108,97,115,116,97,49,51,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,50,57,54,32,102,114,101,113,49,50,57,55,32,97,109,112,49,50,57,56,41,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,50,54,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,50,56,32,102,49,49,51,50,57,32,102,50,49,51,51,49,41,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,52,50,32,108,49,49,51,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,51,57,32,108,50,49,51,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,52,57,32,108,49,49,51,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,53,52,32,115,50,49,51,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,50,49,32,115,112,101,99,50,49,51,50,50,41,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,52,50,55,32,108,101,110,103,116,104,49,52,50,56,32,115,116,114,101,97,109,49,52,50,57,32,100,101,102,97,117,108,116,49,52,51,48,32,111,109,105,116,49,52,51,49,32,114,101,112,115,49,52,51,50,41,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,51,52,32,118,97,108,49,52,51,53,41,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,52,51,55,41,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,52,52,51,41,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,52,52,57,41,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,52,53,56,32,118,97,108,49,52,53,57,41};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,52,54,49,41,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,52,54,55,41,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,52,57,51,41};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,52,57,55,41,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,53,48,48,32,118,97,108,49,53,48,49,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,53,48,51,41,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,53,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,53,49,50,32,118,97,108,49,53,49,51,41,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,53,49,53,41,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,53,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,53,50,52,32,118,97,108,49,53,50,53,41,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,15),40,102,95,49,52,50,50,55,32,120,49,53,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,53,51,48,32,118,97,108,49,53,51,49,41,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,53,55,50,32,118,97,108,49,53,55,51,41,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,53,55,53,41,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,14),40,97,49,52,54,48,53,32,120,49,54,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,53,57,53,32,100,97,116,97,49,53,57,54,32,102,111,114,49,53,57,55,32,114,101,112,49,53,57,56,32,102,108,97,103,115,49,53,57,57,32,108,101,110,49,54,48,48,32,100,112,101,114,49,54,48,49,32,103,101,116,114,49,54,48,50,32,109,97,112,114,49,54,48,51,41,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,54,51,48,41,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,54,51,49,41,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,20),40,100,111,49,54,51,54,32,105,49,54,51,56,32,101,49,54,51,57,41,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,52,51,32,110,49,54,52,53,32,101,49,54,52,54,32,102,49,54,52,55,41,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,54,51,50,32,46,32,97,114,103,115,49,54,51,51,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,55,49,41};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,54,55,32,100,121,110,63,49,54,54,57,32,115,116,111,112,49,54,55,48,41,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,54,53,51,41};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,54,57,49,41,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,54,57,50,32,111,98,106,49,54,57,51,41,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,14),40,97,49,53,49,56,49,32,120,49,55,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,54,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,23),40,97,49,53,50,55,53,32,102,110,49,55,53,52,32,111,98,106,49,55,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,55,49,49,32,46,32,97,114,103,115,49,55,49,50,41};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,55,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,55,56,49,41,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,55,56,52,32,118,97,108,49,55,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,23),40,97,49,53,55,48,53,32,102,110,49,56,56,50,32,111,98,106,49,56,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,56,49,48,32,46,32,97,114,103,115,49,56,49,49,41,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,56,57,49,41,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,23),40,97,49,54,51,55,50,32,102,110,49,57,53,51,32,111,98,106,49,57,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,57,49,48,32,46,32,97,114,103,115,49,57,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,57,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,23),40,97,49,54,54,53,57,32,102,110,50,48,48,56,32,111,98,106,50,48,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,57,54,53,32,46,32,97,114,103,115,49,57,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,26),40,100,111,50,48,49,57,32,105,50,48,50,49,32,106,50,48,50,50,32,118,50,48,50,51,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,48,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,23),40,97,49,55,48,48,52,32,102,110,50,49,48,51,32,111,98,106,50,49,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,48,51,49,32,46,32,97,114,103,115,50,48,51,50,41,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,49,57,32,105,50,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,49,49,52,32,115,116,97,114,116,50,49,49,53,32,115,116,101,112,50,49,49,54,32,119,105,100,116,104,50,49,49,55,32,101,110,100,50,49,49,56,41,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,49,49,50,41,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,49,52,54,41,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,49,52,57,32,118,97,108,50,49,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,49,53,50,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,49,53,56,41,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,49,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,49,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,49,55,51,32,118,97,108,50,49,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,49,55,54,41,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,14),40,97,49,55,56,56,57,32,105,50,50,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,23),40,97,49,55,56,56,51,32,102,110,50,50,53,55,32,111,98,106,50,50,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,17),40,97,49,56,49,50,48,32,105,116,101,109,50,50,49,50,41,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,50,55,48,41,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,50,48,50,32,46,32,97,114,103,115,50,50,48,51,41,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,37),40,100,111,50,51,53,55,32,116,97,105,108,50,51,53,57,32,105,110,100,101,120,50,51,54,48,32,116,111,116,97,108,50,51,54,49,41,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,53,49,32,116,97,105,108,50,51,53,51,41,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,51,52,55,32,102,105,120,63,50,51,52,56,41,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,27),40,100,111,50,51,55,57,32,116,97,105,108,50,51,56,49,32,105,110,100,101,120,50,51,56,50,41,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,51,55,55,32,114,50,51,55,56,41,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,56,56,32,116,97,105,108,50,51,57,48,41,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,56,52,32,105,116,101,109,50,51,56,54,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,51,54,55,41,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,23),40,97,49,57,50,48,51,32,102,110,50,53,49,54,32,111,98,106,50,53,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,53,55,32,115,50,52,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,8),40,100,111,50,52,49,48,41};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,41),40,100,111,50,52,51,50,32,116,97,105,108,50,52,51,52,32,111,114,100,101,114,50,52,51,53,32,108,105,115,50,52,51,54,32,112,50,52,51,55,41,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,52,52,52,32,46,32,97,114,103,115,50,52,52,53,41,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,49,32,116,97,105,108,50,53,52,51,41,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,33),40,100,111,50,53,51,49,32,116,97,105,108,50,53,51,51,32,111,117,116,50,53,51,52,32,115,117,109,50,53,51,53,41,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,53,50,57,32,111,117,116,112,117,116,115,50,53,51,48,41,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,55,49,32,108,97,115,116,50,53,55,51,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,26),40,100,111,50,53,52,55,32,105,50,53,52,57,32,106,50,53,53,48,32,102,50,53,53,49,41,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,35),40,100,111,50,53,54,50,32,116,97,105,108,50,53,54,52,32,112,97,115,116,50,53,54,53,32,105,116,101,109,50,53,54,54,41,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,53,50,54,41};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,53,57,49,41};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,14),40,97,50,48,48,55,53,32,110,50,54,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,23),40,97,50,48,48,54,57,32,102,110,50,54,53,53,32,111,98,106,50,54,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,28),40,97,50,48,51,50,49,32,105,116,101,109,50,54,54,55,32,46,32,97,114,103,115,50,54,54,56,41,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,54,54,54,41,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,54,49,50,32,46,32,97,114,103,115,50,54,49,51,41};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,50,49,32,116,97,105,108,50,55,50,51,41,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,55,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,48,55,52,56,32,120,50,55,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,55,56,52,32,110,101,120,116,50,55,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,14),40,97,50,48,55,57,54,32,122,50,55,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,48,54,32,122,50,55,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,55,56,57,32,121,50,55,57,48,32,108,50,55,57,49,41,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,16),40,97,50,48,57,48,52,32,114,111,119,50,57,49,56,41};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,57,50,32,105,50,56,57,52,32,109,50,56,57,53,41,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,56,53,32,108,50,56,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,55,56,32,105,50,56,56,48,32,109,50,56,56,49,41,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,55,50,32,105,50,56,55,52,32,109,50,56,55,53,41,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,57,56,32,120,50,56,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,54,54,32,116,97,105,108,50,56,54,56,41,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,53,54,32,105,50,56,53,56,32,109,50,56,53,57,41,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,53,49,32,108,50,56,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,52,54,32,105,50,56,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,20),40,97,50,49,50,48,48,32,120,50,56,52,50,32,121,50,56,52,51,41,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,51,51,32,101,50,56,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,50,55,32,101,50,56,50,57,32,115,50,56,51,48,41,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,25),40,100,111,50,56,49,57,32,116,97,105,108,50,56,50,49,32,108,101,110,50,56,50,50,41,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,20),40,97,50,49,51,52,57,32,120,50,56,49,55,32,121,50,56,49,56,41,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,29),40,100,111,50,56,48,54,32,112,114,101,118,50,56,48,56,32,106,50,56,48,57,32,120,50,56,49,48,41,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,48,51,32,105,50,56,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,55,50,57,32,46,32,97,114,103,115,50,55,51,48,41,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,57,54,50,32,115,116,114,105,110,103,50,57,54,51,32,112,111,115,105,116,105,111,110,50,57,54,52,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,57,54,57,41,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,57,55,53,41,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,57,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,57,57,48,41,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,57,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,57,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,57,57,53,32,116,121,112,101,50,57,57,54,32,112,97,116,116,101,114,110,50,57,57,55,32,112,97,114,115,101,114,50,57,57,56,32,101,109,105,116,101,114,50,57,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,48,48,52,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,48,52,56,32,100,101,102,51,48,52,57,41,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,48,53,49,41,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,48,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,48,53,52,41,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,48,53,53,41,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,48,53,54,32,105,51,48,53,55,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,48,54,49,41,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,48,54,51,32,112,111,115,105,116,105,111,110,51,48,54,52,41,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,48,54,57,41,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,48,55,53,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,48,56,51,32,112,97,114,115,101,100,51,48,56,52,32,112,111,115,105,116,105,111,110,51,48,56,53,41,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,48,56,54,41,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,48,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,48,57,54,41,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,49,48,50,41,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,49,49,50,41,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,49,49,51,32,116,121,112,51,49,49,52,41,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,49,49,54,32,105,110,102,111,51,49,49,55,41,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,49,49,57,32,100,97,116,97,51,49,50,48,32,105,110,102,111,51,49,50,49,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,49,50,50,32,100,97,116,97,51,49,50,51,32,105,110,102,111,51,49,50,52,41,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,49,50,55,32,105,110,102,111,51,49,50,56,32,101,114,114,102,51,49,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,49,51,48,32,105,110,102,111,51,49,51,49,32,101,114,114,102,51,49,51,50,41,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,27),40,102,95,50,50,52,57,55,32,97,114,103,115,51,49,52,53,32,101,114,114,102,51,49,52,54,41,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,49,52,52,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,53,52,32,116,97,105,108,51,49,53,54,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,36),40,102,95,50,50,53,48,53,32,117,110,105,116,51,49,52,56,32,105,110,102,111,51,49,52,57,32,101,114,114,102,51,49,53,48,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,49,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,8),40,97,50,50,55,48,51,41};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,26),40,97,50,50,55,49,51,32,97,51,49,56,54,32,98,51,49,56,55,32,99,51,49,56,56,41,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,8),40,97,50,50,56,48,57,41};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,26),40,97,50,50,56,50,51,32,97,51,50,48,50,32,98,51,50,48,51,32,99,51,50,48,52,41,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,57,55,32,105,51,49,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,8),40,97,50,50,56,55,54,41};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,26),40,97,50,50,56,57,48,32,97,51,50,50,52,32,98,51,50,50,53,32,99,51,50,50,54,41,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,49,57,32,105,51,50,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,8),40,97,50,50,57,54,53,41};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,26),40,97,50,50,57,55,49,32,97,51,50,52,51,32,98,51,50,52,52,32,99,51,50,52,53,41,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,8),40,100,111,51,50,51,57,41};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,8),40,97,50,51,48,48,52,41};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,26),40,97,50,51,48,49,48,32,97,51,50,54,49,32,98,51,50,54,50,32,99,51,50,54,51,41,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,49,55,51,32,116,111,107,101,110,115,51,49,55,52,32,102,111,114,99,101,45,97,110,100,51,49,55,53,32,108,101,118,101,108,51,49,55,54,32,116,114,97,99,101,51,49,55,55,32,101,114,114,102,51,49,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,52,51,56,41,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,52,52,50,41,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,52,53,49,41,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,52,53,50,32,116,121,112,50,51,52,53,51,41,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,48,50,32,116,111,107,115,51,53,48,52,41,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,52,57,56,32,116,121,112,51,52,57,57,41,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,53,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,29),40,100,111,51,53,51,56,32,119,50,51,53,52,48,32,111,107,51,53,52,49,32,108,105,51,53,52,50,41,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,8),40,100,111,51,53,51,54,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,53,51,49,41,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,54,57,55,32,101,114,114,102,51,54,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,48,55,32,102,51,57,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,48,48,32,102,51,57,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,8),40,97,50,50,53,55,52,41};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,44),40,97,50,50,53,56,49,32,115,117,99,99,101,115,115,51,49,54,56,32,114,101,115,117,108,116,115,51,49,54,57,32,114,101,109,97,105,110,115,51,49,55,48,41,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,17),40,97,50,50,53,54,56,32,101,114,114,102,51,49,54,54,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,56,56,52,32,114,117,108,101,51,56,56,53,32,116,111,107,101,110,115,51,56,56,54,32,116,114,97,99,101,63,51,56,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,50,55,32,116,97,105,108,51,57,50,57,41,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,57,50,53,32,108,101,118,51,57,50,54,41,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,51,53,32,116,97,105,108,51,57,51,55,41,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,57,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,57,52,50,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,57,52,52,41,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,57,52,56,41,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,57,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,48,56,48,32,120,52,48,56,49,41};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,48,56,50,41,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,48,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,48,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,48,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,48,57,52,41,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,48,57,53,32,120,52,48,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,48,57,55,41,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,49,48,48,41,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,49,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,48,56,32,97,52,49,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,49,48,54,41,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,50,48,32,108,52,49,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,49,49,56,32,97,99,99,101,115,115,111,114,52,49,49,57,41};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,49,49,53,32,99,108,97,117,115,101,115,52,49,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,49,50,54,32,111,112,115,52,49,50,55,41};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,49,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,49,50,57,32,118,97,108,52,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,53,50,32,116,97,105,108,52,49,53,52,41,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,52,55,32,116,97,105,108,52,49,52,57,41,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,20),40,100,111,52,49,51,55,32,104,52,49,51,57,32,108,52,49,52,48,41,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,49,51,49,32,102,111,114,109,115,52,49,51,50,32,97,114,103,115,52,49,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,49,54,54,32,99,108,97,117,115,101,115,52,49,54,55,32,111,112,115,52,49,54,56,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,56,54,32,110,101,120,116,52,49,56,56,41,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,49,55,50,32,99,108,97,117,115,101,115,52,49,55,51,32,111,112,115,52,49,55,52,41,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,8),40,97,50,54,49,53,51,41};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,30),40,97,50,54,49,55,49,32,99,108,97,117,115,101,52,50,54,55,32,105,103,110,111,114,101,52,50,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,50,54,52,32,99,108,97,117,115,101,115,52,50,54,53,32,111,112,115,52,50,54,54,41,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,56,53,32,110,101,120,116,52,50,56,55,41,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,50,55,48,32,99,108,97,117,115,101,115,52,50,55,49,32,111,112,115,52,50,55,50,41};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,53,50,32,110,101,120,116,52,51,53,52,41,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,51,52,50,32,99,108,97,117,115,101,115,52,51,52,51,32,111,112,115,52,51,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,26),40,100,111,52,51,57,48,32,110,101,101,100,52,51,57,50,32,110,101,120,116,52,51,57,51,41,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,51,56,48,32,99,108,97,117,115,101,115,52,51,56,49,32,111,112,115,52,51,56,50,41,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,8),40,100,111,52,52,51,52,41};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,52,50,53,32,99,108,97,117,115,101,115,52,52,50,54,32,111,112,115,52,52,50,55,41};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,52,52,52,32,99,108,97,117,115,101,115,52,52,52,53,32,111,112,115,52,52,52,54,41,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,52,53,56,32,99,108,97,117,115,101,115,52,52,53,57,32,111,112,115,52,52,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,53,50,53,32,116,121,112,101,52,53,50,54,32,97,99,99,52,53,50,55,32,104,101,97,100,52,53,50,56,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,53,50,57,41};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,53,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,14),40,100,111,52,52,55,55,32,97,52,52,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,14),40,100,111,52,52,56,53,32,99,52,52,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,53,48,52,32,99,108,97,117,115,101,115,52,53,48,53,32,111,112,115,52,53,48,54,41,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,54,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,54,48,54,32,99,108,97,117,115,101,115,52,54,48,55,32,111,112,115,52,54,48,56,41,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,54,50,55,32,99,108,97,117,115,101,115,52,54,50,56,32,111,112,115,52,54,50,57,41,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,54,52,51,32,99,108,97,117,115,101,115,52,54,52,52,32,111,112,115,52,54,52,53,41,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,8),40,97,50,56,48,52,52,41};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,20),40,97,50,56,48,53,55,32,97,52,54,55,48,32,98,52,54,55,49,41,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,38),40,100,111,52,54,54,51,32,111,112,52,54,54,53,32,99,108,97,117,115,101,52,54,54,54,32,114,101,109,97,105,110,115,52,54,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,54,53,55,32,99,108,97,117,115,101,115,52,54,53,56,32,111,112,115,52,54,53,57,41,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,8),40,97,50,56,50,48,56,41};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,20),40,97,50,56,50,50,50,32,97,52,54,57,57,32,98,52,55,48,48,41,0,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,8),40,97,50,56,50,56,54,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,20),40,97,50,56,50,57,50,32,97,52,54,57,54,32,98,52,54,57,55,41,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,54,56,51,32,99,108,97,117,115,101,115,52,54,56,52,32,111,112,115,52,54,56,53,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,55,50,54,32,116,121,112,101,52,55,50,55,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,8),40,97,50,56,52,51,52,41};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,20),40,97,50,56,52,52,51,32,97,52,55,51,57,32,98,52,55,52,48,41,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,47),40,100,111,52,55,51,48,32,111,112,52,55,51,50,32,99,108,97,117,115,101,52,55,51,51,32,114,101,109,97,105,110,115,52,55,51,52,32,98,111,100,121,52,55,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,55,53,50,32,102,111,114,109,115,52,55,53,51,32,111,112,115,52,55,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,56,52,57,32,97,52,57,51,49,52,57,51,52,32,97,52,57,51,48,52,57,51,53,32,97,52,57,50,57,52,57,51,54,32,97,52,57,50,56,52,57,51,55,32,97,52,57,50,55,52,57,51,56,41,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,56,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,53,54,51,32,97,52,57,52,55,52,57,53,49,32,97,52,57,52,54,52,57,53,50,41,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,57,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,53,57,52,32,97,53,48,50,54,53,48,50,57,32,97,53,48,50,53,53,48,51,48,32,97,53,48,50,52,53,48,51,49,32,97,53,48,50,51,53,48,51,50,32,97,53,48,50,50,53,48,51,51,41,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,57,53,52,41};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,48,51,51,32,97,53,48,52,49,53,48,52,53,32,97,53,48,52,48,53,48,52,54,41,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,48,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,48,54,55,32,97,53,49,53,55,53,49,54,48,32,97,53,49,53,54,53,49,54,49,32,97,53,49,53,53,53,49,54,50,32,97,53,49,53,52,53,49,54,51,32,97,53,49,53,51,53,49,54,52,41,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,48,52,56,41,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,55,56,49,32,97,53,49,55,51,53,49,55,55,32,97,53,49,55,50,53,49,55,56,41,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,49,55,49,41,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,56,49,53,32,97,53,50,56,57,53,50,57,50,32,97,53,50,56,56,53,50,57,51,32,97,53,50,56,55,53,50,57,52,32,97,53,50,56,54,53,50,57,53,32,97,53,50,56,53,53,50,57,54,41,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,49,56,48,41,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,53,50,57,32,97,53,51,48,53,53,51,48,57,32,97,53,51,48,52,53,51,49,48,41,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,51,48,51,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,54,48,32,97,53,51,56,52,53,51,56,55,32,97,53,51,56,51,53,51,56,56,32,97,53,51,56,50,53,51,56,57,32,97,53,51,56,49,53,51,57,48,32,97,53,51,56,48,53,51,57,49,41,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,51,49,50,41,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,57,57,57,32,97,53,51,57,57,53,52,48,51,32,97,53,51,57,56,53,52,48,52,41,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,51,57,55,41};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,48,51,48,32,97,53,52,55,56,53,52,56,49,32,97,53,52,55,55,53,52,56,50,32,97,53,52,55,54,53,52,56,51,32,97,53,52,55,53,53,52,56,52,32,97,53,52,55,52,53,52,56,53,41,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,52,48,54,41,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,52,54,57,32,97,53,52,57,51,53,52,57,55,32,97,53,52,57,50,53,52,57,56,41,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,52,57,49,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,53,48,48,32,97,53,53,55,50,53,53,55,53,32,97,53,53,55,49,53,53,55,54,32,97,53,53,55,48,53,53,55,55,32,97,53,53,54,57,53,53,55,56,32,97,53,53,54,56,53,53,55,57,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,53,48,48,41,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,19),40,102,95,51,50,57,54,49,32,97,53,53,57,53,53,53,57,57,41,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,53,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,19),40,102,95,51,50,57,55,54,32,97,53,54,48,51,53,54,48,55,41,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,54,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,19),40,102,95,51,50,57,57,49,32,97,53,54,49,49,53,54,49,53,41,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,54,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,48,48,54,32,97,53,54,50,49,53,54,50,53,32,97,53,54,50,48,53,54,50,54,41,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,54,49,56,32,116,53,54,49,57,41,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,48,50,53,32,97,53,54,51,48,53,54,51,52,41,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,54,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,48,52,48,32,97,53,54,51,57,53,54,52,51,32,97,53,54,51,56,53,54,52,52,41,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,54,51,54,32,99,53,54,51,55,41,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,48,53,57,32,97,53,54,52,57,53,54,53,51,32,97,53,54,52,56,53,54,53,52,41,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,54,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,48,55,56,32,97,53,54,54,48,53,54,54,52,32,97,53,54,53,57,53,54,54,53,32,97,53,54,53,56,53,54,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,54,53,54,32,107,53,54,53,55,41,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,49,48,49,32,97,53,54,55,49,53,54,55,53,32,97,53,54,55,48,53,54,55,54,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,54,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,49,50,48,32,97,53,54,56,50,53,54,56,54,32,97,53,54,56,49,53,54,56,55,32,97,53,54,56,48,53,54,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,54,55,56,32,118,53,54,55,57,41,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,49,53,50,32,97,53,54,57,53,53,54,57,57,32,97,53,54,57,52,53,55,48,48,41,0,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,49,54,56,32,97,53,55,48,51,53,55,48,55,32,97,53,55,48,50,53,55,48,56,41,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,54,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,49,57,57,32,97,53,55,49,54,53,55,50,48,32,97,53,55,49,53,53,55,50,49,32,97,53,55,49,52,53,55,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,50,49,57,32,97,53,55,50,54,53,55,51,48,32,97,53,55,50,53,53,55,51,49,32,97,53,55,50,52,53,55,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,55,49,48,32,118,53,55,49,49,41,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,50,52,53,32,97,53,55,51,55,53,55,52,49,32,97,53,55,51,54,53,55,52,50,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,55,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,50,54,52,32,97,53,55,52,56,53,55,53,50,32,97,53,55,52,55,53,55,53,51,32,97,53,55,52,54,53,55,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,55,52,52,32,118,53,55,52,53,41,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,50,56,55,32,97,53,55,54,54,53,55,54,57,32,97,53,55,54,53,53,55,55,48,32,97,53,55,54,52,53,55,55,49,32,97,53,55,54,51,53,55,55,50,32,97,53,55,54,50,53,55,55,51,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,55,53,55,32,100,117,114,53,55,53,56,32,107,101,121,53,55,53,57,32,97,109,112,53,55,54,48,32,99,104,97,110,53,55,54,49,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,51,49,53,32,97,53,55,56,51,53,55,56,54,32,97,53,55,56,50,53,55,56,55,32,97,53,55,56,49,53,55,56,56,32,97,53,55,56,48,53,55,56,57,32,97,53,55,55,57,53,55,57,48,41,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,55,55,52,32,100,117,114,53,55,55,53,32,107,101,121,53,55,55,54,32,97,109,112,53,55,55,55,32,99,104,97,110,53,55,55,56,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,51,52,51,32,97,53,55,57,56,53,56,48,49,32,97,53,55,57,55,53,56,48,50,32,97,53,55,57,54,53,56,48,51,32,97,53,55,57,53,53,56,48,52,32,97,53,55,57,52,53,56,48,53,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,55,57,49,32,107,101,121,53,55,57,50,32,99,104,97,110,53,55,57,51,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,51,55,49,32,97,53,56,49,52,53,56,49,55,32,97,53,56,49,51,53,56,49,56,32,97,53,56,49,50,53,56,49,57,32,97,53,56,49,49,53,56,50,48,32,97,53,56,49,48,53,56,50,49,41,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,56,48,54,32,107,101,121,53,56,48,55,32,118,101,108,53,56,48,56,32,99,104,97,110,53,56,48,57,41,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,51,57,57,32,97,53,56,51,48,53,56,51,51,32,97,53,56,50,57,53,56,51,52,32,97,53,56,50,56,53,56,51,53,32,97,53,56,50,55,53,56,51,54,32,97,53,56,50,54,53,56,51,55,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,56,50,50,32,107,101,121,53,56,50,51,32,118,97,108,53,56,50,52,32,99,104,97,110,53,56,50,53,41,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,52,50,55,32,97,53,56,52,54,53,56,52,57,32,97,53,56,52,53,53,56,53,48,32,97,53,56,52,52,53,56,53,49,32,97,53,56,52,51,53,56,53,50,32,97,53,56,52,50,53,56,53,51,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,56,51,56,32,110,117,109,53,56,51,57,32,118,97,108,53,56,52,48,32,99,104,97,110,53,56,52,49,41,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,52,53,53,32,97,53,56,54,49,53,56,54,52,32,97,53,56,54,48,53,56,54,53,32,97,53,56,53,57,53,56,54,54,32,97,53,56,53,56,53,56,54,55,32,97,53,56,53,55,53,56,54,56,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,56,53,52,32,118,97,108,53,56,53,53,32,99,104,97,110,53,56,53,54,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,52,56,51,32,97,53,56,55,54,53,56,55,57,32,97,53,56,55,53,53,56,56,48,32,97,53,56,55,52,53,56,56,49,32,97,53,56,55,51,53,56,56,50,32,97,53,56,55,50,53,56,56,51,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,56,54,57,32,118,97,108,53,56,55,48,32,99,104,97,110,53,56,55,49,41,0,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,53,49,49,32,97,53,56,57,49,53,56,57,52,32,97,53,56,57,48,53,56,57,53,32,97,53,56,56,57,53,56,57,54,32,97,53,56,56,56,53,56,57,55,32,97,53,56,56,55,53,56,57,56,41,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,56,56,52,32,118,97,108,53,56,56,53,32,99,104,97,110,53,56,56,54,41,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,51,57,32,97,53,57,48,48,53,57,48,52,41,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,56,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,17),40,97,51,51,53,55,50,32,37,101,114,114,53,57,49,51,41,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,8),40,97,51,51,53,57,50,41};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,18),40,97,51,51,53,54,54,32,37,99,111,110,116,53,57,49,50,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,17),40,97,51,51,53,54,48,32,37,109,115,103,53,57,49,49,41,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,57,56,32,97,53,57,48,55,53,57,49,48,41,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,54,48,51,32,97,53,57,49,54,53,57,49,57,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,57,48,54,41,0,0,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,54,54,48,32,97,53,57,55,50,53,57,55,53,32,97,53,57,55,49,53,57,55,54,32,97,53,57,55,48,53,57,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,57,54,57,41,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,55,49,55,32,97,53,57,56,51,53,57,56,54,32,97,53,57,56,50,53,57,56,55,32,97,53,57,56,49,53,57,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,57,56,48,41,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,9),40,102,95,51,51,55,53,56,41,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,14),40,100,111,54,48,49,51,32,120,54,48,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,26),40,100,111,53,57,57,57,32,101,54,48,49,48,32,118,54,48,49,49,32,121,54,48,49,50,41,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,57,57,56,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,48,50,52,54,48,50,56,41,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,48,51,48,54,48,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,54,48,52,54,54,48,52,57,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,48,53,52,54,48,53,55,32,97,54,48,53,51,54,48,53,56,32,97,54,48,53,50,54,48,53,57,41};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,48,55,52,54,48,55,55,41,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,48,56,51,32,97,54,48,56,53,54,48,56,57,41,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,48,56,52,41};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,48,57,32,112,54,49,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,48,57,53,32,115,116,97,114,116,54,49,48,49,32,105,100,54,49,48,50,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,48,57,56,32,37,115,116,97,114,116,54,48,57,51,54,49,49,55,41,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,48,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,48,57,49,32,46,32,97,114,103,115,54,48,57,50,41,0,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,54,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,17),40,100,111,54,49,51,56,32,116,97,105,108,54,49,52,48,41,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,49,51,55,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,49,52,53,32,99,108,97,117,115,101,115,54,49,52,54,32,111,112,115,54,49,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,49,55,53,32,115,116,111,112,54,49,55,54,41,0,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,31),40,97,51,52,55,57,54,32,102,111,114,109,97,108,115,54,49,57,54,32,46,32,98,111,100,121,54,49,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,17),40,97,51,52,56,50,53,32,97,114,103,115,54,49,57,53,41,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,16),40,100,111,54,49,54,56,32,111,112,115,54,49,55,48,41};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,17),40,97,51,52,56,57,52,32,97,114,103,115,52,55,54,53,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,16),40,97,51,53,48,51,54,32,115,121,109,52,48,55,56,41};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,16),40,97,51,53,48,51,57,32,115,121,109,52,48,55,54,41};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,24),40,97,51,53,48,54,56,32,118,97,108,52,48,55,52,32,115,121,109,52,48,55,53,41};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,17),40,97,51,53,48,56,50,32,97,114,103,115,52,48,55,51,41,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,97,51,53,48,57,54,32,97,114,103,115,51,56,55,57,32,101,114,114,102,51,56,56,48,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,35),40,97,51,53,49,49,48,32,117,110,105,116,51,56,56,49,32,105,110,102,111,51,56,56,50,32,101,114,114,102,51,56,56,51,41,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,26),40,97,51,53,50,49,54,32,97,114,103,115,51,56,50,56,32,101,114,114,102,51,56,50,57,41,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,52,48,32,114,101,115,116,51,56,52,50,41,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,100,111,51,56,54,54,32,97,114,103,115,51,56,54,56,32,116,97,105,108,51,56,54,57,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,35),40,97,51,53,50,53,53,32,117,110,105,116,51,56,51,51,32,105,110,102,111,51,56,51,52,32,101,114,114,102,51,56,51,53,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,26),40,97,51,53,54,55,51,32,97,114,103,115,51,56,50,49,32,101,114,114,102,51,56,50,50,41,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,26),40,97,51,53,56,49,56,32,97,114,103,115,51,56,48,55,32,101,114,114,102,51,56,48,56,41,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,56,52,32,116,97,105,108,51,55,56,54,41,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,55,57,32,116,97,105,108,51,55,56,49,41,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,20),40,100,111,51,55,54,56,32,99,108,97,117,115,101,115,51,55,55,48,41,0,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,54,53,32,116,97,105,108,51,55,54,55,41,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,35),40,97,51,53,56,54,52,32,117,110,105,116,51,56,49,55,32,105,110,102,111,51,56,49,56,32,101,114,114,102,51,56,49,57,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,26),40,97,51,54,51,49,56,32,97,114,103,115,51,54,56,49,32,101,114,114,102,51,54,56,50,41,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,35),40,97,51,54,51,56,54,32,117,110,105,116,51,54,57,51,32,105,110,102,111,51,54,57,52,32,101,114,114,102,51,54,57,53,41,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,26),40,97,51,54,53,49,53,32,97,114,103,115,51,54,54,57,32,101,114,114,102,51,54,55,48,41,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,35),40,97,51,54,53,52,49,32,117,110,105,116,51,54,55,52,32,105,110,102,111,51,54,55,53,32,101,114,114,102,51,54,55,54,41,0,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,26),40,97,51,54,54,50,57,32,97,114,103,115,51,54,52,55,32,101,114,114,102,51,54,52,56,41,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,53,53,32,105,116,101,114,51,54,53,55,41,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,35),40,97,51,54,54,55,50,32,117,110,105,116,51,54,52,57,32,105,110,102,111,51,54,53,48,32,101,114,114,102,51,54,53,49,41,0,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,48,57,32,97,114,103,115,51,54,52,52,32,101,114,114,102,51,54,52,53,41,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,57,53,32,97,114,103,115,51,54,51,54,32,101,114,114,102,51,54,51,55,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,14),40,97,51,55,48,52,55,32,101,51,54,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,51,56,32,117,110,105,116,51,54,51,56,32,105,110,102,111,51,54,51,57,32,101,114,114,102,51,54,52,48,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,51,55,48,57,55,32,97,114,103,115,51,54,50,57,32,101,114,114,102,51,54,51,48,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,14),40,97,51,55,49,51,56,32,101,51,54,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,51,50,32,117,110,105,116,51,54,51,49,32,105,110,102,111,51,54,51,50,32,101,114,114,102,51,54,51,51,41,0,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,57,50,32,117,110,105,116,51,54,50,50,32,105,110,102,111,51,54,50,51,32,101,114,114,102,51,54,50,52,41,0,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,51,55,50,53,51,32,117,110,105,116,51,54,49,54,32,105,110,102,111,51,54,49,55,32,101,114,114,102,51,54,49,56,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,51,55,51,48,55,32,97,114,103,115,51,54,49,48,32,101,114,114,102,51,54,49,49,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,35),40,97,51,55,51,51,55,32,117,110,105,116,51,54,49,50,32,105,110,102,111,51,54,49,51,32,101,114,114,102,51,54,49,52,41,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,26),40,97,51,55,53,53,54,32,97,114,103,115,51,54,48,51,32,101,114,114,102,51,54,48,52,41,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,55,53,56,50,32,97,114,103,115,51,53,57,48,32,101,114,114,102,51,53,57,49,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,27),40,97,51,55,54,55,55,32,115,116,114,51,54,48,48,32,46,32,97,114,103,115,51,54,48,49,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,53,55,32,117,110,105,116,51,53,57,53,32,105,110,102,111,51,53,57,54,32,101,114,114,102,51,53,57,55,41,0,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,26),40,97,51,55,55,57,53,32,97,114,103,115,51,53,56,51,32,101,114,114,102,51,53,56,52,41,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,49,55,32,117,110,105,116,51,53,56,53,32,105,110,102,111,51,53,56,54,32,101,114,114,102,51,53,56,55,41,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,26),40,97,51,55,56,55,48,32,97,114,103,115,51,53,54,57,32,101,114,114,102,51,53,55,48,41,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,55,54,32,97,114,103,115,51,53,55,56,41,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,57,50,32,117,110,105,116,51,53,55,49,32,105,110,102,111,51,53,55,50,32,101,114,114,102,51,53,55,51,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,26),40,97,51,56,48,50,52,32,97,114,103,115,51,53,54,50,32,101,114,114,102,51,53,54,51,41,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,35),40,97,51,56,48,53,48,32,117,110,105,116,51,53,54,52,32,105,110,102,111,51,53,54,53,32,101,114,114,102,51,53,54,54,41,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,26),40,97,51,56,49,54,48,32,97,114,103,115,51,53,53,56,32,101,114,114,102,51,53,53,57,41,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,26),40,97,51,56,51,49,54,32,97,114,103,115,51,53,50,49,32,101,114,114,102,51,53,50,50,41,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,35),40,97,51,56,51,51,52,32,117,110,105,116,51,53,50,51,32,105,110,102,111,51,53,50,52,32,101,114,114,102,51,53,50,53,41,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,26),40,97,51,56,51,56,55,32,97,114,103,115,51,53,49,53,32,101,114,114,102,51,53,49,54,41,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,26),40,97,51,56,53,51,57,32,97,114,103,115,51,53,49,50,32,101,114,114,102,51,53,49,51,41,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,26),40,97,51,56,54,55,56,32,97,114,103,115,51,53,48,57,32,101,114,114,102,51,53,49,48,41,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,26),40,97,51,56,55,57,56,32,97,114,103,115,51,52,56,56,32,101,114,114,102,51,52,56,57,41,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,35),40,97,51,56,56,50,57,32,117,110,105,116,51,52,57,49,32,105,110,102,111,51,52,57,50,32,101,114,114,102,51,52,57,51,41,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,26),40,97,51,56,57,50,49,32,97,114,103,115,51,52,56,50,32,101,114,114,102,51,52,56,51,41,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,35),40,97,51,56,57,51,57,32,117,110,105,116,51,52,56,52,32,105,110,102,111,51,52,56,53,32,101,114,114,102,51,52,56,54,41,0,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,35),40,97,51,57,48,49,51,32,117,110,105,116,51,52,55,49,32,105,110,102,111,51,52,55,50,32,101,114,114,102,51,52,55,51,41,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,48,57,32,97,114,103,115,51,52,53,57,32,101,114,114,102,51,52,54,48,41,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,35),40,97,51,57,49,49,57,32,117,110,105,116,51,52,54,49,32,105,110,102,111,51,52,54,50,32,101,114,114,102,51,52,54,51,41,0,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,20),40,97,51,57,50,57,53,32,117,51,49,48,57,32,112,51,49,49,48,41,0,0,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,20),40,97,51,57,51,50,49,32,101,51,48,56,49,32,112,51,48,56,50,41,0,0,0,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,48,52,52,41,0,0,0,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,35),40,97,51,57,51,51,53,32,116,121,112,51,48,52,48,32,112,97,116,51,48,52,49,32,46,32,97,114,103,115,51,48,52,50,41,0,0,0};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,20),40,97,51,57,52,51,56,32,114,51,48,51,55,32,112,51,48,51,56,41,0,0,0,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,20),40,97,51,57,52,52,56,32,116,50,57,56,56,32,112,50,57,56,57,41,0,0,0,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,23),40,97,51,57,52,54,50,32,111,98,106,57,52,53,32,112,111,114,116,57,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,71),40,100,111,55,48,56,32,100,55,49,48,32,107,55,49,49,32,112,55,49,50,32,107,60,55,49,51,32,107,62,55,49,52,32,102,55,49,53,32,102,62,55,49,54,32,102,60,55,49,55,32,111,55,49,56,32,120,55,49,57,32,110,55,50,48,32,101,55,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,14),40,100,111,55,48,50,32,107,101,121,55,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,24),40,97,51,57,54,57,50,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,22),40,97,51,57,54,57,56,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,24),40,97,51,57,55,53,48,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k34086 */
static C_word C_fcall stub6086(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6086(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k34071 in hush in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6080)
static void C_ccall stub6080(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6080(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34065 */
C_noret_decl(stub6075)
static void C_ccall stub6075(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6075(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34049 in cont in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6070)
static void C_ccall stub6070(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6070(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34040 in pause in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6066)
static void C_ccall stub6066(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6066(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34031 in paused? in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6062)
static void C_ccall stub6062(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6062(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34025 */
C_noret_decl(stub6055)
static void C_ccall stub6055(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6055(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34005 in scheduler-set-time-milliseconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6047)
static void C_ccall stub6047(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6047(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k33996 in time-format in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
C_noret_decl(stub6042)
static void C_ccall stub6042(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6042(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6039(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6039(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6036(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6036(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k33977 in print-error in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub6031(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6031(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k33963 in print-message in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub6025(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6025(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_33758 in cs:clear in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub5991(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5991(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k33724 */
static C_word C_fcall stub5984(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5984(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k33667 */
static C_word C_fcall stub5973(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5973(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_33603 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub5917(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5917(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_33598 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub5908(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5908(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k33542 */
static C_word C_fcall stub5901(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5901(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k33530 */
static C_word C_fcall stub5892(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5892(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33502 */
static C_word C_fcall stub5877(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5877(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33474 */
static C_word C_fcall stub5862(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5862(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33446 */
static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5847(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33418 */
static C_word C_fcall stub5831(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5831(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33390 */
static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5815(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33362 */
static C_word C_fcall stub5799(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5799(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33334 */
static C_word C_fcall stub5784(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5784(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33306 */
static C_word C_fcall stub5767(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5767(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33275 */
static C_word C_fcall stub5749(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5749(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33252 */
static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5738(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33230 */
static C_word C_fcall stub5727(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5727(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33210 */
static C_word C_fcall stub5717(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5717(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33175 */
static C_word C_fcall stub5704(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5704(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33159 */
static C_word C_fcall stub5696(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5696(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33131 */
static C_word C_fcall stub5683(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5683(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33108 */
static C_word C_fcall stub5672(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5672(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33089 */
static C_word C_fcall stub5661(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5661(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33066 */
static C_word C_fcall stub5650(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5650(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33047 */
static C_word C_fcall stub5640(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5640(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k33028 */
static C_word C_fcall stub5631(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5631(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k33013 */
static C_word C_fcall stub5622(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5622(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k32994 */
static C_word C_fcall stub5612(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5612(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k32979 */
static C_word C_fcall stub5604(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5604(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k32964 */
static C_word C_fcall stub5596(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5596(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k32946 */
static C_word C_fcall stub5588(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5588(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32519 */
static C_word C_fcall stub5573(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5573(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32476 */
static C_word C_fcall stub5494(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5494(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32049 */
static C_word C_fcall stub5479(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5479(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32006 */
static C_word C_fcall stub5400(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5400(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31579 */
static C_word C_fcall stub5385(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5385(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31536 */
static C_word C_fcall stub5306(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5306(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30834 */
static C_word C_fcall stub5290(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5290(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30788 */
static C_word C_fcall stub5174(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5174(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30086 */
static C_word C_fcall stub5158(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5158(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30040 */
static C_word C_fcall stub5042(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5042(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29613 */
static C_word C_fcall stub5027(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5027(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k29570 */
static C_word C_fcall stub4948(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4948(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28868 */
static C_word C_fcall stub4932(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4932(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7861 */
static C_word C_fcall stub386(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub386(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub379(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub379(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub376(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub376(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7839 */
static C_word C_fcall stub373(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub373(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub369(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7829 */
static C_word C_fcall stub365(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub365(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7822 */
static C_word C_fcall stub359(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub359(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7811 */
static C_word C_fcall stub353(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub353(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7804 */
static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub342(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub342(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub339(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub339(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub336(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub336(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7784 */
static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7773 */
static C_word C_fcall stub325(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub325(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7762 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7755 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub311(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub311(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7745 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7738 */
static C_word C_fcall stub302(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7731 */
static C_word C_fcall stub297(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub297(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7724 */
static C_word C_fcall stub289(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub289(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7705 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7686 */
static C_word C_fcall stub271(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub271(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7679 */
static C_word C_fcall stub266(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub266(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7672 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7657 */
static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7646 */
static C_word C_fcall stub246(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub246(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7639 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7612 */
static C_word C_fcall stub222(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub222(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6881 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6863 in cwd in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6256)
static void C_ccall f_6256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6259)
static void C_ccall f_6259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6262)
static void C_ccall f_6262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6265)
static void C_ccall f_6265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39751)
static void C_ccall f_39751(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39751)
static void C_ccall f_39751r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6556)
static void C_ccall f_6556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6560)
static void C_ccall f_6560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39699)
static void C_ccall f_39699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39746)
static void C_ccall f_39746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39736)
static void C_ccall f_39736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39703)
static void C_ccall f_39703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6563)
static void C_ccall f_6563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39693)
static void C_ccall f_39693(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39693)
static void C_ccall f_39693r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6856)
static void C_ccall f_6856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9920)
static void C_ccall f_9920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39477)
static void C_fcall f_39477(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39691)
static void C_ccall f_39691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39511)
static void C_ccall f_39511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39523)
static void C_ccall f_39523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39527)
static void C_ccall f_39527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39531)
static void C_ccall f_39531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39675)
static void C_ccall f_39675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39537)
static void C_fcall f_39537(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_39557)
static void C_fcall f_39557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39560)
static void C_fcall f_39560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39568)
static void C_ccall f_39568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39575)
static void C_ccall f_39575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39578)
static void C_ccall f_39578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39582)
static void C_ccall f_39582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39589)
static void C_ccall f_39589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39592)
static void C_ccall f_39592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39596)
static void C_ccall f_39596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39603)
static void C_ccall f_39603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39547)
static void C_ccall f_39547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39500)
static void C_ccall f_39500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39490)
static void C_ccall f_39490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39493)
static void C_ccall f_39493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9923)
static void C_ccall f_9923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39463)
static void C_ccall f_39463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39471)
static void C_ccall f_39471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39475)
static void C_ccall f_39475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10988)
static void C_ccall f_10988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39449)
static void C_ccall f_39449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39457)
static void C_ccall f_39457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39461)
static void C_ccall f_39461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21743)
static void C_ccall f_21743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21794)
static void C_ccall f_21794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39439)
static void C_ccall f_39439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39447)
static void C_ccall f_39447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21899)
static void C_ccall f_21899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39336)
static void C_ccall f_39336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39336)
static void C_ccall f_39336r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_39399)
static void C_ccall f_39399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39403)
static void C_ccall f_39403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39417)
static void C_fcall f_39417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39339)
static void C_fcall f_39339(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39359)
static void C_ccall f_39359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39363)
static void C_ccall f_39363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21902)
static void C_ccall f_21902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39322)
static void C_ccall f_39322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39330)
static void C_ccall f_39330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39334)
static void C_ccall f_39334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22095)
static void C_ccall f_22095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39296)
static void C_ccall f_39296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39300)
static void C_ccall f_39300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39306)
static void C_ccall f_39306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39317)
static void C_ccall f_39317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39313)
static void C_ccall f_39313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22164)
static void C_ccall f_22164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39274)
static void C_ccall f_39274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23409)
static void C_ccall f_23409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39254)
static void C_ccall f_39254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23412)
static void C_ccall f_23412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39214)
static void C_ccall f_39214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23415)
static void C_ccall f_23415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39120)
static void C_ccall f_39120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39124)
static void C_ccall f_39124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39127)
static void C_ccall f_39127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39145)
static void C_ccall f_39145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39148)
static void C_ccall f_39148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39179)
static void C_ccall f_39179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39151)
static void C_fcall f_39151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39157)
static void C_ccall f_39157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39110)
static void C_ccall f_39110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39104)
static void C_ccall f_39104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23418)
static void C_ccall f_23418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39012)
static void C_ccall f_39012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39014)
static void C_ccall f_39014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39018)
static void C_ccall f_39018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39021)
static void C_ccall f_39021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39024)
static void C_ccall f_39024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39064)
static void C_ccall f_39064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39056)
static void C_ccall f_39056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39027)
static void C_ccall f_39027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39030)
static void C_ccall f_39030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39033)
static void C_ccall f_39033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39004)
static void C_ccall f_39004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23421)
static void C_ccall f_23421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38976)
static void C_ccall f_38976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23424)
static void C_ccall f_23424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38940)
static void C_ccall f_38940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38952)
static void C_ccall f_38952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38948)
static void C_ccall f_38948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38922)
static void C_ccall f_38922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38916)
static void C_ccall f_38916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23427)
static void C_ccall f_23427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38830)
static void C_ccall f_38830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38834)
static void C_ccall f_38834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38837)
static void C_ccall f_38837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38840)
static void C_ccall f_38840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38853)
static void C_ccall f_38853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38799)
static void C_ccall f_38799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38803)
static void C_ccall f_38803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38818)
static void C_ccall f_38818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38793)
static void C_ccall f_38793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23430)
static void C_ccall f_23430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38679)
static void C_ccall f_38679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38695)
static void C_ccall f_38695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38706)
static void C_ccall f_38706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38673)
static void C_ccall f_38673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23486)
static void C_ccall f_23486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38540)
static void C_ccall f_38540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38563)
static void C_ccall f_38563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38560)
static void C_ccall f_38560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38534)
static void C_ccall f_38534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23489)
static void C_ccall f_23489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38388)
static void C_ccall f_38388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38406)
static void C_ccall f_38406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38415)
static void C_ccall f_38415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38382)
static void C_ccall f_38382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23492)
static void C_ccall f_23492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38335)
static void C_ccall f_38335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38339)
static void C_ccall f_38339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38342)
static void C_ccall f_38342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38358)
static void C_ccall f_38358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38317)
static void C_ccall f_38317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38311)
static void C_ccall f_38311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23495)
static void C_ccall f_23495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38235)
static void C_ccall f_38235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23634)
static void C_ccall f_23634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38161)
static void C_ccall f_38161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38168)
static void C_ccall f_38168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38155)
static void C_ccall f_38155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23637)
static void C_ccall f_23637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38051)
static void C_ccall f_38051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38059)
static void C_ccall f_38059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38025)
static void C_ccall f_38025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38042)
static void C_ccall f_38042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38033)
static void C_fcall f_38033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38019)
static void C_ccall f_38019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23640)
static void C_ccall f_23640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37975)
static void C_ccall f_37975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23643)
static void C_ccall f_23643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37893)
static void C_ccall f_37893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37904)
static void C_ccall f_37904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37906)
static void C_fcall f_37906(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37935)
static void C_ccall f_37935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37871)
static void C_ccall f_37871(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37887)
static void C_ccall f_37887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37865)
static void C_ccall f_37865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23646)
static void C_ccall f_23646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37818)
static void C_ccall f_37818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37822)
static void C_ccall f_37822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37829)
static void C_ccall f_37829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37796)
static void C_ccall f_37796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37812)
static void C_ccall f_37812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37790)
static void C_ccall f_37790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23649)
static void C_ccall f_23649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37658)
static void C_ccall f_37658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37698)
static void C_ccall f_37698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37662)
static void C_ccall f_37662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37678)
static void C_ccall f_37678(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37678)
static void C_ccall f_37678r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_37690)
static void C_ccall f_37690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37694)
static void C_ccall f_37694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37686)
static void C_ccall f_37686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37583)
static void C_ccall f_37583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37626)
static void C_ccall f_37626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37630)
static void C_ccall f_37630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37590)
static void C_fcall f_37590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37601)
static void C_ccall f_37601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37577)
static void C_ccall f_37577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23652)
static void C_ccall f_23652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37557)
static void C_ccall f_37557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37551)
static void C_ccall f_37551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23655)
static void C_ccall f_23655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37531)
static void C_ccall f_37531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37535)
static void C_ccall f_37535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37523)
static void C_ccall f_37523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23658)
static void C_ccall f_23658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37503)
static void C_ccall f_37503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37507)
static void C_ccall f_37507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37495)
static void C_ccall f_37495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23661)
static void C_ccall f_23661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37475)
static void C_ccall f_37475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37479)
static void C_ccall f_37479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37467)
static void C_ccall f_37467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23664)
static void C_ccall f_23664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37447)
static void C_ccall f_37447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37451)
static void C_ccall f_37451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37439)
static void C_ccall f_37439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23667)
static void C_ccall f_23667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37338)
static void C_ccall f_37338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37308)
static void C_ccall f_37308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37332)
static void C_ccall f_37332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37302)
static void C_ccall f_37302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23670)
static void C_ccall f_23670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37252)
static void C_ccall f_37252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37254)
static void C_ccall f_37254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37258)
static void C_ccall f_37258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37286)
static void C_ccall f_37286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37278)
static void C_ccall f_37278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37274)
static void C_ccall f_37274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37261)
static void C_ccall f_37261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37244)
static void C_ccall f_37244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23673)
static void C_ccall f_23673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37191)
static void C_ccall f_37191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37193)
static void C_ccall f_37193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37197)
static void C_ccall f_37197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37228)
static void C_ccall f_37228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37220)
static void C_ccall f_37220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37216)
static void C_ccall f_37216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37200)
static void C_ccall f_37200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37203)
static void C_ccall f_37203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37183)
static void C_ccall f_37183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23676)
static void C_ccall f_23676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37133)
static void C_ccall f_37133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37147)
static void C_ccall f_37147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37139)
static void C_ccall f_37139(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37098)
static void C_ccall f_37098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37131)
static void C_ccall f_37131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37092)
static void C_ccall f_37092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23679)
static void C_ccall f_23679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37039)
static void C_ccall f_37039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37043)
static void C_ccall f_37043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37056)
static void C_ccall f_37056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37048)
static void C_ccall f_37048(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36996)
static void C_ccall f_36996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37029)
static void C_ccall f_37029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36990)
static void C_ccall f_36990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23682)
static void C_ccall f_23682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36910)
static void C_ccall f_36910(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36904)
static void C_ccall f_36904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23685)
static void C_ccall f_23685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36673)
static void C_ccall f_36673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36677)
static void C_ccall f_36677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36685)
static void C_fcall f_36685(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36708)
static void C_ccall f_36708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36711)
static void C_ccall f_36711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36714)
static void C_ccall f_36714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36717)
static void C_ccall f_36717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36777)
static void C_ccall f_36777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36784)
static void C_ccall f_36784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36794)
static void C_ccall f_36794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36804)
static void C_ccall f_36804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36818)
static void C_ccall f_36818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36828)
static void C_ccall f_36828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36838)
static void C_ccall f_36838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36848)
static void C_ccall f_36848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36720)
static void C_fcall f_36720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36744)
static void C_fcall f_36744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36723)
static void C_fcall f_36723(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36630)
static void C_ccall f_36630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36663)
static void C_ccall f_36663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36624)
static void C_ccall f_36624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23688)
static void C_ccall f_23688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36542)
static void C_ccall f_36542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36546)
static void C_ccall f_36546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36552)
static void C_ccall f_36552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36572)
static void C_ccall f_36572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36516)
static void C_ccall f_36516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36526)
static void C_fcall f_36526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36510)
static void C_ccall f_36510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23691)
static void C_ccall f_23691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36387)
static void C_ccall f_36387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36391)
static void C_ccall f_36391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36319)
static void C_ccall f_36319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36338)
static void C_ccall f_36338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36373)
static void C_ccall f_36373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36344)
static void C_fcall f_36344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36348)
static void C_ccall f_36348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36362)
static void C_ccall f_36362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36351)
static void C_fcall f_36351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36332)
static void C_fcall f_36332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36313)
static void C_ccall f_36313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23694)
static void C_ccall f_23694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36041)
static void C_ccall f_36041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24217)
static void C_ccall f_24217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35993)
static void C_ccall f_35993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35985)
static void C_ccall f_35985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24220)
static void C_ccall f_24220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24226)
static void C_ccall f_24226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24685)
static void C_ccall f_24685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24719)
static void C_ccall f_24719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24711)
static void C_ccall f_24711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24707)
static void C_ccall f_24707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24692)
static void C_ccall f_24692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24696)
static void C_ccall f_24696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24689)
static void C_ccall f_24689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24244)
static void C_fcall f_24244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24678)
static void C_ccall f_24678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24674)
static void C_ccall f_24674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24251)
static void C_fcall f_24251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24549)
static void C_fcall f_24549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24570)
static void C_ccall f_24570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24572)
static void C_fcall f_24572(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24586)
static void C_ccall f_24586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24639)
static void C_ccall f_24639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24589)
static void C_fcall f_24589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24624)
static void C_ccall f_24624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24592)
static void C_fcall f_24592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24605)
static void C_ccall f_24605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24617)
static void C_ccall f_24617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24609)
static void C_ccall f_24609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24595)
static void C_fcall f_24595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24559)
static void C_ccall f_24559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24254)
static void C_ccall f_24254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24513)
static void C_fcall f_24513(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24539)
static void C_ccall f_24539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24524)
static void C_ccall f_24524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24257)
static void C_ccall f_24257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24261)
static void C_ccall f_24261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24457)
static void C_fcall f_24457(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24467)
static void C_ccall f_24467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24470)
static void C_ccall f_24470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24491)
static void C_ccall f_24491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24473)
static void C_fcall f_24473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24477)
static void C_ccall f_24477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24264)
static void C_ccall f_24264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24267)
static void C_fcall f_24267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24420)
static void C_ccall f_24420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24428)
static void C_ccall f_24428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24424)
static void C_ccall f_24424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24270)
static void C_fcall f_24270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24298)
static void C_ccall f_24298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24301)
static void C_ccall f_24301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24304)
static void C_ccall f_24304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24307)
static void C_ccall f_24307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24310)
static void C_ccall f_24310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24369)
static void C_ccall f_24369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35819)
static void C_ccall f_35819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35835)
static void C_ccall f_35835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35838)
static void C_ccall f_35838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35841)
static void C_fcall f_35841(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35844)
static void C_fcall f_35844(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35855)
static void C_ccall f_35855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35813)
static void C_ccall f_35813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24726)
static void C_ccall f_24726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35674)
static void C_ccall f_35674(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35713)
static void C_ccall f_35713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35687)
static void C_fcall f_35687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35668)
static void C_ccall f_35668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24729)
static void C_ccall f_24729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35256)
static void C_ccall f_35256(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35260)
static void C_ccall f_35260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35272)
static void C_ccall f_35272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35330)
static void C_ccall f_35330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35333)
static void C_ccall f_35333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35336)
static void C_ccall f_35336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35548)
static void C_ccall f_35548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35486)
static void C_ccall f_35486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35520)
static void C_ccall f_35520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35495)
static void C_fcall f_35495(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35506)
static void C_ccall f_35506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35502)
static void C_ccall f_35502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35345)
static void C_fcall f_35345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35423)
static void C_ccall f_35423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35464)
static void C_ccall f_35464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35468)
static void C_ccall f_35468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35472)
static void C_ccall f_35472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35427)
static void C_ccall f_35427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35431)
static void C_ccall f_35431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35458)
static void C_ccall f_35458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35434)
static void C_fcall f_35434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35348)
static void C_fcall f_35348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35420)
static void C_ccall f_35420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35362)
static void C_ccall f_35362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35364)
static void C_fcall f_35364(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35412)
static void C_ccall f_35412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35383)
static void C_ccall f_35383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35400)
static void C_ccall f_35400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35386)
static void C_fcall f_35386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35379)
static void C_ccall f_35379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35351)
static void C_ccall f_35351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35281)
static void C_fcall f_35281(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35291)
static void C_ccall f_35291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35297)
static void C_ccall f_35297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35269)
static void C_ccall f_35269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35217)
static void C_ccall f_35217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35234)
static void C_ccall f_35234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35250)
static void C_ccall f_35250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35228)
static void C_fcall f_35228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35211)
static void C_ccall f_35211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24732)
static void C_ccall f_24732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35135)
static void C_ccall f_35135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24735)
static void C_ccall f_24735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35111)
static void C_ccall f_35111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35123)
static void C_ccall f_35123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35119)
static void C_ccall f_35119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35097)
static void C_ccall f_35097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35105)
static void C_ccall f_35105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35091)
static void C_ccall f_35091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24738)
static void C_ccall f_24738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35083)
static void C_ccall f_35083(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28509)
static void C_ccall f_28509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28512)
static void C_ccall f_28512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28678)
static void C_ccall f_28678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28674)
static void C_ccall f_28674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28664)
static void C_fcall f_28664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28519)
static void C_ccall f_28519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28523)
static void C_ccall f_28523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28526)
static void C_fcall f_28526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28545)
static void C_ccall f_28545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28617)
static void C_ccall f_28617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28625)
static void C_ccall f_28625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28621)
static void C_ccall f_28621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28613)
static void C_ccall f_28613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28609)
static void C_ccall f_28609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28581)
static void C_ccall f_28581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28577)
static void C_ccall f_28577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28541)
static void C_ccall f_28541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25156)
static void C_ccall f_25156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35069)
static void C_ccall f_35069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25159)
static void C_ccall f_25159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35040)
static void C_ccall f_35040(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35044)
static void C_ccall f_35044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25162)
static void C_ccall f_25162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35037)
static void C_ccall f_35037(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25165)
static void C_ccall f_25165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34895)
static void C_ccall f_34895(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28691)
static void C_ccall f_28691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28823)
static void C_ccall f_28823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28694)
static void C_ccall f_28694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28705)
static void C_ccall f_28705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28713)
static void C_ccall f_28713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28737)
static void C_ccall f_28737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28740)
static void C_fcall f_28740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28748)
static void C_ccall f_28748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28756)
static void C_ccall f_28756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28776)
static void C_ccall f_28776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28772)
static void C_ccall f_28772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28752)
static void C_ccall f_28752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28744)
static void C_ccall f_28744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28733)
static void C_ccall f_28733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28709)
static void C_ccall f_28709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28685)
static void C_ccall f_28685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33607)
static void C_ccall f_33607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33610)
static void C_ccall f_33610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33613)
static void C_ccall f_33613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33616)
static void C_ccall f_33616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33619)
static void C_ccall f_33619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33622)
static void C_ccall f_33622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33625)
static void C_ccall f_33625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33628)
static void C_ccall f_33628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33631)
static void C_ccall f_33631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33634)
static void C_ccall f_33634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33637)
static void C_ccall f_33637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33762)
static void C_ccall f_33762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33765)
static void C_ccall f_33765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34832)
static void C_fcall f_34832(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34860)
static void C_fcall f_34860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34499)
static void C_ccall f_34499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34826)
static void C_ccall f_34826(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34544)
static void C_ccall f_34544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34550)
static void C_ccall f_34550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34553)
static void C_ccall f_34553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34556)
static void C_ccall f_34556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34560)
static void C_ccall f_34560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34770)
static void C_ccall f_34770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34782)
static void C_ccall f_34782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34778)
static void C_ccall f_34778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34563)
static void C_fcall f_34563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34727)
static void C_fcall f_34727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34763)
static void C_ccall f_34763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34756)
static void C_ccall f_34756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34566)
static void C_ccall f_34566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34665)
static void C_ccall f_34665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34673)
static void C_ccall f_34673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34669)
static void C_ccall f_34669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34661)
static void C_ccall f_34661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34657)
static void C_ccall f_34657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34613)
static void C_ccall f_34613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34609)
static void C_ccall f_34609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34576)
static void C_fcall f_34576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34587)
static void C_ccall f_34587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34595)
static void C_ccall f_34595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34591)
static void C_ccall f_34591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34789)
static void C_ccall f_34789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34797)
static void C_ccall f_34797(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_34797)
static void C_ccall f_34797r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_34811)
static void C_fcall f_34811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34801)
static void C_ccall f_34801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34792)
static void C_ccall f_34792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34795)
static void C_ccall f_34795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34501)
static void C_fcall f_34501(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34517)
static void C_ccall f_34517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34428)
static void C_ccall f_34428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34439)
static void C_ccall f_34439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34442)
static void C_fcall f_34442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34449)
static void C_ccall f_34449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34418)
static void C_ccall f_34418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34073)
static void C_ccall f_34073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34422)
static void C_ccall f_34422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34360)
static void C_ccall f_34360(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34360)
static void C_ccall f_34360r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34378)
static void C_fcall f_34378(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34364)
static void C_ccall f_34364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34351)
static void C_ccall f_34351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34051)
static void C_ccall f_34051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34355)
static void C_ccall f_34355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34345)
static void C_ccall f_34345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34033)
static void C_ccall f_34033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34336)
static void C_ccall f_34336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34042)
static void C_ccall f_34042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34340)
static void C_ccall f_34340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34273)
static void C_ccall f_34273(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34273)
static void C_ccall f_34273r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34298)
static void C_fcall f_34298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33998)
static void C_ccall f_33998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34286)
static void C_ccall f_34286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34097)
static void C_ccall f_34097(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_34097)
static void C_ccall f_34097r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_34224)
static void C_fcall f_34224(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34219)
static void C_fcall f_34219(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34099)
static void C_fcall f_34099(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34218)
static void C_ccall f_34218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34214)
static void C_ccall f_34214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34206)
static void C_ccall f_34206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34170)
static void C_fcall f_34170(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34203)
static void C_ccall f_34203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34199)
static void C_ccall f_34199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34180)
static void C_ccall f_34180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34159)
static void C_ccall f_34159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34129)
static void C_fcall f_34129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34101)
static void C_fcall f_34101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34078)
static void C_ccall f_34078(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34083)
static void C_ccall f_34083(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34088)
static void C_ccall f_34088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34056)
static void C_fcall f_34056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34060)
static void C_ccall f_34060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34012)
static void C_fcall f_34012(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34016)
static void C_ccall f_34016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34003)
static void C_fcall f_34003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34007)
static void C_ccall f_34007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33991)
static void C_ccall f_33991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33988)
static void C_ccall f_33988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33974)
static void C_ccall f_33974(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33979)
static void C_ccall f_33979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33960)
static void C_ccall f_33960(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33965)
static void C_ccall f_33965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33770)
static void C_ccall f_33770(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33831)
static void C_ccall f_33831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33833)
static void C_fcall f_33833(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33843)
static void C_ccall f_33843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33862)
static void C_fcall f_33862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33902)
static void C_ccall f_33902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33944)
static void C_ccall f_33944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33914)
static void C_ccall f_33914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33899)
static void C_fcall f_33899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33817)
static void C_ccall f_33817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33782)
static void C_ccall f_33782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33809)
static void C_ccall f_33809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33790)
static void C_ccall f_33790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33797)
static void C_ccall f_33797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33801)
static void C_ccall f_33801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33805)
static void C_ccall f_33805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33882)
static void C_ccall f_33882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33860)
static void C_ccall f_33860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33846)
static void C_ccall f_33846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33849)
static void C_ccall f_33849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33824)
static void C_ccall f_33824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33753)
static void C_ccall f_33753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33758)
static void C_ccall f_33758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33696)
static void C_ccall f_33696(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33696)
static void C_ccall f_33696r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33729)
static void C_fcall f_33729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33709)
static void C_fcall f_33709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33717)
static void C_ccall f_33717(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33700)
static void C_ccall f_33700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33639)
static void C_ccall f_33639(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33639)
static void C_ccall f_33639r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33672)
static void C_fcall f_33672(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33652)
static void C_fcall f_33652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33660)
static void C_ccall f_33660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33643)
static void C_ccall f_33643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33549)
static void C_ccall f_33549(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33603)
static void C_ccall f_33603(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33598)
static void C_ccall f_33598(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33561)
static void C_ccall f_33561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33567)
static void C_ccall f_33567(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33593)
static void C_ccall f_33593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33597)
static void C_ccall f_33597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33573)
static void C_ccall f_33573(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33591)
static void C_ccall f_33591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33588)
static void C_ccall f_33588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33584)
static void C_ccall f_33584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33577)
static void C_ccall f_33577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33534)
static void C_ccall f_33534(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33539)
static void C_ccall f_33539(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33506)
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33511)
static void C_ccall f_33511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33478)
static void C_ccall f_33478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33483)
static void C_ccall f_33483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33450)
static void C_ccall f_33450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33455)
static void C_ccall f_33455(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33422)
static void C_ccall f_33422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33427)
static void C_ccall f_33427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33394)
static void C_ccall f_33394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33399)
static void C_ccall f_33399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33366)
static void C_ccall f_33366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33371)
static void C_ccall f_33371(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33338)
static void C_ccall f_33338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33343)
static void C_ccall f_33343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33310)
static void C_ccall f_33310(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33315)
static void C_ccall f_33315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33282)
static void C_ccall f_33282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33287)
static void C_ccall f_33287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33259)
static void C_ccall f_33259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33264)
static void C_ccall f_33264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33263)
static void C_ccall f_33263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33240)
static void C_ccall f_33240(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33245)
static void C_ccall f_33245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33185)
static void C_ccall f_33185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33192)
static void C_ccall f_33192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33195)
static void C_ccall f_33195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33219)
static void C_ccall f_33219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33199)
static void C_ccall f_33199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33189)
static void C_ccall f_33189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33138)
static void C_ccall f_33138(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33145)
static void C_ccall f_33145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33148)
static void C_ccall f_33148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33168)
static void C_ccall f_33168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33152)
static void C_ccall f_33152(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33115)
static void C_ccall f_33115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33120)
static void C_ccall f_33120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33119)
static void C_ccall f_33119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33096)
static void C_ccall f_33096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33101)
static void C_ccall f_33101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33073)
static void C_ccall f_33073(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33078)
static void C_ccall f_33078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33077)
static void C_ccall f_33077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33054)
static void C_ccall f_33054(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33059)
static void C_ccall f_33059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33035)
static void C_ccall f_33035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33040)
static void C_ccall f_33040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33039)
static void C_ccall f_33039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33020)
static void C_ccall f_33020(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33025)
static void C_ccall f_33025(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33001)
static void C_ccall f_33001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33006)
static void C_ccall f_33006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33005)
static void C_ccall f_33005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32986)
static void C_ccall f_32986(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32991)
static void C_ccall f_32991(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32971)
static void C_ccall f_32971(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32976)
static void C_ccall f_32976(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32953)
static void C_ccall f_32953(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32961)
static void C_ccall f_32961(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32957)
static void C_ccall f_32957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32483)
static void C_ccall f_32483(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32483)
static void C_ccall f_32483r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32911)
static void C_ccall f_32911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32926)
static void C_ccall f_32926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32918)
static void C_ccall f_32918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32882)
static void C_ccall f_32882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32886)
static void C_ccall f_32886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32847)
static void C_ccall f_32847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32851)
static void C_ccall f_32851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32812)
static void C_ccall f_32812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32816)
static void C_ccall f_32816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32487)
static void C_fcall f_32487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32776)
static void C_ccall f_32776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32791)
static void C_ccall f_32791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32783)
static void C_ccall f_32783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32747)
static void C_ccall f_32747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32751)
static void C_ccall f_32751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32712)
static void C_ccall f_32712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32716)
static void C_ccall f_32716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_ccall f_32677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32681)
static void C_ccall f_32681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32490)
static void C_fcall f_32490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32641)
static void C_ccall f_32641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32656)
static void C_ccall f_32656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32648)
static void C_ccall f_32648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32612)
static void C_ccall f_32612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32616)
static void C_ccall f_32616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32577)
static void C_ccall f_32577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32581)
static void C_ccall f_32581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32542)
static void C_ccall f_32542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32546)
static void C_ccall f_32546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32493)
static void C_fcall f_32493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32496)
static void C_ccall f_32496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32500)
static void C_ccall f_32500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32464)
static void C_ccall f_32464(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32469)
static void C_ccall f_32469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32013)
static void C_ccall f_32013(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32013)
static void C_ccall f_32013r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32441)
static void C_ccall f_32441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32456)
static void C_ccall f_32456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32448)
static void C_ccall f_32448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32412)
static void C_ccall f_32412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32416)
static void C_ccall f_32416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32377)
static void C_ccall f_32377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32381)
static void C_ccall f_32381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32342)
static void C_ccall f_32342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32346)
static void C_ccall f_32346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32017)
static void C_fcall f_32017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32306)
static void C_ccall f_32306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32321)
static void C_ccall f_32321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32313)
static void C_ccall f_32313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32277)
static void C_ccall f_32277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32281)
static void C_ccall f_32281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32242)
static void C_ccall f_32242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32246)
static void C_ccall f_32246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32207)
static void C_ccall f_32207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32211)
static void C_ccall f_32211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32020)
static void C_fcall f_32020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32171)
static void C_ccall f_32171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32186)
static void C_ccall f_32186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32178)
static void C_ccall f_32178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32142)
static void C_ccall f_32142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32146)
static void C_ccall f_32146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32107)
static void C_ccall f_32107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32111)
static void C_ccall f_32111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32072)
static void C_ccall f_32072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32076)
static void C_ccall f_32076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32023)
static void C_fcall f_32023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32026)
static void C_ccall f_32026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32030)
static void C_ccall f_32030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31994)
static void C_ccall f_31994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31999)
static void C_ccall f_31999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31543)
static void C_ccall f_31543(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31543)
static void C_ccall f_31543r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31971)
static void C_ccall f_31971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31986)
static void C_ccall f_31986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31978)
static void C_ccall f_31978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31942)
static void C_ccall f_31942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31946)
static void C_ccall f_31946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31907)
static void C_ccall f_31907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31911)
static void C_ccall f_31911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31872)
static void C_ccall f_31872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31876)
static void C_ccall f_31876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31547)
static void C_fcall f_31547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31836)
static void C_ccall f_31836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31851)
static void C_ccall f_31851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31843)
static void C_ccall f_31843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31807)
static void C_ccall f_31807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31811)
static void C_ccall f_31811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31772)
static void C_ccall f_31772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31776)
static void C_ccall f_31776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31737)
static void C_ccall f_31737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31741)
static void C_ccall f_31741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31550)
static void C_fcall f_31550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31701)
static void C_ccall f_31701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31716)
static void C_ccall f_31716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31708)
static void C_ccall f_31708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31672)
static void C_ccall f_31672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31676)
static void C_ccall f_31676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31637)
static void C_ccall f_31637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31641)
static void C_ccall f_31641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31602)
static void C_ccall f_31602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31606)
static void C_ccall f_31606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31553)
static void C_fcall f_31553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31556)
static void C_ccall f_31556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31560)
static void C_ccall f_31560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31524)
static void C_ccall f_31524(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31529)
static void C_ccall f_31529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30795)
static void C_ccall f_30795(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30795)
static void C_ccall f_30795r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31501)
static void C_ccall f_31501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31516)
static void C_ccall f_31516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31508)
static void C_ccall f_31508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31472)
static void C_ccall f_31472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31476)
static void C_ccall f_31476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31437)
static void C_ccall f_31437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31402)
static void C_ccall f_31402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31406)
static void C_ccall f_31406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31367)
static void C_ccall f_31367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31371)
static void C_ccall f_31371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30799)
static void C_fcall f_30799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31331)
static void C_ccall f_31331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31346)
static void C_ccall f_31346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31338)
static void C_ccall f_31338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31306)
static void C_ccall f_31306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31267)
static void C_ccall f_31267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31271)
static void C_ccall f_31271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31232)
static void C_ccall f_31232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31236)
static void C_ccall f_31236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31197)
static void C_ccall f_31197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31201)
static void C_ccall f_31201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30802)
static void C_fcall f_30802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31161)
static void C_ccall f_31161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31176)
static void C_ccall f_31176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31168)
static void C_ccall f_31168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31132)
static void C_ccall f_31132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31136)
static void C_ccall f_31136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31097)
static void C_ccall f_31097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31101)
static void C_ccall f_31101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31062)
static void C_ccall f_31062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31066)
static void C_ccall f_31066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31027)
static void C_ccall f_31027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31031)
static void C_ccall f_31031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30805)
static void C_fcall f_30805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30991)
static void C_ccall f_30991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31006)
static void C_ccall f_31006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30998)
static void C_ccall f_30998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30962)
static void C_ccall f_30962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30966)
static void C_ccall f_30966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30927)
static void C_ccall f_30927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30931)
static void C_ccall f_30931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30892)
static void C_ccall f_30892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30896)
static void C_ccall f_30896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30857)
static void C_ccall f_30857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30861)
static void C_ccall f_30861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30808)
static void C_fcall f_30808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30811)
static void C_ccall f_30811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30815)
static void C_ccall f_30815(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30776)
static void C_ccall f_30776(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30781)
static void C_ccall f_30781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30047)
static void C_ccall f_30047(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30047)
static void C_ccall f_30047r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30753)
static void C_ccall f_30753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30768)
static void C_ccall f_30768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30760)
static void C_ccall f_30760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30724)
static void C_ccall f_30724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30728)
static void C_ccall f_30728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30689)
static void C_ccall f_30689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30693)
static void C_ccall f_30693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30654)
static void C_ccall f_30654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30658)
static void C_ccall f_30658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30619)
static void C_ccall f_30619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30623)
static void C_ccall f_30623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30051)
static void C_fcall f_30051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30583)
static void C_ccall f_30583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30598)
static void C_ccall f_30598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30590)
static void C_ccall f_30590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30554)
static void C_ccall f_30554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30558)
static void C_ccall f_30558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30519)
static void C_ccall f_30519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30523)
static void C_ccall f_30523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30484)
static void C_ccall f_30484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30488)
static void C_ccall f_30488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30453)
static void C_ccall f_30453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30054)
static void C_fcall f_30054(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30413)
static void C_ccall f_30413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30428)
static void C_ccall f_30428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30420)
static void C_ccall f_30420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30384)
static void C_ccall f_30384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30388)
static void C_ccall f_30388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30349)
static void C_ccall f_30349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30353)
static void C_ccall f_30353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30318)
static void C_ccall f_30318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30279)
static void C_ccall f_30279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30283)
static void C_ccall f_30283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30057)
static void C_fcall f_30057(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30243)
static void C_ccall f_30243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30258)
static void C_ccall f_30258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30250)
static void C_ccall f_30250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30214)
static void C_ccall f_30214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30218)
static void C_ccall f_30218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30179)
static void C_ccall f_30179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30183)
static void C_ccall f_30183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30144)
static void C_ccall f_30144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30148)
static void C_ccall f_30148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30109)
static void C_ccall f_30109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30113)
static void C_ccall f_30113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_fcall f_30060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30063)
static void C_ccall f_30063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30067)
static void C_ccall f_30067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30028)
static void C_ccall f_30028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30033)
static void C_ccall f_30033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29577)
static void C_ccall f_29577(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29577)
static void C_ccall f_29577r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30005)
static void C_ccall f_30005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30020)
static void C_ccall f_30020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30012)
static void C_ccall f_30012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29976)
static void C_ccall f_29976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29980)
static void C_ccall f_29980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29941)
static void C_ccall f_29941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29945)
static void C_ccall f_29945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29906)
static void C_ccall f_29906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29910)
static void C_ccall f_29910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29581)
static void C_fcall f_29581(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29870)
static void C_ccall f_29870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29885)
static void C_ccall f_29885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29877)
static void C_ccall f_29877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29841)
static void C_ccall f_29841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29845)
static void C_ccall f_29845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29806)
static void C_ccall f_29806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29810)
static void C_ccall f_29810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29771)
static void C_ccall f_29771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29775)
static void C_ccall f_29775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29584)
static void C_fcall f_29584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29735)
static void C_ccall f_29735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29750)
static void C_ccall f_29750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29742)
static void C_ccall f_29742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29706)
static void C_ccall f_29706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29710)
static void C_ccall f_29710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29671)
static void C_ccall f_29671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29675)
static void C_ccall f_29675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29636)
static void C_ccall f_29636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29640)
static void C_ccall f_29640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29587)
static void C_fcall f_29587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29590)
static void C_ccall f_29590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29594)
static void C_ccall f_29594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29558)
static void C_ccall f_29558(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29563)
static void C_ccall f_29563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28829)
static void C_ccall f_28829(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28829)
static void C_ccall f_28829r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29535)
static void C_ccall f_29535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29550)
static void C_ccall f_29550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29542)
static void C_ccall f_29542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29506)
static void C_ccall f_29506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29510)
static void C_ccall f_29510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29471)
static void C_ccall f_29471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29475)
static void C_ccall f_29475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29436)
static void C_ccall f_29436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29440)
static void C_ccall f_29440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29401)
static void C_ccall f_29401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29405)
static void C_ccall f_29405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28833)
static void C_fcall f_28833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29365)
static void C_ccall f_29365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29380)
static void C_ccall f_29380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29372)
static void C_ccall f_29372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29336)
static void C_ccall f_29336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29340)
static void C_ccall f_29340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29301)
static void C_ccall f_29301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29305)
static void C_ccall f_29305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29266)
static void C_ccall f_29266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29270)
static void C_ccall f_29270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29231)
static void C_ccall f_29231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29235)
static void C_ccall f_29235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28836)
static void C_fcall f_28836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29195)
static void C_ccall f_29195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29210)
static void C_ccall f_29210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29202)
static void C_ccall f_29202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29166)
static void C_ccall f_29166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29170)
static void C_ccall f_29170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29131)
static void C_ccall f_29131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29135)
static void C_ccall f_29135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29096)
static void C_ccall f_29096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29100)
static void C_ccall f_29100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29061)
static void C_ccall f_29061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29065)
static void C_ccall f_29065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28839)
static void C_fcall f_28839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29025)
static void C_ccall f_29025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29040)
static void C_ccall f_29040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29032)
static void C_ccall f_29032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28996)
static void C_ccall f_28996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29000)
static void C_ccall f_29000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28961)
static void C_ccall f_28961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28965)
static void C_ccall f_28965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28926)
static void C_ccall f_28926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28930)
static void C_ccall f_28930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28891)
static void C_ccall f_28891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28895)
static void C_ccall f_28895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28842)
static void C_fcall f_28842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28845)
static void C_ccall f_28845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28849)
static void C_ccall f_28849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28491)
static void C_fcall f_28491(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28331)
static void C_fcall f_28331(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28366)
static void C_fcall f_28366(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28376)
static void C_fcall f_28376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28380)
static void C_ccall f_28380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28383)
static void C_ccall f_28383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28444)
static void C_ccall f_28444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28435)
static void C_ccall f_28435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28386)
static void C_ccall f_28386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28405)
static void C_ccall f_28405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28412)
static void C_ccall f_28412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28389)
static void C_ccall f_28389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28395)
static void C_ccall f_28395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28364)
static void C_ccall f_28364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28339)
static void C_fcall f_28339(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28338)
static void C_ccall f_28338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28499)
static void C_fcall f_28499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28077)
static void C_ccall f_28077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28099)
static void C_ccall f_28099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28114)
static void C_ccall f_28114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_fcall f_28117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28293)
static void C_ccall f_28293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28287)
static void C_ccall f_28287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28120)
static void C_ccall f_28120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28269)
static void C_ccall f_28269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28123)
static void C_fcall f_28123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28126)
static void C_ccall f_28126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28262)
static void C_ccall f_28262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28250)
static void C_ccall f_28250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28146)
static void C_fcall f_28146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28153)
static void C_ccall f_28153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28223)
static void C_ccall f_28223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28209)
static void C_ccall f_28209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28217)
static void C_ccall f_28217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28156)
static void C_ccall f_28156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28195)
static void C_ccall f_28195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28159)
static void C_fcall f_28159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28188)
static void C_ccall f_28188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28165)
static void C_ccall f_28165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28168)
static void C_ccall f_28168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28172)
static void C_ccall f_28172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28133)
static void C_fcall f_28133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28136)
static void C_ccall f_28136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27946)
static void C_fcall f_27946(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27955)
static void C_fcall f_27955(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27903)
static void C_ccall f_27903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27909)
static void C_fcall f_27909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27972)
static void C_ccall f_27972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28058)
static void C_ccall f_28058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28045)
static void C_ccall f_28045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28053)
static void C_ccall f_28053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27975)
static void C_ccall f_27975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27979)
static void C_ccall f_27979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28022)
static void C_ccall f_28022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27984)
static void C_ccall f_27984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27950)
static void C_ccall f_27950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27852)
static void C_ccall f_27852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27883)
static void C_ccall f_27883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27879)
static void C_ccall f_27879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27871)
static void C_ccall f_27871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27754)
static void C_ccall f_27754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27761)
static void C_ccall f_27761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27829)
static void C_ccall f_27829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27772)
static void C_fcall f_27772(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27799)
static void C_ccall f_27799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27783)
static void C_ccall f_27783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27688)
static void C_ccall f_27688(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27699)
static void C_ccall f_27699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27702)
static void C_fcall f_27702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27709)
static void C_ccall f_27709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27682)
static void C_ccall f_27682(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27136)
static void C_ccall f_27136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27167)
static void C_ccall f_27167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27631)
static void C_ccall f_27631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27637)
static void C_ccall f_27637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27178)
static void C_ccall f_27178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27063)
static void C_fcall f_27063(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27088)
static void C_ccall f_27088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27023)
static void C_fcall f_27023(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27036)
static void C_fcall f_27036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27077)
static void C_ccall f_27077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27182)
static void C_ccall f_27182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27619)
static void C_ccall f_27619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27615)
static void C_fcall f_27615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27611)
static void C_ccall f_27611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27185)
static void C_ccall f_27185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27405)
static void C_fcall f_27405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27514)
static void C_ccall f_27514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27579)
static void C_ccall f_27579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27521)
static void C_fcall f_27521(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27525)
static void C_ccall f_27525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27529)
static void C_ccall f_27529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27571)
static void C_ccall f_27571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27545)
static void C_ccall f_27545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27408)
static void C_fcall f_27408(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27411)
static void C_fcall f_27411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27310)
static void C_ccall f_27310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27393)
static void C_ccall f_27393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27360)
static void C_ccall f_27360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27386)
static void C_ccall f_27386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27368)
static void C_ccall f_27368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27316)
static void C_fcall f_27316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27356)
static void C_ccall f_27356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27298)
static void C_ccall f_27298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27269)
static void C_ccall f_27269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27291)
static void C_ccall f_27291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27277)
static void C_ccall f_27277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27231)
static void C_fcall f_27231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27188)
static void C_fcall f_27188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27199)
static void C_ccall f_27199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27203)
static void C_ccall f_27203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27207)
static void C_ccall f_27207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27211)
static void C_ccall f_27211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27195)
static void C_ccall f_27195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27155)
static void C_fcall f_27155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27150)
static void C_fcall f_27150(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27145)
static void C_fcall f_27145(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26977)
static void C_ccall f_26977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26988)
static void C_ccall f_26988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27003)
static void C_ccall f_27003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26939)
static void C_ccall f_26939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26950)
static void C_ccall f_26950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26965)
static void C_ccall f_26965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26872)
static void C_ccall f_26872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26892)
static void C_fcall f_26892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26902)
static void C_ccall f_26902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26915)
static void C_ccall f_26915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26883)
static void C_ccall f_26883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26890)
static void C_ccall f_26890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26679)
static void C_ccall f_26679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26739)
static void C_fcall f_26739(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26749)
static void C_ccall f_26749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26863)
static void C_ccall f_26863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26828)
static void C_ccall f_26828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26820)
static void C_ccall f_26820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26791)
static void C_ccall f_26791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26769)
static void C_ccall f_26769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26772)
static void C_ccall f_26772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26760)
static void C_ccall f_26760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26686)
static void C_ccall f_26686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26737)
static void C_ccall f_26737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26729)
static void C_ccall f_26729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26689)
static void C_ccall f_26689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26700)
static void C_ccall f_26700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26704)
static void C_ccall f_26704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26696)
static void C_ccall f_26696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26537)
static void C_ccall f_26537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26585)
static void C_fcall f_26585(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26595)
static void C_ccall f_26595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26606)
static void C_ccall f_26606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26643)
static void C_ccall f_26643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26618)
static void C_ccall f_26618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26609)
static void C_ccall f_26609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26547)
static void C_ccall f_26547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26583)
static void C_ccall f_26583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26554)
static void C_ccall f_26554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26186)
static void C_ccall f_26186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26193)
static void C_ccall f_26193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26427)
static void C_fcall f_26427(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26437)
static void C_ccall f_26437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26448)
static void C_ccall f_26448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26460)
static void C_fcall f_26460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26463)
static void C_ccall f_26463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26451)
static void C_ccall f_26451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26199)
static void C_ccall f_26199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26425)
static void C_ccall f_26425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26421)
static void C_ccall f_26421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26367)
static void C_fcall f_26367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26332)
static void C_fcall f_26332(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26348)
static void C_fcall f_26348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26303)
static void C_fcall f_26303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26227)
static void C_ccall f_26227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26230)
static void C_ccall f_26230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26294)
static void C_ccall f_26294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26290)
static void C_ccall f_26290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26210)
static void C_fcall f_26210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26221)
static void C_ccall f_26221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26217)
static void C_ccall f_26217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26139)
static void C_ccall f_26139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26172)
static void C_ccall f_26172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26154)
static void C_ccall f_26154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26166)
static void C_ccall f_26166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25757)
static void C_ccall f_25757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25966)
static void C_fcall f_25966(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25976)
static void C_ccall f_25976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25987)
static void C_ccall f_25987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26107)
static void C_ccall f_26107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26086)
static void C_ccall f_26086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26065)
static void C_ccall f_26065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26044)
static void C_ccall f_26044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26023)
static void C_ccall f_26023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26002)
static void C_ccall f_26002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25990)
static void C_ccall f_25990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25767)
static void C_ccall f_25767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25770)
static void C_fcall f_25770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25933)
static void C_fcall f_25933(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25773)
static void C_fcall f_25773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_ccall f_25924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25904)
static void C_ccall f_25904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25776)
static void C_fcall f_25776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25869)
static void C_ccall f_25869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25886)
static void C_ccall f_25886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25779)
static void C_fcall f_25779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25818)
static void C_ccall f_25818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25852)
static void C_ccall f_25852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25836)
static void C_ccall f_25836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25821)
static void C_fcall f_25821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25786)
static void C_fcall f_25786(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25797)
static void C_ccall f_25797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25801)
static void C_ccall f_25801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25793)
static void C_ccall f_25793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25675)
static void C_ccall f_25675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25679)
static void C_ccall f_25679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25697)
static void C_ccall f_25697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25515)
static void C_fcall f_25515(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25523)
static void C_fcall f_25523(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25533)
static void C_ccall f_25533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25571)
static void C_ccall f_25571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25574)
static void C_ccall f_25574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25577)
static void C_ccall f_25577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25652)
static void C_fcall f_25652(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25662)
static void C_ccall f_25662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25580)
static void C_ccall f_25580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25583)
static void C_ccall f_25583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25586)
static void C_ccall f_25586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25606)
static void C_fcall f_25606(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25616)
static void C_ccall f_25616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25619)
static void C_ccall f_25619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25622)
static void C_ccall f_25622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25589)
static void C_ccall f_25589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25592)
static void C_ccall f_25592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25509)
static void C_fcall f_25509(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25503)
static void C_fcall f_25503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25497)
static void C_fcall f_25497(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25426)
static void C_fcall f_25426(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25467)
static void C_ccall f_25467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25471)
static void C_ccall f_25471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25475)
static void C_ccall f_25475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25479)
static void C_ccall f_25479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25483)
static void C_ccall f_25483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25487)
static void C_ccall f_25487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25491)
static void C_ccall f_25491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25495)
static void C_ccall f_25495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25428)
static void C_fcall f_25428(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25434)
static void C_fcall f_25434(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25456)
static void C_ccall f_25456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25445)
static void C_ccall f_25445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25275)
static void C_fcall f_25275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25290)
static void C_fcall f_25290(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25303)
static void C_ccall f_25303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25263)
static void C_ccall f_25263(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25251)
static void C_ccall f_25251(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25239)
static void C_ccall f_25239(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25233)
static void C_fcall f_25233(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25227)
static void C_ccall f_25227(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25215)
static void C_ccall f_25215(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25203)
static void C_ccall f_25203(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25191)
static void C_ccall f_25191(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25179)
static void C_ccall f_25179(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25173)
static void C_fcall f_25173(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25137)
static void C_ccall f_25137(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25131)
static void C_ccall f_25131(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25084)
static void C_ccall f_25084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25088)
static void C_ccall f_25088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25104)
static void C_ccall f_25104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25113)
static void C_ccall f_25113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25075)
static void C_ccall f_25075(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25079)
static void C_ccall f_25079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24922)
static void C_ccall f_24922(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24922)
static void C_ccall f_24922r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25049)
static void C_fcall f_25049(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25062)
static void C_ccall f_25062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25044)
static void C_ccall f_25044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24925)
static void C_fcall f_24925(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25041)
static void C_ccall f_25041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25025)
static void C_ccall f_25025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24953)
static void C_ccall f_24953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24961)
static void C_fcall f_24961(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24971)
static void C_ccall f_24971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24974)
static void C_ccall f_24974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24956)
static void C_ccall f_24956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24745)
static void C_ccall f_24745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_24749)
static void C_ccall f_24749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24754)
static void C_ccall f_24754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24757)
static void C_fcall f_24757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22569)
static void C_ccall f_22569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22582)
static void C_ccall f_22582(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22589)
static void C_fcall f_22589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22596)
static void C_ccall f_22596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22575)
static void C_ccall f_22575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24761)
static void C_ccall f_24761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24798)
static void C_ccall f_24798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24891)
static void C_fcall f_24891(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24901)
static void C_fcall f_24901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24804)
static void C_ccall f_24804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24861)
static void C_fcall f_24861(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24871)
static void C_fcall f_24871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24812)
static void C_ccall f_24812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24826)
static void C_ccall f_24826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24830)
static void C_ccall f_24830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24834)
static void C_ccall f_24834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24838)
static void C_ccall f_24838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24845)
static void C_ccall f_24845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24822)
static void C_ccall f_24822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24815)
static void C_ccall f_24815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24764)
static void C_ccall f_24764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23696)
static void C_ccall f_23696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23709)
static void C_ccall f_23709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23759)
static void C_ccall f_23759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23856)
static void C_ccall f_23856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23924)
static void C_ccall f_23924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24181)
static void C_ccall f_24181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23931)
static void C_fcall f_23931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24169)
static void C_ccall f_24169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_ccall f_24120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24126)
static void C_ccall f_24126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24150)
static void C_ccall f_24150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24146)
static void C_ccall f_24146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24134)
static void C_ccall f_24134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23934)
static void C_fcall f_23934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24096)
static void C_ccall f_24096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24100)
static void C_ccall f_24100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23937)
static void C_fcall f_23937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24073)
static void C_ccall f_24073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24077)
static void C_ccall f_24077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23940)
static void C_fcall f_23940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24050)
static void C_ccall f_24050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24054)
static void C_ccall f_24054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23943)
static void C_fcall f_23943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23975)
static void C_ccall f_23975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23993)
static void C_ccall f_23993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24011)
static void C_ccall f_24011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24029)
static void C_ccall f_24029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23946)
static void C_fcall f_23946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23950)
static void C_ccall f_23950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23860)
static void C_ccall f_23860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23864)
static void C_ccall f_23864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23868)
static void C_ccall f_23868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23763)
static void C_ccall f_23763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23771)
static void C_ccall f_23771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23790)
static void C_ccall f_23790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23794)
static void C_ccall f_23794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23774)
static void C_fcall f_23774(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23778)
static void C_ccall f_23778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23713)
static void C_ccall f_23713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23717)
static void C_ccall f_23717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23721)
static void C_ccall f_23721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23703)
static void C_fcall f_23703(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23518)
static void C_fcall f_23518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23530)
static void C_fcall f_23530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23549)
static void C_ccall f_23549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23567)
static void C_fcall f_23567(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23599)
static void C_ccall f_23599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23602)
static void C_fcall f_23602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23595)
static void C_ccall f_23595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23581)
static void C_ccall f_23581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23552)
static void C_ccall f_23552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23497)
static void C_fcall f_23497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23504)
static void C_ccall f_23504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23507)
static void C_ccall f_23507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23513)
static void C_ccall f_23513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23432)
static void C_fcall f_23432(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23441)
static void C_fcall f_23441(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23464)
static void C_ccall f_23464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23454)
static void C_fcall f_23454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23388)
static void C_fcall f_23388(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23376)
static void C_fcall f_23376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23274)
static void C_fcall f_23274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23226)
static void C_fcall f_23226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22607)
static void C_fcall f_22607(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22611)
static void C_ccall f_22611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22614)
static void C_ccall f_22614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23036)
static void C_ccall f_23036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23032)
static void C_ccall f_23032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22617)
static void C_fcall f_22617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22740)
static void C_ccall f_22740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21973)
static void C_ccall f_21973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22746)
static void C_fcall f_22746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21989)
static void C_ccall f_21989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22834)
static void C_fcall f_22834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22904)
static void C_ccall f_22904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22005)
static void C_ccall f_22005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22907)
static void C_fcall f_22907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22037)
static void C_ccall f_22037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22985)
static void C_fcall f_22985(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23011)
static void C_ccall f_23011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23005)
static void C_ccall f_23005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22994)
static void C_ccall f_22994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22936)
static void C_fcall f_22936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22946)
static void C_ccall f_22946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22972)
static void C_ccall f_22972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22966)
static void C_ccall f_22966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22949)
static void C_ccall f_22949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22959)
static void C_ccall f_22959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22952)
static void C_fcall f_22952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22913)
static void C_ccall f_22913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22922)
static void C_ccall f_22922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22916)
static void C_fcall f_22916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22840)
static void C_ccall f_22840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22858)
static void C_fcall f_22858(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22891)
static void C_ccall f_22891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22877)
static void C_ccall f_22877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22885)
static void C_ccall f_22885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22868)
static void C_ccall f_22868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22843)
static void C_ccall f_22843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22755)
static void C_ccall f_22755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22777)
static void C_fcall f_22777(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22824)
static void C_ccall f_22824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22810)
static void C_ccall f_22810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22818)
static void C_ccall f_22818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22790)
static void C_ccall f_22790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22793)
static void C_fcall f_22793(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22758)
static void C_ccall f_22758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22775)
static void C_ccall f_22775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22761)
static void C_fcall f_22761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22626)
static void C_ccall f_22626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22632)
static void C_ccall f_22632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22690)
static void C_ccall f_22690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22693)
static void C_ccall f_22693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22714)
static void C_ccall f_22714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22725)
static void C_ccall f_22725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22704)
static void C_ccall f_22704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22638)
static void C_ccall f_22638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22648)
static void C_ccall f_22648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22684)
static void C_ccall f_22684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22654)
static void C_ccall f_22654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22669)
static void C_ccall f_22669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22673)
static void C_ccall f_22673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22677)
static void C_ccall f_22677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22661)
static void C_ccall f_22661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22503)
static void C_fcall f_22503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22505)
static void C_ccall f_22505(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22553)
static void C_ccall f_22553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22509)
static void C_ccall f_22509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22512)
static void C_fcall f_22512(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22517)
static void C_fcall f_22517(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22538)
static void C_ccall f_22538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22495)
static void C_fcall f_22495(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22497)
static void C_ccall f_22497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22287)
static void C_fcall f_22287(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22304)
static void C_ccall f_22304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22308)
static void C_ccall f_22308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22254)
static void C_fcall f_22254(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22261)
static void C_ccall f_22261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22205)
static void C_ccall f_22205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22212)
static void C_ccall f_22212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22270)
static void C_ccall f_22270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22493)
static void C_ccall f_22493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22470)
static void C_ccall f_22470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22486)
static void C_ccall f_22486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22332)
static void C_ccall f_22332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22335)
static void C_ccall f_22335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22359)
static void C_ccall f_22359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22416)
static void C_ccall f_22416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22422)
static void C_ccall f_22422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22431)
static void C_ccall f_22431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22440)
static void C_ccall f_22440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22449)
static void C_ccall f_22449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22458)
static void C_ccall f_22458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22365)
static void C_ccall f_22365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22371)
static void C_ccall f_22371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22377)
static void C_ccall f_22377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22383)
static void C_ccall f_22383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22389)
static void C_ccall f_22389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22395)
static void C_ccall f_22395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22236)
static void C_fcall f_22236(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22243)
static void C_ccall f_22243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22226)
static void C_fcall f_22226(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22214)
static void C_fcall f_22214(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22182)
static void C_fcall f_22182(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22189)
static void C_ccall f_22189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22196)
static void C_ccall f_22196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22166)
static void C_fcall f_22166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22173)
static void C_ccall f_22173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22180)
static void C_ccall f_22180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22154)
static void C_fcall f_22154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22136)
static void C_fcall f_22136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22118)
static void C_fcall f_22118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22103)
static void C_fcall f_22103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22097)
static void C_fcall f_22097(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22085)
static void C_fcall f_22085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22067)
static void C_fcall f_22067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22046)
static void C_fcall f_22046(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22014)
static void C_fcall f_22014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22021)
static void C_ccall f_22021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21956)
static void C_fcall f_21956(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21964)
static void C_ccall f_21964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21946)
static void C_fcall f_21946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21954)
static void C_ccall f_21954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21940)
static void C_fcall f_21940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_fcall f_21928(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21925)
static void C_ccall f_21925(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21904)
static void C_fcall f_21904(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21817)
static void C_fcall f_21817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21796)
static void C_fcall f_21796(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21786)
static void C_fcall f_21786(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21774)
static void C_fcall f_21774(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21745)
static void C_ccall f_21745(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21733)
static void C_fcall f_21733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21715)
static void C_fcall f_21715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21697)
static void C_fcall f_21697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21676)
static void C_ccall f_21676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20654)
static void C_ccall f_20654(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20654)
static void C_ccall f_20654r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21653)
static void C_ccall f_21653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21668)
static void C_ccall f_21668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21660)
static void C_ccall f_21660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21624)
static void C_ccall f_21624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21628)
static void C_ccall f_21628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21589)
static void C_ccall f_21589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21593)
static void C_ccall f_21593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20664)
static void C_fcall f_20664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21553)
static void C_ccall f_21553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21568)
static void C_ccall f_21568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21560)
static void C_ccall f_21560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21528)
static void C_ccall f_21528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21489)
static void C_ccall f_21489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21493)
static void C_ccall f_21493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20667)
static void C_fcall f_20667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20670)
static void C_ccall f_20670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20675)
static void C_ccall f_20675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21382)
static void C_fcall f_21382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21405)
static void C_fcall f_21405(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21458)
static void C_ccall f_21458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21440)
static void C_fcall f_21440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21433)
static void C_ccall f_21433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21415)
static void C_ccall f_21415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21392)
static void C_ccall f_21392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20869)
static void C_ccall f_20869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21344)
static void C_fcall f_21344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21366)
static void C_ccall f_21366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21350)
static void C_ccall f_21350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21358)
static void C_ccall f_21358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21362)
static void C_ccall f_21362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21348)
static void C_ccall f_21348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21338)
static void C_ccall f_21338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20872)
static void C_fcall f_20872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21215)
static void C_fcall f_21215(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21239)
static void C_ccall f_21239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21301)
static void C_fcall f_21301(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21242)
static void C_ccall f_21242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21258)
static void C_fcall f_21258(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21283)
static void C_ccall f_21283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21249)
static void C_ccall f_21249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21226)
static void C_ccall f_21226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20875)
static void C_ccall f_20875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21201)
static void C_ccall f_21201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20879)
static void C_ccall f_20879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20923)
static void C_ccall f_20923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20926)
static void C_ccall f_20926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21182)
static void C_fcall f_21182(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21192)
static void C_ccall f_21192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20929)
static void C_ccall f_20929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21120)
static void C_fcall f_21120(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21130)
static void C_ccall f_21130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21133)
static void C_ccall f_21133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21153)
static void C_ccall f_21153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21155)
static void C_fcall f_21155(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21165)
static void C_ccall f_21165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21139)
static void C_ccall f_21139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21142)
static void C_ccall f_21142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20932)
static void C_ccall f_20932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20940)
static void C_fcall f_20940(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20953)
static void C_ccall f_20953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20827)
static void C_ccall f_20827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20836)
static void C_fcall f_20836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20858)
static void C_ccall f_20858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20847)
static void C_ccall f_20847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20956)
static void C_ccall f_20956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21091)
static void C_ccall f_21091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21093)
static void C_fcall f_21093(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21103)
static void C_ccall f_21103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20962)
static void C_ccall f_20962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21064)
static void C_ccall f_21064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21066)
static void C_fcall f_21066(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21076)
static void C_ccall f_21076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20965)
static void C_ccall f_20965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20977)
static void C_fcall f_20977(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21003)
static void C_ccall f_21003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21009)
static void C_ccall f_21009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21015)
static void C_ccall f_21015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21025)
static void C_ccall f_21025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21027)
static void C_fcall f_21027(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21037)
static void C_ccall f_21037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21018)
static void C_ccall f_21018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20990)
static void C_ccall f_20990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20968)
static void C_ccall f_20968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20935)
static void C_ccall f_20935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20882)
static void C_ccall f_20882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20905)
static void C_ccall f_20905(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20894)
static void C_ccall f_20894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20759)
static void C_fcall f_20759(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20807)
static void C_ccall f_20807(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20769)
static void C_ccall f_20769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20797)
static void C_ccall f_20797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20772)
static void C_ccall f_20772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20677)
static void C_fcall f_20677(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20749)
static void C_ccall f_20749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20681)
static void C_ccall f_20681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20699)
static void C_ccall f_20699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20731)
static void C_ccall f_20731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20560)
static void C_ccall f_20560(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20564)
static void C_ccall f_20564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20593)
static void C_ccall f_20593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20598)
static void C_fcall f_20598(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20623)
static void C_fcall f_20623(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20608)
static void C_ccall f_20608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20042)
static void C_ccall f_20042(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20042)
static void C_ccall f_20042r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20313)
static void C_ccall f_20313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20317)
static void C_ccall f_20317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20322)
static void C_ccall f_20322(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20322)
static void C_ccall f_20322r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20528)
static void C_ccall f_20528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20543)
static void C_ccall f_20543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20535)
static void C_ccall f_20535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20499)
static void C_ccall f_20499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20503)
static void C_ccall f_20503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20464)
static void C_ccall f_20464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20468)
static void C_ccall f_20468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20326)
static void C_fcall f_20326(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20428)
static void C_ccall f_20428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20443)
static void C_ccall f_20443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20435)
static void C_ccall f_20435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20399)
static void C_ccall f_20399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20403)
static void C_ccall f_20403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20364)
static void C_ccall f_20364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20368)
static void C_ccall f_20368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_fcall f_20329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20332)
static void C_ccall f_20332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20335)
static void C_fcall f_20335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20304)
static void C_ccall f_20304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20046)
static void C_ccall f_20046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20273)
static void C_ccall f_20273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20288)
static void C_ccall f_20288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20280)
static void C_ccall f_20280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20244)
static void C_ccall f_20244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20248)
static void C_ccall f_20248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20209)
static void C_ccall f_20209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20213)
static void C_ccall f_20213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20049)
static void C_fcall f_20049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20173)
static void C_ccall f_20173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20188)
static void C_ccall f_20188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20180)
static void C_ccall f_20180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20144)
static void C_ccall f_20144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20148)
static void C_ccall f_20148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20109)
static void C_ccall f_20109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20113)
static void C_ccall f_20113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20052)
static void C_fcall f_20052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20055)
static void C_ccall f_20055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20058)
static void C_ccall f_20058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20070)
static void C_ccall f_20070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20088)
static void C_ccall f_20088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20076)
static void C_ccall f_20076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20064)
static void C_ccall f_20064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19979)
static void C_fcall f_19979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19639)
static void C_ccall f_19639(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19821)
static void C_ccall f_19821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19825)
static void C_ccall f_19825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19827)
static void C_fcall f_19827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19752)
static void C_fcall f_19752(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19762)
static void C_fcall f_19762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19769)
static void C_fcall f_19769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19837)
static void C_ccall f_19837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19840)
static void C_ccall f_19840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19844)
static void C_ccall f_19844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19864)
static void C_fcall f_19864(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19880)
static void C_ccall f_19880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19847)
static void C_ccall f_19847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19642)
static void C_fcall f_19642(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19654)
static void C_fcall f_19654(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19690)
static void C_ccall f_19690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19710)
static void C_ccall f_19710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19715)
static void C_fcall f_19715(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19152)
static void C_ccall f_19152(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19152)
static void C_ccall f_19152r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19079)
static void C_fcall f_19079(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18924)
static void C_ccall f_18924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18930)
static void C_ccall f_18930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19015)
static void C_fcall f_19015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18942)
static void C_ccall f_18942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18958)
static void C_ccall f_18958(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18962)
static void C_fcall f_18962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_fcall f_18965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18945)
static void C_ccall f_18945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18956)
static void C_ccall f_18956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19096)
static void C_ccall f_19096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19633)
static void C_ccall f_19633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19156)
static void C_ccall f_19156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19602)
static void C_ccall f_19602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19617)
static void C_ccall f_19617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19609)
static void C_ccall f_19609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19573)
static void C_ccall f_19573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19577)
static void C_ccall f_19577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19538)
static void C_ccall f_19538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19542)
static void C_ccall f_19542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19503)
static void C_ccall f_19503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19507)
static void C_ccall f_19507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19159)
static void C_fcall f_19159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19467)
static void C_ccall f_19467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19482)
static void C_ccall f_19482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19474)
static void C_ccall f_19474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19438)
static void C_ccall f_19438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19442)
static void C_ccall f_19442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19403)
static void C_ccall f_19403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19407)
static void C_ccall f_19407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19368)
static void C_ccall f_19368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19372)
static void C_ccall f_19372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19162)
static void C_fcall f_19162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19332)
static void C_ccall f_19332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19347)
static void C_ccall f_19347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19339)
static void C_ccall f_19339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19303)
static void C_ccall f_19303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19307)
static void C_ccall f_19307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19272)
static void C_ccall f_19272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19237)
static void C_ccall f_19237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19165)
static void C_fcall f_19165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19168)
static void C_ccall f_19168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19171)
static void C_ccall f_19171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19204)
static void C_ccall f_19204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19177)
static void C_ccall f_19177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19190)
static void C_ccall f_19190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19180)
static void C_fcall f_19180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19183)
static void C_ccall f_19183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18719)
static void C_ccall f_18719(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18723)
static void C_ccall f_18723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18726)
static void C_ccall f_18726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18729)
static void C_ccall f_18729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18898)
static void C_ccall f_18898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18911)
static void C_ccall f_18911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18915)
static void C_ccall f_18915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18735)
static void C_ccall f_18735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18891)
static void C_ccall f_18891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18872)
static void C_ccall f_18872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18879)
static void C_ccall f_18879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18883)
static void C_ccall f_18883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_fcall f_18741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18831)
static void C_ccall f_18831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18833)
static void C_fcall f_18833(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18855)
static void C_ccall f_18855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18862)
static void C_ccall f_18862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18866)
static void C_ccall f_18866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18852)
static void C_fcall f_18852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18848)
static void C_ccall f_18848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18789)
static void C_ccall f_18789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18806)
static void C_fcall f_18806(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18816)
static void C_ccall f_18816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18792)
static void C_ccall f_18792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18751)
static void C_fcall f_18751(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18759)
static void C_ccall f_18759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18761)
static void C_fcall f_18761(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18782)
static void C_ccall f_18782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18607)
static void C_fcall f_18607(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18717)
static void C_ccall f_18717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18676)
static void C_fcall f_18676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18709)
static void C_ccall f_18709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18705)
static void C_ccall f_18705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18690)
static void C_ccall f_18690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18614)
static void C_ccall f_18614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18622)
static void C_fcall f_18622(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18667)
static void C_ccall f_18667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18655)
static void C_ccall f_18655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18639)
static void C_ccall f_18639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17840)
static void C_ccall f_17840(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17840)
static void C_ccall f_17840r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18157)
static void C_ccall f_18157(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18164)
static void C_fcall f_18164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18569)
static void C_ccall f_18569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18584)
static void C_ccall f_18584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18576)
static void C_ccall f_18576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18544)
static void C_ccall f_18544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18505)
static void C_ccall f_18505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18509)
static void C_ccall f_18509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18474)
static void C_ccall f_18474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18167)
static void C_fcall f_18167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18434)
static void C_ccall f_18434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18449)
static void C_ccall f_18449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18441)
static void C_ccall f_18441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18405)
static void C_ccall f_18405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18409)
static void C_ccall f_18409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_ccall f_18374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18339)
static void C_ccall f_18339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18170)
static void C_fcall f_18170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18299)
static void C_ccall f_18299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18314)
static void C_ccall f_18314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18306)
static void C_ccall f_18306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18270)
static void C_ccall f_18270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18274)
static void C_ccall f_18274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18235)
static void C_ccall f_18235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18239)
static void C_ccall f_18239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18200)
static void C_ccall f_18200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18204)
static void C_ccall f_18204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18173)
static void C_fcall f_18173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18176)
static void C_ccall f_18176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17844)
static void C_ccall f_17844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17847)
static void C_ccall f_17847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18121)
static void C_ccall f_18121(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18125)
static void C_ccall f_18125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18128)
static void C_ccall f_18128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18131)
static void C_ccall f_18131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18134)
static void C_ccall f_18134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18147)
static void C_ccall f_18147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18137)
static void C_fcall f_18137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17853)
static void C_ccall f_17853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17860)
static void C_fcall f_17860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18091)
static void C_ccall f_18091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18106)
static void C_ccall f_18106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18098)
static void C_ccall f_18098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18062)
static void C_ccall f_18062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18066)
static void C_ccall f_18066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18027)
static void C_ccall f_18027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18031)
static void C_ccall f_18031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17863)
static void C_fcall f_17863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17991)
static void C_ccall f_17991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18006)
static void C_ccall f_18006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17998)
static void C_ccall f_17998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17962)
static void C_ccall f_17962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17966)
static void C_ccall f_17966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17927)
static void C_ccall f_17927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17931)
static void C_ccall f_17931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17866)
static void C_fcall f_17866(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17869)
static void C_ccall f_17869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17884)
static void C_ccall f_17884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17906)
static void C_ccall f_17906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17898)
static void C_ccall f_17898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17872)
static void C_ccall f_17872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17875)
static void C_ccall f_17875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17757)
static void C_fcall f_17757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17748)
static void C_fcall f_17748(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17739)
static void C_fcall f_17739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17721)
static void C_fcall f_17721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17703)
static void C_fcall f_17703(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17685)
static void C_fcall f_17685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17676)
static void C_fcall f_17676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17667)
static void C_fcall f_17667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17445)
static void C_ccall f_17445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17495)
static void C_ccall f_17495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17640)
static void C_ccall f_17640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17521)
static void C_ccall f_17521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17636)
static void C_ccall f_17636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17621)
static void C_ccall f_17621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17602)
static void C_ccall f_17602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17575)
static void C_ccall f_17575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17528)
static void C_ccall f_17528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17498)
static void C_fcall f_17498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17448)
static void C_ccall f_17448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_17454)
static void C_fcall f_17454(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17470)
static void C_ccall f_17470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17473)
static void C_ccall f_17473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16971)
static void C_ccall f_16971(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16971)
static void C_ccall f_16971r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17435)
static void C_ccall f_17435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_fcall f_16975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17407)
static void C_ccall f_17407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17422)
static void C_ccall f_17422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17414)
static void C_ccall f_17414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17378)
static void C_ccall f_17378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17382)
static void C_ccall f_17382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17343)
static void C_ccall f_17343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17347)
static void C_ccall f_17347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17308)
static void C_ccall f_17308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17312)
static void C_ccall f_17312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16978)
static void C_fcall f_16978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17272)
static void C_ccall f_17272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17287)
static void C_ccall f_17287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17279)
static void C_ccall f_17279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17247)
static void C_ccall f_17247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17208)
static void C_ccall f_17208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17212)
static void C_ccall f_17212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17173)
static void C_ccall f_17173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17177)
static void C_ccall f_17177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16981)
static void C_fcall f_16981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17137)
static void C_ccall f_17137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17152)
static void C_ccall f_17152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17144)
static void C_ccall f_17144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17108)
static void C_ccall f_17108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17112)
static void C_ccall f_17112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17073)
static void C_ccall f_17073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17077)
static void C_ccall f_17077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17038)
static void C_ccall f_17038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17042)
static void C_ccall f_17042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16984)
static void C_fcall f_16984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16987)
static void C_ccall f_16987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16990)
static void C_ccall f_16990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17005)
static void C_ccall f_17005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17017)
static void C_ccall f_17017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16996)
static void C_ccall f_16996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16999)
static void C_ccall f_16999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16895)
static void C_ccall f_16895(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16899)
static void C_ccall f_16899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16918)
static void C_ccall f_16918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16928)
static void C_ccall f_16928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16930)
static void C_fcall f_16930(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16947)
static void C_ccall f_16947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16950)
static void C_ccall f_16950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16961)
static void C_ccall f_16961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16902)
static void C_ccall f_16902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16632)
static void C_ccall f_16632(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16632)
static void C_ccall f_16632r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16885)
static void C_ccall f_16885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16636)
static void C_fcall f_16636(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16857)
static void C_ccall f_16857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16872)
static void C_ccall f_16872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16864)
static void C_ccall f_16864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16828)
static void C_ccall f_16828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16832)
static void C_ccall f_16832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16793)
static void C_ccall f_16793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16639)
static void C_fcall f_16639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16757)
static void C_ccall f_16757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16772)
static void C_ccall f_16772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16728)
static void C_ccall f_16728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16732)
static void C_ccall f_16732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16693)
static void C_ccall f_16693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16697)
static void C_ccall f_16697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16642)
static void C_fcall f_16642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16645)
static void C_ccall f_16645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16648)
static void C_ccall f_16648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16660)
static void C_ccall f_16660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16672)
static void C_ccall f_16672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16654)
static void C_ccall f_16654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16596)
static void C_ccall f_16596(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16600)
static void C_ccall f_16600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16622)
static void C_ccall f_16622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16616)
static void C_ccall f_16616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16609)
static void C_ccall f_16609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16349)
static void C_ccall f_16349(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16349)
static void C_ccall f_16349r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16353)
static void C_fcall f_16353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16566)
static void C_ccall f_16566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16581)
static void C_ccall f_16581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16573)
static void C_ccall f_16573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_ccall f_16537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16541)
static void C_ccall f_16541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16502)
static void C_ccall f_16502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16506)
static void C_ccall f_16506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16356)
static void C_fcall f_16356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16466)
static void C_ccall f_16466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16481)
static void C_ccall f_16481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16473)
static void C_ccall f_16473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16437)
static void C_ccall f_16437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16441)
static void C_ccall f_16441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16402)
static void C_ccall f_16402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16406)
static void C_ccall f_16406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16359)
static void C_fcall f_16359(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16362)
static void C_ccall f_16362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16365)
static void C_ccall f_16365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16373)
static void C_ccall f_16373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16381)
static void C_ccall f_16381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16371)
static void C_ccall f_16371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16134)
static void C_ccall f_16134(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16138)
static void C_ccall f_16138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16347)
static void C_ccall f_16347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16300)
static void C_ccall f_16300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16312)
static void C_fcall f_16312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16168)
static void C_ccall f_16168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_ccall f_16171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16177)
static void C_ccall f_16177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16180)
static void C_ccall f_16180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16268)
static void C_fcall f_16268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16183)
static void C_fcall f_16183(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16262)
static void C_ccall f_16262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16189)
static void C_ccall f_16189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16192)
static void C_ccall f_16192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16144)
static void C_ccall f_16144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16154)
static void C_ccall f_16154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15664)
static void C_ccall f_15664(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15664)
static void C_ccall f_15664r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15668)
static void C_fcall f_15668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16104)
static void C_ccall f_16104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16119)
static void C_ccall f_16119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16111)
static void C_ccall f_16111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16075)
static void C_ccall f_16075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16079)
static void C_ccall f_16079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16040)
static void C_ccall f_16040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16044)
static void C_ccall f_16044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16005)
static void C_ccall f_16005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15671)
static void C_fcall f_15671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15969)
static void C_ccall f_15969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15984)
static void C_ccall f_15984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15976)
static void C_ccall f_15976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15940)
static void C_ccall f_15940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15944)
static void C_ccall f_15944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15905)
static void C_ccall f_15905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15909)
static void C_ccall f_15909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15870)
static void C_ccall f_15870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15874)
static void C_ccall f_15874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15674)
static void C_fcall f_15674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15834)
static void C_ccall f_15834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15849)
static void C_ccall f_15849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15841)
static void C_ccall f_15841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15805)
static void C_ccall f_15805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15809)
static void C_ccall f_15809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15770)
static void C_ccall f_15770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15774)
static void C_ccall f_15774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15735)
static void C_ccall f_15735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15739)
static void C_ccall f_15739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15677)
static void C_fcall f_15677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15680)
static void C_ccall f_15680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15683)
static void C_ccall f_15683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15706)
static void C_ccall f_15706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15714)
static void C_ccall f_15714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15689)
static void C_ccall f_15689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15692)
static void C_ccall f_15692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15584)
static void C_fcall f_15584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15575)
static void C_fcall f_15575(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15503)
static void C_ccall f_15503(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15507)
static void C_ccall f_15507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15510)
static void C_fcall f_15510(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15248)
static void C_ccall f_15248(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15248)
static void C_ccall f_15248r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15252)
static void C_fcall f_15252(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15473)
static void C_ccall f_15473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15488)
static void C_ccall f_15488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15444)
static void C_ccall f_15444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15448)
static void C_ccall f_15448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15409)
static void C_ccall f_15409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15413)
static void C_ccall f_15413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15255)
static void C_fcall f_15255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15373)
static void C_ccall f_15373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15388)
static void C_ccall f_15388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15380)
static void C_ccall f_15380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15344)
static void C_ccall f_15344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15348)
static void C_ccall f_15348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15309)
static void C_ccall f_15309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15313)
static void C_ccall f_15313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15258)
static void C_fcall f_15258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15261)
static void C_ccall f_15261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15264)
static void C_ccall f_15264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15276)
static void C_ccall f_15276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15288)
static void C_ccall f_15288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15270)
static void C_ccall f_15270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15133)
static void C_fcall f_15133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15246)
static void C_ccall f_15246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15143)
static void C_ccall f_15143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15231)
static void C_ccall f_15231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15242)
static void C_ccall f_15242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15238)
static void C_ccall f_15238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15146)
static void C_ccall f_15146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15228)
static void C_ccall f_15228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15154)
static void C_ccall f_15154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15218)
static void C_ccall f_15218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15163)
static void C_ccall f_15163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15182)
static void C_ccall f_15182(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15211)
static void C_ccall f_15211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15192)
static void C_ccall f_15192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15207)
static void C_ccall f_15207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15195)
static void C_ccall f_15195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15166)
static void C_ccall f_15166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15176)
static void C_ccall f_15176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15157)
static void C_fcall f_15157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15160)
static void C_ccall f_15160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15087)
static void C_fcall f_15087(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15078)
static void C_fcall f_15078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14777)
static void C_fcall f_14777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14784)
static void C_ccall f_14784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15073)
static void C_ccall f_15073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14787)
static void C_ccall f_14787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15058)
static void C_ccall f_15058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15050)
static void C_ccall f_15050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15042)
static void C_ccall f_15042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15045)
static void C_ccall f_15045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15013)
static void C_fcall f_15013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15036)
static void C_ccall f_15036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15019)
static void C_fcall f_15019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14790)
static void C_ccall f_14790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14796)
static void C_ccall f_14796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14888)
static void C_ccall f_14888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15000)
static void C_ccall f_15000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15007)
static void C_ccall f_15007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14911)
static void C_fcall f_14911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14913)
static void C_fcall f_14913(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14962)
static void C_fcall f_14962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14997)
static void C_ccall f_14997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14986)
static void C_ccall f_14986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15131)
static void C_ccall f_15131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15106)
static void C_ccall f_15106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15127)
static void C_ccall f_15127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15123)
static void C_ccall f_15123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14979)
static void C_ccall f_14979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14972)
static void C_ccall f_14972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14920)
static void C_ccall f_14920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14960)
static void C_ccall f_14960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14924)
static void C_ccall f_14924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14956)
static void C_ccall f_14956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14943)
static void C_ccall f_14943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14951)
static void C_ccall f_14951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14947)
static void C_ccall f_14947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14927)
static void C_fcall f_14927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14930)
static void C_ccall f_14930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14904)
static void C_ccall f_14904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14891)
static void C_ccall f_14891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14900)
static void C_ccall f_14900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14895)
static void C_ccall f_14895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14802)
static void C_ccall f_14802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14882)
static void C_ccall f_14882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14862)
static void C_ccall f_14862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14868)
static void C_ccall f_14868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14879)
static void C_ccall f_14879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14859)
static void C_ccall f_14859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14847)
static void C_ccall f_14847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14850)
static void C_ccall f_14850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14805)
static void C_ccall f_14805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14841)
static void C_ccall f_14841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14836)
static void C_ccall f_14836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14808)
static void C_ccall f_14808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14821)
static void C_ccall f_14821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14811)
static void C_fcall f_14811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14814)
static void C_ccall f_14814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14817)
static void C_ccall f_14817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14654)
static void C_ccall f_14654(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14654)
static void C_ccall f_14654r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14713)
static void C_ccall f_14713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14723)
static void C_ccall f_14723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14725)
static void C_fcall f_14725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14754)
static void C_ccall f_14754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14759)
static void C_ccall f_14759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14744)
static void C_fcall f_14744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14675)
static void C_fcall f_14675(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14707)
static void C_ccall f_14707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14635)
static void C_ccall f_14635(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14642)
static void C_ccall f_14642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14649)
static void C_ccall f_14649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14616)
static void C_ccall f_14616(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14623)
static void C_ccall f_14623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14630)
static void C_ccall f_14630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14436)
static void C_fcall f_14436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_14440)
static void C_ccall f_14440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14443)
static void C_ccall f_14443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14446)
static void C_ccall f_14446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14449)
static void C_ccall f_14449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14606)
static void C_ccall f_14606(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14613)
static void C_ccall f_14613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14452)
static void C_ccall f_14452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14455)
static void C_fcall f_14455(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14461)
static void C_ccall f_14461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14467)
static void C_ccall f_14467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14530)
static void C_ccall f_14530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14544)
static void C_ccall f_14544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14470)
static void C_fcall f_14470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14473)
static void C_ccall f_14473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14479)
static void C_fcall f_14479(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14492)
static void C_ccall f_14492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14482)
static void C_ccall f_14482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14485)
static void C_ccall f_14485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14426)
static void C_fcall f_14426(C_word t0) C_noret;
C_noret_decl(f_14371)
static void C_fcall f_14371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14362)
static void C_fcall f_14362(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14245)
static void C_fcall f_14245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14236)
static void C_fcall f_14236(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14227)
static void C_ccall f_14227(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14218)
static void C_fcall f_14218(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14209)
static void C_fcall f_14209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14191)
static void C_fcall f_14191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14182)
static void C_fcall f_14182(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14173)
static void C_fcall f_14173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14155)
static void C_fcall f_14155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14146)
static void C_fcall f_14146(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14137)
static void C_fcall f_14137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14122)
static void C_fcall f_14122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14077)
static void C_fcall f_14077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14059)
static void C_fcall f_14059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14050)
static void C_fcall f_14050(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14023)
static void C_fcall f_14023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14005)
static void C_fcall f_14005(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13987)
static void C_fcall f_13987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13978)
static void C_fcall f_13978(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13966)
static void C_fcall f_13966(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_13365)
static void C_ccall f_13365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13433)
static void C_ccall f_13433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13436)
static void C_ccall f_13436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13439)
static void C_ccall f_13439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13442)
static void C_ccall f_13442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13445)
static void C_ccall f_13445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13543)
static void C_fcall f_13543(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13511)
static void C_fcall f_13511(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13521)
static void C_ccall f_13521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13462)
static void C_fcall f_13462(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13481)
static void C_fcall f_13481(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13491)
static void C_ccall f_13491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13472)
static void C_ccall f_13472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13448)
static void C_ccall f_13448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13401)
static void C_fcall f_13401(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13411)
static void C_ccall f_13411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13384)
static void C_fcall f_13384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13391)
static void C_ccall f_13391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13367)
static void C_fcall f_13367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13374)
static void C_ccall f_13374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13186)
static void C_ccall f_13186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13194)
static void C_ccall f_13194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13198)
static void C_ccall f_13198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13200)
static void C_fcall f_13200(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13210)
static void C_fcall f_13210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13290)
static void C_ccall f_13290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13293)
static void C_ccall f_13293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13304)
static void C_ccall f_13304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13256)
static void C_ccall f_13256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13225)
static void C_ccall f_13225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13228)
static void C_ccall f_13228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13213)
static void C_ccall f_13213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12867)
static void C_ccall f_12867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13184)
static void C_ccall f_13184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13113)
static void C_ccall f_13113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13115)
static void C_fcall f_13115(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7854)
static void C_ccall f_7854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13134)
static void C_ccall f_13134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13137)
static void C_fcall f_13137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12880)
static void C_ccall f_12880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12956)
static void C_fcall f_12956(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13109)
static void C_ccall f_13109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13093)
static void C_ccall f_13093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13045)
static void C_fcall f_13045(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13059)
static void C_fcall f_13059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13012)
static void C_ccall f_13012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12987)
static void C_fcall f_12987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12883)
static void C_ccall f_12883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12891)
static void C_fcall f_12891(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12924)
static void C_ccall f_12924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11394)
static void C_ccall f_11394(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11394)
static void C_ccall f_11394r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12844)
static void C_ccall f_12844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12859)
static void C_ccall f_12859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12851)
static void C_ccall f_12851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12815)
static void C_ccall f_12815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12819)
static void C_ccall f_12819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12780)
static void C_ccall f_12780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12784)
static void C_ccall f_12784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12745)
static void C_ccall f_12745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12749)
static void C_ccall f_12749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12710)
static void C_ccall f_12710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12714)
static void C_ccall f_12714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12675)
static void C_ccall f_12675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12679)
static void C_ccall f_12679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12640)
static void C_ccall f_12640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12644)
static void C_ccall f_12644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11398)
static void C_fcall f_11398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12604)
static void C_ccall f_12604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12619)
static void C_ccall f_12619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12611)
static void C_ccall f_12611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12575)
static void C_ccall f_12575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12579)
static void C_ccall f_12579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12540)
static void C_ccall f_12540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12544)
static void C_ccall f_12544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12505)
static void C_ccall f_12505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12509)
static void C_ccall f_12509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12470)
static void C_ccall f_12470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12474)
static void C_ccall f_12474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12435)
static void C_ccall f_12435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12439)
static void C_ccall f_12439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12400)
static void C_ccall f_12400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12404)
static void C_ccall f_12404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11401)
static void C_fcall f_11401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12364)
static void C_ccall f_12364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12379)
static void C_ccall f_12379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12371)
static void C_ccall f_12371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12335)
static void C_ccall f_12335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12339)
static void C_ccall f_12339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12300)
static void C_ccall f_12300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12304)
static void C_ccall f_12304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12265)
static void C_ccall f_12265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12269)
static void C_ccall f_12269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12230)
static void C_ccall f_12230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12234)
static void C_ccall f_12234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12195)
static void C_ccall f_12195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12199)
static void C_ccall f_12199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12160)
static void C_ccall f_12160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12164)
static void C_ccall f_12164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11404)
static void C_fcall f_11404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12124)
static void C_ccall f_12124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12139)
static void C_ccall f_12139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12131)
static void C_ccall f_12131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12095)
static void C_ccall f_12095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12099)
static void C_ccall f_12099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12060)
static void C_ccall f_12060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12064)
static void C_ccall f_12064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12025)
static void C_ccall f_12025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12029)
static void C_ccall f_12029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11990)
static void C_ccall f_11990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11994)
static void C_ccall f_11994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11955)
static void C_ccall f_11955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11959)
static void C_ccall f_11959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11920)
static void C_ccall f_11920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11924)
static void C_ccall f_11924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11407)
static void C_fcall f_11407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11884)
static void C_ccall f_11884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11899)
static void C_ccall f_11899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11891)
static void C_ccall f_11891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11855)
static void C_ccall f_11855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11859)
static void C_ccall f_11859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11820)
static void C_ccall f_11820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11824)
static void C_ccall f_11824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11789)
static void C_ccall f_11789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11750)
static void C_ccall f_11750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11754)
static void C_ccall f_11754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11715)
static void C_ccall f_11715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11719)
static void C_ccall f_11719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11680)
static void C_ccall f_11680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11684)
static void C_ccall f_11684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11410)
static void C_fcall f_11410(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11644)
static void C_ccall f_11644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11659)
static void C_ccall f_11659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11651)
static void C_ccall f_11651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11615)
static void C_ccall f_11615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11619)
static void C_ccall f_11619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11580)
static void C_ccall f_11580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11584)
static void C_ccall f_11584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11545)
static void C_ccall f_11545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11549)
static void C_ccall f_11549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11510)
static void C_ccall f_11510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11514)
static void C_ccall f_11514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11475)
static void C_ccall f_11475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11479)
static void C_ccall f_11479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11440)
static void C_ccall f_11440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11444)
static void C_ccall f_11444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11413)
static void C_fcall f_11413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11416)
static void C_ccall f_11416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11175)
static void C_fcall f_11175(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11184)
static void C_ccall f_11184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11188)
static void C_ccall f_11188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11375)
static void C_ccall f_11375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11360)
static void C_ccall f_11360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11325)
static void C_ccall f_11325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11305)
static void C_ccall f_11305(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11309)
static void C_ccall f_11309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11295)
static void C_ccall f_11295(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11303)
static void C_ccall f_11303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11262)
static void C_ccall f_11262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11257)
static void C_ccall f_11257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11194)
static void C_ccall f_11194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11230)
static void C_fcall f_11230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11205)
static void C_fcall f_11205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11146)
static void C_ccall f_11146(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11150)
static void C_ccall f_11150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11161)
static void C_ccall f_11161(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11159)
static void C_ccall f_11159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11115)
static void C_ccall f_11115(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11119)
static void C_ccall f_11119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11130)
static void C_ccall f_11130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11128)
static void C_ccall f_11128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11097)
static void C_ccall f_11097(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11105)
static void C_ccall f_11105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11113)
static void C_ccall f_11113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11087)
static void C_ccall f_11087(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11095)
static void C_ccall f_11095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11028)
static void C_ccall f_11028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11035)
static void C_ccall f_11035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11038)
static void C_ccall f_11038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11041)
static void C_ccall f_11041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11046)
static void C_fcall f_11046(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10978)
static void C_ccall f_10978(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10969)
static void C_fcall f_10969(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10960)
static void C_ccall f_10960(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10951)
static void C_fcall f_10951(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10942)
static void C_ccall f_10942(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10933)
static void C_fcall f_10933(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10924)
static void C_ccall f_10924(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10909)
static void C_fcall f_10909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10903)
static void C_ccall f_10903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10761)
static void C_ccall f_10761(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10761)
static void C_ccall f_10761r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10765)
static void C_fcall f_10765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10834)
static void C_ccall f_10834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10877)
static void C_ccall f_10877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10881)
static void C_ccall f_10881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10870)
static void C_ccall f_10870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10857)
static void C_ccall f_10857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10776)
static void C_ccall f_10776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10819)
static void C_ccall f_10819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10823)
static void C_ccall f_10823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10812)
static void C_ccall f_10812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10799)
static void C_ccall f_10799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10595)
static void C_ccall f_10595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10696)
static void C_ccall f_10696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10745)
static void C_ccall f_10745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10741)
static void C_ccall f_10741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10713)
static void C_ccall f_10713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10648)
static void C_fcall f_10648(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10657)
static void C_fcall f_10657(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10641)
static void C_ccall f_10641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10460)
static void C_ccall f_10460(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10586)
static void C_ccall f_10586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10582)
static void C_ccall f_10582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10560)
static void C_ccall f_10560(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10490)
static void C_fcall f_10490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10506)
static void C_fcall f_10506(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10415)
static void C_ccall f_10415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10458)
static void C_ccall f_10458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10447)
static void C_ccall f_10447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10299)
static void C_ccall f_10299(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10413)
static void C_ccall f_10413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10314)
static void C_fcall f_10314(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10344)
static void C_fcall f_10344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10363)
static void C_ccall f_10363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10348)
static void C_ccall f_10348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10327)
static void C_fcall f_10327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10177)
static void C_ccall f_10177(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10297)
static void C_ccall f_10297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10192)
static void C_fcall f_10192(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10222)
static void C_fcall f_10222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10241)
static void C_ccall f_10241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10226)
static void C_ccall f_10226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10205)
static void C_fcall f_10205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10080)
static void C_ccall f_10080(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10175)
static void C_ccall f_10175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10095)
static void C_fcall f_10095(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10141)
static void C_ccall f_10141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10126)
static void C_ccall f_10126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_fcall f_10108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10027)
static void C_fcall f_10027(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10065)
static void C_ccall f_10065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10072)
static void C_ccall f_10072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10050)
static void C_ccall f_10050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10025)
static void C_ccall f_10025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9997)
static void C_fcall f_9997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9999)
static void C_ccall f_9999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9977)
static void C_ccall f_9977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9925)
static void C_fcall f_9925(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9962)
static void C_ccall f_9962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9929)
static void C_ccall f_9929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9945)
static void C_ccall f_9945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9947)
static void C_ccall f_9947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9711)
static void C_ccall f_9711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9711)
static void C_ccall f_9711r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9724)
static void C_fcall f_9724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9806)
static void C_fcall f_9806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9809)
static void C_ccall f_9809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9817)
static void C_fcall f_9817(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9829)
static void C_fcall f_9829(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9850)
static void C_ccall f_9850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9858)
static void C_ccall f_9858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9745)
static void C_ccall f_9745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9750)
static void C_fcall f_9750(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9782)
static void C_ccall f_9782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9630)
static void C_ccall f_9630(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9630)
static void C_ccall f_9630r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9611)
static void C_ccall f_9611(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9611)
static void C_ccall f_9611r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9383)
static void C_ccall f_9383(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9383)
static void C_ccall f_9383r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9588)
static void C_ccall f_9588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9603)
static void C_ccall f_9603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9595)
static void C_ccall f_9595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9559)
static void C_ccall f_9559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9563)
static void C_ccall f_9563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9524)
static void C_ccall f_9524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9528)
static void C_ccall f_9528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9387)
static void C_fcall f_9387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9488)
static void C_ccall f_9488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9503)
static void C_ccall f_9503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9495)
static void C_ccall f_9495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9459)
static void C_ccall f_9459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9463)
static void C_ccall f_9463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9424)
static void C_ccall f_9424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9428)
static void C_ccall f_9428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9390)
static void C_fcall f_9390(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9393)
static void C_ccall f_9393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9396)
static void C_fcall f_9396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9341)
static void C_ccall f_9341(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9341)
static void C_ccall f_9341r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9370)
static void C_ccall f_9370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9355)
static void C_ccall f_9355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9286)
static void C_ccall f_9286(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9297)
static void C_ccall f_9297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9299)
static void C_fcall f_9299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9327)
static void C_ccall f_9327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9187)
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9187)
static void C_ccall f_9187r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9191)
static void C_fcall f_9191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9194)
static void C_ccall f_9194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9259)
static void C_ccall f_9259(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9196)
static void C_fcall f_9196(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9212)
static void C_ccall f_9212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8959)
static void C_ccall f_8959(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8959)
static void C_ccall f_8959r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9164)
static void C_ccall f_9164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9179)
static void C_ccall f_9179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9171)
static void C_ccall f_9171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9135)
static void C_ccall f_9135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9139)
static void C_ccall f_9139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9100)
static void C_ccall f_9100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9104)
static void C_ccall f_9104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8963)
static void C_fcall f_8963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9064)
static void C_ccall f_9064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9079)
static void C_ccall f_9079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_ccall f_9071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9035)
static void C_ccall f_9035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9039)
static void C_ccall f_9039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9000)
static void C_ccall f_9000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9004)
static void C_ccall f_9004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8966)
static void C_fcall f_8966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8969)
static void C_ccall f_8969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8979)
static void C_ccall f_8979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8916)
static void C_ccall f_8916(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8916)
static void C_ccall f_8916r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8949)
static void C_ccall f_8949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8934)
static void C_ccall f_8934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8895)
static void C_ccall f_8895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8860)
static void C_ccall f_8860(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8860)
static void C_ccall f_8860r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8864)
static void C_fcall f_8864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8752)
static void C_ccall f_8752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8752)
static void C_ccall f_8752r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8839)
static void C_ccall f_8839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8759)
static void C_fcall f_8759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8768)
static void C_fcall f_8768(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8815)
static void C_ccall f_8815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8781)
static void C_fcall f_8781(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8807)
static void C_ccall f_8807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8619)
static void C_ccall f_8619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8619)
static void C_ccall f_8619r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8623)
static void C_fcall f_8623(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8626)
static void C_fcall f_8626(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8730)
static void C_ccall f_8730(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8628)
static void C_fcall f_8628(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8635)
static void C_ccall f_8635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8677)
static void C_ccall f_8677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8684)
static void C_ccall f_8684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8658)
static void C_ccall f_8658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8552)
static void C_ccall f_8552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8552)
static void C_ccall f_8552r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8556)
static void C_fcall f_8556(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8602)
static void C_ccall f_8602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8559)
static void C_fcall f_8559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8595)
static void C_ccall f_8595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8562)
static void C_fcall f_8562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8575)
static void C_ccall f_8575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8506)
static void C_ccall f_8506(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8506)
static void C_ccall f_8506r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8510)
static void C_ccall f_8510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8420)
static void C_fcall f_8420(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8424)
static void C_ccall f_8424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8427)
static void C_ccall f_8427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8436)
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8458)
static void C_ccall f_8458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8405)
static void C_ccall f_8405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8390)
static void C_ccall f_8390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8367)
static void C_ccall f_8367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8382)
static void C_ccall f_8382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8374)
static void C_ccall f_8374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8338)
static void C_ccall f_8338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8342)
static void C_ccall f_8342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8303)
static void C_ccall f_8303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8307)
static void C_ccall f_8307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8158)
static void C_fcall f_8158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8282)
static void C_ccall f_8282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8274)
static void C_ccall f_8274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8238)
static void C_ccall f_8238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8242)
static void C_ccall f_8242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8203)
static void C_ccall f_8203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8207)
static void C_ccall f_8207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8161)
static void C_fcall f_8161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8164)
static void C_ccall f_8164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8175)
static void C_ccall f_8175(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8118)
static void C_ccall f_8118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8148)
static void C_ccall f_8148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8129)
static void C_ccall f_8129(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8137)
static void C_ccall f_8137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8093)
static void C_ccall f_8093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8105)
static void C_ccall f_8105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8025)
static void C_ccall f_8025(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8025)
static void C_ccall f_8025r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8010)
static void C_ccall f_8010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7899)
static void C_ccall f_7899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7899)
static void C_ccall f_7899r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_7974)
static void C_ccall f_7974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7903)
static void C_fcall f_7903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7943)
static void C_ccall f_7943(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7932)
static void C_ccall f_7932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7917)
static void C_ccall f_7917(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7925)
static void C_ccall f_7925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7865)
static void C_ccall f_7865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7865)
static void C_ccall f_7865r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7877)
static void C_ccall f_7877(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7846)
static void C_ccall f_7846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7843)
static void C_ccall f_7843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7836)
static void C_fcall f_7836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7833)
static void C_ccall f_7833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7826)
static void C_fcall f_7826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7808)
static void C_fcall f_7808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7797)
static void C_fcall f_7797(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7794)
static void C_ccall f_7794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7791)
static void C_ccall f_7791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7788)
static void C_ccall f_7788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7759)
static void C_fcall f_7759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7752)
static void C_fcall f_7752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7749)
static void C_ccall f_7749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7728)
static void C_fcall f_7728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7709)
static void C_ccall f_7709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7690)
static void C_ccall f_7690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7683)
static void C_ccall f_7683(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7676)
static void C_ccall f_7676(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7661)
static void C_fcall f_7661(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7650)
static void C_fcall f_7650(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7643)
static void C_ccall f_7643(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7616)
static void C_fcall f_7616(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7589)
static void C_fcall f_7589(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7548)
static void C_fcall f_7548(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7554)
static void C_fcall f_7554(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7564)
static void C_fcall f_7564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7462)
static void C_ccall f_7462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7462)
static void C_ccall f_7462r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7423)
static void C_ccall f_7423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7429)
static void C_fcall f_7429(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7452)
static void C_ccall f_7452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7442)
static void C_fcall f_7442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7384)
static void C_ccall f_7384(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7390)
static void C_fcall f_7390(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7410)
static void C_ccall f_7410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7400)
static void C_fcall f_7400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7344)
static void C_ccall f_7344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7350)
static void C_fcall f_7350(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7374)
static void C_ccall f_7374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7360)
static void C_fcall f_7360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7245)
static void C_ccall f_7245(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7245)
static void C_ccall f_7245r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7249)
static void C_ccall f_7249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7274)
static void C_fcall f_7274(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7291)
static void C_ccall f_7291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7295)
static void C_ccall f_7295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7251)
static void C_fcall f_7251(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7268)
static void C_ccall f_7268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7184)
static void C_ccall f_7184(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7197)
static void C_fcall f_7197(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7174)
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7134)
static void C_ccall f_7134(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7134)
static void C_ccall f_7134r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7164)
static void C_ccall f_7164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7044)
static void C_ccall f_7044(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6996)
static void C_ccall f_6996(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7030)
static void C_ccall f_7030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6973)
static void C_ccall f_6973(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6952)
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6938)
static void C_ccall f_6938(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6928)
static void C_ccall f_6928(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6918)
static void C_ccall f_6918(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6908)
static void C_ccall f_6908(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6898)
static void C_ccall f_6898(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6869)
static void C_ccall f_6869(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6869)
static void C_ccall f_6869r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6878)
static void C_ccall f_6878(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6883)
static void C_ccall f_6883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6858)
static void C_ccall f_6858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6863)
static void C_ccall f_6863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6565)
static void C_ccall f_6565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6575)
static void C_ccall f_6575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6826)
static void C_ccall f_6826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6578)
static void C_ccall f_6578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6581)
static void C_ccall f_6581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6596)
static void C_fcall f_6596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6606)
static void C_ccall f_6606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6608)
static void C_fcall f_6608(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6667)
static void C_ccall f_6667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6677)
static void C_ccall f_6677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6794)
static void C_ccall f_6794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6782)
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6780)
static void C_ccall f_6780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6767)
static void C_ccall f_6767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6721)
static void C_ccall f_6721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6748)
static void C_ccall f_6748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6727)
static void C_ccall f_6727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6661)
static void C_fcall f_6661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6620)
static void C_fcall f_6620(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6633)
static void C_fcall f_6633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6843)
static void C_ccall f_6843(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6834)
static void C_ccall f_6834(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6842)
static void C_ccall f_6842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6853)
static void C_ccall f_6853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6267)
static void C_ccall f_6267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6553)
static void C_ccall f_6553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6549)
static void C_ccall f_6549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6538)
static void C_ccall f_6538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6534)
static void C_ccall f_6534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6428)
static void C_ccall f_6428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6431)
static void C_ccall f_6431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6434)
static void C_ccall f_6434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6514)
static void C_ccall f_6514(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6339)
static void C_ccall f_6339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6280)
static void C_ccall f_6280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6437)
static void C_ccall f_6437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6444)
static void C_ccall f_6444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6504)
static void C_ccall f_6504(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6490)
static void C_ccall f_6490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6456)
static void C_ccall f_6456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6482)
static void C_ccall f_6482(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6417)
static void C_ccall f_6417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6464)
static void C_ccall f_6464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6460)
static void C_ccall f_6460(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_39477)
static void C_fcall trf_39477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39477(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39477(t0,t1,t2);}

C_noret_decl(trf_39537)
static void C_fcall trf_39537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39537(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_39537(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_39557)
static void C_fcall trf_39557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39557(t0,t1);}

C_noret_decl(trf_39560)
static void C_fcall trf_39560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39560(t0,t1);}

C_noret_decl(trf_39417)
static void C_fcall trf_39417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39417(t0,t1);}

C_noret_decl(trf_39339)
static void C_fcall trf_39339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39339(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39339(t0,t1,t2);}

C_noret_decl(trf_39151)
static void C_fcall trf_39151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39151(t0,t1);}

C_noret_decl(trf_38033)
static void C_fcall trf_38033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38033(t0,t1);}

C_noret_decl(trf_37906)
static void C_fcall trf_37906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37906(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37906(t0,t1,t2);}

C_noret_decl(trf_37590)
static void C_fcall trf_37590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37590(t0,t1);}

C_noret_decl(trf_36685)
static void C_fcall trf_36685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36685(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36685(t0,t1,t2);}

C_noret_decl(trf_36720)
static void C_fcall trf_36720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36720(t0,t1);}

C_noret_decl(trf_36744)
static void C_fcall trf_36744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36744(t0,t1);}

C_noret_decl(trf_36723)
static void C_fcall trf_36723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36723(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36723(t0,t1);}

C_noret_decl(trf_36526)
static void C_fcall trf_36526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36526(t0,t1);}

C_noret_decl(trf_36344)
static void C_fcall trf_36344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36344(t0,t1);}

C_noret_decl(trf_36351)
static void C_fcall trf_36351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36351(t0,t1);}

C_noret_decl(trf_36332)
static void C_fcall trf_36332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36332(t0,t1);}

C_noret_decl(trf_24244)
static void C_fcall trf_24244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24244(t0,t1);}

C_noret_decl(trf_24251)
static void C_fcall trf_24251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24251(t0,t1);}

C_noret_decl(trf_24549)
static void C_fcall trf_24549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24549(t0,t1,t2);}

C_noret_decl(trf_24572)
static void C_fcall trf_24572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24572(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24572(t0,t1,t2);}

C_noret_decl(trf_24589)
static void C_fcall trf_24589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24589(t0,t1);}

C_noret_decl(trf_24592)
static void C_fcall trf_24592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24592(t0,t1);}

C_noret_decl(trf_24595)
static void C_fcall trf_24595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24595(t0,t1);}

C_noret_decl(trf_24513)
static void C_fcall trf_24513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24513(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24513(t0,t1,t2);}

C_noret_decl(trf_24457)
static void C_fcall trf_24457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24457(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24457(t0,t1,t2);}

C_noret_decl(trf_24473)
static void C_fcall trf_24473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24473(t0,t1);}

C_noret_decl(trf_24267)
static void C_fcall trf_24267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24267(t0,t1);}

C_noret_decl(trf_24270)
static void C_fcall trf_24270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24270(t0,t1);}

C_noret_decl(trf_35841)
static void C_fcall trf_35841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35841(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35841(t0,t1);}

C_noret_decl(trf_35844)
static void C_fcall trf_35844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35844(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35844(t0,t1);}

C_noret_decl(trf_35687)
static void C_fcall trf_35687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35687(t0,t1);}

C_noret_decl(trf_35495)
static void C_fcall trf_35495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35495(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35495(t0,t1);}

C_noret_decl(trf_35345)
static void C_fcall trf_35345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35345(t0,t1);}

C_noret_decl(trf_35434)
static void C_fcall trf_35434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35434(t0,t1);}

C_noret_decl(trf_35348)
static void C_fcall trf_35348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35348(t0,t1);}

C_noret_decl(trf_35364)
static void C_fcall trf_35364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35364(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35364(t0,t1,t2,t3);}

C_noret_decl(trf_35386)
static void C_fcall trf_35386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35386(t0,t1);}

C_noret_decl(trf_35281)
static void C_fcall trf_35281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35281(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35281(t0,t1,t2);}

C_noret_decl(trf_35228)
static void C_fcall trf_35228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35228(t0,t1);}

C_noret_decl(trf_28664)
static void C_fcall trf_28664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28664(t0,t1);}

C_noret_decl(trf_28526)
static void C_fcall trf_28526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28526(t0,t1);}

C_noret_decl(trf_28740)
static void C_fcall trf_28740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28740(t0,t1);}

C_noret_decl(trf_34832)
static void C_fcall trf_34832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34832(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34832(t0,t1,t2);}

C_noret_decl(trf_34860)
static void C_fcall trf_34860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34860(t0,t1);}

C_noret_decl(trf_34563)
static void C_fcall trf_34563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34563(t0,t1);}

C_noret_decl(trf_34727)
static void C_fcall trf_34727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34727(t0,t1);}

C_noret_decl(trf_34576)
static void C_fcall trf_34576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34576(t0,t1);}

C_noret_decl(trf_34811)
static void C_fcall trf_34811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34811(t0,t1);}

C_noret_decl(trf_34501)
static void C_fcall trf_34501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34501(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34501(t0,t1,t2);}

C_noret_decl(trf_34442)
static void C_fcall trf_34442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34442(t0,t1);}

C_noret_decl(trf_34378)
static void C_fcall trf_34378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34378(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34378(t0,t1,t2);}

C_noret_decl(trf_34298)
static void C_fcall trf_34298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34298(t0,t1);}

C_noret_decl(trf_34224)
static void C_fcall trf_34224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34224(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34224(t0,t1);}

C_noret_decl(trf_34219)
static void C_fcall trf_34219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34219(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34219(t0,t1,t2);}

C_noret_decl(trf_34099)
static void C_fcall trf_34099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34099(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34099(t0,t1,t2,t3);}

C_noret_decl(trf_34170)
static void C_fcall trf_34170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34170(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34170(t0,t1,t2);}

C_noret_decl(trf_34129)
static void C_fcall trf_34129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34129(t0,t1);}

C_noret_decl(trf_34101)
static void C_fcall trf_34101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34101(t0,t1);}

C_noret_decl(trf_34056)
static void C_fcall trf_34056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34056(t0,t1);}

C_noret_decl(trf_34012)
static void C_fcall trf_34012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34012(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34012(t0,t1,t2,t3);}

C_noret_decl(trf_34003)
static void C_fcall trf_34003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34003(t0,t1);}

C_noret_decl(trf_33833)
static void C_fcall trf_33833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33833(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_33833(t0,t1,t2,t3,t4);}

C_noret_decl(trf_33862)
static void C_fcall trf_33862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33862(t0,t1,t2);}

C_noret_decl(trf_33899)
static void C_fcall trf_33899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33899(t0,t1);}

C_noret_decl(trf_33729)
static void C_fcall trf_33729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33729(t0,t1);}

C_noret_decl(trf_33709)
static void C_fcall trf_33709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33709(t0,t1);}

C_noret_decl(trf_33672)
static void C_fcall trf_33672(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33672(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33672(t0,t1);}

C_noret_decl(trf_33652)
static void C_fcall trf_33652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33652(t0,t1);}

C_noret_decl(trf_32487)
static void C_fcall trf_32487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32487(t0,t1);}

C_noret_decl(trf_32490)
static void C_fcall trf_32490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32490(t0,t1);}

C_noret_decl(trf_32493)
static void C_fcall trf_32493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32493(t0,t1);}

C_noret_decl(trf_32017)
static void C_fcall trf_32017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32017(t0,t1);}

C_noret_decl(trf_32020)
static void C_fcall trf_32020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32020(t0,t1);}

C_noret_decl(trf_32023)
static void C_fcall trf_32023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32023(t0,t1);}

C_noret_decl(trf_31547)
static void C_fcall trf_31547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31547(t0,t1);}

C_noret_decl(trf_31550)
static void C_fcall trf_31550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31550(t0,t1);}

C_noret_decl(trf_31553)
static void C_fcall trf_31553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31553(t0,t1);}

C_noret_decl(trf_30799)
static void C_fcall trf_30799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30799(t0,t1);}

C_noret_decl(trf_30802)
static void C_fcall trf_30802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30802(t0,t1);}

C_noret_decl(trf_30805)
static void C_fcall trf_30805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30805(t0,t1);}

C_noret_decl(trf_30808)
static void C_fcall trf_30808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30808(t0,t1);}

C_noret_decl(trf_30051)
static void C_fcall trf_30051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30051(t0,t1);}

C_noret_decl(trf_30054)
static void C_fcall trf_30054(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30054(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30054(t0,t1);}

C_noret_decl(trf_30057)
static void C_fcall trf_30057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30057(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30057(t0,t1);}

C_noret_decl(trf_30060)
static void C_fcall trf_30060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30060(t0,t1);}

C_noret_decl(trf_29581)
static void C_fcall trf_29581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29581(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29581(t0,t1);}

C_noret_decl(trf_29584)
static void C_fcall trf_29584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29584(t0,t1);}

C_noret_decl(trf_29587)
static void C_fcall trf_29587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29587(t0,t1);}

C_noret_decl(trf_28833)
static void C_fcall trf_28833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28833(t0,t1);}

C_noret_decl(trf_28836)
static void C_fcall trf_28836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28836(t0,t1);}

C_noret_decl(trf_28839)
static void C_fcall trf_28839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28839(t0,t1);}

C_noret_decl(trf_28842)
static void C_fcall trf_28842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28842(t0,t1);}

C_noret_decl(trf_28491)
static void C_fcall trf_28491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28491(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28491(t0,t1,t2,t3);}

C_noret_decl(trf_28331)
static void C_fcall trf_28331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28331(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28331(t0,t1);}

C_noret_decl(trf_28366)
static void C_fcall trf_28366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28366(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28366(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28376)
static void C_fcall trf_28376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28376(t0,t1);}

C_noret_decl(trf_28339)
static void C_fcall trf_28339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28339(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28339(t0,t1,t2);}

C_noret_decl(trf_28499)
static void C_fcall trf_28499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28499(t0,t1);}

C_noret_decl(trf_28117)
static void C_fcall trf_28117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28117(t0,t1);}

C_noret_decl(trf_28123)
static void C_fcall trf_28123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28123(t0,t1);}

C_noret_decl(trf_28146)
static void C_fcall trf_28146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28146(t0,t1);}

C_noret_decl(trf_28159)
static void C_fcall trf_28159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28159(t0,t1);}

C_noret_decl(trf_28133)
static void C_fcall trf_28133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28133(t0,t1);}

C_noret_decl(trf_27946)
static void C_fcall trf_27946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27946(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27946(t0,t1,t2,t3);}

C_noret_decl(trf_27955)
static void C_fcall trf_27955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27955(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27955(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27909)
static void C_fcall trf_27909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27909(t0,t1);}

C_noret_decl(trf_27772)
static void C_fcall trf_27772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27772(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27772(t0,t1);}

C_noret_decl(trf_27702)
static void C_fcall trf_27702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27702(t0,t1);}

C_noret_decl(trf_27063)
static void C_fcall trf_27063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27063(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27063(t0,t1,t2);}

C_noret_decl(trf_27023)
static void C_fcall trf_27023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27023(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27023(t0,t1,t2);}

C_noret_decl(trf_27036)
static void C_fcall trf_27036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27036(t0,t1);}

C_noret_decl(trf_27615)
static void C_fcall trf_27615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27615(t0,t1);}

C_noret_decl(trf_27405)
static void C_fcall trf_27405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27405(t0,t1);}

C_noret_decl(trf_27521)
static void C_fcall trf_27521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27521(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27521(t0,t1);}

C_noret_decl(trf_27408)
static void C_fcall trf_27408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27408(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27408(t0,t1);}

C_noret_decl(trf_27411)
static void C_fcall trf_27411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27411(t0,t1);}

C_noret_decl(trf_27316)
static void C_fcall trf_27316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27316(t0,t1);}

C_noret_decl(trf_27231)
static void C_fcall trf_27231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27231(t0,t1);}

C_noret_decl(trf_27188)
static void C_fcall trf_27188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27188(t0,t1);}

C_noret_decl(trf_27155)
static void C_fcall trf_27155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27155(t0,t1);}

C_noret_decl(trf_27150)
static void C_fcall trf_27150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27150(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27150(t0,t1);}

C_noret_decl(trf_27145)
static void C_fcall trf_27145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27145(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27145(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26892)
static void C_fcall trf_26892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26892(t0,t1);}

C_noret_decl(trf_26739)
static void C_fcall trf_26739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26739(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26739(t0,t1,t2,t3);}

C_noret_decl(trf_26585)
static void C_fcall trf_26585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26585(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26585(t0,t1,t2);}

C_noret_decl(trf_26427)
static void C_fcall trf_26427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26427(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26427(t0,t1,t2);}

C_noret_decl(trf_26460)
static void C_fcall trf_26460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26460(t0,t1);}

C_noret_decl(trf_26367)
static void C_fcall trf_26367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26367(t0,t1);}

C_noret_decl(trf_26332)
static void C_fcall trf_26332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26332(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26332(t0,t1);}

C_noret_decl(trf_26348)
static void C_fcall trf_26348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26348(t0,t1);}

C_noret_decl(trf_26303)
static void C_fcall trf_26303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26303(t0,t1);}

C_noret_decl(trf_26210)
static void C_fcall trf_26210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26210(t0,t1);}

C_noret_decl(trf_25966)
static void C_fcall trf_25966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25966(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25966(t0,t1,t2);}

C_noret_decl(trf_25770)
static void C_fcall trf_25770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25770(t0,t1);}

C_noret_decl(trf_25933)
static void C_fcall trf_25933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25933(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25933(t0,t1);}

C_noret_decl(trf_25773)
static void C_fcall trf_25773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25773(t0,t1);}

C_noret_decl(trf_25776)
static void C_fcall trf_25776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25776(t0,t1);}

C_noret_decl(trf_25779)
static void C_fcall trf_25779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25779(t0,t1);}

C_noret_decl(trf_25821)
static void C_fcall trf_25821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25821(t0,t1);}

C_noret_decl(trf_25786)
static void C_fcall trf_25786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25786(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25786(t0,t1);}

C_noret_decl(trf_25515)
static void C_fcall trf_25515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25515(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25515(t0,t1,t2,t3);}

C_noret_decl(trf_25523)
static void C_fcall trf_25523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25523(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25523(t0,t1,t2,t3);}

C_noret_decl(trf_25652)
static void C_fcall trf_25652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25652(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25652(t0,t1,t2);}

C_noret_decl(trf_25606)
static void C_fcall trf_25606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25606(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25606(t0,t1,t2);}

C_noret_decl(trf_25509)
static void C_fcall trf_25509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25509(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25509(t0,t1,t2);}

C_noret_decl(trf_25503)
static void C_fcall trf_25503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25503(t0,t1);}

C_noret_decl(trf_25497)
static void C_fcall trf_25497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25497(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25497(t0,t1,t2);}

C_noret_decl(trf_25426)
static void C_fcall trf_25426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25426(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25426(t0,t1,t2);}

C_noret_decl(trf_25428)
static void C_fcall trf_25428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25428(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25428(t0,t1,t2);}

C_noret_decl(trf_25434)
static void C_fcall trf_25434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25434(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25434(t0,t1,t2);}

C_noret_decl(trf_25275)
static void C_fcall trf_25275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25275(t0,t1);}

C_noret_decl(trf_25290)
static void C_fcall trf_25290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25290(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25290(t0,t1,t2);}

C_noret_decl(trf_25233)
static void C_fcall trf_25233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25233(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25233(t0,t1,t2);}

C_noret_decl(trf_25173)
static void C_fcall trf_25173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25173(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25173(t0,t1,t2);}

C_noret_decl(trf_25049)
static void C_fcall trf_25049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25049(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25049(t0,t1,t2);}

C_noret_decl(trf_24925)
static void C_fcall trf_24925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24925(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24925(t0,t1,t2,t3);}

C_noret_decl(trf_24961)
static void C_fcall trf_24961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24961(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24961(t0,t1,t2);}

C_noret_decl(trf_24757)
static void C_fcall trf_24757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24757(t0,t1);}

C_noret_decl(trf_22589)
static void C_fcall trf_22589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22589(t0,t1);}

C_noret_decl(trf_24891)
static void C_fcall trf_24891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24891(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24891(t0,t1,t2);}

C_noret_decl(trf_24901)
static void C_fcall trf_24901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24901(t0,t1);}

C_noret_decl(trf_24861)
static void C_fcall trf_24861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24861(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24861(t0,t1,t2);}

C_noret_decl(trf_24871)
static void C_fcall trf_24871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24871(t0,t1);}

C_noret_decl(trf_23931)
static void C_fcall trf_23931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23931(t0,t1);}

C_noret_decl(trf_23934)
static void C_fcall trf_23934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23934(t0,t1);}

C_noret_decl(trf_23937)
static void C_fcall trf_23937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23937(t0,t1);}

C_noret_decl(trf_23940)
static void C_fcall trf_23940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23940(t0,t1);}

C_noret_decl(trf_23943)
static void C_fcall trf_23943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23943(t0,t1);}

C_noret_decl(trf_23946)
static void C_fcall trf_23946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23946(t0,t1);}

C_noret_decl(trf_23774)
static void C_fcall trf_23774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23774(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23774(t0,t1);}

C_noret_decl(trf_23703)
static void C_fcall trf_23703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23703(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23703(t0,t1);}

C_noret_decl(trf_23518)
static void C_fcall trf_23518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23518(t0,t1);}

C_noret_decl(trf_23530)
static void C_fcall trf_23530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23530(t0,t1);}

C_noret_decl(trf_23567)
static void C_fcall trf_23567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23567(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_23567(t0,t1,t2,t3,t4);}

C_noret_decl(trf_23602)
static void C_fcall trf_23602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23602(t0,t1);}

C_noret_decl(trf_23497)
static void C_fcall trf_23497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23497(t0,t1);}

C_noret_decl(trf_23432)
static void C_fcall trf_23432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23432(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23432(t0,t1,t2);}

C_noret_decl(trf_23441)
static void C_fcall trf_23441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23441(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23441(t0,t1,t2);}

C_noret_decl(trf_23454)
static void C_fcall trf_23454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23454(t0,t1);}

C_noret_decl(trf_23388)
static void C_fcall trf_23388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23388(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23388(t0,t1,t2);}

C_noret_decl(trf_23376)
static void C_fcall trf_23376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23376(t0,t1);}

C_noret_decl(trf_23274)
static void C_fcall trf_23274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23274(t0,t1);}

C_noret_decl(trf_23226)
static void C_fcall trf_23226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23226(t0,t1);}

C_noret_decl(trf_22607)
static void C_fcall trf_22607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22607(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_22607(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_22617)
static void C_fcall trf_22617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22617(t0,t1);}

C_noret_decl(trf_22746)
static void C_fcall trf_22746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22746(t0,t1);}

C_noret_decl(trf_22834)
static void C_fcall trf_22834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22834(t0,t1);}

C_noret_decl(trf_22907)
static void C_fcall trf_22907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22907(t0,t1);}

C_noret_decl(trf_22985)
static void C_fcall trf_22985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22985(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22985(t0,t1);}

C_noret_decl(trf_22936)
static void C_fcall trf_22936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22936(t0,t1);}

C_noret_decl(trf_22952)
static void C_fcall trf_22952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22952(t0,t1);}

C_noret_decl(trf_22916)
static void C_fcall trf_22916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22916(t0,t1);}

C_noret_decl(trf_22858)
static void C_fcall trf_22858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22858(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22858(t0,t1,t2);}

C_noret_decl(trf_22777)
static void C_fcall trf_22777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22777(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22777(t0,t1,t2);}

C_noret_decl(trf_22793)
static void C_fcall trf_22793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22793(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22793(t0,t1);}

C_noret_decl(trf_22761)
static void C_fcall trf_22761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22761(t0,t1);}

C_noret_decl(trf_22503)
static void C_fcall trf_22503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22503(t0,t1);}

C_noret_decl(trf_22512)
static void C_fcall trf_22512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22512(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22512(t0,t1);}

C_noret_decl(trf_22517)
static void C_fcall trf_22517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22517(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22517(t0,t1,t2);}

C_noret_decl(trf_22495)
static void C_fcall trf_22495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22495(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22495(t0,t1);}

C_noret_decl(trf_22287)
static void C_fcall trf_22287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22287(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22287(t0,t1,t2,t3);}

C_noret_decl(trf_22254)
static void C_fcall trf_22254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22254(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22254(t0,t1,t2,t3);}

C_noret_decl(trf_22236)
static void C_fcall trf_22236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22236(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22236(t0,t1,t2,t3);}

C_noret_decl(trf_22226)
static void C_fcall trf_22226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22226(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22226(t0,t1,t2,t3);}

C_noret_decl(trf_22214)
static void C_fcall trf_22214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22214(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22214(t0,t1,t2);}

C_noret_decl(trf_22182)
static void C_fcall trf_22182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22182(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22182(t0,t1,t2);}

C_noret_decl(trf_22166)
static void C_fcall trf_22166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22166(t0,t1);}

C_noret_decl(trf_22154)
static void C_fcall trf_22154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22154(t0,t1);}

C_noret_decl(trf_22136)
static void C_fcall trf_22136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22136(t0,t1);}

C_noret_decl(trf_22118)
static void C_fcall trf_22118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22118(t0,t1);}

C_noret_decl(trf_22103)
static void C_fcall trf_22103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22103(t0,t1);}

C_noret_decl(trf_22097)
static void C_fcall trf_22097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22097(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22097(t0,t1,t2,t3);}

C_noret_decl(trf_22085)
static void C_fcall trf_22085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22085(t0,t1);}

C_noret_decl(trf_22067)
static void C_fcall trf_22067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22067(t0,t1);}

C_noret_decl(trf_22046)
static void C_fcall trf_22046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22046(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22046(t0,t1,t2);}

C_noret_decl(trf_22014)
static void C_fcall trf_22014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22014(t0,t1);}

C_noret_decl(trf_21956)
static void C_fcall trf_21956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21956(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21956(t0,t1,t2);}

C_noret_decl(trf_21946)
static void C_fcall trf_21946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21946(t0,t1);}

C_noret_decl(trf_21940)
static void C_fcall trf_21940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21940(t0,t1);}

C_noret_decl(trf_21928)
static void C_fcall trf_21928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21928(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21928(t0,t1);}

C_noret_decl(trf_21904)
static void C_fcall trf_21904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21904(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21904(t0,t1,t2);}

C_noret_decl(trf_21817)
static void C_fcall trf_21817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21817(t0,t1);}

C_noret_decl(trf_21796)
static void C_fcall trf_21796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21796(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21796(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21786)
static void C_fcall trf_21786(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21786(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21786(t0,t1);}

C_noret_decl(trf_21774)
static void C_fcall trf_21774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21774(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21774(t0,t1);}

C_noret_decl(trf_21733)
static void C_fcall trf_21733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21733(t0,t1);}

C_noret_decl(trf_21715)
static void C_fcall trf_21715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21715(t0,t1);}

C_noret_decl(trf_21697)
static void C_fcall trf_21697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21697(t0,t1);}

C_noret_decl(trf_20664)
static void C_fcall trf_20664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20664(t0,t1);}

C_noret_decl(trf_20667)
static void C_fcall trf_20667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20667(t0,t1);}

C_noret_decl(trf_21382)
static void C_fcall trf_21382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21382(t0,t1,t2);}

C_noret_decl(trf_21405)
static void C_fcall trf_21405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21405(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21405(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21440)
static void C_fcall trf_21440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21440(t0,t1);}

C_noret_decl(trf_21344)
static void C_fcall trf_21344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21344(t0,t1);}

C_noret_decl(trf_20872)
static void C_fcall trf_20872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20872(t0,t1);}

C_noret_decl(trf_21215)
static void C_fcall trf_21215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21215(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21215(t0,t1,t2,t3);}

C_noret_decl(trf_21301)
static void C_fcall trf_21301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21301(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21301(t0,t1,t2,t3);}

C_noret_decl(trf_21258)
static void C_fcall trf_21258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21258(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21258(t0,t1,t2);}

C_noret_decl(trf_21182)
static void C_fcall trf_21182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21182(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21182(t0,t1,t2);}

C_noret_decl(trf_21120)
static void C_fcall trf_21120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21120(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21120(t0,t1,t2);}

C_noret_decl(trf_21155)
static void C_fcall trf_21155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21155(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21155(t0,t1,t2,t3);}

C_noret_decl(trf_20940)
static void C_fcall trf_20940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20940(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20940(t0,t1,t2);}

C_noret_decl(trf_20836)
static void C_fcall trf_20836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20836(t0,t1,t2);}

C_noret_decl(trf_21093)
static void C_fcall trf_21093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21093(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21093(t0,t1,t2,t3);}

C_noret_decl(trf_21066)
static void C_fcall trf_21066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21066(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21066(t0,t1,t2,t3);}

C_noret_decl(trf_20977)
static void C_fcall trf_20977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20977(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20977(t0,t1,t2);}

C_noret_decl(trf_21027)
static void C_fcall trf_21027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21027(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21027(t0,t1,t2,t3);}

C_noret_decl(trf_20759)
static void C_fcall trf_20759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20759(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20759(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20677)
static void C_fcall trf_20677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20677(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20677(t0,t1,t2,t3);}

C_noret_decl(trf_20598)
static void C_fcall trf_20598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20598(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20598(t0,t1,t2);}

C_noret_decl(trf_20623)
static void C_fcall trf_20623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20623(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20623(t0,t1);}

C_noret_decl(trf_20326)
static void C_fcall trf_20326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20326(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20326(t0,t1);}

C_noret_decl(trf_20329)
static void C_fcall trf_20329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20329(t0,t1);}

C_noret_decl(trf_20335)
static void C_fcall trf_20335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20335(t0,t1);}

C_noret_decl(trf_20049)
static void C_fcall trf_20049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20049(t0,t1);}

C_noret_decl(trf_20052)
static void C_fcall trf_20052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20052(t0,t1);}

C_noret_decl(trf_19979)
static void C_fcall trf_19979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19979(t0,t1);}

C_noret_decl(trf_19827)
static void C_fcall trf_19827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19827(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19827(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19752)
static void C_fcall trf_19752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19752(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19752(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19762)
static void C_fcall trf_19762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19762(t0,t1);}

C_noret_decl(trf_19769)
static void C_fcall trf_19769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19769(t0,t1);}

C_noret_decl(trf_19864)
static void C_fcall trf_19864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19864(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19864(t0,t1,t2);}

C_noret_decl(trf_19642)
static void C_fcall trf_19642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19642(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19642(t0,t1,t2,t3);}

C_noret_decl(trf_19654)
static void C_fcall trf_19654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19654(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19654(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19715)
static void C_fcall trf_19715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19715(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19715(t0,t1,t2);}

C_noret_decl(trf_19079)
static void C_fcall trf_19079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19079(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19079(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19015)
static void C_fcall trf_19015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19015(t0,t1);}

C_noret_decl(trf_18962)
static void C_fcall trf_18962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18962(t0,t1);}

C_noret_decl(trf_18965)
static void C_fcall trf_18965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18965(t0,t1);}

C_noret_decl(trf_19159)
static void C_fcall trf_19159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19159(t0,t1);}

C_noret_decl(trf_19162)
static void C_fcall trf_19162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19162(t0,t1);}

C_noret_decl(trf_19165)
static void C_fcall trf_19165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19165(t0,t1);}

C_noret_decl(trf_19180)
static void C_fcall trf_19180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19180(t0,t1);}

C_noret_decl(trf_18741)
static void C_fcall trf_18741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18741(t0,t1);}

C_noret_decl(trf_18833)
static void C_fcall trf_18833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18833(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18833(t0,t1,t2);}

C_noret_decl(trf_18852)
static void C_fcall trf_18852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18852(t0,t1);}

C_noret_decl(trf_18806)
static void C_fcall trf_18806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18806(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18806(t0,t1,t2);}

C_noret_decl(trf_18751)
static void C_fcall trf_18751(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18751(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18751(t0,t1,t2);}

C_noret_decl(trf_18761)
static void C_fcall trf_18761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18761(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18761(t0,t1,t2,t3);}

C_noret_decl(trf_18607)
static void C_fcall trf_18607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18607(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18607(t0,t1,t2);}

C_noret_decl(trf_18676)
static void C_fcall trf_18676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18676(t0,t1,t2);}

C_noret_decl(trf_18622)
static void C_fcall trf_18622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18622(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18622(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18164)
static void C_fcall trf_18164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18164(t0,t1);}

C_noret_decl(trf_18167)
static void C_fcall trf_18167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18167(t0,t1);}

C_noret_decl(trf_18170)
static void C_fcall trf_18170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18170(t0,t1);}

C_noret_decl(trf_18173)
static void C_fcall trf_18173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18173(t0,t1);}

C_noret_decl(trf_18137)
static void C_fcall trf_18137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18137(t0,t1);}

C_noret_decl(trf_17860)
static void C_fcall trf_17860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17860(t0,t1);}

C_noret_decl(trf_17863)
static void C_fcall trf_17863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17863(t0,t1);}

C_noret_decl(trf_17866)
static void C_fcall trf_17866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17866(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17866(t0,t1);}

C_noret_decl(trf_17757)
static void C_fcall trf_17757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17757(t0,t1);}

C_noret_decl(trf_17748)
static void C_fcall trf_17748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17748(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17748(t0,t1,t2);}

C_noret_decl(trf_17739)
static void C_fcall trf_17739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17739(t0,t1);}

C_noret_decl(trf_17721)
static void C_fcall trf_17721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17721(t0,t1);}

C_noret_decl(trf_17703)
static void C_fcall trf_17703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17703(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17703(t0,t1);}

C_noret_decl(trf_17685)
static void C_fcall trf_17685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17685(t0,t1);}

C_noret_decl(trf_17676)
static void C_fcall trf_17676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17676(t0,t1,t2);}

C_noret_decl(trf_17667)
static void C_fcall trf_17667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17667(t0,t1);}

C_noret_decl(trf_17498)
static void C_fcall trf_17498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17498(t0,t1);}

C_noret_decl(trf_17454)
static void C_fcall trf_17454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17454(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17454(t0,t1,t2);}

C_noret_decl(trf_16975)
static void C_fcall trf_16975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16975(t0,t1);}

C_noret_decl(trf_16978)
static void C_fcall trf_16978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16978(t0,t1);}

C_noret_decl(trf_16981)
static void C_fcall trf_16981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16981(t0,t1);}

C_noret_decl(trf_16984)
static void C_fcall trf_16984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16984(t0,t1);}

C_noret_decl(trf_16930)
static void C_fcall trf_16930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16930(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16930(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16636)
static void C_fcall trf_16636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16636(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16636(t0,t1);}

C_noret_decl(trf_16639)
static void C_fcall trf_16639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16639(t0,t1);}

C_noret_decl(trf_16642)
static void C_fcall trf_16642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16642(t0,t1);}

C_noret_decl(trf_16353)
static void C_fcall trf_16353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16353(t0,t1);}

C_noret_decl(trf_16356)
static void C_fcall trf_16356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16356(t0,t1);}

C_noret_decl(trf_16359)
static void C_fcall trf_16359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16359(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16359(t0,t1);}

C_noret_decl(trf_16312)
static void C_fcall trf_16312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16312(t0,t1);}

C_noret_decl(trf_16268)
static void C_fcall trf_16268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16268(t0,t1);}

C_noret_decl(trf_16183)
static void C_fcall trf_16183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16183(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16183(t0,t1);}

C_noret_decl(trf_15668)
static void C_fcall trf_15668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15668(t0,t1);}

C_noret_decl(trf_15671)
static void C_fcall trf_15671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15671(t0,t1);}

C_noret_decl(trf_15674)
static void C_fcall trf_15674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15674(t0,t1);}

C_noret_decl(trf_15677)
static void C_fcall trf_15677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15677(t0,t1);}

C_noret_decl(trf_15584)
static void C_fcall trf_15584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15584(t0,t1,t2);}

C_noret_decl(trf_15575)
static void C_fcall trf_15575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15575(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15575(t0,t1);}

C_noret_decl(trf_15510)
static void C_fcall trf_15510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15510(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15510(t0,t1);}

C_noret_decl(trf_15252)
static void C_fcall trf_15252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15252(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15252(t0,t1);}

C_noret_decl(trf_15255)
static void C_fcall trf_15255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15255(t0,t1);}

C_noret_decl(trf_15258)
static void C_fcall trf_15258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15258(t0,t1);}

C_noret_decl(trf_15133)
static void C_fcall trf_15133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15133(t0,t1);}

C_noret_decl(trf_15157)
static void C_fcall trf_15157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15157(t0,t1);}

C_noret_decl(trf_15087)
static void C_fcall trf_15087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15087(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15087(t0,t1,t2);}

C_noret_decl(trf_15078)
static void C_fcall trf_15078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15078(t0,t1);}

C_noret_decl(trf_14777)
static void C_fcall trf_14777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14777(t0,t1);}

C_noret_decl(trf_15013)
static void C_fcall trf_15013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15013(t0,t1);}

C_noret_decl(trf_15019)
static void C_fcall trf_15019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15019(t0,t1);}

C_noret_decl(trf_14911)
static void C_fcall trf_14911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14911(t0,t1);}

C_noret_decl(trf_14913)
static void C_fcall trf_14913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14913(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14913(t0,t1,t2,t3);}

C_noret_decl(trf_14962)
static void C_fcall trf_14962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14962(t0,t1);}

C_noret_decl(trf_14927)
static void C_fcall trf_14927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14927(t0,t1);}

C_noret_decl(trf_14811)
static void C_fcall trf_14811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14811(t0,t1);}

C_noret_decl(trf_14725)
static void C_fcall trf_14725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14725(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14725(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14744)
static void C_fcall trf_14744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14744(t0,t1);}

C_noret_decl(trf_14675)
static void C_fcall trf_14675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14675(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14675(t0,t1,t2,t3);}

C_noret_decl(trf_14436)
static void C_fcall trf_14436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14436(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_14436(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_14455)
static void C_fcall trf_14455(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14455(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14455(t0,t1);}

C_noret_decl(trf_14470)
static void C_fcall trf_14470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14470(t0,t1);}

C_noret_decl(trf_14479)
static void C_fcall trf_14479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14479(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14479(t0,t1);}

C_noret_decl(trf_14426)
static void C_fcall trf_14426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14426(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_14426(t0);}

C_noret_decl(trf_14371)
static void C_fcall trf_14371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14371(t0,t1);}

C_noret_decl(trf_14362)
static void C_fcall trf_14362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14362(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14362(t0,t1,t2);}

C_noret_decl(trf_14245)
static void C_fcall trf_14245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14245(t0,t1);}

C_noret_decl(trf_14236)
static void C_fcall trf_14236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14236(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14236(t0,t1,t2);}

C_noret_decl(trf_14218)
static void C_fcall trf_14218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14218(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14218(t0,t1,t2);}

C_noret_decl(trf_14209)
static void C_fcall trf_14209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14209(t0,t1);}

C_noret_decl(trf_14191)
static void C_fcall trf_14191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14191(t0,t1);}

C_noret_decl(trf_14182)
static void C_fcall trf_14182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14182(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14182(t0,t1,t2);}

C_noret_decl(trf_14173)
static void C_fcall trf_14173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14173(t0,t1);}

C_noret_decl(trf_14155)
static void C_fcall trf_14155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14155(t0,t1);}

C_noret_decl(trf_14146)
static void C_fcall trf_14146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14146(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14146(t0,t1,t2);}

C_noret_decl(trf_14137)
static void C_fcall trf_14137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14137(t0,t1);}

C_noret_decl(trf_14122)
static void C_fcall trf_14122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14122(t0,t1);}

C_noret_decl(trf_14077)
static void C_fcall trf_14077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14077(t0,t1);}

C_noret_decl(trf_14059)
static void C_fcall trf_14059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14059(t0,t1);}

C_noret_decl(trf_14050)
static void C_fcall trf_14050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14050(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14050(t0,t1,t2);}

C_noret_decl(trf_14023)
static void C_fcall trf_14023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14023(t0,t1);}

C_noret_decl(trf_14005)
static void C_fcall trf_14005(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14005(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14005(t0,t1);}

C_noret_decl(trf_13987)
static void C_fcall trf_13987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13987(t0,t1);}

C_noret_decl(trf_13978)
static void C_fcall trf_13978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13978(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13978(t0,t1,t2);}

C_noret_decl(trf_13966)
static void C_fcall trf_13966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13966(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_13966(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_13543)
static void C_fcall trf_13543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13543(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13543(t0,t1,t2);}

C_noret_decl(trf_13511)
static void C_fcall trf_13511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13511(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13511(t0,t1,t2);}

C_noret_decl(trf_13462)
static void C_fcall trf_13462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13462(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13462(t0,t1,t2);}

C_noret_decl(trf_13481)
static void C_fcall trf_13481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13481(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13481(t0,t1,t2);}

C_noret_decl(trf_13401)
static void C_fcall trf_13401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13401(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13401(t0,t1,t2,t3);}

C_noret_decl(trf_13384)
static void C_fcall trf_13384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13384(t0,t1);}

C_noret_decl(trf_13367)
static void C_fcall trf_13367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13367(t0,t1);}

C_noret_decl(trf_13200)
static void C_fcall trf_13200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13200(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13200(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13210)
static void C_fcall trf_13210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13210(t0,t1);}

C_noret_decl(trf_13115)
static void C_fcall trf_13115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13115(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13115(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13137)
static void C_fcall trf_13137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13137(t0,t1);}

C_noret_decl(trf_12956)
static void C_fcall trf_12956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12956(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12956(t0,t1,t2,t3);}

C_noret_decl(trf_13045)
static void C_fcall trf_13045(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13045(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13045(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13059)
static void C_fcall trf_13059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13059(t0,t1);}

C_noret_decl(trf_12987)
static void C_fcall trf_12987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12987(t0,t1);}

C_noret_decl(trf_12891)
static void C_fcall trf_12891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12891(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12891(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11398)
static void C_fcall trf_11398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11398(t0,t1);}

C_noret_decl(trf_11401)
static void C_fcall trf_11401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11401(t0,t1);}

C_noret_decl(trf_11404)
static void C_fcall trf_11404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11404(t0,t1);}

C_noret_decl(trf_11407)
static void C_fcall trf_11407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11407(t0,t1);}

C_noret_decl(trf_11410)
static void C_fcall trf_11410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11410(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11410(t0,t1);}

C_noret_decl(trf_11413)
static void C_fcall trf_11413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11413(t0,t1);}

C_noret_decl(trf_11175)
static void C_fcall trf_11175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11175(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11175(t0,t1);}

C_noret_decl(trf_11230)
static void C_fcall trf_11230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11230(t0,t1);}

C_noret_decl(trf_11205)
static void C_fcall trf_11205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11205(t0,t1);}

C_noret_decl(trf_11046)
static void C_fcall trf_11046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11046(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11046(t0,t1,t2);}

C_noret_decl(trf_10969)
static void C_fcall trf_10969(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10969(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10969(t0,t1,t2);}

C_noret_decl(trf_10951)
static void C_fcall trf_10951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10951(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10951(t0,t1,t2);}

C_noret_decl(trf_10933)
static void C_fcall trf_10933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10933(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10933(t0,t1,t2);}

C_noret_decl(trf_10909)
static void C_fcall trf_10909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10909(t0,t1);}

C_noret_decl(trf_10765)
static void C_fcall trf_10765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10765(t0,t1);}

C_noret_decl(trf_10648)
static void C_fcall trf_10648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10648(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10648(t0,t1,t2);}

C_noret_decl(trf_10657)
static void C_fcall trf_10657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10657(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10657(t0,t1,t2,t3);}

C_noret_decl(trf_10490)
static void C_fcall trf_10490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10490(t0,t1);}

C_noret_decl(trf_10506)
static void C_fcall trf_10506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10506(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10506(t0,t1,t2,t3);}

C_noret_decl(trf_10314)
static void C_fcall trf_10314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10314(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10314(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10344)
static void C_fcall trf_10344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10344(t0,t1);}

C_noret_decl(trf_10327)
static void C_fcall trf_10327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10327(t0,t1);}

C_noret_decl(trf_10192)
static void C_fcall trf_10192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10192(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10192(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10222)
static void C_fcall trf_10222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10222(t0,t1);}

C_noret_decl(trf_10205)
static void C_fcall trf_10205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10205(t0,t1);}

C_noret_decl(trf_10095)
static void C_fcall trf_10095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10095(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10095(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10108)
static void C_fcall trf_10108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10108(t0,t1);}

C_noret_decl(trf_10027)
static void C_fcall trf_10027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10027(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10027(t0,t1,t2,t3);}

C_noret_decl(trf_9997)
static void C_fcall trf_9997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9997(t0,t1);}

C_noret_decl(trf_9925)
static void C_fcall trf_9925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9925(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9925(t0,t1,t2,t3);}

C_noret_decl(trf_9724)
static void C_fcall trf_9724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9724(t0,t1);}

C_noret_decl(trf_9806)
static void C_fcall trf_9806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9806(t0,t1);}

C_noret_decl(trf_9817)
static void C_fcall trf_9817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9817(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9817(t0,t1,t2,t3);}

C_noret_decl(trf_9829)
static void C_fcall trf_9829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9829(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9829(t0,t1,t2);}

C_noret_decl(trf_9750)
static void C_fcall trf_9750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9750(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9750(t0,t1,t2);}

C_noret_decl(trf_9387)
static void C_fcall trf_9387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9387(t0,t1);}

C_noret_decl(trf_9390)
static void C_fcall trf_9390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9390(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9390(t0,t1);}

C_noret_decl(trf_9396)
static void C_fcall trf_9396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9396(t0,t1);}

C_noret_decl(trf_9299)
static void C_fcall trf_9299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9299(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9299(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9191)
static void C_fcall trf_9191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9191(t0,t1);}

C_noret_decl(trf_9196)
static void C_fcall trf_9196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9196(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9196(t0,t1,t2,t3);}

C_noret_decl(trf_8963)
static void C_fcall trf_8963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8963(t0,t1);}

C_noret_decl(trf_8966)
static void C_fcall trf_8966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8966(t0,t1);}

C_noret_decl(trf_8864)
static void C_fcall trf_8864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8864(t0,t1);}

C_noret_decl(trf_8759)
static void C_fcall trf_8759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8759(t0,t1);}

C_noret_decl(trf_8768)
static void C_fcall trf_8768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8768(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8768(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8781)
static void C_fcall trf_8781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8781(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8781(t0,t1);}

C_noret_decl(trf_8623)
static void C_fcall trf_8623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8623(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8623(t0,t1);}

C_noret_decl(trf_8626)
static void C_fcall trf_8626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8626(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8626(t0,t1);}

C_noret_decl(trf_8628)
static void C_fcall trf_8628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8628(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8628(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8556)
static void C_fcall trf_8556(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8556(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8556(t0,t1);}

C_noret_decl(trf_8559)
static void C_fcall trf_8559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8559(t0,t1);}

C_noret_decl(trf_8562)
static void C_fcall trf_8562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8562(t0,t1);}

C_noret_decl(trf_8420)
static void C_fcall trf_8420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8420(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8420(t0,t1,t2,t3);}

C_noret_decl(trf_8436)
static void C_fcall trf_8436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8436(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8436(t0,t1,t2);}

C_noret_decl(trf_8158)
static void C_fcall trf_8158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8158(t0,t1);}

C_noret_decl(trf_8161)
static void C_fcall trf_8161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8161(t0,t1);}

C_noret_decl(trf_7903)
static void C_fcall trf_7903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7903(t0,t1);}

C_noret_decl(trf_7836)
static void C_fcall trf_7836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7836(t0,t1);}

C_noret_decl(trf_7826)
static void C_fcall trf_7826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7826(t0,t1);}

C_noret_decl(trf_7808)
static void C_fcall trf_7808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7808(t0,t1);}

C_noret_decl(trf_7797)
static void C_fcall trf_7797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7797(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7797(t0,t1,t2);}

C_noret_decl(trf_7759)
static void C_fcall trf_7759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7759(t0,t1);}

C_noret_decl(trf_7752)
static void C_fcall trf_7752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7752(t0,t1);}

C_noret_decl(trf_7728)
static void C_fcall trf_7728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7728(t0,t1);}

C_noret_decl(trf_7661)
static void C_fcall trf_7661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7661(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7661(t0,t1,t2,t3);}

C_noret_decl(trf_7650)
static void C_fcall trf_7650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7650(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7650(t0,t1,t2);}

C_noret_decl(trf_7616)
static void C_fcall trf_7616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7616(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7616(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7589)
static void C_fcall trf_7589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7589(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7589(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7548)
static void C_fcall trf_7548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7548(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7548(t0,t1,t2);}

C_noret_decl(trf_7554)
static void C_fcall trf_7554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7554(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7554(t0,t1,t2);}

C_noret_decl(trf_7564)
static void C_fcall trf_7564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7564(t0,t1);}

C_noret_decl(trf_7429)
static void C_fcall trf_7429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7429(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7429(t0,t1,t2,t3);}

C_noret_decl(trf_7442)
static void C_fcall trf_7442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7442(t0,t1);}

C_noret_decl(trf_7390)
static void C_fcall trf_7390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7390(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7390(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7400)
static void C_fcall trf_7400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7400(t0,t1);}

C_noret_decl(trf_7350)
static void C_fcall trf_7350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7350(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7350(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7360)
static void C_fcall trf_7360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7360(t0,t1);}

C_noret_decl(trf_7274)
static void C_fcall trf_7274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7274(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7274(t0,t1,t2,t3);}

C_noret_decl(trf_7251)
static void C_fcall trf_7251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7251(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7251(t0,t1,t2,t3);}

C_noret_decl(trf_7197)
static void C_fcall trf_7197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7197(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7197(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6596)
static void C_fcall trf_6596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6596(t0,t1);}

C_noret_decl(trf_6608)
static void C_fcall trf_6608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6608(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6608(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6661)
static void C_fcall trf_6661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6661(t0,t1);}

C_noret_decl(trf_6620)
static void C_fcall trf_6620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6620(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6620(t0,t1,t2);}

C_noret_decl(trf_6633)
static void C_fcall trf_6633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6633(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5415)){
C_save(t1);
C_rereclaim2(5415*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,920);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],4,"tail");
lf[59]=C_h_intern(&lf[59],5,"list*");
lf[60]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[61]=C_h_intern(&lf[61],9,"list-set!");
lf[62]=C_h_intern(&lf[62],8,"reverse!");
lf[63]=C_h_intern(&lf[63],9,"make-list");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[65]=C_h_intern(&lf[65],10,"list-index");
lf[66]=C_h_intern(&lf[66],9,"list-find");
lf[67]=C_h_intern(&lf[67],6,"every\077");
lf[93]=C_h_intern(&lf[93],7,"rescale");
lf[94]=C_h_intern(&lf[94],8,"discrete");
lf[95]=C_h_intern(&lf[95],4,"not\077");
lf[96]=C_h_intern(&lf[96],3,"int");
lf[97]=C_h_intern(&lf[97],4,"plus");
lf[98]=C_h_intern(&lf[98],1,"+");
lf[99]=C_h_intern(&lf[99],5,"minus");
lf[100]=C_h_intern(&lf[100],1,"-");
lf[101]=C_h_intern(&lf[101],5,"times");
lf[102]=C_h_intern(&lf[102],1,"*");
lf[103]=C_h_intern(&lf[103],6,"divide");
lf[104]=C_h_intern(&lf[104],1,"/");
lf[105]=C_h_intern(&lf[105],8,"quantize");
lf[106]=C_h_intern(&lf[106],8,"decimals");
lf[107]=C_h_intern(&lf[107],5,"round");
lf[108]=C_h_intern(&lf[108],4,"expt");
lf[109]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[110]=C_h_intern(&lf[110],15,"rhythm->seconds");
lf[111]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[112]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[113]=C_h_intern(&lf[113],6,"\000tempo");
lf[114]=C_h_intern(&lf[114],5,"\000beat");
lf[115]=C_h_intern(&lf[115],12,"cents->ratio");
lf[116]=C_h_intern(&lf[116],12,"ratio->cents");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[119]=C_h_intern(&lf[119],3,"err");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[121]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[122]=C_h_intern(&lf[122],6,"interp");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[124]=C_h_intern(&lf[124],8,"tendency");
lf[125]=C_h_intern(&lf[125],3,"ran");
lf[126]=C_h_intern(&lf[126],3,"fit");
lf[127]=C_h_intern(&lf[127],9,"remainder");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[129]=C_h_intern(&lf[129],5,"scale");
lf[130]=C_h_intern(&lf[130],6,"modulo");
lf[131]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[132]=C_h_intern(&lf[132],8,"ran-set!");
lf[133]=C_h_intern(&lf[133],7,"between");
lf[134]=C_h_intern(&lf[134],4,"pick");
lf[135]=C_h_intern(&lf[135],4,"odds");
lf[136]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[137]=C_h_intern(&lf[137],5,"\000true");
lf[138]=C_h_intern(&lf[138],6,"\000false");
lf[139]=C_h_intern(&lf[139],4,"vary");
lf[140]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[141]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[142]=C_h_intern(&lf[142],8,"shuffle!");
lf[143]=C_h_intern(&lf[143],7,"shuffle");
lf[144]=C_h_intern(&lf[144],6,"ranlow");
lf[145]=C_h_intern(&lf[145],7,"ranhigh");
lf[146]=C_h_intern(&lf[146],9,"ranmiddle");
lf[147]=C_h_intern(&lf[147],7,"ranbeta");
lf[148]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[149]=C_h_intern(&lf[149],2,"\000a");
lf[150]=C_h_intern(&lf[150],2,"\000b");
lf[151]=C_h_intern(&lf[151],6,"ranexp");
lf[152]=C_h_intern(&lf[152],8,"rangauss");
lf[153]=C_h_intern(&lf[153],9,"rancauchy");
lf[154]=C_h_intern(&lf[154],10,"ranpoisson");
lf[155]=C_h_intern(&lf[155],3,"arg");
lf[156]=C_h_intern(&lf[156],8,"rangamma");
lf[157]=C_h_intern(&lf[157],8,"ranbrown");
lf[158]=C_h_intern(&lf[158],7,"ranpink");
lf[159]=C_h_intern(&lf[159],4,"segs");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[165]=C_h_intern(&lf[165],13,"string-append");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[170]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[171]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[172]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[173]=C_h_intern(&lf[173],5,"floor");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[175]=C_h_intern(&lf[175],4,"note");
lf[176]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[177]=C_h_intern(&lf[177],3,"key");
lf[178]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[179]=C_h_intern(&lf[179],2,"hz");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[181]=C_h_intern(&lf[181],2,"pc");
lf[182]=C_h_intern(&lf[182],6,"invert");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[185]=C_h_intern(&lf[185],9,"transpose");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[187]=C_h_intern(&lf[187],10,"retrograde");
lf[188]=C_h_intern(&lf[188],7,"reverse");
lf[189]=C_h_intern(&lf[189],11,"scale-order");
lf[190]=C_h_intern(&lf[190],4,"sort");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[192]=C_h_intern(&lf[192],13,"make-spectrum");
lf[193]=C_h_intern(&lf[193],8,"spectrum");
lf[195]=C_h_intern(&lf[195],13,"spectrum-time");
lf[197]=C_h_intern(&lf[197],14,"\003sysblock-set!");
lf[198]=C_h_intern(&lf[198],13,"spectrum-size");
lf[200]=C_h_intern(&lf[200],14,"spectrum-freqs");
lf[202]=C_h_intern(&lf[202],13,"spectrum-amps");
lf[203]=C_h_intern(&lf[203],14,"spectrum-pairs");
lf[204]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[205]=C_h_intern(&lf[205],16,"spectrum-minfreq");
lf[206]=C_h_intern(&lf[206],16,"spectrum-maxfreq");
lf[207]=C_h_intern(&lf[207],15,"spectrum-minamp");
lf[208]=C_h_intern(&lf[208],12,"\003sysfor-each");
lf[209]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[210]=C_h_intern(&lf[210],15,"spectrum-maxamp");
lf[211]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[212]=C_h_intern(&lf[212],13,"spectrum-keys");
lf[213]=C_h_intern(&lf[213],8,"for-each");
lf[214]=C_h_intern(&lf[214],6,"\000order");
lf[215]=C_h_intern(&lf[215],7,"\000thresh");
lf[216]=C_h_intern(&lf[216],6,"\000quant");
lf[217]=C_h_intern(&lf[217],7,"\000unique");
lf[218]=C_h_intern(&lf[218],4,"\000min");
lf[219]=C_h_intern(&lf[219],4,"\000max");
lf[220]=C_h_intern(&lf[220],11,"fm-spectrum");
lf[221]=C_h_intern(&lf[221],8,"set-car!");
lf[222]=C_h_intern(&lf[222],4,"caar");
lf[223]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[224]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[225]=C_h_intern(&lf[225],13,"spectrum-add!");
lf[226]=C_h_intern(&lf[226],11,"rm-spectrum");
lf[227]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[228]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[229]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[230]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[232]=C_h_intern(&lf[232],6,"period");
lf[241]=C_h_intern(&lf[241],7,"pattern");
lf[256]=C_h_intern(&lf[256],4,"\000nad");
lf[257]=C_h_intern(&lf[257],8,"\000periods");
lf[258]=C_h_intern(&lf[258],12,"\000depth-first");
lf[260]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[261]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[262]=C_h_intern(&lf[262],14,"\000breadth-first");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[264]=C_h_intern(&lf[264],7,"\000values");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[267]=C_h_intern(&lf[267],4,"eop\077");
lf[268]=C_h_intern(&lf[268],4,"\000eop");
lf[269]=C_h_intern(&lf[269],4,"eod\077");
lf[270]=C_h_intern(&lf[270],4,"\000eod");
lf[271]=C_h_intern(&lf[271],4,"next");
lf[275]=C_h_intern(&lf[275],5,"force");
lf[276]=C_h_intern(&lf[276],8,"promise\077");
lf[277]=C_h_intern(&lf[277],3,"max");
lf[278]=C_h_intern(&lf[278],10,"make-cycle");
lf[280]=C_h_intern(&lf[280],4,"\000for");
lf[281]=C_h_intern(&lf[281],7,"\000repeat");
lf[283]=C_h_intern(&lf[283],5,"palin");
lf[285]=C_h_intern(&lf[285],15,"make-palindrome");
lf[287]=C_h_intern(&lf[287],6,"\000elide");
lf[288]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[289]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[290]=C_h_intern(&lf[290],9,"make-line");
lf[292]=C_h_intern(&lf[292],9,"make-heap");
lf[294]=C_h_intern(&lf[294],13,"make-rotation");
lf[296]=C_h_intern(&lf[296],7,"\000rotate");
lf[298]=C_h_intern(&lf[298],11,"random-item");
lf[306]=C_h_intern(&lf[306],14,"make-weighting");
lf[309]=C_h_intern(&lf[309],7,"\000weight");
lf[310]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[311]=C_h_intern(&lf[311],11,"make-markov");
lf[313]=C_h_intern(&lf[313],5,"\000past");
lf[314]=C_h_intern(&lf[314],2,"->");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[316]=C_h_intern(&lf[316],3,"\000->");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[319]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[322]=C_h_intern(&lf[322],10,"graph-node");
lf[323]=C_h_intern(&lf[323],10,"make-graph");
lf[325]=C_h_intern(&lf[325],3,"\000to");
lf[326]=C_h_intern(&lf[326],3,"\000id");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[330]=C_h_intern(&lf[330],14,"markov-analyze");
lf[331]=C_h_intern(&lf[331],6,"format");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[333]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[335]=C_h_intern(&lf[335],7,"newline");
lf[336]=C_h_intern(&lf[336],7,"display");
lf[337]=C_h_intern(&lf[337],19,"\003syswrite-char/port");
lf[338]=C_h_intern(&lf[338],19,"\003sysstandard-output");
lf[339]=C_h_intern(&lf[339],3,"min");
lf[340]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[344]=C_h_intern(&lf[344],11,"make-string");
lf[345]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[346]=C_h_intern(&lf[346],1,"<");
lf[347]=C_h_intern(&lf[347],11,"string-ci<\077");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[351]=C_h_intern(&lf[351],5,"\000mode");
lf[353]=C_h_intern(&lf[353],5,"token");
lf[358]=C_h_intern(&lf[358],1,"t");
lf[363]=C_h_intern(&lf[363],4,"rule");
lf[366]=C_h_intern(&lf[366],22,"hash-table-ref/default");
lf[373]=C_h_intern(&lf[373],11,"parse-error");
lf[377]=C_h_intern(&lf[377],10,"parse-unit");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[391]=C_h_intern(&lf[391],14,"string->symbol");
lf[392]=C_h_intern(&lf[392],5,"equal");
lf[393]=C_h_intern(&lf[393],3,"and");
lf[394]=C_h_intern(&lf[394],2,"or");
lf[395]=C_h_intern(&lf[395],3,"not");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[397]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[406]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[408]=C_h_intern(&lf[408],1,"@");
lf[409]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[410]=C_h_intern(&lf[410],6,"printf");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[416]=C_h_intern(&lf[416],2,">=");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[419]=C_h_intern(&lf[419],5,"begin");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[422]=C_h_intern(&lf[422],1,">");
lf[423]=C_h_intern(&lf[423],2,"<=");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[430]=C_h_intern(&lf[430],17,"*sal-trace-input*");
lf[431]=C_h_intern(&lf[431],3,"sal");
lf[432]=C_h_intern(&lf[432],11,"print-error");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[434]=C_h_intern(&lf[434],9,"substring");
lf[435]=C_h_intern(&lf[435],2,"pp");
lf[436]=C_h_intern(&lf[436],4,"eval");
lf[437]=C_h_intern(&lf[437],7,"\000syntax");
lf[438]=C_h_intern(&lf[438],7,"\000scheme");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[440]=C_h_intern(&lf[440],7,"call/cc");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[442]=C_h_intern(&lf[442],9,"sal:print");
lf[443]=C_h_intern(&lf[443],13,"print-message");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[446]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[452]=C_h_intern(&lf[452],9,"sal:chdir");
lf[453]=C_h_intern(&lf[453],8,"sal:load");
lf[454]=C_h_intern(&lf[454],13,"load-sal-file");
lf[455]=C_h_intern(&lf[455],4,"load");
lf[456]=C_h_intern(&lf[456],15,"\003syssubstring=\077");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[460]=C_h_intern(&lf[460],12,"file-exists\077");
lf[461]=C_h_intern(&lf[461],8,"sal:open");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[463]=C_h_intern(&lf[463],10,"sal:output");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[476]=C_h_intern(&lf[476],8,"operator");
lf[477]=C_h_intern(&lf[477],8,"bindings");
lf[478]=C_h_intern(&lf[478],10,"collectors");
lf[479]=C_h_intern(&lf[479],9,"initially");
lf[480]=C_h_intern(&lf[480],9,"end-tests");
lf[481]=C_h_intern(&lf[481],7,"looping");
lf[482]=C_h_intern(&lf[482],8,"stepping");
lf[483]=C_h_intern(&lf[483],7,"finally");
lf[484]=C_h_intern(&lf[484],9,"returning");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[506]=C_h_intern(&lf[506],3,"for");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[509]=C_h_intern(&lf[509],8,"downfrom");
lf[510]=C_h_intern(&lf[510],5,"above");
lf[511]=C_h_intern(&lf[511],5,"below");
lf[512]=C_h_intern(&lf[512],6,"downto");
lf[513]=C_h_intern(&lf[513],4,"from");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[520]=C_h_intern(&lf[520],2,"to");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[530]=C_h_intern(&lf[530],2,"by");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[539]=C_h_intern(&lf[539],6,"across");
lf[540]=C_h_intern(&lf[540],13,"vector-length");
lf[541]=C_h_intern(&lf[541],10,"vector-ref");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[544]=C_h_intern(&lf[544],4,"over");
lf[545]=C_h_intern(&lf[545],2,"in");
lf[546]=C_h_intern(&lf[546],5,"quote");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[554]=C_h_intern(&lf[554],2,"on");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[558]=C_h_intern(&lf[558],1,"=");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[560]=C_h_intern(&lf[560],4,"then");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[566]=C_h_intern(&lf[566],4,"with");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[577]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[589]=C_h_intern(&lf[589],3,"sum");
lf[590]=C_h_intern(&lf[590],5,"count");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[592]=C_h_intern(&lf[592],8,"minimize");
lf[593]=C_h_intern(&lf[593],8,"maximize");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[596]=C_h_intern(&lf[596],4,"list");
lf[597]=C_h_intern(&lf[597],8,"set-cdr!");
lf[598]=C_h_intern(&lf[598],9,"last-pair");
lf[599]=C_h_intern(&lf[599],7,"collect");
lf[600]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[603]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[604]=C_h_intern(&lf[604],5,"nconc");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[608]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[609]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[610]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[611]=C_h_intern(&lf[611],4,"into");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[618]=C_h_intern(&lf[618],6,"return");
lf[620]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[621]=C_h_intern(&lf[621],5,"until");
lf[622]=C_h_intern(&lf[622],5,"while");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[626]=C_h_intern(&lf[626],7,"thereis");
lf[627]=C_h_intern(&lf[627],6,"always");
lf[628]=C_h_intern(&lf[628],5,"never");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[630]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[638]=C_h_intern(&lf[638],4,"task");
lf[639]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[641]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[647]=C_h_intern(&lf[647],2,"do");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[650]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[651]=C_h_intern(&lf[651],4,"iter");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[654]=C_h_intern(&lf[654],6,"repeat");
lf[655]=C_h_intern(&lf[655],2,"as");
lf[657]=C_h_intern(&lf[657],10,"mm:make-on");
lf[658]=C_h_intern(&lf[658],5,"\000time");
lf[659]=C_h_intern(&lf[659],4,"\000key");
lf[660]=C_h_intern(&lf[660],4,"\000vel");
lf[661]=C_h_intern(&lf[661],5,"\000chan");
lf[662]=C_h_intern(&lf[662],6,"mm:on\077");
lf[663]=C_h_intern(&lf[663],11,"mm:make-off");
lf[664]=C_h_intern(&lf[664],7,"mm:off\077");
lf[665]=C_h_intern(&lf[665],13,"mm:make-touch");
lf[666]=C_h_intern(&lf[666],4,"\000val");
lf[667]=C_h_intern(&lf[667],9,"mm:touch\077");
lf[668]=C_h_intern(&lf[668],12,"mm:make-ctrl");
lf[669]=C_h_intern(&lf[669],4,"\000num");
lf[670]=C_h_intern(&lf[670],8,"mm:ctrl\077");
lf[671]=C_h_intern(&lf[671],12,"mm:make-prog");
lf[672]=C_h_intern(&lf[672],8,"mm:prog\077");
lf[673]=C_h_intern(&lf[673],13,"mm:make-press");
lf[674]=C_h_intern(&lf[674],9,"mm:press\077");
lf[675]=C_h_intern(&lf[675],12,"mm:make-bend");
lf[676]=C_h_intern(&lf[676],7,"mm:free");
lf[677]=C_h_intern(&lf[677],7,"mm:copy");
lf[678]=C_h_intern(&lf[678],7,"mm:time");
lf[679]=C_h_intern(&lf[679],12,"mm:time-set!");
lf[680]=C_h_intern(&lf[680],7,"mm:chan");
lf[681]=C_h_intern(&lf[681],12,"mm:chan-set!");
lf[682]=C_h_intern(&lf[682],6,"mm:key");
lf[683]=C_h_intern(&lf[683],11,"mm:key-set!");
lf[684]=C_h_intern(&lf[684],6,"mm:vel");
lf[685]=C_h_intern(&lf[685],11,"mm:vel-set!");
lf[686]=C_h_intern(&lf[686],6,"mm:val");
lf[687]=C_h_intern(&lf[687],8,"mm:type\077");
lf[688]=C_h_intern(&lf[688],11,"mm:val-set!");
lf[689]=C_h_intern(&lf[689],1,"k");
lf[690]=C_h_intern(&lf[690],6,"mm:num");
lf[691]=C_h_intern(&lf[691],11,"mm:num-set!");
lf[692]=C_h_intern(&lf[692],7,"mp:note");
lf[693]=C_h_intern(&lf[693],7,"mp:midi");
lf[694]=C_h_intern(&lf[694],6,"mp:off");
lf[695]=C_h_intern(&lf[695],5,"mp:on");
lf[696]=C_h_intern(&lf[696],8,"mp:touch");
lf[697]=C_h_intern(&lf[697],7,"mp:ctrl");
lf[698]=C_h_intern(&lf[698],7,"mp:prog");
lf[699]=C_h_intern(&lf[699],8,"mp:press");
lf[700]=C_h_intern(&lf[700],7,"mp:bend");
lf[701]=C_h_intern(&lf[701],5,"mp:mm");
lf[702]=C_h_intern(&lf[702],9,"mp:inhook");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[704]=C_h_intern(&lf[704],27,"condition-property-accessor");
lf[705]=C_h_intern(&lf[705],3,"exn");
lf[706]=C_h_intern(&lf[706],7,"message");
lf[707]=C_h_intern(&lf[707],22,"with-exception-handler");
lf[708]=C_h_intern(&lf[708],30,"call-with-current-continuation");
lf[709]=C_h_intern(&lf[709],4,"cs:i");
lf[710]=C_h_intern(&lf[710],4,"cs:f");
lf[711]=C_h_intern(&lf[711],8,"cs:clear");
lf[712]=C_h_intern(&lf[712],7,"cm-logo");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[720]=C_h_intern(&lf[720],25,"current-time-milliseconds");
lf[721]=C_h_intern(&lf[721],20,"current-time-seconds");
lf[723]=C_h_intern(&lf[723],6,"\003sysgc");
lf[726]=C_h_intern(&lf[726],6,"sprout");
lf[727]=C_h_intern(&lf[727],9,"\003syserror");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[729]=C_h_intern(&lf[729],3,"now");
lf[730]=C_h_intern(&lf[730],11,"time-format");
lf[731]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[732]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[733]=C_h_intern(&lf[733],1,"m");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[735]=C_h_intern(&lf[735],1,"s");
lf[736]=C_h_intern(&lf[736],5,"pause");
lf[737]=C_h_intern(&lf[737],7,"paused\077");
lf[738]=C_h_intern(&lf[738],4,"cont");
lf[739]=C_h_intern(&lf[739],4,"stop");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[741]=C_h_intern(&lf[741],4,"hush");
lf[743]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[749]=C_h_intern(&lf[749],14,"return-to-host");
lf[750]=C_h_intern(&lf[750],6,"define");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[752]=C_h_intern(&lf[752],18,"\003sysregister-macro");
lf[753]=C_h_intern(&lf[753],14,"define-process");
lf[754]=C_h_intern(&lf[754],6,"lambda");
lf[755]=C_h_intern(&lf[755],7,"elapsed");
lf[756]=C_h_intern(&lf[756],1,"x");
lf[757]=C_h_intern(&lf[757],4,"wait");
lf[758]=C_h_intern(&lf[758],18,"current-error-port");
lf[759]=C_h_intern(&lf[759],19,"print-error-message");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[765]=C_h_intern(&lf[765],3,"run");
lf[766]=C_h_intern(&lf[766],20,"\003sysregister-macro-2");
lf[767]=C_h_intern(&lf[767],15,"hash-table-set!");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[769]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[771]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[773]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[775]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[777]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[779]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[781]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[783]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[785]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[787]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[789]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[791]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[793]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[795]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[796]=C_h_intern(&lf[796],5,":loop");
lf[797]=C_h_intern(&lf[797],7,"tagbody");
lf[798]=C_h_intern(&lf[798],5,"block");
lf[799]=C_h_intern(&lf[799],3,"nil");
lf[800]=C_h_intern(&lf[800],2,"go");
lf[801]=C_h_intern(&lf[801],8,"function");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[803]=C_h_intern(&lf[803],3,"pop");
lf[804]=C_h_intern(&lf[804],4,"cons");
lf[805]=C_h_intern(&lf[805],4,"push");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[807]=C_h_intern(&lf[807],4,"loop");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[816]=C_h_intern(&lf[816],7,"\000return");
lf[817]=C_h_intern(&lf[817],9,"\000function");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[819]=C_h_intern(&lf[819],8,"\000process");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[824]=C_h_intern(&lf[824],4,"cond");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[830]=C_h_intern(&lf[830],5,"\000loop");
lf[831]=C_h_intern(&lf[831],4,"\000run");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[840]=C_h_intern(&lf[840],9,"list-tail");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[843]=C_h_intern(&lf[843],9,"\000bindings");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[851]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[855]=C_h_intern(&lf[855],10,"sal:system");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[873]=C_h_intern(&lf[873],7,"unquote");
lf[874]=C_h_intern(&lf[874],16,"unquote-splicing");
lf[875]=C_h_intern(&lf[875],5,"\000list");
lf[876]=C_h_intern(&lf[876],8,"\000unquote");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[880]=C_h_intern(&lf[880],10,"quasiquote");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[885]=C_h_intern(&lf[885],7,"fprintf");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[888]=C_h_intern(&lf[888],27,"\003sysregister-record-printer");
lf[889]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[890]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[891]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[892]=C_h_intern(&lf[892],6,"ruleid");
lf[893]=C_h_intern(&lf[893],9,"make-rule");
lf[894]=C_h_intern(&lf[894],7,"*rules*");
lf[895]=C_h_intern(&lf[895],7,"defrule");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[897]=C_h_intern(&lf[897],15,"make-hash-table");
lf[898]=C_h_intern(&lf[898],3,"eq\077");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\021#<spectrum ~S ~S>");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[902]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[904]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[905]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[906]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[907]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[913]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[914]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[915]=C_h_intern(&lf[915],6,"equal\077");
lf[916]=C_h_intern(&lf[916],4,"send");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[918]=C_h_intern(&lf[918],19,"define-send-message");
lf[919]=C_h_intern(&lf[919],12,"with-optkeys");
C_register_lf2(lf,920,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6256,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6254 */
static void C_ccall f_6256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6259,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6257 in k6254 */
static void C_ccall f_6259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6262,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6260 in k6257 in k6254 */
static void C_ccall f_6262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6265,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6265,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6267,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6556,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39751,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[919],t4);}

/* a39750 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39751(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_39751r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39751r(t0,t1,t2,t3);}}

static void C_ccall f_39751r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 250  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6560,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 256  make-hash-table");
t3=C_retrieve(lf[897]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[915]+1));}

/* k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6560,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6563,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39699,a[2]=((C_word)li632),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 258  ##sys#register-macro");
t5=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[918],t4);}

/* a39698 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39699,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39703,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_39703(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39736,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  string->symbol");
t10=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39746,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 267  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 269  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[917]);}}}}

/* k39744 in a39698 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39703(2,t3,t2);}

/* k39734 in a39698 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39703(2,t3,t2);}

/* k39701 in a39698 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39703,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[546],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[767],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6563,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6565,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6856,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39693,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  ##sys#register-macro");
t5=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[916],t4);}

/* a39692 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39693(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_39693r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39693r(t0,t1,t2,t3);}}

static void C_ccall f_39693r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 355  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6856,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6858,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6869,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6898,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6908,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6918,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6928,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6938,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6952,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6967,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6973,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6996,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7044,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7134,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7174,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7184,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7245,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7344,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7384,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7423,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7462,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7548,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7589,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7616,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7643,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7650,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7661,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7676,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7683,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7690,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7709,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7728,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7749,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7752,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7759,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7788,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7791,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7794,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7797,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7808,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7826,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7833,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7836,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7843,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7846,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7865,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7899,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[96]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8010,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8025,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8067,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[101]+1,*((C_word*)lf[102]+1));
t53=C_mutate((C_word*)lf[103]+1,*((C_word*)lf[104]+1));
t54=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8093,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8114,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[110]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8154,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8390,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8405,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[117],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8420,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8506,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[124]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8552,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8619,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[129]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8752,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[132]+1,C_retrieve2(lf[80],"tb:ran-set!"));
t65=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8860,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8895,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8916,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8959,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9187,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[142]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9286,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[143]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9341,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[144]+1,C_retrieve2(lf[83],"tb:ranlow"));
t73=C_mutate((C_word*)lf[145]+1,C_retrieve2(lf[84],"tb:ranhigh"));
t74=C_mutate((C_word*)lf[146]+1,C_retrieve2(lf[85],"tb:ranmiddle"));
t75=C_mutate((C_word*)lf[147]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9383,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9611,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[152]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9630,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[153]+1,C_retrieve2(lf[89],"tb:rancauchy"));
t79=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9671,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9690,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[157]+1,C_retrieve2(lf[92],"tb:ranbrown"));
t82=C_mutate((C_word*)lf[158]+1,C_retrieve2(lf[91],"tb:ranpink"));
t83=C_mutate((C_word*)lf[159]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9711,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t84=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9920,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  make-hash-table");
t85=C_retrieve(lf[897]);
((C_proc3)C_retrieve_proc(t85))(3,t85,t84,*((C_word*)lf[915]+1));}

/* k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9920,2,t0,t1);}
t2=C_mutate(&lf[162],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9923,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39477,a[2]=t7,a[3]=t4,a[4]=((C_word)li630),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_39477(t9,t5,C_fix(0));}

/* do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39477(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39477,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[901],C_fix(-1),lf[902],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39490,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t5=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[162],"*notes*"),lf[903],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39691,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39691,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[904],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39511,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t6=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39511,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[905]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[906]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39523,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7728(t4,((C_word*)t0)[4]);}

/* k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39527,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[914]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7728(t2,t3);}

/* k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39531,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[913]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7728(t2,t3);}

/* k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_39675,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 376  floor");
t4=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39675,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39537,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li629),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_39537(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39537(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39537,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_39547,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_39557,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_39557(t21,(C_word)C_i_string_equal_p(t20,lf[912]));}
else{
t20=t19;
f_39557(t20,C_SCHEME_FALSE);}}}

/* k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39557,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_39547(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_39560,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[910]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_39560(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[911]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_39560(t7,t6);}
else{
t5=t2;
f_39560(t5,C_SCHEME_UNDEFINED);}}}}

/* k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39560,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[907],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_39568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39568,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_39575,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_39578,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_39578(2,t4,C_SCHEME_UNDEFINED);}}

/* k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_39582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[909],((C_word*)((C_word*)t0)[8])[1]);}

/* k39580 in k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39582,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_39589,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k39587 in k39580 in k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39592,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_39592(2,t4,C_SCHEME_UNDEFINED);}}

/* k39590 in k39587 in k39580 in k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[908],((C_word*)((C_word*)t0)[6])[1]);}

/* k39594 in k39590 in k39587 in k39580 in k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39596,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39603,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k39601 in k39594 in k39590 in k39587 in k39580 in k39576 in k39573 in k39566 in k39558 in k39555 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_39547(2,t3,C_SCHEME_UNDEFINED);}}

/* k39545 in do708 in k39673 in k39529 in k39525 in k39521 in k39509 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_39537(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k39498 in k39689 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39500,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_39477(t3,((C_word*)t0)[2],t2);}

/* k39488 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39493,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[162],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k39491 in k39488 in do702 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9923,2,t0,t1);}
t2=C_mutate(&lf[163],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9925,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10027,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[175]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10080,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[177]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10177,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10299,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10415,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10460,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[185]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10595,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[187]+1,*((C_word*)lf[188]+1));
t11=C_mutate((C_word*)lf[189]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10761,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10903,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10909,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[195]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10924,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[196],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10933,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10942,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10951,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[200]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10960,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[201],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10969,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10978,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10988,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39463,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t23=C_retrieve(lf[888]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[193],t22);}

/* a39462 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39463,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39471,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t5=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k39469 in a39462 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39475,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k39473 in k39469 in a39462 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[885]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[900],((C_word*)t0)[2],t1);}

/* k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word ab[225],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10988,2,t0,t1);}
t2=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11028,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11087,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11097,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11115,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11146,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[212]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11394,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[220]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12867,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[225]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13186,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13365,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13966,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13978,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13987,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14005,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14023,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14050,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14059,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14077,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14122,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14137,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14146,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14155,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14173,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14182,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14191,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[248],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14209,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14218,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14227,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14236,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[252],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14245,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14362,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14371,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[255],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14426,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14436,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[267]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14616,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[269]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14635,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[271]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14654,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14777,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15078,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15087,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15133,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[278]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15248,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15503,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15575,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15584,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[285]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15664,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16134,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[290]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16349,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16596,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[292]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16632,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[293],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16895,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[294]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16971,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17445,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17667,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17676,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17685,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17703,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17721,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17739,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17748,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17757,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[306]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17840,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18607,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18719,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[311]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19152,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19639,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19979,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[323]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20042,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20560,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[330]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20654,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21676,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21697,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21715,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21733,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21743,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t76=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39449,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t77=C_retrieve(lf[888]);
((C_proc4)C_retrieve_proc(t77))(4,t77,t75,lf[353],t76);}

/* a39448 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39449,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39457,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_21697(t4,t2);}

/* k39455 in a39448 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39461,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_21715(t2,((C_word*)t0)[2]);}

/* k39459 in k39455 in a39448 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[885]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[899],((C_word*)t0)[2],t1);}

/* k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21743,2,t0,t1);}
t2=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21745,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[359],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21774,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21786,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21794,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-hash-table");
t6=C_retrieve(lf[897]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[898]+1));}

/* k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21794,2,t0,t1);}
t2=C_mutate(&lf[361],t1);
t3=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21796,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21817,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21899,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39439,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t7=C_retrieve(lf[888]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[363],t6);}

/* a39438 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39439,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39447,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  rule-name");
f_21817(t4,t2);}

/* k39445 in a39438 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[885]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[896],t1);}

/* k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21902,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39336,a[2]=((C_word)li625),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[895],t3);}

/* a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_39336r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39336r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39336r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39339,a[2]=t6,a[3]=((C_word)li624),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[892],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39399,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k39397 in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39403,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_39339(t3,t2,((C_word*)t0)[2]);}

/* k39401 in k39397 in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39403,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_39417(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_39417(t7,(C_word)C_i_nullp(t6));}}

/* k39415 in k39401 in k39397 in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39417,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[893],((C_word*)t0)[6],lf[892],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[767],lf[894],lf[892],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39339(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39339,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[890]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39359,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[891]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[546],t2):t2));}}}

/* k39357 in ppat in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39363,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_39339(t4,t2,t3);}

/* k39361 in k39357 in ppat in a39335 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39363,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[804],((C_word*)t0)[2],t1));}

/* k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21902,2,t0,t1);}
t2=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21904,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21925,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21928,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21940,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21946,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21956,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22014,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22046,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22067,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22085,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22095,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39322,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t14=C_retrieve(lf[888]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[373],t13);}

/* a39321 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39322,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39330,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22067(t4,t2);}

/* k39328 in a39321 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39334,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22085(t2,((C_word*)t0)[2]);}

/* k39332 in k39328 in a39321 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[885]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[889],((C_word*)t0)[2],t1);}

/* k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22095,2,t0,t1);}
t2=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22097,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22103,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22118,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22136,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22154,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22164,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39296,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t9=C_retrieve(lf[888]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[377],t8);}

/* a39295 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39296,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39300,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t4,t2);}

/* k39298 in a39295 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39306,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23376(t2,t1);}

/* k39304 in k39298 in a39295 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39306,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39317,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_21904(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[885]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[887],((C_word*)t0)[2]);}}

/* k39315 in k39304 in k39298 in a39295 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  rule-name");
f_21817(((C_word*)t0)[2],t1);}

/* k39311 in k39304 in k39298 in a39295 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[885]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[886],t1);}

/* k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22164,2,t0,t1);}
t2=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22166,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22182,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22214,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22226,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22236,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22254,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22287,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22495,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22503,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t11=lf[404]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22607,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23226,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23274,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23376,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23388,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23409,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39274,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[394],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t18,lf[884],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39272 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(25856),t1);}

/* k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23412,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39254,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[394],t5);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[883],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39252 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(26112),t1);}

/* k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23415,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39214,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[394],t10);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[882],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39212 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(26368),t1);}

/* k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23418,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39104,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[102],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[393],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39110,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39120,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[881],C_fix(26624),t9,t10,t11);}

/* a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39120,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39124,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t5,lf[875],t3);}

/* k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t2,((C_word*)t0)[2]);}

/* k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39127,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[596]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39145,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t3,lf[875],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k39143 in k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39148,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k39146 in k39143 in k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39148,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39151,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39179,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t5,lf[875],((C_word*)t0)[2]);}

/* k39177 in k39146 in k39143 in k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39179,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[876]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[880],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39151(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[546],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39151(t5,t4);}}

/* k39149 in k39146 in k39143 in k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_39151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39157,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t2,lf[843],((C_word*)t0)[2]);}

/* k39155 in k39149 in k39146 in k39143 in k39125 in k39122 in a39119 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39157,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[596]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a39109 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39110,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k39102 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(26624),t1);}

/* k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23421,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39004,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[394],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[393],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39012,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t10,C_fix(27648));}

/* k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39014,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[3],lf[879],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39014,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39018,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39021,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,t3,C_fix(5376));}

/* k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t2,lf[875],((C_word*)t0)[4]);}

/* k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_39027(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39056,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[877]:lf[878]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39064,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t5,t6);}}

/* k39062 in k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39054 in k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39025 in k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39030,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k39028 in k39025 in k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39033,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22236(t2,lf[875],lf[876],((C_word*)t0)[2]);}

/* k39031 in k39028 in k39025 in k39022 in k39019 in k39016 in a39013 in k39010 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39033,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[873],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[874],((C_word*)t0)[2])));}

/* k39002 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_39004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(27648),t1);}

/* k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23424,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38976,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[394],t7);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[872],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38974 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(26880),t1);}

/* k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23427,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38916,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[393],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38922,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38940,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[871],C_fix(27136),t8,t9,t10);}

/* a38939 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38940,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38948,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38952,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k38950 in a38939 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38946 in a38939 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38948,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a38921 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38922,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k38914 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(27136),t1);}

/* k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23430,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[408],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[393],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38799,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38830,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[870],C_fix(27392),t14,t15,t16);}

/* a38829 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38830,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38834,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k38832 in a38829 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38835 in k38832 in a38829 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38838 in k38835 in k38832 in a38829 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38840,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38853,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k38851 in k38838 in k38835 in k38832 in a38829 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38853,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a38798 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38799,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38803,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k38801 in a38798 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38803,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38818,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k38816 in k38801 in a38798 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38818,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k38791 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(27392),t1);}

/* k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23430,2,t0,t1);}
t2=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23432,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23486,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38673,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[394],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38679,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t4,lf[869],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a38678 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38679,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38695,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t4,t8,C_fix(256));}
else{
t7=t4;
f_38695(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_38695(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k38693 in a38678 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38695,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38706,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k38704 in k38693 in a38678 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38706,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k38671 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(28416),t1);}

/* k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23489,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38534,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[393],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[393],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[394],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38540,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[868],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a38539 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38540(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38540,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38560,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38563,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t7,t11,C_fix(256));}
else{
t10=t7;
f_38563(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_38563(2,t9,C_SCHEME_FALSE);}}

/* k38561 in a38539 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_38560(2,t2,C_SCHEME_END_OF_LIST);}}

/* k38558 in a38539 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38560,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k38532 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(28672),t1);}

/* k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23492,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38382,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[393],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[393],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[394],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38388,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[867],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a38387 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38388,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38406,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t10,t7,C_fix(768));}

/* k38404 in a38387 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38406,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,t3,C_fix(256));}}

/* k38413 in k38404 in a38387 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k38380 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(28160),t1);}

/* k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23495,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38311,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38317,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38335,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[866],C_fix(27904),t6,t7,t8);}

/* a38334 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38335,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38339,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k38337 in a38334 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38340 in k38337 in a38334 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38358,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38356 in k38340 in k38337 in a38334 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38358,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a38316 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38317,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k38309 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(27904),t1);}

/* k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23495,2,t0,t1);}
t2=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23497,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23518,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23634,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38235,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[394],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t5,lf[865],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38233 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(28928),t1);}

/* k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23637,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38155,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[393],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38161,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[864],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a38160 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38161,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38168,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23497(t4,t7);}
else{
t6=t4;
f_38168(2,t6,C_SCHEME_FALSE);}}

/* k38166 in a38160 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38168,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 379  inf->pre");
f_23518(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k38153 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(29184),t1);}

/* k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23640,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38019,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[393],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[393],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[394],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38025,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38051,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[863],C_fix(29440),t23,t24,t25);}

/* a38050 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38051(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38051,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38059,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k38057 in a38050 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38024 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38025,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38033,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38042,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t5,t6,C_fix(512));}
else{
t5=t4;
f_38033(t5,t2);}}

/* k38040 in a38024 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_38033(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k38031 in a38024 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_38033(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k38017 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_38019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(29440),t1);}

/* k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23643,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37975,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[394],t11);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[862],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37973 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(29696),t1);}

/* k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23646,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37865,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37871,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37893,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[861],C_fix(33536),t10,t11,t12);}

/* a37892 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37893,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[442]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37904,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t8,t2);}

/* k37902 in a37892 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37904,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li605),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_37906(t5,((C_word*)t0)[2],t1);}

/* do3576 in k37902 in a37892 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_37906(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37906,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37935,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k37933 in do3576 in k37902 in a37892 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37935,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_37906(t7,((C_word*)t0)[2],t6);}

/* a37870 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37871(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37871,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37887,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t5,t6,C_fix(256));}

/* k37885 in a37870 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37887,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k37863 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(33536),t1);}

/* k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23649,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37790,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37796,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37818,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[860],C_fix(34560),t10,t11,t12);}

/* a37817 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37818,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37822,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k37820 in a37817 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37829,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37827 in k37820 in a37817 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37829,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[726],t1));}

/* a37795 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37796,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37812,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t5,t6,C_fix(256));}

/* k37810 in a37795 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37812,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k37788 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(34560),t1);}

/* k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23652,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37577,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[394],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[394],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[408],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[393],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37583,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37658,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[859],C_fix(34304),t21,t22,t23);}

/* a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37658,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37662,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37698,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k37696 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37660 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37662,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li600),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a37677 in k37660 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37678(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_37678r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37678r(t0,t1,t2,t3);}}

static void C_ccall f_37678r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37686,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37690,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k37688 in a37677 in k37660 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37694,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t2,((C_word*)t0)[2]);}

/* k37692 in k37688 in a37677 in k37660 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37684 in a37677 in k37660 in a37657 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a37582 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37583,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37590,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37626,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_37626(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_37590(t10,t9);}}

/* k37624 in a37582 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37626,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_37590(t2,C_SCHEME_UNDEFINED);}}

/* k37628 in k37624 in a37582 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37590(t3,t2);}

/* k37588 in a37582 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_37590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37590,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37601,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t4,t5);}

/* k37599 in k37588 in a37582 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k37575 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(34304),t1);}

/* k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23655,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37551,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37557,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[858],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a37556 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37557,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k37549 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(33792),t1);}

/* k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23658,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37523,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37531,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(35072));}

/* k37529 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37535,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_22503(t2,lf[453]);}

/* k37533 in k37529 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[4],lf[857],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37521 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(35072),t1);}

/* k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23661,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37495,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37503,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(35584));}

/* k37501 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37507,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_22503(t2,lf[452]);}

/* k37505 in k37501 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[4],lf[856],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37493 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(35584),t1);}

/* k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23664,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37467,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37475,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(35328));}

/* k37473 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37479,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_22503(t2,lf[855]);}

/* k37477 in k37473 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[4],lf[854],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37465 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(35328),t1);}

/* k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23667,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37439,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37447,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(34816));}

/* k37445 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37451,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_22503(t2,lf[463]);}

/* k37449 in k37445 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[4],lf[853],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37437 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(34816),t1);}

/* k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23670,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37302,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[394],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[393],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[394],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[102],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[393],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37308,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37338,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[852],C_fix(36096),t22,t23,t24);}

/* a37337 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37338,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[851]);}

/* a37307 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37308,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37332,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t6,t7,C_fix(256));}

/* k37330 in a37307 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37332,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k37300 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(36096),t1);}

/* k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23673,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37244,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37252,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(31744));}

/* k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37254,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[3],lf[850],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37254,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37258,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k37256 in a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37286,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t3,lf[831],((C_word*)t0)[3]);}

/* k37284 in k37256 in a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37286,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37261(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37274,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37278,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t3,t4);}}

/* k37276 in k37284 in k37256 in a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[2],lf[849],t1);}

/* k37272 in k37284 in k37256 in a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37259 in k37256 in a37253 in k37250 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37242 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(31744),t1);}

/* k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23676,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37183,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37191,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t7,C_fix(31488));}

/* k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37193,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[3],lf[848],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37193,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37197,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37228,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t3,lf[817],((C_word*)t0)[3]);}

/* k37226 in k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37228,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37200(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37216,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37220,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t3,t4);}}

/* k37218 in k37226 in k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[2],lf[847],t1);}

/* k37214 in k37226 in k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37198 in k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_22236(t2,lf[817],lf[816],((C_word*)t0)[3]);}

/* k37201 in k37198 in k37195 in a37192 in k37189 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37181 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(31488),t1);}

/* k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23679,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37092,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[393],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[394],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37098,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37133,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[846],C_fix(30208),t10,t11,t12);}

/* a37132 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37133,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37139,a[2]=t4,a[3]=t3,a[4]=((C_word)li592),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37147,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k37145 in a37132 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37138 in a37132 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37139(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37139,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a37097 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37098(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37098,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37131,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t4,C_fix(4608),lf[845],C_SCHEME_FALSE);}}

/* k37129 in a37097 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37131,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k37090 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(30208),t1);}

/* k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36990,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36996,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37039,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[844],C_fix(29952),t10,t11,t12);}

/* a37038 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37039(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37039,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37043,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t5,lf[843],C_SCHEME_TRUE,t3);}

/* k37041 in a37038 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37048,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li589),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37056,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t3,((C_word*)t0)[2]);}

/* k37054 in k37041 in a37038 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37047 in k37041 in a37038 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37048(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37048,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a36995 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36996,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37029,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k37027 in a36995 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_37029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37029,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k36988 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(29952),t1);}

/* k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23685,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36904,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[394],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[394],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[393],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36910,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[842],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a36909 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36910(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36910,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k36902 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(30720),t1);}

/* k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36624,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36630,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36673,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[841],C_fix(30464),t10,t11,t12);}

/* a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36673,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36677,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36677,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[419]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li585),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_36685(t8,((C_word*)t0)[2],t1);}

/* do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36685(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36685,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t3,t4);}}

/* k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t2,t3);}

/* k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36717,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36717,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t5,((C_word*)t0)[2],C_fix(10756));}

/* k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36777,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_36720(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36784,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_36720(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36794,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[102],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_36720(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k36802 in k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36804,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[596],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_36720(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k36816 in k36802 in k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36818,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[804],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_36720(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k36826 in k36816 in k36802 in k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36828,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_36720(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36838,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k36836 in k36826 in k36816 in k36802 in k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36838,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_36720(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k36846 in k36836 in k36826 in k36816 in k36802 in k36792 in k36782 in k36775 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36848,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[277],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36720(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_36720(t2,C_SCHEME_UNDEFINED);}}

/* k36718 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36720,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36744,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_36744(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_36744(t4,C_SCHEME_FALSE);}}

/* k36742 in k36718 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36744,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[840],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[221],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36723(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36723(t4,t3);}}

/* k36721 in k36718 in k36715 in k36712 in k36709 in k36706 in do3655 in k36675 in a36672 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36723(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36723,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_36685(t7,((C_word*)t0)[2],t6);}

/* a36629 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36630(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36630,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36663,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k36661 in a36629 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36663,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k36622 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(30464),t1);}

/* k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23691,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36510,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[408],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[102],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[393],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36516,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36542,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[839],C_fix(32000),t12,t13,t14);}

/* a36541 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36542,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36546,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k36544 in a36541 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36546,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36550 in k36544 in a36541 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36552,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36572,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[419],t1));}}

/* k36570 in k36550 in k36544 in a36541 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36572,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a36515 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36516,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36526,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_36526(t12,t11);}
else{
t10=t8;
f_36526(t10,C_SCHEME_FALSE);}}

/* k36524 in a36515 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36526(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36526,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k36508 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(32000),t1);}

/* k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23694,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36313,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[408],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[408],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[393],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[393],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[393],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[394],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36319,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36387,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[838],C_fix(32256),t26,t27,t28);}

/* a36386 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36387(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36387,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36391,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t5,t2);}

/* k36389 in a36386 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36319,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36332,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36338,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t9,t4,C_fix(14336));}

/* k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36338,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36344,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_36344(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36373,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t11,C_fix(4608),lf[837],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36332(t5,t4);}}

/* k36371 in k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36344(t3,t2);}

/* k36342 in k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36344,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k36346 in k36342 in k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36348,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_36351(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36362,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t5,C_fix(4608),lf[836],C_SCHEME_FALSE);}}

/* k36360 in k36346 in k36342 in k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36351(t3,t2);}

/* k36349 in k36346 in k36342 in k36336 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36351,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36332(t4,t3);}

/* k36330 in a36318 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_36332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k36311 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(32256),t1);}

/* k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23694,2,t0,t1);}
t2=C_mutate(&lf[415],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23696,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24217,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36041,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[393],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[408],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[393],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[393],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[394],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[408],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[408],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[393],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[394],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[408],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[393],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[394],t58);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t4,lf[835],C_fix(33024),t59,C_retrieve2(lf[415],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k36039 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_36041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(33024),t1);}

/* k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24220,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35985,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[393],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[394],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35993,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_22495(t13,C_fix(33280));}

/* k35991 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(((C_word*)t0)[3],lf[834],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k35983 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(33280),t1);}

/* k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24726,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35813,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[394],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[408],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[102],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[102],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[98],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[408],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[393],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35819,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35865,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[833],C_fix(32512),t25,t26,t27);}

/* a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35865,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24226,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t7,t2);}

/* k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24226,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24244,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24685,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t17,t18,C_fix(14864));}

/* k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24685,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24689,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t2,lf[830],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24692,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t3,lf[819],((C_word*)((C_word*)t0)[6])[1]);}}

/* k24717 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24719,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_24692(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24707,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24711,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t3,t4);}}

/* k24709 in k24717 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[2],lf[832],t1);}

/* k24705 in k24717 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k24690 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t2,lf[831],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k24694 in k24690 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_24244(t4,t3);}

/* k24687 in k24683 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24244(t3,t2);}

/* k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24244(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24244,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24674,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24678,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_24251(t5,C_SCHEME_UNDEFINED);}}

/* k24676 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k24672 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24251(t3,t2);}

/* k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24251,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24254,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24549,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li578),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_24549(t7,t2,t3);}

/* do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24549(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24549,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24559,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24570,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t4,t5);}}

/* k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24570,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li577),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_24572(t5,((C_word*)t0)[2],t1);}

/* do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24572(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24572,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 379  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24586,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24639,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_24589(t4,C_SCHEME_UNDEFINED);}}

/* k24637 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24589(t3,t2);}

/* k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24589(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24589,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24592,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24624,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_24592(t3,C_SCHEME_UNDEFINED);}}

/* k24622 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24592(t3,t2);}

/* k24590 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24592,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24595,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24605,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24603 in k24590 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24605,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24617,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_24595(t2,C_SCHEME_UNDEFINED);}}

/* k24615 in k24603 in k24590 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24617,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k24607 in k24603 in k24590 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24595(t3,t2);}

/* k24593 in k24590 in k24587 in k24584 in do3768 in k24568 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24572(t3,((C_word*)t0)[2],t2);}

/* k24557 in do3765 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24549(t3,((C_word*)t0)[2],t2);}

/* k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24513,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li576),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_24513(t7,t2,t3);}

/* do3779 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24513(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24513,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24524,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24539,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k24537 in do3779 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24539,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k24522 in do3779 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_24513(t4,((C_word*)t0)[2],t3);}

/* k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24261,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24457,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li575),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_24457(t8,t3,t4);}

/* do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24457(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24457,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t3,t4);}}

/* k24465 in do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24470,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24468 in k24465 in do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24470,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24473,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24491,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t5,t6,C_fix(20224));}

/* k24489 in k24468 in k24465 in do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24491,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[395],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24473(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_24473(t2,C_SCHEME_UNDEFINED);}}

/* k24471 in k24468 in k24465 in do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24473,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24477,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k24475 in k24471 in k24468 in k24465 in do3784 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_24457(t4,((C_word*)t0)[2],t3);}

/* k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_24267(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[394],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_24267(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_24267(t4,t3);}}

/* k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24267,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24270,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24418 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24420,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24424,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_24270(t3,t2);}}

/* k24426 in k24418 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24422 in k24418 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24270(t3,t2);}

/* k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24270,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[829]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[647],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[828]);}

/* k24299 in k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[827]);}

/* k24302 in k24299 in k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[826]);}

/* k24305 in k24302 in k24299 in k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[825]);}

/* k24308 in k24305 in k24302 in k24299 in k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24310,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[754],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[755],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[754],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[757],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[758]);
t14=(C_word)C_a_i_list(&a,4,lf[759],((C_word*)t0)[7],t13,lf[823]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[754],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k24367 in k24308 in k24305 in k24302 in k24299 in k24296 in k24268 in k24265 in k24262 in k24259 in k24255 in k24252 in k24249 in k24242 in k24224 in a35864 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24369,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[824],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[754],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[707],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[754],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[708],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[754],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35819,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35835,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k35833 in a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35838,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k35836 in k35833 in a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35838,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35841,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_35841(t7,t6);}
else{
t5=t4;
f_35841(t5,C_SCHEME_UNDEFINED);}}

/* k35839 in k35836 in k35833 in a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35841(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35841,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_35844(t5,t4);}
else{
t3=t2;
f_35844(t3,C_SCHEME_UNDEFINED);}}

/* k35842 in k35839 in k35836 in k35833 in a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35844(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35844,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35855,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t3,((C_word*)t0)[8]);}

/* k35853 in k35842 in k35839 in k35836 in k35833 in a35818 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k35811 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(32512),t1);}

/* k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24729,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35668,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[393],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[102],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[393],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[394],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[393],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35674,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[822],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a35673 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35674(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35674,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35687,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_35687(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35713,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t12,t13,C_fix(256));}}

/* k35711 in a35673 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35713,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35687(t4,t3);}

/* k35685 in a35673 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35687,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k35666 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(37632),t1);}

/* k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24732,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35211,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[393],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[393],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[393],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[394],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[393],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35217,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35256,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[821],C_fix(36352),t23,t24,t25);}

/* a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35256(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35256,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35260,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35260,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[419]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35269,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35272,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t7,t2,C_fix(24576));}

/* k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35272,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35281,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li570),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_35281(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t2,t3);}}

/* k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35548,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35548,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_35345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_35345(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35486,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 379  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k35484 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35486,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35495,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35520,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t6=*((C_word*)lf[434]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_35495(t4,C_SCHEME_FALSE);}}

/* k35518 in k35484 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_35495(t2,(C_word)C_i_string_equal_p(t1,lf[820]));}

/* k35493 in k35484 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35495(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35495,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35502,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35506,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t5=*((C_word*)lf[434]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_35345(t2,C_SCHEME_UNDEFINED);}}

/* k35504 in k35493 in k35484 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35500 in k35493 in k35484 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35345(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35345,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35348,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t3,((C_word*)t0)[2],C_fix(24064));}

/* k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35423,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t2,lf[817],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35464,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k35462 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35464,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t2,lf[819],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_35348(t2,C_SCHEME_UNDEFINED);}}

/* k35466 in k35462 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35468,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35472,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k35470 in k35466 in k35462 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35472,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[750],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[818]);
t6=((C_word*)t0)[2];
f_35348(t6,t5);}

/* k35425 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35427,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35431,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k35429 in k35425 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35431,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35434,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35458,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_22214(t4,lf[817],((C_word*)((C_word*)t0)[2])[1]);}

/* k35456 in k35429 in k35425 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35458,2,t0,t1);}
t2=(C_word)C_eqp(lf[816],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[618]);
t4=(C_word)C_a_i_list(&a,3,lf[754],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[708],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35434(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_35434(t3,C_SCHEME_UNDEFINED);}}

/* k35432 in k35429 in k35425 in k35421 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35434,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[750],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[815]);
t5=((C_word*)t0)[2];
f_35348(t5,t4);}

/* k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35348,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35351,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35362,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35420,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k35418 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[814]);}

/* k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35362,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35364,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li571),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35364(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35364(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35364,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35379,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[812]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35383,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35412,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k35410 in do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k35381 in do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35383,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35386,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_35386(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35400,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[813]);}}

/* k35398 in k35381 in do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35386(t3,t2);}

/* k35384 in k35381 in do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_35364(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k35377 in do3866 in k35360 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35379,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[443],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k35349 in k35346 in k35343 in k35546 in k35334 in k35331 in k35328 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35351,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_35269(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3840 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35281(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35281,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35291,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k35289 in do3840 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35291,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[811],t2);}

/* k35295 in k35289 in do3840 in k35270 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35297,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[750],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[442],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_35281(t9,((C_word*)t0)[2],t8);}

/* k35267 in k35258 in a35255 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a35216 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35217,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35228,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35234,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t9,t7,C_fix(24576));}

/* k35232 in a35216 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35234,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_23432(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_35228(t2,C_SCHEME_UNDEFINED);}}

/* k35248 in k35232 in a35216 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35250,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35228(t5,t4);}

/* k35226 in a35216 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_35228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k35209 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(36352),t1);}

/* k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24735,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35135,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[394],t19);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[810],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35133 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(36608),t1);}

/* k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24738,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35091,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[98],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35097,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35111,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_21796(t3,lf[809],C_fix(36864),t5,t6,t7);}

/* a35110 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35111(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35111,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35119,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35123,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k35121 in a35110 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35117 in a35110 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35119,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[419],t1));}

/* a35096 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35097,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35105,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_22154(t4,t5);}

/* k35103 in a35096 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k35089 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[361],"*rules*"),C_fix(36864),t1);}

/* k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24738,2,t0,t1);}
t2=lf[427]=C_SCHEME_FALSE;;
t3=lf[428]=C_SCHEME_FALSE;;
t4=lf[429]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[430],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[431]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24745,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[442]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24922,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[452]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25075,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[453]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25084,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[461]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25131,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25137,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25156,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35083,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t14=C_retrieve(lf[766]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[807],t13);}

/* a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35083(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35083,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28509,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[808]);}

/* k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28512,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_28491(t2,lf[807],((C_word*)t0)[2],C_retrieve2(lf[656],"*loop-operators*"));}

/* k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28512,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[618],C_retrieve2(lf[656],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28519,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28664,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28678,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t11=C_retrieve2(lf[474],"loop-returning");
f_25263(3,t11,t10,t1);}

/* k28676 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28678,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_28664(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28674,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t3=C_retrieve2(lf[474],"loop-returning");
f_25263(3,t3,t2,((C_word*)t0)[2]);}}

/* k28672 in k28676 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28664(t2,(C_word)C_i_car(t1));}

/* k28662 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28519,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[469],"loop-end-tests");
f_25215(3,t4,t3,((C_word*)t0)[2]);}

/* k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_28526(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[394],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[806],C_SCHEME_FALSE);
t7=t2;
f_28526(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28526(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28526,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28537,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t4=C_retrieve2(lf[466],"loop-bindings");
f_25179(3,t4,t3,((C_word*)t0)[2]);}

/* k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28541,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[468],"loop-initially");
f_25203(3,t4,t3,((C_word*)t0)[3]);}

/* k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28545,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[618]);
t3=(C_word)C_a_i_list(&a,1,lf[800]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28613,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28617,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t7=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t7,t6,((C_word*)t0)[3]);}

/* k28615 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28621,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28625,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[472],"loop-stepping");
f_25239(3,t4,t3,((C_word*)t0)[2]);}

/* k28623 in k28615 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28625,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k28619 in k28615 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28611 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28607 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28609,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[754],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[708],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28577,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28581,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t9=C_retrieve2(lf[473],"loop-finally");
f_25251(3,t9,t8,((C_word*)t0)[2]);}

/* k28579 in k28607 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28581,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k28575 in k28607 in k28543 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28577,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[754],t3);
t5=(C_word)C_a_i_list(&a,2,lf[708],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k28539 in k28535 in k28524 in k28521 in k28517 in k28510 in k28507 in a35082 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28541,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25159,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35069,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[805],t3);}

/* a35068 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35069,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[804],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[419],t5,t3));}

/* k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25162,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35040,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[803],t3);}

/* a35039 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35040(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35040,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35044,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[802]);}

/* k35042 in a35039 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35044,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25165,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35037,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[801],t3);}

/* a35036 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_35037(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35037,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25165,2,t0,t1);}
t2=C_mutate(&lf[465],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25173,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[466],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25179,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25191,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[468],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25203,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[469],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25215,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[470],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25227,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[471],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25233,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[472],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25239,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[473],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25251,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[474],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25263,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[475],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25275,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[485],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25426,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[486],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25497,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[487],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25503,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[488],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25509,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[489],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25515,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25675,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[505],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25757,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[535],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26139,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26186,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[557],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26537,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[565],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26679,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[579],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26872,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[582],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26939,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[585],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26977,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[588],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27136,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[617],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27682,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[619],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27688,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27754,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[631],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27845,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[634],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27946,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28077,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28491,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[566],C_retrieve2(lf[565],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[479],C_retrieve2(lf[585],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[654],C_retrieve2(lf[535],"parse-repeat"),lf[651]);
t38=(C_word)C_a_i_list(&a,2,lf[513],C_retrieve2(lf[505],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[509],C_retrieve2(lf[505],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[511],C_retrieve2(lf[505],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[520],C_retrieve2(lf[505],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[510],C_retrieve2(lf[505],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[512],C_retrieve2(lf[505],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[545],C_retrieve2(lf[538],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[554],C_retrieve2(lf[538],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[539],C_retrieve2(lf[538],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[558],C_retrieve2(lf[557],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[544],C_retrieve2(lf[538],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[506],C_retrieve2(lf[497],"parse-for"),lf[651],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[655],C_retrieve2(lf[497],"parse-for"),lf[651]);
t51=(C_word)C_a_i_list(&a,3,lf[647],C_retrieve2(lf[579],"parse-do"),lf[638]);
t52=(C_word)C_a_i_list(&a,3,lf[599],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t54=(C_word)C_a_i_list(&a,3,lf[604],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t55=(C_word)C_a_i_list(&a,3,lf[589],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t56=(C_word)C_a_i_list(&a,3,lf[590],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t57=(C_word)C_a_i_list(&a,3,lf[592],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t58=(C_word)C_a_i_list(&a,3,lf[593],C_retrieve2(lf[588],"parse-accumulation"),lf[638]);
t59=(C_word)C_a_i_list(&a,4,lf[626],C_retrieve2(lf[625],"parse-thereis"),lf[638],C_retrieve2(lf[617],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[627],C_retrieve2(lf[625],"parse-thereis"),lf[638],C_retrieve2(lf[617],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[628],C_retrieve2(lf[625],"parse-thereis"),lf[638],C_retrieve2(lf[617],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[618],C_retrieve2(lf[631],"parse-return"),lf[638],C_retrieve2(lf[617],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[622],C_retrieve2(lf[619],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[621],C_retrieve2(lf[619],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[640],"parse-conditional"),lf[638]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[640],"parse-conditional"),lf[638]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[640],"parse-conditional"),lf[638]);
t68=(C_word)C_a_i_list(&a,3,lf[483],C_retrieve2(lf[582],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[656],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28685,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34895,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t73=C_retrieve(lf[766]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[651],t72);}

/* a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34895(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34895,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28691,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_28491(t3,lf[651],t2,C_retrieve2(lf[656],"*loop-operators*"));}

/* k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28694,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[618],C_retrieve2(lf[656],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28823,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t6=C_retrieve2(lf[474],"loop-returning");
f_25263(3,t6,t5,t1);}

/* k28821 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28823,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28705,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t3=C_retrieve2(lf[466],"loop-bindings");
f_25179(3,t3,t2,((C_word*)t0)[2]);}

/* k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28709,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[468],"loop-initially");
f_25203(3,t4,t3,((C_word*)t0)[2]);}

/* k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28733,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[469],"loop-end-tests");
f_25215(3,t4,t3,((C_word*)t0)[2]);}

/* k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[394],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[800],lf[358]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_28740(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_28740(t3,C_SCHEME_END_OF_LIST);}}

/* k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28740(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28740,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28744,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28748,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t4,t3,((C_word*)t0)[2]);}

/* k28746 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28752,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[472],"loop-stepping");
f_25239(3,t4,t3,((C_word*)t0)[2]);}

/* k28754 in k28746 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28756,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[800],lf[796]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28772,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28776,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t5=C_retrieve2(lf[473],"loop-finally");
f_25251(3,t5,t4,((C_word*)t0)[2]);}

/* k28774 in k28754 in k28746 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28776,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k28770 in k28754 in k28746 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28772,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[358],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k28750 in k28746 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28742 in k28738 in k28735 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28731 in k28711 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28733,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[796],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[797],t2);
t4=(C_word)C_a_i_list(&a,3,lf[798],lf[799],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k28707 in k28703 in k28692 in k28689 in a34894 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28709,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28685,2,t0,t1);}
t2=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28829,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[662]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29558,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[663]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29577,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[664]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30028,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[665]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30047,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30776,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[668]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30795,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[670]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31524,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[671]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31543,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[672]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31994,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[673]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32013,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[674]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32464,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[675]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32483,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[676]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32953,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[677]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32971,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[678]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32986,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[679]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33001,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33020,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[681]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33035,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[682]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33054,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[683]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33073,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[684]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33096,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[685]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33115,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[686]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33138,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33185,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[690]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33240,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[691]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33259,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33282,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33310,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33338,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33366,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[696]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33394,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[697]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33422,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[698]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33450,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[699]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33478,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33506,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33534,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33549,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33607,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t41=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[794],lf[795]);}

/* k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33610,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[792],lf[793]);}

/* k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33613,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[790],lf[791]);}

/* k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33616,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[788],lf[789]);}

/* k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33619,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[786],lf[787]);}

/* k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33622,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[784],lf[785]);}

/* k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33625,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[782],lf[783]);}

/* k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33628,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[780],lf[781]);}

/* k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33631,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[778],lf[779]);}

/* k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33634,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[776],lf[777]);}

/* k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33637,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[774],lf[775]);}

/* k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33637,2,t0,t1);}
t2=C_mutate((C_word*)lf[709]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33639,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[710]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33696,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33753,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33762,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t6=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[772],lf[773]);}

/* k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33765,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[770],lf[771]);}

/* k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33768,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[767]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[768],lf[769]);}

/* k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33768,2,t0,t1);}
t2=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33770,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[443]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33960,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33974,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33988,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33991,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[722],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34003,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[724],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34012,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[725],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34056,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[454]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34078,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[726]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34097,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[729]+1,C_retrieve(lf[721]));
t13=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34273,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[736]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34336,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[737]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34345,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[738]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34351,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34360,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34418,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[742],lf[743]);
t20=C_mutate(&lf[744],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34428,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34499,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34832,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li561),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_34832(t28,t24,C_retrieve2(lf[656],"*loop-operators*"));}

/* do6168 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34832(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34832,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[622],C_retrieve2(lf[744],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[621],C_retrieve2(lf[744],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34860,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[599]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[604]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[589]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[590]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[592]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[593]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[626]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[627]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[628]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[618]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[622]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[621]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_34860(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_34860(t11,t10);}}}

/* k34858 in do6168 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34860(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34832(t3,((C_word*)t0)[2],t2);}

/* k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34499,2,t0,t1);}
t2=C_mutate(&lf[747],t1);
t3=C_mutate(&lf[748],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34501,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34789,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34826,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 660  ##sys#register-macro-2");
t6=C_retrieve(lf[766]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[765],t5);}

/* a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34826(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34826,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34544,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 605  parse-iteration");
f_28491(t3,lf[765],t2,C_retrieve2(lf[747],"*run-operators*"));}

/* k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34544,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[742],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34550,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[764]);}

/* k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[763]);}

/* k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34556,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 615  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[762]);}

/* k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_34560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 617  loop-end-tests");
t3=C_retrieve2(lf[469],"loop-end-tests");
f_25215(3,t3,t2,((C_word*)t0)[3]);}

/* k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34560,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_34563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34770,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t5=C_retrieve2(lf[473],"loop-finally");
f_25251(3,t5,t4,((C_word*)t0)[3]);}

/* k34768 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34770,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34782,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 619  loop-finally");
t4=C_retrieve2(lf[473],"loop-finally");
f_25251(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_34563(t2,C_SCHEME_UNDEFINED);}}

/* k34780 in k34768 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34782,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k34776 in k34768 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34778,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[419],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34563(t4,t3);}

/* k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34756,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34763,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 627  loop-looping");
t5=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34727,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_34727(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[394],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_34727(t7,t6);}}}

/* k34725 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34727,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_34566(2,t5,t4);}

/* k34761 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 626  process-code-terminates?");
f_34501(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k34754 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_34566(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 628  printf");
t2=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[761]);}}

/* k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34566,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[754],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[755],t4);
t6=(C_word)C_a_i_list(&a,1,lf[756]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[756]);
t8=(C_word)C_a_i_list(&a,3,lf[754],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[757],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[758]);
t14=(C_word)C_a_i_list(&a,4,lf[759],((C_word*)t0)[6],t13,lf[760]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[754],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34657,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34661,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 647  loop-looping");
t20=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t20,t19,((C_word*)t0)[3]);}

/* k34663 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34669,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34673,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 648  loop-stepping");
t4=C_retrieve2(lf[472],"loop-stepping");
f_25239(3,t4,t3,((C_word*)t0)[2]);}

/* k34671 in k34663 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34673,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k34667 in k34663 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34659 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34657,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[754],t2);
t4=(C_word)C_a_i_list(&a,3,lf[707],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[754],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[708],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[754],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34613,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 652  loop-bindings");
t12=C_retrieve2(lf[466],"loop-bindings");
f_25179(3,t12,t11,((C_word*)t0)[2]);}

/* k34611 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34613,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34609,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 653  loop-initially");
t3=C_retrieve2(lf[468],"loop-initially");
f_25203(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_34576(t2,C_SCHEME_FALSE);}}

/* k34607 in k34611 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_34576(t2,(C_word)C_i_nullp(t1));}

/* k34574 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34576,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 656  loop-bindings");
t3=C_retrieve2(lf[466],"loop-bindings");
f_25179(3,t3,t2,((C_word*)t0)[2]);}}

/* k34585 in k34574 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34591,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34595,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 657  loop-initially");
t4=C_retrieve2(lf[468],"loop-initially");
f_25203(3,t4,t3,((C_word*)t0)[2]);}

/* k34593 in k34585 in k34574 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34595,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k34589 in k34585 in k34574 in k34655 in k34564 in k34561 in k34558 in k34554 in k34551 in k34548 in k34542 in a34825 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34591,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34792,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34797,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 663  ##sys#register-macro");
t4=C_retrieve(lf[752]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[753],t3);}

/* a34796 in k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34797(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_34797r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_34797r(t0,t1,t2,t3);}}

static void C_ccall f_34797r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34801,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34811,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_34811(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_34811(t6,C_SCHEME_FALSE);}}

/* k34809 in a34796 in k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_34801(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 665  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[751],((C_word*)t0)[2]);}}

/* k34799 in a34796 in k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34801,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[750],t2));}

/* k34790 in k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34795,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 772  return-to-host");
t3=C_retrieve(lf[749]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k34793 in k34790 in k34787 in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34501(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_34501,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34517,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k34515 in process-code-terminates? in k34497 in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 601  process-code-terminates?");
f_34501(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34428,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34439,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 568  loop-error");
f_25515(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[745],t7,lf[746]));}
else{
t13=t12;
f_34439(2,t13,C_SCHEME_UNDEFINED);}}

/* k34437 in run-while-until in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[621]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_34442(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[622]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[395],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_34442(t10,t9);}
else{
t5=t2;
f_34442(t5,C_SCHEME_UNDEFINED);}}}

/* k34440 in k34437 in run-while-until in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34442,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34449,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[742],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 572  make-loop-clause");
f_25275(t2,(C_word)C_a_i_list(&a,4,lf[476],((C_word*)t0)[2],lf[481],t4));}

/* k34447 in k34440 in k34437 in run-while-until in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 572  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34422,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34073,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34071 in hush in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34073,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6080,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34420 in hush in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 553  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34360(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_34360r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34360r(t0,t1,t2);}}

static void C_ccall f_34360r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34364,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 543  scheduler-stop");
f_34056(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34378,a[2]=t5,a[3]=((C_word)li553),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_34378(t7,t3,t2);}}

/* do6138 in stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34378(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34378,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34388,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  scheduler-stop");
f_34056(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[740],t5);}}}

/* k34386 in do6138 in stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34378(t3,((C_word*)t0)[2],t2);}

/* k34362 in stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34355,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34051,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34049 in cont in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34051,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6070,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34353 in cont in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 539  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34033,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k34031 in paused? in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34033,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6062,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34340,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34042,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34040 in pause in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34042,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6066,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34338 in pause in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 532  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34273(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_34273r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_34273r(t0,t1,t2);}}

static void C_ccall f_34273r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34286,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33998,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[732]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34298,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_34298(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_34298(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[735])));}}}

/* k34296 in time-format in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34298(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[729]+1,C_retrieve(lf[721]));
C_trace("ChickenBridge.scm: 521  scheduler-set-time-milliseconds");
f_34003(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[733]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[729]+1,C_retrieve(lf[720]));
C_trace("ChickenBridge.scm: 525  scheduler-set-time-milliseconds");
f_34003(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 528  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[734],t4);}}}

/* k33996 in time-format in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33998,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6042,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34284 in time-format in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[731]));}

/* sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34097(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_34097r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_34097r(t0,t1,t2,t3);}}

static void C_ccall f_34097r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34099,a[2]=t2,a[3]=((C_word)li541),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34219,a[2]=t4,a[3]=((C_word)li542),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34224,a[2]=t5,a[3]=((C_word)li543),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start60976118");
t7=t6;
f_34224(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id60986116");
t9=t5;
f_34219(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body60956100");
t11=t4;
f_34099(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[727]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[728],t10);}}}}

/* def-start6097 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34224(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34224,NULL,2,t0,t1);}
C_trace("def-id60986116");
t2=((C_word*)t0)[2];
f_34219(t2,t1,C_fix(0));}

/* def-id6098 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34219(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34219,NULL,3,t0,t1,t2);}
C_trace("body60956100");
t3=((C_word*)t0)[2];
f_34099(t3,t1,t2,C_fix(-1));}

/* body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34099(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34099,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34101,a[2]=t4,a[3]=((C_word)li538),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34129,a[2]=t5,a[3]=((C_word)li539),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34159,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34170,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li540),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_34170(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34206,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34218,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextstart");
t11=t6;
f_34101(t11,t10);}}

/* k34216 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34218,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34214,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextid");
t4=((C_word*)t0)[2];
f_34129(t4,t3);}

/* k34212 in k34216 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 505  scheduler-sprout");
f_34012(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34204 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_34159(2,t2,((C_word*)t0)[2]);}

/* do6109 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34170(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34170,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34180,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34203,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextstart");
t6=((C_word*)t0)[2];
f_34101(t6,t5);}}

/* k34201 in do6109 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34203,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34199,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 503  nextid");
t4=((C_word*)t0)[2];
f_34129(t4,t3);}

/* k34197 in k34201 in do6109 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 502  scheduler-sprout");
f_34012(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34178 in do6109 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34170(t3,((C_word*)t0)[2],t2);}

/* k34157 in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 509  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34129,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6095 in sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34101,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34078(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34078,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34083,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34083 in load-sal-file in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34083(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34083,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34088,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34088(2,t4,C_SCHEME_FALSE);}}

/* k34086 */
static void C_ccall f_34088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6086(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34056(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34056,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34060,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34058 in scheduler-stop in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34060,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6075,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34012(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34012,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34016,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k34014 in scheduler-sprout in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34016,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6055,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_34003(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34003,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34007,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[723]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34005 in scheduler-set-time-milliseconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_34007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34007,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6047,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33991,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6039(t2));}

/* current-time-milliseconds in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33988,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6036(t2));}

/* print-error in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33974(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33974,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33979,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_33979(2,t4,C_SCHEME_FALSE);}}

/* k33977 in print-error in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6031(C_SCHEME_UNDEFINED,t1));}

/* print-message in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33960(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33960,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33965,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_33965(2,t4,C_SCHEME_FALSE);}}

/* k33963 in print-message in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6025(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33770(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33770,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33824,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33831,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 398  make-string");
t5=*((C_word*)lf[344]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33831,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33833,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li524),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_33833(t5,((C_word*)t0)[2],lf[719],t1,C_fix(0));}

/* do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33833(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33833,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33843,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 401  printf");
t6=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_33843(2,t6,C_SCHEME_UNDEFINED);}}}

/* k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33860,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33862,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li523),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_33862(t7,t3,C_fix(0));}

/* do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33862(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33862,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33882,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33817,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 390  floor");
t14=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 406  string-append");
t3=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[718]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33899,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33902,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 408  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k33900 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33902,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_33899(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 409  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k33942 in k33900 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33944,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_33899(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33914,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 411  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k33912 in k33942 in k33900 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33914,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_33899(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_33899(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k33897 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33899,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_33862(t4,((C_word*)t0)[2],t3);}

/* k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33817,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33782,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 391  modulo");
t5=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33782,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33809,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 392  floor");
t5=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k33807 in k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33809,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 393  modulo");
t5=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k33788 in k33807 in k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33790,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k33795 in k33788 in k33807 in k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33801,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k33799 in k33795 in k33788 in k33807 in k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33805,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k33803 in k33799 in k33795 in k33788 in k33807 in k33780 in k33815 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 394  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[715],((C_word*)t0)[3],lf[716],((C_word*)t0)[2],lf[717],t1);}

/* k33880 in do6013 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[713],t1,lf[714]);}

/* k33858 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 402  printf");
t2=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33844 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33849,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 414  printf");
t3=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k33847 in k33844 in k33841 in do5999 in k33829 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33849,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_33833(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k33822 in cm-logo in k33766 in k33763 in k33760 in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 415  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33758,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_33758 in cs:clear in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33758,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5991(C_SCHEME_UNDEFINED));}

/* cs:f in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33696(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_33696r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33696r(t0,t1,t2);}}

static void C_ccall f_33696r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33700,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_33700(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33709,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33729,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_33729(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_33729(t8,C_SCHEME_FALSE);}}}

/* k33727 in cs:f in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33729(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_33709(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_33709(t2,C_SCHEME_UNDEFINED);}}

/* k33707 in cs:f in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33709,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33717,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_33717 in k33707 in cs:f in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33717(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33717,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5984(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k33698 in cs:f in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33639(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_33639r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33639r(t0,t1,t2);}}

static void C_ccall f_33639r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33643,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_33643(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33652,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33672,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_33672(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_33672(t8,C_SCHEME_FALSE);}}}

/* k33670 in cs:i in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33672(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_33652(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_33652(t2,C_SCHEME_UNDEFINED);}}

/* k33650 in cs:i in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_33652(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33652,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33660,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_33660 in k33650 in cs:i in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33660,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5973(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k33641 in cs:i in k33635 in k33632 in k33629 in k33626 in k33623 in k33620 in k33617 in k33614 in k33611 in k33608 in k33605 in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33549(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33549,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33561,a[2]=t2,a[3]=((C_word)li513),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33598,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33603,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_33603 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33603(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33603,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5917(C_SCHEME_UNDEFINED,t2));}

/* f_33598 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33598(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33598,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5908(C_SCHEME_UNDEFINED,t2));}

/* a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33567,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li512),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-current-continuation");
t4=*((C_word*)lf[708]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33567(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33567,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33573,a[2]=t2,a[3]=((C_word)li510),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li511),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  with-exception-handler");
t5=C_retrieve(lf[707]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a33592 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33597,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k33595 in a33592 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a33572 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33573(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33573,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33577,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33584,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33588,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33591,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  condition-property-accessor");
t7=C_retrieve(lf[704]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[705],lf[706]);}

/* k33589 in a33572 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33586 in a33572 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[703],t1);}

/* k33582 in a33572 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  print-error");
t2=C_retrieve(lf[432]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33575 in a33572 in a33566 in a33560 in mp:inhook in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33534(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33534,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33539,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33539 in mp:mm in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33539(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33539,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5901(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33506,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33511,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_33511 in mp:bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33511,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5892(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33478,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33483,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_33483 in mp:press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33483,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5877(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33450,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33455,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_33455 in mp:prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33455(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33455,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5862(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33422,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33427,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_33427 in mp:ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33427,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5847(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33394,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33399,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_33399 in mp:touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33399,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5831(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33366,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33371,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_33371 in mp:on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33371(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33371,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5815(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33338,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33343,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_33343 in mp:off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33343,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5799(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33310(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33310,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33315,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33315 in mp:midi in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33315,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5784(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33282,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33287,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33287 in mp:note in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33287,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5767(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33259,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33263,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33264,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33264 in mm:num-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33264,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5749(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33261 in mm:num-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33240(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33240,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33245,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33245 in mm:num in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33245,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5738(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33185(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33185,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33189,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33192,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  mm:type?");
t6=C_retrieve(lf[687]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k33190 in mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_33195(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:type?");
t3=C_retrieve(lf[687]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k33193 in k33190 in mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33195,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33199,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33219,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[689]));}}

/* f_33219 in k33193 in k33190 in mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33219,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5727(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_33199 in k33193 in k33190 in mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33199,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5717(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33187 in mm:val-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33138(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33138,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33145,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  mm:type?");
t4=C_retrieve(lf[687]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k33143 in mm:val in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_33148(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:type?");
t3=C_retrieve(lf[687]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k33146 in k33143 in mm:val in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33148,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33152,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33168,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_33168 in k33146 in k33143 in mm:val in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33168,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5704(C_SCHEME_UNDEFINED,t4,t5));}

/* f_33152 in k33146 in k33143 in mm:val in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33152(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33152,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5696(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33115,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33119,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33120,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_33120 in mm:vel-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33120,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5683(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33117 in mm:vel-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33096,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33101,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_33101 in mm:vel in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33101,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5672(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33073(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33073,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33077,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33078,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33078 in mm:key-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33078,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5661(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33075 in mm:key-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33054(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33054,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33059,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33059 in mm:key in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33059,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5650(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33035,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33039,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33040,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33040 in mm:chan-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33040,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5640(C_SCHEME_UNDEFINED,t4,t5));}

/* k33037 in mm:chan-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33020(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33020,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33025,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33025 in mm:chan in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33025(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33025,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5631(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33001,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33005,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33006,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33006 in mm:time-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33006,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5622(C_SCHEME_UNDEFINED,t4,t5));}

/* k33003 in mm:time-set! in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_33005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32986(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32986,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32991,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_32991 in mm:time in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32991(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32991,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5612(t3,t4));}

/* mm:copy in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32971(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32971,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32976,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_32976 in mm:copy in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32976(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32976,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5604(t3,t4));}

/* mm:free in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32953(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32953,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32957,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32961,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_32961 in mm:free in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32961(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32961,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5596(C_SCHEME_UNDEFINED,t3));}

/* k32955 in mm:free in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32483(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32483r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32483r(t0,t1,t2);}}

static void C_ccall f_32483r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32487,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32487(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32812,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[658]);}
else{
t23=t22;
f_32812(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[666]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32847,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[666]);}
else{
t24=t23;
f_32847(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[661]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32882,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[661]);}
else{
t25=t24;
f_32882(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32911,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32911(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32909 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32911,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32926,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32924 in k32909 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32918(2,t2,C_SCHEME_UNDEFINED);}}

/* k32916 in k32909 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32487(t5,t4);}

/* k32880 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32884 in k32880 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32487(t7,t6);}

/* k32845 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32849 in k32845 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32487(t7,t6);}

/* k32810 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32814 in k32810 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32487(t7,t6);}

/* k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32487,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32490(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32677,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_32677(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32712,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_32712(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32747,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_32747(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32776,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32776(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32774 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32776,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32791,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32789 in k32774 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32783(2,t2,C_SCHEME_UNDEFINED);}}

/* k32781 in k32774 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32490(t5,t4);}

/* k32745 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32749 in k32745 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32490(t7,t6);}

/* k32710 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32716(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32714 in k32710 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32490(t7,t6);}

/* k32675 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32681(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32679 in k32675 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32490(t7,t6);}

/* k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32490,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32493,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32493(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32542,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_32542(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32577,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_32577(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32612,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_32612(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32641,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32641(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32639 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32641,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32656,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32654 in k32639 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32648(2,t2,C_SCHEME_UNDEFINED);}}

/* k32646 in k32639 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32493(t5,t4);}

/* k32610 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32616,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32616(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32614 in k32610 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32493(t7,t6);}

/* k32575 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32581,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32581(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32579 in k32575 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32493(t7,t6);}

/* k32540 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32546(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32544 in k32540 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32493(t7,t6);}

/* k32491 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32493(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32493,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32496(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32494 in k32491 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32500,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32500 in k32494 in k32491 in k32488 in k32485 in mm:make-bend in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32500,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5573(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32464(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32464,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32469,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_32469 in mm:press? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32469,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5494(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32013(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32013r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32013r(t0,t1,t2);}}

static void C_ccall f_32013r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32017,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32017(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32342,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[658]);}
else{
t23=t22;
f_32342(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[666]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32377,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[666]);}
else{
t24=t23;
f_32377(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[661]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32412,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[661]);}
else{
t25=t24;
f_32412(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32441,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32441(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32439 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32441,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32456,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32454 in k32439 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32448(2,t2,C_SCHEME_UNDEFINED);}}

/* k32446 in k32439 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32017(t5,t4);}

/* k32410 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32414 in k32410 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32017(t7,t6);}

/* k32375 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32381(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32379 in k32375 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32017(t7,t6);}

/* k32340 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32346(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32344 in k32340 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32017(t7,t6);}

/* k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32017(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32017,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32020(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32207,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_32207(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32242,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_32242(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32277,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_32277(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32306,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32306(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32304 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32306,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32321,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32319 in k32304 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32313(2,t2,C_SCHEME_UNDEFINED);}}

/* k32311 in k32304 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32020(t5,t4);}

/* k32275 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32281(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32279 in k32275 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32020(t7,t6);}

/* k32240 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32246(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32244 in k32240 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32020(t7,t6);}

/* k32205 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32209 in k32205 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32020(t7,t6);}

/* k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32023,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32023(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32072,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_32072(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32107,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_32107(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32142,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_32142(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32171,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32171(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32169 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32171,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32186,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32184 in k32169 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32178(2,t2,C_SCHEME_UNDEFINED);}}

/* k32176 in k32169 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32023(t5,t4);}

/* k32140 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32146(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32144 in k32140 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32023(t7,t6);}

/* k32105 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32111(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32109 in k32105 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32023(t7,t6);}

/* k32070 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32076(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32074 in k32070 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32023(t7,t6);}

/* k32021 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_32023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32023,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32026,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32026(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32024 in k32021 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32030,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32030 in k32024 in k32021 in k32018 in k32015 in mm:make-press in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_32030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32030,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5479(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31994,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31999,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_31999 in mm:prog? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31999(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31999,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5400(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31543(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_31543r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31543r(t0,t1,t2);}}

static void C_ccall f_31543r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_31547,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_31547(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31872,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[658]);}
else{
t23=t22;
f_31872(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[666]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31907,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[666]);}
else{
t24=t23;
f_31907(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[661]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31942,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[661]);}
else{
t25=t24;
f_31942(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31971,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_31971(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k31969 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31971,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31986,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31984 in k31969 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31978(2,t2,C_SCHEME_UNDEFINED);}}

/* k31976 in k31969 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31547(t5,t4);}

/* k31940 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31944 in k31940 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31547(t7,t6);}

/* k31905 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31911(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31909 in k31905 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31547(t7,t6);}

/* k31870 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31876(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31874 in k31870 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31547(t7,t6);}

/* k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_31547(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31547,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_31550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31550(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31737,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_31737(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31772,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_31772(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31807,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_31807(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31836,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31836(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31834 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31836,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31851,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31849 in k31834 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31843(2,t2,C_SCHEME_UNDEFINED);}}

/* k31841 in k31834 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31550(t5,t4);}

/* k31805 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31809 in k31805 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31550(t7,t6);}

/* k31770 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31774 in k31770 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31550(t7,t6);}

/* k31735 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31739 in k31735 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31550(t7,t6);}

/* k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_31550(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31550,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31553,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31553(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31602,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_31602(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31637,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[666]);}
else{
t7=t6;
f_31637(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31672,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_31672(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31701,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31701(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31699 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31701,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31716,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31714 in k31699 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31708(2,t2,C_SCHEME_UNDEFINED);}}

/* k31706 in k31699 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31553(t5,t4);}

/* k31670 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31676(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31674 in k31670 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31553(t7,t6);}

/* k31635 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31639 in k31635 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31553(t7,t6);}

/* k31600 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31604 in k31600 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31553(t7,t6);}

/* k31551 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_31553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31553,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31556,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31556(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31554 in k31551 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31560,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_31560 in k31554 in k31551 in k31548 in k31545 in mm:make-prog in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31560,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5385(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31524(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31524,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31529,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_31529 in mm:ctrl? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31529,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5306(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30795(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30795r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30795r(t0,t1,t2);}}

static void C_ccall f_30795r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30799,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30799(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[658]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31367,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[658]);}
else{
t27=t26;
f_31367(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[669]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31402,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[669]);}
else{
t28=t27;
f_31402(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[666]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31437,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[666]);}
else{
t29=t28;
f_31437(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[661]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31472,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[661]);}
else{
t30=t29;
f_31472(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31501,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31501(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31499 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31501,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31516,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31514 in k31499 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31508(2,t2,C_SCHEME_UNDEFINED);}}

/* k31506 in k31499 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30799(t5,t4);}

/* k31470 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31476(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31474 in k31470 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30799(t7,t6);}

/* k31435 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31439 in k31435 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30799(t7,t6);}

/* k31400 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31404 in k31400 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30799(t7,t6);}

/* k31365 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31371,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31371(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31369 in k31365 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30799(t7,t6);}

/* k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30799,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30802(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31197,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_31197(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[669]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31232,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[669]);}
else{
t7=t6;
f_31232(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31267,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_31267(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31302,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_31302(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31331,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31331(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31329 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31331,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31346,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31344 in k31329 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31338(2,t2,C_SCHEME_UNDEFINED);}}

/* k31336 in k31329 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30802(t5,t4);}

/* k31300 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31304 in k31300 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30802(t7,t6);}

/* k31265 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31271(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31269 in k31265 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30802(t7,t6);}

/* k31230 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31236(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31234 in k31230 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30802(t7,t6);}

/* k31195 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31199 in k31195 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30802(t7,t6);}

/* k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30802,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30805(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31027,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_31027(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[669]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31062,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[669]);}
else{
t7=t6;
f_31062(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31097,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_31097(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31132,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_31132(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31161,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31161(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31159 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31161,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31176,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31174 in k31159 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31168(2,t2,C_SCHEME_UNDEFINED);}}

/* k31166 in k31159 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30805(t5,t4);}

/* k31130 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31134 in k31130 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30805(t7,t6);}

/* k31095 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31101(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31099 in k31095 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30805(t7,t6);}

/* k31060 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31064 in k31060 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30805(t7,t6);}

/* k31025 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31031(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31029 in k31025 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30805(t7,t6);}

/* k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30805,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30808,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30808(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30857,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_30857(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[669]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30892,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[669]);}
else{
t7=t6;
f_30892(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30927,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_30927(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30962,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_30962(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30991,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30991(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30989 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30991,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31006,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31004 in k30989 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_31006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30998(2,t2,C_SCHEME_UNDEFINED);}}

/* k30996 in k30989 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30808(t5,t4);}

/* k30960 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30964 in k30960 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30808(t7,t6);}

/* k30925 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30929 in k30925 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30808(t7,t6);}

/* k30890 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30894 in k30890 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30808(t7,t6);}

/* k30855 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30859 in k30855 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30808(t7,t6);}

/* k30806 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30811,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30811(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30809 in k30806 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30815,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30815 in k30809 in k30806 in k30803 in k30800 in k30797 in mm:make-ctrl in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30815(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30815,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5290(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30776(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30776,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30781,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_30781 in mm:touch? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30781,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5174(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30047(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30047r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30047r(t0,t1,t2);}}

static void C_ccall f_30047r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30051,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30051(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[658]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30619,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[658]);}
else{
t27=t26;
f_30619(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[659]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30654,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[659]);}
else{
t28=t27;
f_30654(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[666]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30689,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[666]);}
else{
t29=t28;
f_30689(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[661]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30724,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[661]);}
else{
t30=t29;
f_30724(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30753,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30753(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30751 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30753,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30768,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30766 in k30751 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30760(2,t2,C_SCHEME_UNDEFINED);}}

/* k30758 in k30751 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30051(t5,t4);}

/* k30722 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30726 in k30722 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30051(t7,t6);}

/* k30687 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30691 in k30687 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30051(t7,t6);}

/* k30652 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30658(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30656 in k30652 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30051(t7,t6);}

/* k30617 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30623(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30621 in k30617 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30051(t7,t6);}

/* k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30051,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30054(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30449,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_30449(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30484,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_30484(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30519,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_30519(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30554,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_30554(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30583,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30583(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30581 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30583,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30598,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30596 in k30581 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30590(2,t2,C_SCHEME_UNDEFINED);}}

/* k30588 in k30581 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30054(t5,t4);}

/* k30552 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30558(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30556 in k30552 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30054(t7,t6);}

/* k30517 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30523(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30521 in k30517 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30054(t7,t6);}

/* k30482 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30486 in k30482 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30054(t7,t6);}

/* k30447 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30451 in k30447 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30054(t7,t6);}

/* k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30054(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30054,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30057(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30279,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_30279(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_30314(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30349,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_30349(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30384,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_30384(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30413,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30413(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30411 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30413,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30428,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30426 in k30411 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30420(2,t2,C_SCHEME_UNDEFINED);}}

/* k30418 in k30411 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30057(t5,t4);}

/* k30382 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30388(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30386 in k30382 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30057(t7,t6);}

/* k30347 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30353(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30351 in k30347 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30057(t7,t6);}

/* k30312 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30316 in k30312 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30057(t7,t6);}

/* k30277 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30281 in k30277 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30057(t7,t6);}

/* k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30057(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30057,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30060,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30060(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30109,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_30109(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30144,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_30144(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[666]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30179,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[666]);}
else{
t8=t7;
f_30179(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30214,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_30214(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30243,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30243(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30241 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30243,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30258,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30256 in k30241 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30250(2,t2,C_SCHEME_UNDEFINED);}}

/* k30248 in k30241 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30060(t5,t4);}

/* k30212 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30216 in k30212 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30060(t7,t6);}

/* k30177 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30183(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30181 in k30177 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30060(t7,t6);}

/* k30142 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30146 in k30142 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30060(t7,t6);}

/* k30107 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30111 in k30107 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30060(t7,t6);}

/* k30058 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_30060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30060,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30063,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30063(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30061 in k30058 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30067,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30067 in k30061 in k30058 in k30055 in k30052 in k30049 in mm:make-touch in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30067,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5158(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30028,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30033,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_30033 in mm:off? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30033,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5042(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29577(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_29577r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29577r(t0,t1,t2);}}

static void C_ccall f_29577r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29581,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_29581(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29906,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[658]);}
else{
t23=t22;
f_29906(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[659]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29941,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[659]);}
else{
t24=t23;
f_29941(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[661]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29976,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[661]);}
else{
t25=t24;
f_29976(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30005,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30005(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30003 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30005,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30020,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30018 in k30003 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30012(2,t2,C_SCHEME_UNDEFINED);}}

/* k30010 in k30003 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_30012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29581(t5,t4);}

/* k29974 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29980(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29978 in k29974 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29581(t7,t6);}

/* k29939 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29945(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29943 in k29939 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29581(t7,t6);}

/* k29904 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29908 in k29904 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29581(t7,t6);}

/* k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_29581(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29581,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29584(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29771,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_29771(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29806,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_29806(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29841,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_29841(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29870,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29870(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29868 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29870,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29885,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29883 in k29868 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29877(2,t2,C_SCHEME_UNDEFINED);}}

/* k29875 in k29868 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29584(t5,t4);}

/* k29839 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29845(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29843 in k29839 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29584(t7,t6);}

/* k29804 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29808 in k29804 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29584(t7,t6);}

/* k29769 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29773 in k29769 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29584(t7,t6);}

/* k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_29584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29584,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29587,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29587(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29636,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_29636(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29671,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_29671(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29706,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[661]);}
else{
t8=t7;
f_29706(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29735,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29735(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29733 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29735,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29750,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29748 in k29733 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29742(2,t2,C_SCHEME_UNDEFINED);}}

/* k29740 in k29733 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29587(t5,t4);}

/* k29704 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29708 in k29704 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29587(t7,t6);}

/* k29669 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29673 in k29669 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29587(t7,t6);}

/* k29634 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29638 in k29634 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29587(t7,t6);}

/* k29585 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_29587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29587,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29590(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29588 in k29585 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29594,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_29594 in k29588 in k29585 in k29582 in k29579 in mm:make-off in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29594,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5027(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29558(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29558,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29563,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_29563 in mm:on? in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29563,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4948(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28829(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28829r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28829r(t0,t1,t2);}}

static void C_ccall f_28829r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28833,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28833(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[658]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29401,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[658]);}
else{
t27=t26;
f_29401(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[659]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29436,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[659]);}
else{
t28=t27;
f_29436(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[660]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29471,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[660]);}
else{
t29=t28;
f_29471(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[661]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29506,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[661]);}
else{
t30=t29;
f_29506(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29535,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_29535(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k29533 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29535,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29542,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29550,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29548 in k29533 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29542(2,t2,C_SCHEME_UNDEFINED);}}

/* k29540 in k29533 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28833(t5,t4);}

/* k29504 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29510(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29508 in k29504 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28833(t7,t6);}

/* k29469 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29473 in k29469 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28833(t7,t6);}

/* k29434 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29440,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29440(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29438 in k29434 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28833(t7,t6);}

/* k29399 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29405(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29403 in k29399 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28833(t7,t6);}

/* k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28833(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28833,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28836(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29231,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_29231(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29266,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_29266(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29301,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_29301(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29336,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_29336(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29365,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29365(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29363 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29365,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29380,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29378 in k29363 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29372(2,t2,C_SCHEME_UNDEFINED);}}

/* k29370 in k29363 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28836(t5,t4);}

/* k29334 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29340(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29338 in k29334 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28836(t7,t6);}

/* k29299 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29305(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29303 in k29299 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28836(t7,t6);}

/* k29264 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29270,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29270(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29268 in k29264 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28836(t7,t6);}

/* k29229 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29235,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29235(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29233 in k29229 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28836(t7,t6);}

/* k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28836,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28839(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29061,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_29061(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29096,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_29096(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29131,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_29131(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29166,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_29166(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29195,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29195(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29193 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29195,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29202,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29210,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29208 in k29193 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29202(2,t2,C_SCHEME_UNDEFINED);}}

/* k29200 in k29193 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28839(t5,t4);}

/* k29164 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29170,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29170(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29168 in k29164 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28839(t7,t6);}

/* k29129 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29135,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29135(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29133 in k29129 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28839(t7,t6);}

/* k29094 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29100,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29100(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29098 in k29094 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28839(t7,t6);}

/* k29059 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29065,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29065(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29063 in k29059 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28839(t7,t6);}

/* k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28842,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28842(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28891,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[658]);}
else{
t6=t5;
f_28891(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[659]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28926,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[659]);}
else{
t7=t6;
f_28926(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28961,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_28961(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28996,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[661]);}
else{
t9=t8;
f_28996(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29025,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29025(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29023 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29025,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29040,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29038 in k29023 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29032(2,t2,C_SCHEME_UNDEFINED);}}

/* k29030 in k29023 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28842(t5,t4);}

/* k28994 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29000(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28998 in k28994 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_29000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28842(t7,t6);}

/* k28959 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28965(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28963 in k28959 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28842(t7,t6);}

/* k28924 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28930(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28928 in k28924 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28842(t7,t6);}

/* k28889 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28895(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28893 in k28889 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28842(t7,t6);}

/* k28840 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28845,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28845(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28843 in k28840 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28849,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_28849 in k28843 in k28840 in k28837 in k28834 in k28831 in mm:make-on in k28683 in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28849,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4932(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28491(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28491,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28499,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28331,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_28331(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_28331(t12,(C_word)C_i_not(t11));}}

/* k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28331(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28331,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28338,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(t2,(C_word)C_a_i_list(&a,4,lf[476],lf[647],lf[481],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28339,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28364,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28366,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li432),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_28366(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28366(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28366,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[393]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_28376(t16,t13);}
else{
t13=t10;
f_28376(t13,C_SCHEME_UNDEFINED);}}}

/* k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28376,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t2,t3,((C_word*)t0)[3]);}

/* k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28380,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_28383(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[652],t5,lf[653]));}}

/* k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li430),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28444,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li431),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28443 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28444,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28434 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28435,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k28384 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28389,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_28339(t3,((C_word*)((C_word*)t0)[6])[1],lf[638]);}

/* k28403 in k28384 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28405,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_28389(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_28339(t2,((C_word*)((C_word*)t0)[6])[1],lf[651]);}}

/* k28410 in k28403 in k28384 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28412,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_28389(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[648],t2,lf[649],t3,lf[650]));}}
else{
t2=((C_word*)t0)[5];
f_28389(2,t2,C_SCHEME_UNDEFINED);}}

/* k28387 in k28384 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28389,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k28393 in k28387 in k28384 in k28381 in k28378 in k28374 in do4730 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_28366(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28362 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28499(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28339(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28339,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k28336 in k28329 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28338,2,t0,t1);}
t2=((C_word*)t0)[2];
f_28499(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k28497 in parse-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_25426(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28077,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[641],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28099,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[644],t8,lf[645]));}
else{
t19=t17;
f_28099(2,t19,C_SCHEME_UNDEFINED);}}

/* k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28099,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[643]));}
else{
t9=t8;
f_28114(2,t9,C_SCHEME_UNDEFINED);}}

/* k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[395],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_28117(t6,t5);}
else{
t4=t2;
f_28117(t4,C_SCHEME_UNDEFINED);}}

/* k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28287,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li426),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28293,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li427),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28292 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28293(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28293,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28286 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28287,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_27946(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_28123(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28269,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_25426(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k28267 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28123(t3,t2);}

/* k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28123(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28123,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25173(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28262,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k28260 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28262,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[419],t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28250,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28133,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_28146(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_28146(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28146,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[642]));}
else{
t5=t4;
f_28153(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_28133(t2,C_SCHEME_UNDEFINED);}}

/* k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28156,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li424),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28223,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li425),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28222 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28223,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28208 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28217,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k28215 in a28208 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_27946(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_28159(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28195,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_25426(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28193 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28159(t3,t2);}

/* k28157 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28159,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[470],"loop-looping");
f_25227(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28186 in k28157 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28188,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[419],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25233(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k28163 in k28186 in k28157 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25233(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k28166 in k28163 in k28186 in k28157 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_25426(t2,lf[20],t3);}

/* k28170 in k28166 in k28163 in k28186 in k28157 in k28154 in k28151 in k28144 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28133(t3,t2);}

/* k28131 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_28133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28133,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25233(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k28134 in k28131 in k28248 in k28124 in k28121 in k28118 in k28115 in k28112 in k28097 in parse-conditional in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27946(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27946,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27950,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27955,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li422),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_27955(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27955(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27955,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t12,t10,t11);}}

/* k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_27909(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[638]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[639]);
t8=t2;
f_27909(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_27909(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_27909(t3,C_SCHEME_FALSE);}}

/* k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27909,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_27972(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[636],t6,lf[637]));}}

/* k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28045,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li420),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28058,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li421),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28057 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28058,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28044 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28053,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28051 in a28044 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k27973 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k27977 in k27973 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27979,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27984,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_27984(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[393]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[635]));}
else{
t10=t5;
f_27984(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_27984(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28022,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t10,t11,((C_word*)t0)[3]);}}}}

/* k28020 in k27977 in k27973 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_28022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_27984(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_27984(2,t2,C_SCHEME_UNDEFINED);}}

/* k27982 in k27977 in k27973 in k27970 in k27907 in k27901 in do4663 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_27955(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27948 in parse-then-else-dependents in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27845,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27852,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[632],t13,lf[633]));}
else{
t13=t11;
f_27852(2,t13,C_SCHEME_UNDEFINED);}}

/* k27850 in parse-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27852,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27883,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27881 in k27850 in parse-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27883,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27879,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k27877 in k27881 in k27850 in parse-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27879,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[476],lf[618],lf[481],t2));}

/* k27869 in k27881 in k27850 in parse-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27754,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27761,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[629],t15,lf[630]));}
else{
t15=t13;
f_27761(2,t15,C_SCHEME_UNDEFINED);}}

/* k27759 in parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27761,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27827 in k27759 in parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27829,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27772,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[626]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_27772(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[627]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[395],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_27772(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[628]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_27772(t9,t8);}
else{
t8=t4;
f_27772(t8,C_SCHEME_UNDEFINED);}}}}

/* k27770 in k27827 in k27759 in parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27772(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27772,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27783,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27799,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k27797 in k27770 in k27827 in k27759 in parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27799,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[476],lf[626],lf[481],t3,lf[484],t4));}

/* k27781 in k27770 in k27827 in k27759 in parse-thereis in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27688(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27688,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27699,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[623],t7,lf[624]));}
else{
t13=t12;
f_27699(2,t13,C_SCHEME_UNDEFINED);}}

/* k27697 in parse-while-until in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[621]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_27702(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[622]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[395],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_27702(t10,t9);}
else{
t5=t2;
f_27702(t5,C_SCHEME_UNDEFINED);}}}

/* k27700 in k27697 in parse-while-until in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27702,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27709,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[620]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(t2,(C_word)C_a_i_list(&a,4,lf[476],((C_word*)t0)[2],lf[481],t4));}

/* k27707 in k27700 in k27697 in parse-while-until in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27682(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27682,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[618],t2));}

/* parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27136,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27145,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27150,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27155,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27167,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[615],t7,lf[616]));}
else{
t30=t29;
f_27167(2,t30,C_SCHEME_UNDEFINED);}}

/* k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27167,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_27178(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[611]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27631,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[614]));}
else{
t11=t9;
f_27631(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_27178(2,t9,C_SCHEME_UNDEFINED);}}}

/* k27629 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_25503(t2,t3);}

/* k27635 in k27629 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27637,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_27178(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[612],t2,lf[613]));}}

/* k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_27182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27063,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li414),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_27063(t9,t2,C_SCHEME_FALSE);}

/* do4485 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27063(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27063,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27077,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27088,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-collectors");
t9=C_retrieve2(lf[467],"loop-collectors");
f_25191(3,t9,t7,t8);}}

/* k27086 in do4485 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27088,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27023,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li413),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27023(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4477 in k27086 in do4485 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27023(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27023,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27036,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_27036(t12,t11);}
else{
t10=t6;
f_27036(t10,C_SCHEME_UNDEFINED);}}}

/* k27034 in do4477 in k27086 in do4485 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_27023(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27075 in do4485 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27063(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27182,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_27185,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27615,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27619,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27150(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_27185(2,t6,t5);}}

/* k27617 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[608];
t3=lf[609];
t4=lf[610];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_27615(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_27615(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_27615(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_27615(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k27613 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27615,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_27185(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27611,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_27150(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27609 in k27613 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27611,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[605],t1,lf[606],((C_word*)t0)[2],lf[607]));}

/* k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27188,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[589]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[590]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27231,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27269,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_27269(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[591]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27298,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27155(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[592]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[593]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[595]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_27405(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[599]);
t10=t8;
f_27405(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[604])));}}}}

/* k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27405(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27405,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27408,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27521,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27579,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t9,((C_word*)((C_word*)t0)[13])[1],lf[603]);}
else{
t9=t8;
f_27521(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27514,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27155(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_27188(t2,C_SCHEME_UNDEFINED);}}

/* k27512 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27408(t6,t5);}

/* k27577 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27579,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27521(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27521(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27521,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[602]);}

/* k27523 in k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27525,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[601]);}

/* k27527 in k27523 in k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27529,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27571,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)((C_word*)t0)[11])[1],lf[600]);}

/* k27569 in k27527 in k27523 in k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27571,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k27565 in k27569 in k27527 in k27523 in k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27567,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27545,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27145(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k27543 in k27565 in k27569 in k27527 in k27523 in k27519 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27545,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27408(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27408(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27406 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27408(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27408,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27411,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[596]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[597],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[598],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27411(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[599]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[596],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[597],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27411(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[597],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[598],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_27411(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k27409 in k27406 in k27403 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27411,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27188(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_27188(t2,C_SCHEME_UNDEFINED);}}

/* k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27310,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[592]);
t3=(C_truep(t2)?lf[346]:lf[422]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27316,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27360,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_27360(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[594]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27393,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_27155(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k27391 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27316(t3,t2);}

/* k27358 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27360,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k27384 in k27358 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27386,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27368,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27145(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27366 in k27384 in k27358 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27368,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27316(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[394],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27316(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27314 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27316,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k27354 in k27314 in k27308 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27356,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[395],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[394],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[419],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_27188(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k27296 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27231(t3,t2);}

/* k27267 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27269,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k27289 in k27267 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27291,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27277,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_27145(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27275 in k27289 in k27267 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27277,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27231(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_27231(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27229 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27231,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[589]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27188(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_27188(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27188,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27195,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27197 in k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27201 in k27197 in k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27207,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27205 in k27201 in k27197 in k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27211,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27209 in k27205 in k27201 in k27197 in k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27211,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[476],((C_word*)t0)[5],lf[477],((C_word*)t0)[4],lf[479],((C_word*)t0)[3],lf[481],((C_word*)t0)[2],lf[484],t1,lf[478],t2,lf[480],C_SCHEME_END_OF_LIST));}

/* k27193 in k27186 in k27183 in k27180 in k27176 in k27165 in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27155(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27155,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27150(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27150,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_27145(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27145,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26977,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26988,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[586],t6,lf[587]));}
else{
t12=t11;
f_26988(2,t12,C_SCHEME_UNDEFINED);}}

/* k26986 in parse-initially in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26988,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27003,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(t6,(C_word)C_a_i_list(&a,4,lf[476],((C_word*)t0)[2],lf[479],t7));}

/* k27001 in k26986 in parse-initially in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_27003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26939,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26950,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[583],t6,lf[584]));}
else{
t12=t11;
f_26950(2,t12,C_SCHEME_UNDEFINED);}}

/* k26948 in parse-finally in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26950,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26965,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(t6,(C_word)C_a_i_list(&a,4,lf[476],((C_word*)t0)[2],lf[483],t7));}

/* k26963 in k26948 in parse-finally in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26872,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26883,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26892,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li406),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_26892(t16,t12);}

/* do4434 in parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26892,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_26902(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t3,t4,((C_word*)t0)[5]);}}

/* k26900 in do4434 in parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26902,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[580],((C_word*)t0)[4],lf[581]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26915,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_26892(t7,((C_word*)t0)[7]);}}

/* k26913 in k26900 in do4434 in parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k26881 in parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26890,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(t2,(C_word)C_a_i_list(&a,4,lf[476],((C_word*)t0)[3],lf[481],((C_word*)((C_word*)t0)[2])[1]));}

/* k26888 in k26881 in parse-do in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26679,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26686,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26739,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li404),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_26739(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26739(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26739,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26749,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_26749(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t7,t8,((C_word*)t0)[5]);}}

/* k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26749,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26760,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26863,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_25503(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26863,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26769,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[570],((C_word*)((C_word*)t0)[10])[1],lf[571]));}
else{
t4=t3;
f_26769(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[393]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26791,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[572]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26820,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26828,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[573]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[558]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[574]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_26760(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[575],((C_word*)((C_word*)t0)[10])[1],lf[576]));}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[577],((C_word*)((C_word*)t0)[10])[1],lf[578]));}}}}}

/* k26826 in k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26828,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26791(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26818 in k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26820,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26791(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26789 in k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_26760(2,t6,t5);}

/* k26767 in k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26772,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[568],((C_word*)((C_word*)t0)[8])[1],lf[569]));}
else{
t3=t2;
f_26772(2,t3,C_SCHEME_UNDEFINED);}}

/* k26770 in k26767 in k26861 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_26760(2,t6,t5);}

/* k26758 in k26747 in do4390 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_26739(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26689,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[567]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26729,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26737,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_26689(2,t3,C_SCHEME_UNDEFINED);}}}

/* k26735 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26737,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26689(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26727 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26729,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26689(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26687 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26696,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26700,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26698 in k26687 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26704,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26702 in k26698 in k26687 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26704,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[476],lf[566],lf[477],((C_word*)t0)[2],lf[479],t1));}

/* k26694 in k26687 in k26684 in parse-with in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26537,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26547,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26585,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li402),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_26585(t22,t18,C_SCHEME_FALSE);}

/* do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26585(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26585,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_26595(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t5,t6,((C_word*)t0)[5]);}}

/* k26593 in do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26595,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[564]));}
else{
t7=t6;
f_26606(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26604 in k26593 in do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26606,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26609,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[558]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26618,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[559]));}
else{
t6=t5;
f_26618(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[560]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26643,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[561]));}
else{
t7=t6;
f_26643(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[562],((C_word*)((C_word*)t0)[12])[1],lf[563]));}}}

/* k26641 in k26604 in k26593 in do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26643,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_26609(2,t10,t9);}

/* k26616 in k26604 in k26593 in do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26618,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_26609(2,t8,t7);}

/* k26607 in k26604 in k26593 in do4352 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26585(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26545 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26554,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26583,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k26581 in k26545 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26583,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[476],lf[506],lf[477],t2,lf[479],t3,lf[481],t4,lf[482],t5));}

/* k26552 in k26545 in parse-general-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26186,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26193,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[556]);}

/* k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26193,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26199,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26427,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li400),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_26427(t25,t21,C_SCHEME_FALSE);}

/* do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26427(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26427,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_26437(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t5,t6,((C_word*)t0)[4]);}}

/* k26435 in do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26437,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[555]));}
else{
t7=t6;
f_26448(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26446 in k26435 in do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26448,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26451,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[545]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26460,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_26460(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[554]);
if(C_truep(t6)){
t7=t5;
f_26460(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[539]);
t8=t5;
f_26460(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[544])));}}}

/* k26458 in k26446 in k26435 in do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26460,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26463,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[547],((C_word*)((C_word*)t0)[9])[1],lf[548],((C_word*)((C_word*)t0)[10])[1],lf[549]));}
else{
t3=t2;
f_26463(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[530]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[550]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[539]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[551]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_26451(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[552],((C_word*)((C_word*)t0)[9])[1],lf[553]));}}}

/* k26461 in k26458 in k26446 in k26435 in do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26451(2,t7,t6);}

/* k26449 in k26446 in k26435 in do4285 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26427(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26425,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26421,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26421,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26210,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[539]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26227,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[543]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[544]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26303,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[271],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_26303(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)t0)[4]);
t9=t7;
f_26303(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26367,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_26367(t10,(C_word)C_eqp(t9,lf[546]));}
else{
t9=t8;
f_26367(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_26332(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k26365 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26367,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26332(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26332(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k26330 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26332(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26332,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26348,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[545]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_26348(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_26348(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k26346 in k26330 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26348,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26210(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26301 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26303(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26303,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[269],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[419],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26210(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26225 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[542]);}

/* k26228 in k26225 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t2,((C_word*)t0)[7],C_fix(0));}

/* k26292 in k26228 in k26225 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26294,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k26288 in k26292 in k26228 in k26225 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26290,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[540],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[98],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[541],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[346],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[395],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_26210(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k26208 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_26210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26210,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26217,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26219 in k26208 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26221,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[476],lf[506],lf[477],t1,lf[480],((C_word*)((C_word*)t0)[5])[1],lf[479],((C_word*)((C_word*)t0)[4])[1],lf[481],((C_word*)((C_word*)t0)[3])[1],lf[482],((C_word*)((C_word*)t0)[2])[1]));}

/* k26215 in k26208 in k26419 in k26423 in k26197 in k26191 in parse-sequence-iteration in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26139(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26139,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[536]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26154,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li397),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26172,a[2]=t2,a[3]=((C_word)li398),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a26171 in parse-repeat in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26172,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,t1,t2,t4);}

/* a26153 in parse-repeat in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[537]);}

/* k26164 in a26153 in parse-repeat in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26166,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[506],t1,lf[511],t2);
C_trace("ChickenBridge.scm: 380  parse-numerical-for");
t4=C_retrieve2(lf[505],"parse-numerical-for");
f_25757(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25757(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25757,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25767,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25966,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li395),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_25966(t31,t27,C_SCHEME_FALSE);}

/* do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25966(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25966,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_25976(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t5,t6,((C_word*)t0)[6]);}}

/* k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25976,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[534]));}
else{
t7=t6;
f_25987(2,t7,C_SCHEME_UNDEFINED);}}}

/* k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25987,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25990,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[513]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[509]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26002,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[514],((C_word*)((C_word*)t0)[12])[1],lf[515],((C_word*)((C_word*)t0)[9])[1],lf[516]));}
else{
t7=t6;
f_26002(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[511]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26023,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[517],((C_word*)((C_word*)t0)[12])[1],lf[518],((C_word*)((C_word*)t0)[3])[1],lf[519]));}
else{
t8=t7;
f_26023(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[520]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26044,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[521],((C_word*)((C_word*)t0)[12])[1],lf[522],((C_word*)((C_word*)t0)[3])[1],lf[523]));}
else{
t9=t8;
f_26044(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[510]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26065,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[524],((C_word*)((C_word*)t0)[12])[1],lf[525],((C_word*)((C_word*)t0)[3])[1],lf[526]));}
else{
t10=t9;
f_26065(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[512]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26086,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[527],((C_word*)((C_word*)t0)[12])[1],lf[528],((C_word*)((C_word*)t0)[3])[1],lf[529]));}
else{
t11=t10;
f_26086(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[530]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26107,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[531]));}
else{
t12=t11;
f_26107(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[532],((C_word*)((C_word*)t0)[12])[1],lf[533]));}}}}}}}

/* k26105 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_25990(2,t6,t5);}

/* k26084 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_25990(2,t7,t6);}

/* k26063 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_25990(2,t7,t6);}

/* k26042 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_25990(2,t7,t6);}

/* k26021 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_25990(2,t7,t6);}

/* k26000 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_26002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_25990(2,t7,t6);}

/* k25988 in k25985 in k25974 in do4186 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25966(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_25770(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[513]);
t5=t2;
f_25770(t5,t4);}}

/* k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25770,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25773,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[509]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25933,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_25933(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[512]);
t6=t4;
f_25933(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[510])));}}

/* k25931 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25933(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[100]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[510]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[423]);
t5=((C_word*)t0)[2];
f_25773(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[346]);
t5=((C_word*)t0)[2];
f_25773(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[98]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[511]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[416]);
t5=((C_word*)t0)[2];
f_25773(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[422]);
t5=((C_word*)t0)[2];
f_25773(t5,t4);}}}

/* k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25773,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25904,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25924,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k25922 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25924,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25776(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k25902 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25904,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25776(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25776,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_25779(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25869,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[508]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_25779(t5,t4);}}

/* k25867 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25886,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t2,t1,C_SCHEME_FALSE);}

/* k25884 in k25867 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25886,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_25779(t8,t7);}

/* k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25779,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[507]);}
else{
t6=t5;
f_25786(t6,C_SCHEME_UNDEFINED);}}

/* k25816 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25821,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25836,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25852,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_25509(t3,t1,C_SCHEME_FALSE);}}

/* k25850 in k25816 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25852,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25821(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k25834 in k25816 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25836,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25821(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25819 in k25816 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25821,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25786(t4,t3);}

/* k25784 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25786(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25786,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25793,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25797,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25795 in k25784 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25801,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25799 in k25795 in k25784 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25801,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[476],lf[506],lf[477],((C_word*)t0)[2],lf[479],t1,lf[482],t2,lf[480],t4));}

/* k25791 in k25784 in k25777 in k25774 in k25771 in k25768 in k25765 in parse-numerical-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25675(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25675,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25679,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t5,t6,t4);}

/* k25677 in parse-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25679,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[498]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25697,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_25503(t4,t3);}}

/* k25695 in k25677 in parse-for in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25697,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[499]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[500],t6,lf[501],lf[502]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_25515(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[503],t2,lf[504]));}}

/* loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25515(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25515,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25571,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25523,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li392),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_25523(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4137 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25523(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25523,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25533,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_25533(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_25533(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_25497(t6,t8,((C_word*)t0)[2]);}}}

/* k25531 in do4137 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25533,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  reverse");
t2=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_25523(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25574,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[496]);}

/* k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25652,a[2]=t4,a[3]=((C_word)li391),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_25652(t6,t2,((C_word*)t0)[2]);}

/* do4147 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25652(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25652,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25662,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k25660 in do4147 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25652(t3,((C_word*)t0)[2],t2);}

/* k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[495]);}

/* k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25589,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[491]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25606,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li390),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_25606(t6,t2,((C_word*)t0)[2]);}}

/* do4152 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25606(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25606,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25616,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[494]);}
else{
t5=t3;
f_25616(2,t5,C_SCHEME_UNDEFINED);}}}

/* k25614 in do4152 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25619,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  display");
t4=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k25617 in k25614 in do4152 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[492]:lf[493]);
C_trace("ChickenBridge.scm: 380  display");
t6=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k25620 in k25617 in k25614 in do4152 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25606(t3,((C_word*)t0)[2],t2);}

/* k25587 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25592,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k25590 in k25587 in k25584 in k25581 in k25578 in k25575 in k25572 in k25569 in loop-error in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[490]);}

/* make-binding in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25509(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25509,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25503(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25503,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25497(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25497,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25426(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25426,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25428,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25467,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t5,t3,C_retrieve2(lf[466],"loop-bindings"));}

/* k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[467],"loop-collectors"));}

/* k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[468],"loop-initially"));}

/* k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[469],"loop-end-tests"));}

/* k25477 in k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[470],"loop-looping"));}

/* k25481 in k25477 in k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[472],"loop-stepping"));}

/* k25485 in k25481 in k25477 in k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[473],"loop-finally"));}

/* k25489 in k25485 in k25481 in k25477 in k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25495,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_25428(t2,((C_word*)t0)[2],C_retrieve2(lf[474],"loop-returning"));}

/* k25493 in k25489 in k25485 in k25481 in k25477 in k25473 in k25469 in k25465 in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25495,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_25275(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[476],((C_word*)t0)[9],lf[477],((C_word*)t0)[8],lf[478],((C_word*)t0)[7],lf[479],((C_word*)t0)[6],lf[480],((C_word*)t0)[5],lf[481],((C_word*)t0)[4],lf[482],((C_word*)t0)[3],lf[483],((C_word*)t0)[2],lf[484],t1));}

/* gather-clause in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25428(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25428,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25434,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li384),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_25434(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4120 in gather-clause in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25434(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25434,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25445,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25456,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k25454 in do4120 in gather-clause in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25443 in do4120 in gather-clause in gather-clauses in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_25434(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25275(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25275,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25290,a[2]=t5,a[3]=t3,a[4]=((C_word)li382),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_25290(t7,t1,t2);}}

/* do4108 in make-loop-clause in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25290(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25290,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25303,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[476]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_25173(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[477]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_25303(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[478]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_25303(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[479]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_25303(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[480]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_25303(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[481]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_25233(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[482]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_25303(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[483]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_25303(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[484]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_25303(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_25303(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k25301 in do4108 in make-loop-clause in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25290(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25263(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25263,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25251(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25251,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25239(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25239,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25233(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25233,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25227(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25227,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25215(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25215,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25203(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25203,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25191(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25191,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25179(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25179,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k25163 in k25160 in k25157 in k25154 in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25173(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25173,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25137(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25137,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[432]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[464]);}

/* sal:open in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25131(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25131,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[432]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[462]);}

/* sal:load in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25084,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25088,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  file-exists?");
t4=C_retrieve(lf[460]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25086 in sal:load in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25091,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25113,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[456]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[457],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_25113(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25104,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[458],((C_word*)t0)[2],lf[459]);}}

/* k25102 in k25086 in sal:load in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[432]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25111 in k25086 in sal:load in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  load-sal-file");
t2=C_retrieve(lf[454]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  load");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k25089 in k25086 in sal:load in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25075(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25075,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25079,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25077 in sal:chdir in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24922(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_24922r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24922r(t0,t1,t2);}}

static void C_ccall f_24922r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24925,a[2]=t4,a[3]=((C_word)li365),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25044,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25049,a[2]=t4,a[3]=t8,a[4]=((C_word)li366),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_25049(t10,t6,t2);}

/* do3935 in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_25049(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25049,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t3=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[451]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25062,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_24925(t5,t3,t4,C_fix(0));}}

/* k25060 in do3935 in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25049(t3,((C_word*)t0)[2],t2);}

/* k25042 in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24925(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24925,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[444]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24953,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[447]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[448]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25025,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25041,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[449],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[450]);}}

/* k25039 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25023 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_25025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k24951 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24956,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li364),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_24961(t6,t2,((C_word*)t0)[2]);}

/* do3927 in k24951 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24961(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24961,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24971,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 379  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_24925(t6,t3,t4,t5);}}

/* k24969 in do3927 in k24951 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_24974(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t4=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[446]);}}

/* k24972 in k24969 in do3927 in k24951 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24961(t3,((C_word*)t0)[2],t2);}

/* k24954 in k24951 in printer in sal:print in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[443]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[445]);}

/* sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_24745,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24749,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[430]))){
C_trace("ChickenBridge.scm: 379  printf");
t8=C_retrieve(lf[410]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[441],t4);}
else{
t8=t7;
f_24749(2,t8,C_SCHEME_UNDEFINED);}}

/* k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24749,2,t0,t1);}
t2=C_mutate(&lf[427],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[357],"list->token"),t4);}

/* k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24754,2,t0,t1);}
t2=C_mutate(&lf[428],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_24757(t5,t4);}
else{
t4=t3;
f_24757(t4,C_SCHEME_FALSE);}}

/* k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24757(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24757,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[428],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22569,a[2]=t4,a[3]=t3,a[4]=((C_word)li362),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call/cc");
t7=*((C_word*)lf[440]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a22568 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22569,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22575,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li360),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22582,a[2]=t2,a[3]=((C_word)li361),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a22581 in a22568 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22582(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22582,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22589,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_22589(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_22589(t6,C_SCHEME_FALSE);}}

/* k22587 in a22581 in a22568 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22589(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22589,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22596,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_22226(t2,lf[437],lf[438],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_22046(((C_word*)t0)[4],lf[439],C_retrieve2(lf[404],"*maxtokpos*"));}}

/* k22594 in k22587 in a22581 in a22568 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a22574 in a22568 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22575,2,t0,t1);}
t2=lf[404]=C_fix(0);;
C_trace("ChickenBridge.scm: 379  parser");
f_22607(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24761,2,t0,t1);}
t2=C_mutate(&lf[429],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24764,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[429],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[373]))){
t5=C_retrieve2(lf[427],"*sal-string*");
t6=C_retrieve2(lf[429],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24798,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_22085(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 379  pp");
t5=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[429],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 379  eval");
t5=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[429],"*sal-output*"));}}}

/* k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24798,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24891,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li359),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_24891(t11,t7,C_SCHEME_FALSE);}

/* do3900 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24891(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24891,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24901,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_24901(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_24901(t11,t10);}}}

/* k24899 in do3900 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24891(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24804,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24861,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li358),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_24861(t9,t5,C_SCHEME_FALSE);}

/* do3907 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24861(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24861,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24871,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_24871(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_24871(t11,t10);}}}

/* k24869 in do3907 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_24871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24861(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24815,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24822,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_22067(t4,((C_word*)t0)[2]);}

/* k24824 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[344]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k24828 in k24824 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24834,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  substring");
t3=*((C_word*)lf[434]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24832 in k24828 in k24824 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24838,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[344]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k24836 in k24832 in k24828 in k24824 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24838,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24845,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 379  make-string");
t5=*((C_word*)lf[344]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k24843 in k24836 in k24832 in k24828 in k24824 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24845,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 379  string-append");
t5=*((C_word*)lf[165]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[433],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k24820 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[432]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k24813 in k24810 in k24802 in k24796 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k24762 in k24759 in k24755 in k24752 in k24747 in sal in k24736 in k24733 in k24730 in k24727 in k24724 in k24218 in k24215 in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23696(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23696,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23703,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_23709,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t33,t34,C_fix(23296));}

/* k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23709,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23713,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_23759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,t3,C_fix(10756));}}

/* k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23759,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23763,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_23856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,t3,C_fix(22784));}}

/* k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23856,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23860,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23924,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23924,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23931,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24181,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_23931(t8,t7);}}

/* k24179 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23931(t3,t2);}

/* k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23931,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23934,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24169,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k24167 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23934(t3,t2);}

/* k24118 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24120,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24124 in k24118 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24126,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_23934(t4,t3);}}

/* k24148 in k24124 in k24118 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24150,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24134,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24146,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k24144 in k24148 in k24124 in k24118 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24132 in k24148 in k24124 in k24118 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23934(t3,t2);}

/* k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23934,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_23937(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24096,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[426]);}}

/* k24094 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24100,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24098 in k24094 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_23937(t4,t3);}

/* k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23937(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23937,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_23940(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24073,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[425]);}}

/* k24071 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24077,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24075 in k24071 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_23940(t4,t3);}

/* k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23940(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23940,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_23943(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24050,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[424]);}}
else{
t3=t2;
f_23943(t3,C_SCHEME_UNDEFINED);}}

/* k24048 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24054,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24052 in k24048 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_23943(t4,t3);}

/* k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23943,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23946,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23975,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_23946(t7,t6);}}

/* k23973 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23975,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[416],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_23946(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k23991 in k23973 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23993,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[422],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_23946(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24011,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k24009 in k23991 in k23973 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24011,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[423],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[100],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_23946(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k24027 in k24009 in k23991 in k23973 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_24029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24029,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[346],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[100],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23946(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_23946(t2,C_SCHEME_UNDEFINED);}}

/* k23944 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23950,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k23948 in k23944 in k23941 in k23938 in k23935 in k23932 in k23929 in k23922 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23703(t3,t2);}

/* k23858 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23860,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23864,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k23862 in k23858 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23864,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[421]);}

/* k23866 in k23862 in k23858 in k23854 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23868,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_23703(t12,t11);}

/* k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23763,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23767,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k23769 in k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23771,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23774,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23790,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_23774(t6,t5);}}

/* k23788 in k23769 in k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23790,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[420]);}

/* k23792 in k23788 in k23769 in k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23794,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[419],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_23774(t12,t11);}

/* k23772 in k23769 in k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23774(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23774,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23778,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k23776 in k23772 in k23769 in k23765 in k23761 in k23757 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23703(t3,t2);}

/* k23711 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23713,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[418]);}

/* k23715 in k23711 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23717,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[417]);}

/* k23719 in k23715 in k23711 in k23707 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23721,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[416],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_23703(t10,t9);}

/* k23701 in sal-parse-stepping in k23692 in k23689 in k23686 in k23683 in k23680 in k23677 in k23674 in k23671 in k23668 in k23665 in k23662 in k23659 in k23656 in k23653 in k23650 in k23647 in k23644 in k23641 in k23638 in k23635 in k23632 in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23703(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23518(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23518,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23530,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li355),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_23530(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23530,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23549,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23497(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23549,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23552,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23567,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li354),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_23567(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_23552(2,t5,t4);}}

/* do3538 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23567(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23567,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23581,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23595,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t12=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23599,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  is-op?");
f_23497(t10,t11);}}

/* k23597 in do3538 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23599,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23602,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_23602(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_23602(t10,t9);}}

/* k23600 in k23597 in do3538 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_23567(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23593 in do3538 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  inf->pre");
f_23518(((C_word*)t0)[2],t1);}

/* k23579 in do3538 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23581,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k23550 in k23547 in do3536 in inf->pre in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_23530(t2,((C_word*)t0)[2]);}

/* is-op? in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23497(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23497,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23504,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22166(t3,t2);}

/* k23502 in is-op? in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23504,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23507,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23505 in k23502 in is-op? in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23513,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23274(t2,t1);}

/* k23511 in k23505 in k23502 in is-op? in k23493 in k23490 in k23487 in k23484 in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23513,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23432(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23432,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23441,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li351),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_23441(t10,t1,t2);}

/* do3502 in remove-token-type in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23441(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23441,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23454,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23464,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_22182(t4,t5,((C_word*)t0)[2]);}}

/* k23462 in do3502 in remove-token-type in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23464,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_23454(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_23454(t7,t6);}}

/* k23452 in do3502 in remove-token-type in k23428 in k23425 in k23422 in k23419 in k23416 in k23413 in k23410 in k23407 in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23441(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23388(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23388,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23376(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23376,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23274(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23274,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_23226(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23226,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22607(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22607,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22611,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 379  printf");
t10=C_retrieve(lf[410]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[411],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_22611(2,t10,C_SCHEME_UNDEFINED);}}

/* k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22614,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_21786(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_22617(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23032,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23036,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23040,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_21774(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k23038 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  token-position");
f_21733(((C_word*)t0)[2],t1);}

/* k23034 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  max");
t2=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[404],"*maxtokpos*"),t1);}

/* k23030 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[404],t1);
t3=((C_word*)t0)[2];
f_22617(t3,t2);}

/* k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22617,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t4=C_retrieve2(lf[250],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22740,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t3,((C_word*)t0)[8]);}}

/* k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22740,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22746,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21973,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t4,t3);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[409],((C_word*)t0)[2]);}}

/* k21971 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_22746(t3,(C_word)C_eqp(t2,lf[393]));}
else{
t2=((C_word*)t0)[2];
f_22746(t2,C_SCHEME_FALSE);}}

/* k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22746,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22755,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_21946(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21989,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t5,t4);}}

/* k21987 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_22834(t3,(C_word)C_eqp(t2,lf[394]));}
else{
t2=((C_word*)t0)[2];
f_22834(t2,C_SCHEME_FALSE);}}

/* k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22834,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_21946(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22904,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22014(t2,((C_word*)t0)[2]);}}

/* k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_22907(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22005,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t4,t3);}}

/* k22003 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_22907(t3,(C_word)C_eqp(t2,lf[98]));}
else{
t2=((C_word*)t0)[2];
f_22907(t2,C_SCHEME_FALSE);}}

/* k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22907,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22913,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li343),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_22936(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22037,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t4,t3);}}

/* k22035 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_22985(t3,(C_word)C_eqp(t2,lf[408]));}
else{
t2=((C_word*)t0)[2];
f_22985(t2,C_SCHEME_FALSE);}}

/* k22983 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22985(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22985,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22994,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li344),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23011,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li345),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[407],t3);}}

/* a23010 in k22983 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23011,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23004 in k22983 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_23005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23005,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_22607(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22992 in k22983 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22936,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_22946(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_21786(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22946,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22949,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li341),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22972,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li342),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a22971 in k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22972,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a22965 in k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22966,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_22607(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22947 in k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22952,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22959,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_22952(t3,C_SCHEME_UNDEFINED);}}

/* k22957 in k22947 in k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22959,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_22952(t6,t5);}

/* k22950 in k22947 in k22944 in do3239 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_22936(t2,((C_word*)t0)[2]);}

/* k22911 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22916,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22922,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_22014(t3,((C_word*)t0)[2]);}

/* k22920 in k22911 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_22916(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_22916(t5,t4);}}

/* k22914 in k22911 in k22905 in k22902 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22843,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22858,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li340),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_22858(t6,t2,C_fix(0));}

/* do3219 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22858(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22858,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22868,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22877,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li338),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li339),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a22890 in do3219 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22891,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a22876 in do3219 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22885,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_21956(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22883 in a22876 in do3219 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22885,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_22607(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22866 in do3219 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22868,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22858(t3,((C_word*)t0)[2],t2);}

/* k22841 in k22838 in k22832 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22755,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22758,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li337),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_22777(t8,t4,C_fix(0));}

/* do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22777(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22777,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22790,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22810,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li335),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22824,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li336),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a22823 in do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22824,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a22809 in do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_21956(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22816 in a22809 in do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22818,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_22607(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22788 in do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22793,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_22793(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_22793(t5,t4);}}

/* k22791 in k22788 in do3197 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22793(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22793,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22777(t3,((C_word*)t0)[2],t2);}

/* k22756 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22761,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_22761(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22775,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t5=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k22773 in k22756 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22761(t3,t2);}

/* k22759 in k22756 in k22753 in k22744 in k22738 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22761(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23226(t2,t1);}

/* k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22632,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22638,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_21786(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22690,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23376(t2,((C_word*)t0)[5]);}}

/* k22688 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22690,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_21904(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[406],((C_word*)t0)[2]);}}

/* k22691 in k22688 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22693,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[363]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[363]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li333),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22714,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li334),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a22713 in k22691 in k22688 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22714,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22725,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_22725(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k22723 in a22713 in k22691 in k22688 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a22703 in k22691 in k22688 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22704,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_22607(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22638,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_21774(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22654,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22684,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_21697(t3,t1);}

/* k22682 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k22652 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22654,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22669,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_21697(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k22667 in k22652 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22673,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_21715(t2,((C_word*)t0)[2]);}

/* k22671 in k22667 in k22652 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22677,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-position");
f_21733(t2,((C_word*)t0)[2]);}

/* k22675 in k22671 in k22667 in k22652 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22659 in k22652 in k22646 in k22636 in k22630 in k22624 in k22615 in k22612 in k22609 in parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22503(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22503,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22505,a[2]=t2,a[3]=((C_word)li331),tmp=(C_word)a,a+=4,tmp));}

/* f_22505 in simple-unit-emitter in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22505(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22505,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22509,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22553,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t6,t2);}

/* k22551 */
static void C_ccall f_22553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k22507 */
static void C_ccall f_22509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22509,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22512,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_22512(t9,t8);}
else{
t6=t5;
f_22512(t6,C_SCHEME_UNDEFINED);}}

/* k22510 in k22507 */
static void C_fcall f_22512(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22512,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22517,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li330),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_22517(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3154 in k22510 in k22507 */
static void C_fcall f_22517(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22517,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22538,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k22536 in do3154 in k22510 in k22507 */
static void C_ccall f_22538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22517(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22495(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22495,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22497,a[2]=t2,a[3]=((C_word)li328),tmp=(C_word)a,a+=4,tmp));}

/* f_22497 in simple-unit-parser in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22497,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_22097(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22287(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22287,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22304,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_22254(t5,t6,t3,t4);}}

/* k22302 in emit-list in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22308,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit-list");
f_22287(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22306 in k22302 in emit-list in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22308,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22254(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22254,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22261,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22166(t5,t2);}

/* k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22261,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22332,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22205,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22103(t4,t3);}}

/* k22203 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22205,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22212,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22270(2,t2,C_SCHEME_FALSE);}}

/* k22210 in k22203 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_23376(((C_word*)t0)[2],t1);}

/* k22268 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22270,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22470,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22493,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  emit-list");
f_22287(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[400],((C_word*)t0)[4]);}}}

/* k22491 in k22268 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  get-rule");
f_21904(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k22468 in k22268 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22470,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[363]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t4,((C_word*)t0)[4]);}}

/* k22484 in k22468 in k22268 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_22254(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_22136(t2,((C_word*)t0)[2]);}

/* k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22335,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t8=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_23274(t8,((C_word*)t0)[4]);}}}

/* k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22359,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22410,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22416,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k22420 in k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22422,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k22429 in k22420 in k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22431,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22440,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k22438 in k22429 in k22420 in k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22440,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k22447 in k22438 in k22429 in k22420 in k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22449,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[396],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k22456 in k22447 in k22438 in k22429 in k22420 in k22414 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[397],((C_word*)t0)[2]);}}

/* k22408 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22365,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[130]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k22369 in k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22371,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[108]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k22375 in k22369 in k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22377,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[392]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k22381 in k22375 in k22369 in k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22383,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[393]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k22387 in k22381 in k22375 in k22369 in k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22389,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[394]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k22393 in k22387 in k22381 in k22375 in k22369 in k22363 in k22357 in k22333 in k22330 in k22259 in emit in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[395]);}
else{
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[391]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22236(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22236,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22243,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_22243(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[389],t2);}}

/* k22241 in set-emit-info! in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22226(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22226,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22214(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22214,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22182(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22182,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22189,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_22166(t4,t2);}

/* k22187 in token-unit-type=? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22189,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22194 in k22187 in token-unit-type=? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_23388(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22166(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22166,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22173,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_22103(t3,t2);}

/* k22171 in token-unit? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22173,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22180,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_22118(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22178 in k22171 in token-unit? in k22162 in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_23226(((C_word*)t0)[2],t1);}

/* parse-unit-position in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22154(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22154,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22136(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22136,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22118(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22118,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22103(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22103,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[377]));}

/* make-parse-unit in k22093 in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22097(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22097,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[377],t2,t3,t4));}

/* parse-error-position in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22085(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22085,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[373]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22067(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22067,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[373]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22046(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22046,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[373],t2,t3));}

/* pattern-zero-or-more? in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_22014(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22014,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22021,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_21928(t3,t2);}

/* k22019 in pattern-zero-or-more? in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_22021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[102]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21956(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21956,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21964,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_21940(t4,t2);}

/* k21962 in pattern-sub in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21946(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21946,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21954,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_21940(t3,t2);}

/* k21952 in pattern-nsubs in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21940(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21940,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21928(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21928,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21925(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21925,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k21900 in k21897 in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21904(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21904,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[361],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 379  hash-table-ref/default");
t4=C_retrieve(lf[366]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[361],"*rules*"),t3);}}

/* rule-name in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21817(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21817,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[363]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k21792 in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21796(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21796,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[363],t2,t3,t4,t5,t6));}

/* null-tokens? in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21786(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21786,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21774(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21774,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k21741 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21745(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21745,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[358]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[352],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[352],"make-token"),t2);}}

/* token-position in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21733(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21733,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[353]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21715(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21715,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[353]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21697(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21697,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[353]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21676,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[353],t2,t3,t4));}

/* markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20654(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_20654r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20654r(t0,t1,t2,t3);}}

static void C_ccall f_20654r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_20664,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_20664(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[214]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21589,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[214]);}
else{
t31=t30;
f_21589(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[351]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21624,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[351]);}
else{
t32=t31;
f_21624(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21653,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_21653(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k21651 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21653,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21668,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21666 in k21651 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21660(2,t2,C_SCHEME_UNDEFINED);}}

/* k21658 in k21651 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20664(t5,t4);}

/* k21622 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21628(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21626 in k21622 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20664(t7,t6);}

/* k21587 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21591 in k21587 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20664(t7,t6);}

/* k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20667,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20667(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21489,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_21489(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[351]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[351]);}
else{
t7=t6;
f_21524(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21553,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21553(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21551 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21553,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21568,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21566 in k21551 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21560(2,t2,C_SCHEME_UNDEFINED);}}

/* k21558 in k21551 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20667(t5,t4);}

/* k21522 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21526 in k21522 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20667(t7,t6);}

/* k21487 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21493,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21493(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21491 in k21487 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20667(t7,t6);}

/* k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20670,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20670(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20670,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_20675(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[350],((C_word*)((C_word*)t0)[9])[1]);}}

/* k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20677,a[2]=((C_word*)t0)[9],a[3]=((C_word)li275),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20759,a[2]=t4,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20869,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21382,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li295),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_21382(t10,t6,C_fix(0));}

/* do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21382(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21382,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21392,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21405,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li294),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_21405(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2806 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21405(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21405,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21415,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21433,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t9=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21458,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  modulo");
t9=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k21456 in do2806 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21458,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21440,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_21440(t7,t6);}
else{
t5=t4;
f_21440(t5,C_SCHEME_UNDEFINED);}}

/* k21438 in k21456 in do2806 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21440(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21440,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_21405(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21431 in do2806 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add-outcome");
t2=((C_word*)t0)[4];
f_20677(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k21413 in do2806 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21415,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k21390 in do2803 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21392,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21382(t3,((C_word*)t0)[2],t2);}

/* k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21338,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t5=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[346]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21344,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_21344(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_21344(t5,C_SCHEME_FALSE);}}}

/* k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21344,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21350,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21364 in k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20872(t3,t2);}

/* a21349 in k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21350,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21358,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t5=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[349],t2);}

/* k21356 in a21349 in k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21362,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[348],((C_word*)t0)[2]);}

/* k21360 in k21356 in a21349 in k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-ci<?");
t2=*((C_word*)lf[347]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21346 in k21342 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20872(t3,t2);}

/* k21336 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20872(t3,t2);}

/* k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21215,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li292),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21215(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21215(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21215,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21226,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21239,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 378  max");
t10=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21239,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21301,a[2]=t5,a[3]=((C_word)li291),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_21301(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2827 in k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21301(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21301,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k21240 in k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21242,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[345]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21258,a[2]=t3,a[3]=t8,a[4]=((C_word)li290),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_21258(t10,t6,((C_word*)t0)[2]);}

/* do2833 in k21240 in k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21258(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21258,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21283,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  decimals");
t9=C_retrieve(lf[106]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k21281 in do2833 in k21240 in k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21258(t4,((C_word*)t0)[2],t3);}

/* k21247 in k21240 in k21237 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_21215(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21224 in do2819 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21201,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li289),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a21200 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21201,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_20759(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20879,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20882,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[334];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20923,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t7=*((C_word*)lf[344]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_20882(2,t5,C_SCHEME_UNDEFINED);}}

/* k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21182,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li288),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21182(t6,t2,C_fix(0));}

/* do2846 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21182(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21182,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21192,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[337]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[338]+1));}}

/* k21190 in do2846 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21192,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21182(t3,((C_word*)t0)[2],t2);}

/* k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21120,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li287),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21120(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21120(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21120,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21130,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[343],t3);}

/* k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21133,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21139,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21153,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21151 in k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21153,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21155,a[2]=t3,a[3]=((C_word)li286),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21155(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2856 in k21151 in k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21155(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21155,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21165,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[337]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[338]+1));}}

/* k21163 in do2856 in k21151 in k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21165,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21155(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21137 in k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21142,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k21140 in k21137 in k21131 in k21128 in do2851 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21120(t3,((C_word*)t0)[2],t2);}

/* k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20935,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li285),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_20940(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20940(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20940,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t5=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_20956(2,t4,lf[340]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20827,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[342],t5);}}

/* k20825 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20827,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20836,a[2]=t6,a[3]=t3,a[4]=((C_word)li284),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_20836(t8,((C_word*)t0)[2],t4);}

/* do2798 in k20825 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20836(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20836,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20847,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20858,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[341],t5);}}

/* k20856 in do2798 in k20825 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k20845 in do2798 in k20825 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20836(t4,((C_word*)t0)[2],t3);}

/* k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20956,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20962,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21091,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21089 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21091,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21093,a[2]=t3,a[3]=((C_word)li283),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21093(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2872 in k21089 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21093(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21093,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21103,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[337]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[338]+1));}}

/* k21101 in do2872 in k21089 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21103,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21093(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20965,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21064,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  min");
t4=*((C_word*)lf[339]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21062 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21064,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21066,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li282),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21066(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2878 in k21062 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21066(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21066,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21076,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[337]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[338]+1));}}

/* k21074 in do2878 in k21062 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21076,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21066(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20968,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20977,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li281),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_20977(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20977(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20977,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20990,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21009,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21003,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  display");
t8=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k21001 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21009,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21015,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21013 in k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21025,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  max");
t5=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k21023 in k21013 in k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21025,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21027,a[2]=t3,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21027(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2892 in k21023 in k21013 in k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_21027(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21027,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21037,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[337]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[338]+1));}}

/* k21035 in do2892 in k21023 in k21013 in k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21037,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21027(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21016 in k21013 in k21007 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_21018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20988 in do2885 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20977(t3,((C_word*)t0)[2],t2);}

/* k20966 in k20963 in k20960 in k20954 in k20951 in do2866 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20940(t3,((C_word*)t0)[2],t2);}

/* k20933 in k20930 in k20927 in k20924 in k20921 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  newline");
t2=*((C_word*)lf[335]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k20880 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20882,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20894,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20905,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a20904 in k20880 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20905(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20905,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[333],t4);}

/* k20892 in k20880 in k20877 in k20873 in k20870 in k20867 in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 378  make-markov");
t2=C_retrieve(lf[311]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20759(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20759,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20769,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20807,a[2]=t2,a[3]=((C_word)li277),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t7=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a20806 in before? in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20807(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20807,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k20767 in before? in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20797,a[2]=((C_word*)t0)[4],a[3]=((C_word)li276),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t4=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a20796 in k20767 in before? in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20797,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k20770 in k20767 in before? in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_20759(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20677(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20677,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20681,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20749,a[2]=t2,a[3]=((C_word)li274),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-find");
t6=C_retrieve(lf[66]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a20748 in add-outcome in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20749,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k20679 in add-outcome in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20681,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20731,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  tail");
t7=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20699,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[331]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[332],((C_word*)t0)[3]);}}

/* k20697 in k20679 in add-outcome in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20699,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k20729 in k20679 in add-outcome in k20673 in k20668 in k20665 in k20662 in markov-analyze in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20731,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20560(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20560,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20564,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t3,t2);}

/* k20562 in next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20564,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20593,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[322]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_19979(((C_word*)t0)[2],t6);}}

/* k20591 in k20562 in next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20593,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20598,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li272),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_20598(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2721 in k20591 in k20562 in next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20598(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20598,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20608,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_20608(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[329],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20623,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[322]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_20623(t12,t11);}
else{
t10=t5;
f_20623(t10,C_SCHEME_UNDEFINED);}}}

/* k20621 in do2721 in k20591 in k20562 in next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20623(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20598(t3,((C_word*)t0)[2],t2);}

/* k20606 in do2721 in k20591 in k20562 in next-in-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_19979(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20042(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_20042r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20042r(t0,t1,t2,t3);}}

static void C_ccall f_20042r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20046,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20304,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20313,a[2]=t9,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[328],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20313,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20317,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_20317(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[327],t2);}}

/* k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20322,a[2]=((C_word*)t0)[4],a[3]=((C_word)li269),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20322(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_20322r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20322r(t0,t1,t2,t3);}}

static void C_ccall f_20322r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20326,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20326(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[325]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20464,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[325]);}
else{
t20=t19;
f_20464(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[326]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20499,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[326]);}
else{
t21=t20;
f_20499(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20528,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_20528(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k20526 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20528,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20543,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20541 in k20526 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20535(2,t2,C_SCHEME_UNDEFINED);}}

/* k20533 in k20526 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20326(t5,t4);}

/* k20497 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20503,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20503(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20501 in k20497 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20326(t7,t6);}

/* k20462 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20466 in k20462 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20326(t7,t6);}

/* k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20326(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20326,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20329,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20329(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[325]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20364,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[325]);}
else{
t6=t5;
f_20364(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[326]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20399,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[326]);}
else{
t7=t6;
f_20399(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20428,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20428(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20426 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20428,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20443,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20441 in k20426 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20435(2,t2,C_SCHEME_UNDEFINED);}}

/* k20433 in k20426 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20329(t5,t4);}

/* k20397 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20401 in k20397 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20329(t7,t6);}

/* k20362 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20366 in k20362 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20329(t7,t6);}

/* k20327 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20329(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20329,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20332,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20332(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20330 in k20327 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_20335(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_20335(t4,t3);}}

/* k20333 in k20330 in k20327 in k20324 in a20321 in k20315 in parse-graph-item in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20335,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[322],t5,t6,t7));}

/* k20302 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20046(2,t3,t2);}

/* k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20046,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20049,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_20049(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[280]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20209,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[280]);}
else{
t18=t17;
f_20209(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[281]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20244,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[281]);}
else{
t19=t18;
f_20244(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20273,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_20273(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k20271 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20273,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20288,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20286 in k20271 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20280(2,t2,C_SCHEME_UNDEFINED);}}

/* k20278 in k20271 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20049(t5,t4);}

/* k20242 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20248(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20246 in k20242 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20049(t7,t6);}

/* k20207 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20211 in k20207 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20049(t7,t6);}

/* k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20052,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20052(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20109,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_20109(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20144,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_20144(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20173,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20173(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20171 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20173,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20188,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20186 in k20171 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20180(2,t2,C_SCHEME_UNDEFINED);}}

/* k20178 in k20171 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20052(t5,t4);}

/* k20142 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20146 in k20142 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20052(t7,t6);}

/* k20107 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20111 in k20107 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20052(t7,t6);}

/* k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_20052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20052,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20055(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k20056 in k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20058,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20064,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20070,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[324],"next-in-graph"),t5);}

/* a20069 in k20056 in k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20070,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20076,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20088,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t5,t3);}

/* k20086 in a20069 in k20056 in k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a20075 in a20069 in k20056 in k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20076,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_19979(t1,t2);}

/* k20062 in k20056 in k20053 in k20050 in k20047 in k20044 in make-graph in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_20064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19979(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19979,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19639(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19639,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19642,a[2]=t4,a[3]=((C_word)li261),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19821,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t6,t2);}

/* k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19825,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14371(t2,((C_word*)t0)[4]);}

/* k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19825,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19827,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li264),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19827(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19827,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_19837(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_19837(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19752,a[2]=t13,a[3]=((C_word)li263),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_19752(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2547 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19752(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19752,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19762,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_19762(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_19762(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k19760 in do2547 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19762(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19762,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[102]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19769,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_19769(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_19769(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_19769(t9,(C_word)C_eqp(t8,lf[102]));}}}}

/* k19767 in k19760 in do2547 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19752(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19837,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19840,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[320],((C_word*)t0)[6]);}
else{
t3=t2;
f_19840(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_19827(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k19838 in k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19844,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_19642(t7,t2,t4,t6);}

/* k19842 in k19838 in k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19844,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19847,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_19847(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_19847(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19864,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li262),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_19864(t8,t3,((C_word*)t0)[3]);}}}

/* do2571 in k19842 in k19838 in k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19864(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19864,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19880,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k19878 in do2571 in k19842 in k19838 in k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k19845 in k19842 in k19838 in k19835 in do2562 in k19823 in k19819 in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19642(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19642,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19710,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7759(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19654,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li260),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_19654(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2531 in select-output in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19654(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19654,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_19642(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19690,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_19690(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t9,t11);}}}

/* k19688 in do2531 in select-output in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19690,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19654(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k19708 in select-output in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19710,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19715,a[2]=t3,a[3]=t1,a[4]=((C_word)li259),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19715(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2541 in k19708 in select-output in next-in-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19715(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19715,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19152(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_19152r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19152r(t0,t1,t2,t3);}}

static void C_ccall f_19152r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19156,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19633,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19079,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li257),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_19079(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[319],((C_word*)t4)[1]);}}

/* do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19079(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19079,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18924,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_18924(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[318],((C_word*)t11)[1]);}}}

/* k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18924,2,t0,t1);}
t2=(C_word)C_i_member(lf[314],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18930,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_18930(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[316],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_18930(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 378  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[317],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18930,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18942,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19015,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li256),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_19015(t17,t13);}

/* do2410 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19015,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li255),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a18957 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18958(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18958,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18962,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_18962(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_18962(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_18962(t13,t12);}}

/* k18960 in a18957 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18962,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_18965(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_18965(t5,t4);}}

/* k18963 in k18960 in a18957 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18965,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k18943 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k18954 in k18943 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18956,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_19096(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[315],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_19096(2,t10,t9);}}

/* k19094 in k18954 in k18943 in k18940 in k18928 in k18922 in do2432 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19096,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_19079(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k19631 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19156(2,t3,t2);}

/* k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19156,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19159,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19159(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[280]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19503,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[280]);}
else{
t22=t21;
f_19503(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[281]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19538,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[281]);}
else{
t23=t22;
f_19538(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[313]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19573,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[313]);}
else{
t24=t23;
f_19573(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19602,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_19602(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19600 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19602,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19617,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19615 in k19600 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19609(2,t2,C_SCHEME_UNDEFINED);}}

/* k19607 in k19600 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19159(t5,t4);}

/* k19571 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19577(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19575 in k19571 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19159(t7,t6);}

/* k19536 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19542,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19542(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19540 in k19536 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19159(t7,t6);}

/* k19501 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19507(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19505 in k19501 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19159(t7,t6);}

/* k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19159,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19162(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19368,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_19368(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19403,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_19403(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[313]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19438,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[313]);}
else{
t8=t7;
f_19438(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19467,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19467(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19465 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19467,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19482,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19480 in k19465 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19474(2,t2,C_SCHEME_UNDEFINED);}}

/* k19472 in k19465 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19162(t5,t4);}

/* k19436 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19442(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19440 in k19436 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19162(t7,t6);}

/* k19401 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19407(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19405 in k19401 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19162(t7,t6);}

/* k19366 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19372,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19372(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19370 in k19366 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19162(t7,t6);}

/* k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19162,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19165,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19165(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19233,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_19233(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_19268(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[313]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19303,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[313]);}
else{
t8=t7;
f_19303(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19332,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19332(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19330 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19332,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19347,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19345 in k19330 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19339(2,t2,C_SCHEME_UNDEFINED);}}

/* k19337 in k19330 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19165(t5,t4);}

/* k19301 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19305 in k19301 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19165(t7,t6);}

/* k19266 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19270 in k19266 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19165(t7,t6);}

/* k19231 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19237(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19235 in k19231 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19165(t7,t6);}

/* k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19165,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19168,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19168(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19171,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19177,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19204,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[312],"next-in-markov"),t4);}

/* a19203 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19204,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19212,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k19210 in a19203 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19175 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19180(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19190,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 378  make-list");
t7=C_retrieve(lf[63]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[102]);}}

/* k19188 in k19175 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19180(t3,t2);}

/* k19178 in k19175 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_19180(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19180,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19181 in k19178 in k19175 in k19169 in k19166 in k19163 in k19160 in k19157 in k19154 in make-markov in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_19183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18719(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18719,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18723,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t3,t2);}

/* k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}

/* k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18729,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14137(t2,((C_word*)t0)[2]);}

/* k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18729,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18735,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t4,t1,C_fix(4));}

/* k18896 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18898,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_18735(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_13987(t2,((C_word*)t0)[2]);}}

/* k18909 in k18896 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14005(t2,((C_word*)t0)[2]);}

/* k18913 in k18909 in k18896 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_18607(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_18735(2,t2,C_SCHEME_UNDEFINED);}}

/* k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_18741(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18872,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18891,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_17757(t4,((C_word*)t0)[4]);}}

/* k18889 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18891,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_17748(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k18870 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_17757(t2,((C_word*)t0)[2]);}

/* k18877 in k18870 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18883,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_17721(t2,((C_word*)t0)[2]);}

/* k18881 in k18877 in k18870 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18741(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18741,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_17667(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18747,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14371(t2,((C_word*)t0)[2]);}}

/* k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18747,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18751,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18789,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18831,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_18751(t7,t2,t1);}

/* k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18831,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18833,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li252),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18833(t5,((C_word*)t0)[2],t1);}

/* do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18833(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18833,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18852,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18855,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_17739(t4,t2);}

/* k18853 in do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18855,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_17757(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18852(t2,C_SCHEME_FALSE);}}

/* k18860 in k18853 in do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18866,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_17739(t2,((C_word*)t0)[2]);}

/* k18864 in k18860 in k18853 in do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18852(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k18850 in do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18852(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18852,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18848,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_18751(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k18846 in k18850 in do2384 in k18829 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_18833(t2,((C_word*)t0)[2],t1);}

/* k18787 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18792,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_18792(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18806,a[2]=t5,a[3]=((C_word)li251),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_18806(t7,t2,((C_word*)t0)[2]);}}

/* do2388 in k18787 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18806(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18806,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18816,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_17748(t3,t4,C_fix(0));}}

/* k18814 in do2388 in k18787 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18806(t3,((C_word*)t0)[2],t2);}

/* k18790 in k18787 in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_17667(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18751(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18751,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18759,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7759(t4,t3);}

/* k18757 in pick in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18759,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18761,a[2]=t3,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_18761(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2379 in k18757 in pick in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18761(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18761,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18782,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_17685(t4,t5);}

/* k18780 in do2379 in k18757 in pick in k18745 in k18739 in k18733 in k18727 in k18724 in k18721 in next-in-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18761(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18607(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18607,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18717,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t2);}

/* k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18717,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[310];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18614,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18676,a[2]=t7,a[3]=t4,a[4]=((C_word)li247),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_18676(t9,t5,t2);}

/* do2351 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18676(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18676,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18705,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18709,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_17703(t4,t5);}}

/* k18707 in do2351 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(((C_word*)t0)[2],t1);}

/* k18703 in do2351 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18705,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_17676(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k18688 in k18703 in do2351 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18676(t3,((C_word*)t0)[2],t2);}

/* k18612 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18614,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18622,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li246),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18622(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2357 in k18612 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18622(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18622,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18655,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18667,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_17685(t8,t9);}}

/* k18665 in do2357 in k18612 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18667,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 378  floor");
t4=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k18653 in do2357 in k18612 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18655,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_17676(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k18637 in k18653 in do2357 in k18612 in k18715 in recalc-weightings in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18622(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17840(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_17840r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17840r(t0,t1,t2,t3);}}

static void C_ccall f_17840r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17844,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18157,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18157(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18157,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18164,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_18164(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_18164(t9,t8);}}

/* k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18164,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18167,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18167(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[309]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[309]);}
else{
t22=t21;
f_18470(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[218]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18505,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[218]);}
else{
t23=t22;
f_18505(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[219]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[219]);}
else{
t24=t23;
f_18540(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18569,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_18569(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18567 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18569,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18584,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18582 in k18567 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18576(2,t2,C_SCHEME_UNDEFINED);}}

/* k18574 in k18567 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18167(t5,t4);}

/* k18538 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18542 in k18538 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18167(t7,t6);}

/* k18503 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18507 in k18503 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18167(t7,t6);}

/* k18468 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18472 in k18468 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18167(t7,t6);}

/* k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18167(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18167,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18170(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[309]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18335,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[309]);}
else{
t6=t5;
f_18335(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18370,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_18370(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18405,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[219]);}
else{
t8=t7;
f_18405(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18434,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18434(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18432 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18434,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18449,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18447 in k18432 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18441(2,t2,C_SCHEME_UNDEFINED);}}

/* k18439 in k18432 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18170(t5,t4);}

/* k18403 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18409(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18407 in k18403 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18170(t7,t6);}

/* k18368 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18372 in k18368 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18170(t7,t6);}

/* k18333 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18337 in k18333 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18170(t7,t6);}

/* k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18170,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18173,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18173(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[309]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18200,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[309]);}
else{
t6=t5;
f_18200(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18235,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[218]);}
else{
t7=t6;
f_18235(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18270,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[219]);}
else{
t8=t7;
f_18270(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18299,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18299(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18297 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18299,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18314,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18312 in k18297 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18306(2,t2,C_SCHEME_UNDEFINED);}}

/* k18304 in k18297 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18173(t5,t4);}

/* k18268 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18274(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18272 in k18268 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18173(t7,t6);}

/* k18233 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18237 in k18233 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18173(t7,t6);}

/* k18198 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18202 in k18198 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18173(t7,t6);}

/* k18171 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18173,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18176,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18176(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k18174 in k18171 in k18168 in k18165 in k18162 in %make-random-item in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18176,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[298],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17847,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17853,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18121,a[2]=t8,a[3]=t6,a[4]=((C_word)li243),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18121(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18121,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18125,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_17721(t3,t2);}

/* k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18128,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_17739(t2,((C_word*)t0)[2]);}

/* k18126 in k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_17703(t2,((C_word*)t0)[2]);}

/* k18129 in k18126 in k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_17667(t2,((C_word*)t0)[2]);}

/* k18132 in k18129 in k18126 in k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18147,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t1);}

/* k18145 in k18132 in k18129 in k18126 in k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18147,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18137(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18137(t2,C_SCHEME_UNDEFINED);}}

/* k18135 in k18132 in k18129 in k18126 in k18123 in a18120 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_18137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17853,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17860,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_17860(t8,t7);}
else{
t6=t5;
f_17860(t6,C_SCHEME_UNDEFINED);}}

/* k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17860(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17860,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_17863,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17863(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[280]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18027,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[280]);}
else{
t18=t17;
f_18027(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[281]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18062,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[281]);}
else{
t19=t18;
f_18062(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18091,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_18091(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18089 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18091,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18106,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18104 in k18089 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18098(2,t2,C_SCHEME_UNDEFINED);}}

/* k18096 in k18089 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17863(t5,t4);}

/* k18060 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18064 in k18060 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17863(t7,t6);}

/* k18025 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18031(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18029 in k18025 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17863(t7,t6);}

/* k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17863(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17863,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17866,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17866(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17927,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_17927(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17962,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_17962(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17991,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17991(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17989 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17991,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17998,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18006,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18004 in k17989 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_18006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17998(2,t2,C_SCHEME_UNDEFINED);}}

/* k17996 in k17989 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17866(t5,t4);}

/* k17960 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17964 in k17960 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17866(t7,t6);}

/* k17925 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17929 in k17925 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17866(t7,t6);}

/* k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17866(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17866,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17869,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17869(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17872,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17884,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[308],"next-in-weighting"),t4);}

/* a17883 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17884,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17890,a[2]=t2,a[3]=((C_word)li241),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17906,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t5,t3);}

/* k17904 in a17883 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a17889 in a17883 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17890,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17898,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_17667(t3,t2);}

/* k17896 in a17889 in a17883 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17870 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_18607(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_17875(2,t3,C_SCHEME_UNDEFINED);}}

/* k17873 in k17870 in k17867 in k17864 in k17861 in k17858 in k17851 in k17845 in k17842 in make-weighting in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17757(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17757,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17748(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17748,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[298]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17739(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17739,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17721(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17721,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17703(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17703,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17685(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17685,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17676(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17676,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[298]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17667(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17667,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17445,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17448,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17495,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t2);}

/* k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17498,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17521,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17640,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14371(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_17498(t4,C_SCHEME_UNDEFINED);}}

/* k17638 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(((C_word*)t0)[2],t1);}

/* k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17528,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17575,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14173(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17602,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14173(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17621,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14173(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17636,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14173(t3,((C_word*)t0)[2]);}}

/* k17634 in k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17636,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_17448(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k17619 in k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17621,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_17448(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k17600 in k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17602,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[6];
f_17448(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k17573 in k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17575,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 378  rotate-items");
t4=((C_word*)t0)[7];
f_17448(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k17526 in k17519 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17498(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k17496 in k17493 in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_17448,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17454,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li230),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_17454(t10,t1,t3);}

/* do2119 in rotate-items in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_17454(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17454,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17470,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t7=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k17468 in do2119 in rotate-items in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17473,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  list-set!");
t4=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k17471 in k17468 in do2119 in rotate-items in next-in-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17473,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17454(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16971(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_16971r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16971r(t0,t1,t2,t3);}}

static void C_ccall f_16971r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16975,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17435,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16975(t8,t7);}}

/* k17433 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16975(t3,t2);}

/* k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16975,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16978,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16978(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[280]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17308,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[280]);}
else{
t22=t21;
f_17308(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[281]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17343,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[281]);}
else{
t23=t22;
f_17343(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[296]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17378,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[296]);}
else{
t24=t23;
f_17378(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17407,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17407(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17405 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17407,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17422,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17420 in k17405 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17414(2,t2,C_SCHEME_UNDEFINED);}}

/* k17412 in k17405 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16978(t5,t4);}

/* k17376 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17382(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17380 in k17376 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16978(t7,t6);}

/* k17341 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17347(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17345 in k17341 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16978(t7,t6);}

/* k17306 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17312(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17310 in k17306 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16978(t7,t6);}

/* k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16978,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16981(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17173,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_17173(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17208,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_17208(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17243,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[296]);}
else{
t8=t7;
f_17243(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17272,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17272(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17270 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17272,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17287,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17285 in k17270 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17279(2,t2,C_SCHEME_UNDEFINED);}}

/* k17277 in k17270 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16981(t5,t4);}

/* k17241 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17247(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17245 in k17241 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16981(t7,t6);}

/* k17206 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17212,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17212(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17210 in k17206 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16981(t7,t6);}

/* k17171 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17177,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17177(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17175 in k17171 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16981(t7,t6);}

/* k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16981,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16984,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16984(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17038,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_17038(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17073,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_17073(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17108,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[296]);}
else{
t8=t7;
f_17108(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17137,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17137(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17135 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17137,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17152,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17150 in k17135 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17144(2,t2,C_SCHEME_UNDEFINED);}}

/* k17142 in k17135 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16984(t5,t4);}

/* k17106 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17112,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17112(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17110 in k17106 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16984(t7,t6);}

/* k17071 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17077(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17075 in k17071 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16984(t7,t6);}

/* k17036 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17042(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17040 in k17036 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16984(t7,t6);}

/* k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16984,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16987,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16987(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k16988 in k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16990,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16996,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17005,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[295],"next-in-rotation"),t5);}

/* a17004 in k16988 in k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17005,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17017,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k17015 in a17004 in k16988 in k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_17017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16994 in k16988 in k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16997 in k16994 in k16988 in k16985 in k16982 in k16979 in k16976 in k16973 in make-rotation in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16895(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16895,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16899,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t3,t2);}

/* k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16902,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16918,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_14173(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_16902(2,t4,C_SCHEME_UNDEFINED);}}

/* k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16918,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16928,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7752(t3,t1);}

/* k16926 in k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16928,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16930,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li226),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16930(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2019 in k16926 in k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16930(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16930,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16947,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  list-set!");
t10=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k16945 in do2019 in k16926 in k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16950,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t3=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k16948 in k16945 in do2019 in k16926 in k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16950,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16961,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7752(t3,((C_word*)t0)[2]);}

/* k16959 in k16948 in k16945 in do2019 in k16926 in k16916 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_16930(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k16900 in k16897 in next-in-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16632(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_16632r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16632r(t0,t1,t2,t3);}}

static void C_ccall f_16632r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16636,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16885,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16636(t8,t7);}}

/* k16883 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16636(t3,t2);}

/* k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16636(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16636,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16639,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16639(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[280]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16793,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[280]);}
else{
t18=t17;
f_16793(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[281]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16828,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[281]);}
else{
t19=t18;
f_16828(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16857,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16857(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16855 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16857,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16872,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16870 in k16855 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16864(2,t2,C_SCHEME_UNDEFINED);}}

/* k16862 in k16855 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16639(t5,t4);}

/* k16826 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16832,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16832(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16830 in k16826 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16639(t7,t6);}

/* k16791 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16797(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16795 in k16791 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16639(t7,t6);}

/* k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16639,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16642,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16642(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16693,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_16693(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16728,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_16728(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16757,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16757(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16755 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16757,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16772,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16770 in k16755 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16764(2,t2,C_SCHEME_UNDEFINED);}}

/* k16762 in k16755 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16642(t5,t4);}

/* k16726 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16730 in k16726 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16642(t7,t6);}

/* k16691 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16695 in k16691 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16642(t7,t6);}

/* k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16642,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16645,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16645(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16643 in k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k16646 in k16643 in k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16648,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16654,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16660,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[293],"next-in-heap"),t5);}

/* a16659 in k16646 in k16643 in k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16660,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16672,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k16670 in a16659 in k16646 in k16643 in k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16652 in k16646 in k16643 in k16640 in k16637 in k16634 in make-heap in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16596(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16596,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16600,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t3,t2);}

/* k16598 in next-in-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16600,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16609,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16616,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16622,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14146(t4,((C_word*)t0)[2],t5);}}

/* k16620 in k16598 in next-in-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k16614 in k16598 in next-in-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[2],t1,C_fix(1));}

/* k16607 in k16598 in next-in-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16349(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16349r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16349r(t0,t1,t2,t3);}}

static void C_ccall f_16349r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16353,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16353(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16353(t8,t7);}}

/* k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16353(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16353,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16356,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16356(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[280]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16502,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[280]);}
else{
t18=t17;
f_16502(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[281]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16537,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[281]);}
else{
t19=t18;
f_16537(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16566,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16566(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16564 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16566,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16581,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16579 in k16564 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16573(2,t2,C_SCHEME_UNDEFINED);}}

/* k16571 in k16564 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16356(t5,t4);}

/* k16535 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16537,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16541(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16539 in k16535 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16356(t7,t6);}

/* k16500 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16504 in k16500 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16356(t7,t6);}

/* k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16356,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16359,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16359(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16402,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_16402(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16437,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_16437(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16466,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16466(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16464 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16466,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16481,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16479 in k16464 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16473(2,t2,C_SCHEME_UNDEFINED);}}

/* k16471 in k16464 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16359(t5,t4);}

/* k16435 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16439 in k16435 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16359(t7,t6);}

/* k16400 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16404 in k16400 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16359(t7,t6);}

/* k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16359(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16359,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16362,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16362(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16360 in k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k16363 in k16360 in k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16365,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16371,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16373,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[291],"next-in-line"),t4);}

/* a16372 in k16363 in k16360 in k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16373,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16381,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k16379 in a16372 in k16363 in k16360 in k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16369 in k16363 in k16360 in k16357 in k16354 in k16351 in make-line in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16134(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16134,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16138,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_14371(t3,t2);}

/* k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16138,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[283]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16144,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16168,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[283]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16347,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_15575(t8,t1);}}

/* k16345 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16347,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_15584(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_16144(2,t2,C_SCHEME_UNDEFINED);}}

/* k16298 in k16345 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16300,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[283]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_16312(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_16312(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_16312(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_16312(t7,C_SCHEME_FALSE);}}}

/* k16310 in k16298 in k16345 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16312(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16312,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16144(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16144(2,t4,t3);}}

/* k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_15575(t2,((C_word*)t0)[2]);}

/* k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16171,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16177,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[283]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t7=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_15584(t2,((C_word*)t0)[2],C_fix(1));}

/* k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16268,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_16268(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_16268(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_16268(t5,C_SCHEME_FALSE);}}}

/* k16266 in k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16183(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_16183(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16183(t3,t2);}}

/* k16181 in k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_16183(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16183,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16262,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14137(t3,((C_word*)t0)[2]);}

/* k16260 in k16181 in k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(((C_word*)t0)[2],t1,C_fix(2));}

/* k16187 in k16181 in k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16189,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16144(2,t2,C_SCHEME_UNDEFINED);}}

/* k16190 in k16187 in k16181 in k16178 in k16175 in k16169 in k16166 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16192,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[288]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[289]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],t1,t2);}}}}

/* k16142 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[283]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[283]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t9=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k16145 in k16142 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t2,((C_word*)t0)[2]);}

/* k16152 in k16145 in k16142 in k16136 in next-in-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15664(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15664r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15664r(t0,t1,t2,t3);}}

static void C_ccall f_15664r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15668,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15668(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15668(t8,t7);}}

/* k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15668,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15671,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15671(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[280]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16005,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[280]);}
else{
t22=t21;
f_16005(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[281]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16040,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[281]);}
else{
t23=t22;
f_16040(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[287]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16075,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[287]);}
else{
t24=t23;
f_16075(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16104,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_16104(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16102 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16119,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16117 in k16102 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16111(2,t2,C_SCHEME_UNDEFINED);}}

/* k16109 in k16102 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15671(t5,t4);}

/* k16073 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16077 in k16073 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15671(t7,t6);}

/* k16038 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16042 in k16038 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15671(t7,t6);}

/* k16003 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16007 in k16003 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15671(t7,t6);}

/* k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15671,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15674(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15870,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_15870(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15905,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_15905(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[287]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15940,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[287]);}
else{
t8=t7;
f_15940(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15969,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15969(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15967 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15969,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15984,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15982 in k15967 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15976(2,t2,C_SCHEME_UNDEFINED);}}

/* k15974 in k15967 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15674(t5,t4);}

/* k15938 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15942 in k15938 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15674(t7,t6);}

/* k15903 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15907 in k15903 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15674(t7,t6);}

/* k15868 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15872 in k15868 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15674(t7,t6);}

/* k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15677,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15677(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15735,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_15735(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15770,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_15770(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[287]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15805,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[287]);}
else{
t8=t7;
f_15805(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15834,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15834(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15832 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15834,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15849,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15847 in k15832 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15841(2,t2,C_SCHEME_UNDEFINED);}}

/* k15839 in k15832 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15677(t5,t4);}

/* k15803 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15809(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15807 in k15803 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15677(t7,t6);}

/* k15768 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15774,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15774(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15772 in k15768 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15677(t7,t6);}

/* k15733 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15739(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15737 in k15733 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15677(t7,t6);}

/* k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15677,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15680,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15680(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k15681 in k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15683,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15689,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15706,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[286],"next-in-palindrome"),t5);}

/* a15705 in k15681 in k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15706,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15714,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k15712 in a15705 in k15681 in k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15687 in k15681 in k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15692,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[283],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_14362(t2,((C_word*)t0)[4],t5);}

/* k15690 in k15687 in k15681 in k15678 in k15675 in k15672 in k15669 in k15666 in make-palindrome in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15584(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15584,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[283]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15575(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15575,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[283]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15503(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15503,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15507,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t3,t2);}

/* k15505 in next-in-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15510,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_15510(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_15510(t4,C_SCHEME_UNDEFINED);}}

/* k15508 in k15505 in next-in-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15510(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15248(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15248r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15248r(t0,t1,t2,t3);}}

static void C_ccall f_15248r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15252,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15252(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15252(t8,t7);}}

/* k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15252(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15252,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15255,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15255(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[280]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15409,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[280]);}
else{
t18=t17;
f_15409(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[281]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15444,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[281]);}
else{
t19=t18;
f_15444(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15473,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15473(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15471 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15473,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15488,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15486 in k15471 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15480(2,t2,C_SCHEME_UNDEFINED);}}

/* k15478 in k15471 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15255(t5,t4);}

/* k15442 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15448,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15448(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15446 in k15442 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15255(t7,t6);}

/* k15407 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15413(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15411 in k15407 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15255(t7,t6);}

/* k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15255,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15258,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15258(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[280]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15309,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[280]);}
else{
t6=t5;
f_15309(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[281]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15344,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[281]);}
else{
t7=t6;
f_15344(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15373,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15373(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15371 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15373,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15388,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15386 in k15371 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15380(2,t2,C_SCHEME_UNDEFINED);}}

/* k15378 in k15371 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15258(t5,t4);}

/* k15342 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15348(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15346 in k15342 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15258(t7,t6);}

/* k15307 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15313(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15311 in k15307 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15258(t7,t6);}

/* k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15258,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15261,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15261(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15259 in k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_14426(t2);}

/* k15262 in k15259 in k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15264,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15270,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15276,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_14436(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[279],"next-in-cycle"),t5);}

/* a15275 in k15262 in k15259 in k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15276(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15276,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15288,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_14155(t4,t3);}

/* k15286 in a15275 in k15262 in k15259 in k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15268 in k15262 in k15259 in k15256 in k15253 in k15250 in make-cycle in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15133(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15133,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15246,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t2);}

/* k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15246,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15143,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15146,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15231,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14023(t7,t1);}

/* k15229 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15231,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15238,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15242,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_14023(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_15146(2,t2,C_SCHEME_UNDEFINED);}}

/* k15240 in k15229 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(((C_word*)t0)[2],t1);}

/* k15236 in k15229 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[232]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14005(t2,((C_word*)t0)[3]);}

/* k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15228,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15154,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[232]);
t7=t4;
f_15154(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 378  period-length");
f_14005(t4,((C_word*)t0)[3]);}}

/* k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15154,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15157,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15163,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15218,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14137(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_15163(2,t5,C_SCHEME_FALSE);}}

/* k15216 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(((C_word*)t0)[2],t1,C_fix(8));}

/* k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15163,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15182,a[2]=t3,a[3]=((C_word)li211),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15087(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15157(t2,C_SCHEME_UNDEFINED);}}

/* a15181 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15182(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15182,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15211,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15133(t3,t2);}

/* k15209 in a15181 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15211,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15190 in k15209 in a15181 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15207,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14059(t3,t1);}

/* k15205 in k15190 in k15209 in a15181 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15207,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14050(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15193 in k15190 in k15209 in a15181 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15195,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k15164 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15166,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  max");
t4=*((C_word*)lf[277]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_15157(t2,C_SCHEME_UNDEFINED);}}

/* k15174 in k15164 in k15161 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15157(t3,t2);}

/* k15155 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15157,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15158 in k15155 in k15152 in k15226 in k15144 in k15141 in k15244 in reset-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15087(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15087,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[241]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15078(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15078,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[241]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14777(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14777,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14784,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t2);}

/* k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14784,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 378  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  promise?");
t3=C_retrieve(lf[276]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k15071 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  force");
t2=C_retrieve(lf[275]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14787,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14790,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15058,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_13987(t5,t1);}

/* k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15058,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15050,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14077(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14790(2,t2,C_SCHEME_UNDEFINED);}}

/* k15048 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15050,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15042,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14218(t5,((C_word*)t0)[4],lf[270]);}
else{
t5=((C_word*)t0)[2];
f_15013(t5,C_SCHEME_UNDEFINED);}}

/* k15040 in k15048 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14236(t2,((C_word*)t0)[2],lf[268]);}

/* k15043 in k15040 in k15048 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[270]);
t3=((C_word*)t0)[2];
f_15013(t3,t2);}

/* k15011 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15013,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_15019(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15036,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_15133(t4,((C_word*)t0)[2]);}}

/* k15034 in k15011 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15019(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k15017 in k15011 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_15019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15019,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[256]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14218(t3,((C_word*)t0)[2],lf[256]);}
else{
t2=((C_word*)t0)[3];
f_14790(2,t2,C_SCHEME_UNDEFINED);}}

/* k15021 in k15017 in k15011 in k15056 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14236(((C_word*)t0)[3],((C_word*)t0)[2],lf[268]);}

/* k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14790,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_14137(t2,((C_word*)t0)[3]);}}

/* k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14796,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14802,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14888,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t10,t1,C_fix(1));}

/* k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14888,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14891,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14904,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15078(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14911,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15000,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t3,((C_word*)t0)[2],C_fix(8));}}

/* k14998 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15000,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15007,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_14005(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14911(t2,C_SCHEME_FALSE);}}

/* k15005 in k14998 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14911(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14911,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li207),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14913(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14913(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14913,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14962,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li206),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_14962(t9,t5);}}

/* do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14962,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14191(t2,((C_word*)t0)[3]);}

/* k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14997,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[256]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14972,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14979,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14986,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15078(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_15078(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15131,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t2,t1);}

/* k15129 in k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15131,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_14209(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14979(2,t2,((C_word*)t0)[2]);}}

/* k15104 in k15129 in k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15127,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14059(t2,t1);}

/* k15125 in k15104 in k15129 in k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15127,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15115,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15123,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_14059(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_14979(2,t2,((C_word*)t0)[2]);}}

/* k15121 in k15125 in k15104 in k15129 in k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15123,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_14050(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15113 in k15125 in k15104 in k15129 in k14984 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14979(2,t2,lf[256]);}

/* k14977 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14182(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14970 in k14995 in do1671 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_14962(t2,((C_word*)t0)[2]);}

/* k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14191(t3,((C_word*)t0)[3]);}

/* k14958 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(((C_word*)t0)[2],t1);}

/* k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14924,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14943,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14956,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14191(t5,((C_word*)t0)[3]);}

/* k14954 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(((C_word*)t0)[2],t1);}

/* k14941 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14943,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14951,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14191(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[268]);
t3=((C_word*)t0)[3];
f_14927(t3,t2);}}

/* k14949 in k14941 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14245(((C_word*)t0)[2],t1);}

/* k14945 in k14941 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14927(t3,t2);}

/* k14925 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14927,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[256]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14182(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_14930(2,t5,t4);}}

/* k14928 in k14925 in k14922 in k14918 in do1667 in k14909 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_14913(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14902 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14182(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14889 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14900,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_14191(t3,((C_word*)t0)[2]);}

/* k14898 in k14889 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(((C_word*)t0)[2],t1);}

/* k14893 in k14889 in k14886 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[268]);
t4=((C_word*)t0)[2];
f_14802(2,t4,t3);}

/* k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14805,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[268]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14847,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14859,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_13987(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14882,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t5,((C_word*)t0)[2],C_fix(64));}}

/* k14880 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14182(((C_word*)t0)[3],((C_word*)t0)[2],lf[256]);}
else{
t2=((C_word*)t0)[3];
f_14862(2,t2,C_SCHEME_UNDEFINED);}}

/* k14860 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t2,((C_word*)t0)[2],C_fix(16));}

/* k14866 in k14860 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14868,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_13987(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14805(2,t2,C_SCHEME_UNDEFINED);}}

/* k14877 in k14866 in k14860 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14879,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14857 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14859,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_13978(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14845 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_14182(t2,((C_word*)t0)[2],lf[256]);}

/* k14848 in k14845 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_14805(2,t3,t2);}

/* k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14841,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_13987(t3,((C_word*)t0)[2]);}

/* k14839 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14841,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[268]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_14077(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_14808(2,t3,t2);}}

/* k14834 in k14839 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14836,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[232]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k14806 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14821,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_14811(t3,C_SCHEME_UNDEFINED);}}

/* k14819 in k14806 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14811(t3,t2);}

/* k14809 in k14806 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14811,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_14236(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14812 in k14809 in k14806 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_14218(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k14815 in k14812 in k14809 in k14806 in k14803 in k14800 in k14794 in k14788 in k14785 in k14782 in next-1 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14654(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_14654r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_14654r(t0,t1,t2,t3);}}

static void C_ccall f_14654r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14675,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li203),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_14675(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14713,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t1,t2);}}

/* k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14713,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k14721 in k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14723,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14725,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li204),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14725(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1643 in k14721 in k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14725,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[270]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14744,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14754,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  eop?");
t13=C_retrieve(lf[267]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k14752 in do1643 in k14721 in k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14754,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_14744(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14759,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t2,((C_word*)t0)[2]);}}

/* k14757 in k14752 in do1643 in k14721 in k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14744(t3,t2);}

/* k14742 in do1643 in k14721 in k14711 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_14725(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1636 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14675(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14675,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14707,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_14777(t4,((C_word*)t0)[2]);}}

/* k14705 in do1636 in next in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14707,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_14675(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14635(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14635,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14642,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t2);}

/* k14640 in eod? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14642,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14649,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t3=C_retrieve2(lf[250],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[270]));}}

/* k14647 in k14640 in eod? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eod?");
t2=C_retrieve(lf[269]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14616(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14616,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14623,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t2);}

/* k14621 in eop? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14623,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14630,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state");
f_14245(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[268]));}}

/* k14628 in k14621 in eop? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eop?");
t2=C_retrieve(lf[267]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14436(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14436,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14440,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_14146(t12,t2,t3);}

/* k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14443,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14449,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14452,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14606,a[2]=t3,a[3]=((C_word)li199),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_15087(t4,t5,((C_word*)t0)[7]);}

/* a14605 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14606(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14606,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14613,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_14122(t3,t2);}

/* k14611 in a14605 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_14455(t5,t4);}
else{
t3=t2;
f_14455(t3,C_SCHEME_UNDEFINED);}}

/* k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14455(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14455,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[257]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14461(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[264]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14461(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[265],t4);}}}

/* k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14461,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[258]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14467(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[262]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14467(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[263],t4);}}}

/* k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14530,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k14528 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14530,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[260]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14470(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7548(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k14542 in k14528 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14544,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[261]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14470(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14470(t4,t3);}}

/* k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t8=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k14471 in k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14473,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14479,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_14479(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_14479(t8,t7);}}

/* k14477 in k14471 in k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14479(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14479,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14482,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14492,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  make-period");
f_13966(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  make-period");
f_13966(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k14490 in k14477 in k14471 in k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k14480 in k14477 in k14471 in k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14485,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k14483 in k14480 in k14477 in k14471 in k14468 in k14465 in k14459 in k14453 in k14450 in k14447 in k14444 in k14441 in k14438 in initialize-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14426(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14426,NULL,1,t1);}
t2=lf[256];
t3=lf[256];
t4=lf[256];
t5=lf[257];
t6=lf[258];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[241],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14371(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14371,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14362(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14362,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14245(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14245,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14236(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14236,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_14227 in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_14227(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14227,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14218(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14218,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14209(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14209,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14191(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14191,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14182(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14182,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14173(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14173,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14155(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14155,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14146(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14146,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[241]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14137(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14137,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14122(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14122,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[241]));}

/* period-reps in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14077(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14077,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[232]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14059(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14059,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[232]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14050(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14050,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[232]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14023(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14023,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[232]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_14005(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14005,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[232]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13987(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13987,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[232]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13978(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13978,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[232]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13966(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13966,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[232],t2,t3,t4,t5,t6,t7));}

/* rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13365,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13367,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13384,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13401,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13433,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13367(t7,t2);}

/* k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getfreqs");
f_13367(t2,((C_word*)t0)[4]);}

/* k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13384(t2,((C_word*)t0)[2]);}

/* k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13442,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  getamps");
f_13384(t2,((C_word*)t0)[2]);}

/* k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  make-spectrum");
t3=C_retrieve(lf[192]);
((C_proc6)C_retrieve_proc(t3))(6,t3,t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13448,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13462,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li172),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13462(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13511,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li173),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13511(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13543,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li174),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13543(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13401(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1354 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13543(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13543,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13553,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13401(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k13551 in do1354 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13543(t3,((C_word*)t0)[2],t2);}

/* do1349 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13511(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13511,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13521,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13401(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k13519 in do1349 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13511(t3,((C_word*)t0)[2],t2);}

/* do1339 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13462(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13462,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13472,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li171),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_13481(t7,t3,((C_word*)t0)[2]);}}

/* do1342 in do1339 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13481(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13481,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13491,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  sums-and-diffs");
f_13401(t3,((C_word*)t0)[2],t4,t5);}}

/* k13489 in do1342 in do1339 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13481(t3,((C_word*)t0)[2],t2);}

/* k13470 in do1339 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13462(t3,((C_word*)t0)[2],t2);}

/* k13446 in k13443 in k13440 in k13437 in k13434 in k13431 in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13401(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13401,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13411,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t7=C_retrieve(lf[225]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[230]);}}

/* k13409 in sums-and-diffs in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13411,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 377  spectrum-add!");
t4=C_retrieve(lf[225]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[229]);}

/* getamps in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13384(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13384,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13391,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_10909(t3,t2);}

/* k13389 in getamps in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[227]:lf[228]));}}

/* getfreqs in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13367(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13367,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13374,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum?");
f_10909(t3,t2);}

/* k13372 in getfreqs in rm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t2=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13186,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13194,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t6=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13198,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13198,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13200,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li166),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13200(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13200(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13200,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13210,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13210(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13210(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13210,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13213,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13225,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_10951(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13256,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t8=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13213(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 377  spectrum-freqs-set!");
f_10951(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13341,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t11=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13200(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k13339 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13341,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_10933(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13288 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13293,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_10969(t2,((C_word*)t0)[4],t3);}

/* k13291 in k13288 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13302 in k13291 in k13288 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13304,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_10933(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13254 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13256,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_10933(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13223 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13228,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  spectrum-amps-set!");
f_10969(t2,((C_word*)t0)[3],t3);}

/* k13226 in k13223 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  spectrum-size-set!");
f_10933(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13211 in k13208 in do1299 in k13196 in k13192 in spectrum-add! in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12867(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12867,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13184,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  round");
t7=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13184,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12880,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13113,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t10,t3);}

/* k13111 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13113,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li164),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13115(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1242 in k13111 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13115(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13115,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13134,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7854,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_7854 in do1242 in k13111 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7854(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7854,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub386(t4,t5,t6));}

/* k13132 in do1242 in k13111 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13134,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13137,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[223]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[224]));
if(C_truep(t5)){
t6=t3;
f_13137(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13137(t11,t10);}}

/* k13135 in k13132 in do1242 in k13111 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13137,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13115(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12956,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li162),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_12956(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_12956(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12956,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13109,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  caar");
t7=*((C_word*)lf[222]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13109,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13093,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13091 in k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13093,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_12987(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13012,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13045,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13045(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1260 in k13091 in k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13045(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13045,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13059,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13059(t14,t13);}
else{
t13=t12;
f_13059(t13,C_SCHEME_UNDEFINED);}}}

/* k13057 in do1260 in k13091 in k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_13059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13059,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13045(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13010 in k13091 in k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_13012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13012,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_12987(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_12987(t5,t4);}}

/* k12985 in k13091 in k13107 in do1254 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_12987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12956(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12881 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12883,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12891,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li160),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_12891(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1282 in k12881 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_12891(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12891,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spectrum");
t7=C_retrieve(lf[192]);
((C_proc6)C_retrieve_proc(t7))(6,t7,t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12924,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[221]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k12922 in do1282 in k12881 in k12878 in k13182 in fm-spectrum in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12924,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_12891(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11394(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_11394r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11394r(t0,t1,t2,t3);}}

static void C_ccall f_11394r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11398,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_11398(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[214]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12640,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[214]);}
else{
t36=t35;
f_12640(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[215]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12675,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[215]);}
else{
t37=t36;
f_12675(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[216]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12710,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[216]);}
else{
t38=t37;
f_12710(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[217]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12745,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[217]);}
else{
t39=t38;
f_12745(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[218]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12780,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[218]);}
else{
t40=t39;
f_12780(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[219]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12815,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[219]);}
else{
t41=t40;
f_12815(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12844,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_12844(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12842 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12844,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12859,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12857 in k12842 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12851(2,t2,C_SCHEME_UNDEFINED);}}

/* k12849 in k12842 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11398(t5,t4);}

/* k12813 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12819(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12817 in k12813 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k12778 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12784,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12784(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12782 in k12778 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k12743 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12749,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12749(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12747 in k12743 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k12708 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12714,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12714(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12712 in k12708 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k12673 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12679(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12677 in k12673 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k12638 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12642 in k12638 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11398(t7,t6);}

/* k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11398,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11401(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12400,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_12400(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12435,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_12435(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12470,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_12470(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12505,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_12505(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12540,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[218]);}
else{
t10=t9;
f_12540(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12575,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[219]);}
else{
t11=t10;
f_12575(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12604,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12604(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12602 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12604,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12619,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12617 in k12602 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12611(2,t2,C_SCHEME_UNDEFINED);}}

/* k12609 in k12602 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11401(t5,t4);}

/* k12573 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12577 in k12573 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k12538 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12542 in k12538 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k12503 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12507 in k12503 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k12468 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12472 in k12468 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k12433 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12439(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12437 in k12433 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k12398 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12404(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12402 in k12398 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11401(t7,t6);}

/* k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11401,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11404(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12160,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_12160(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12195,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_12195(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12230,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_12230(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12265,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_12265(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12300,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[218]);}
else{
t10=t9;
f_12300(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12335,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[219]);}
else{
t11=t10;
f_12335(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12364,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12364(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12362 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12364,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12379,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12377 in k12362 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12371(2,t2,C_SCHEME_UNDEFINED);}}

/* k12369 in k12362 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11404(t5,t4);}

/* k12333 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12337 in k12333 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k12298 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12304(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12302 in k12298 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k12263 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12269(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12267 in k12263 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k12228 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12232 in k12228 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k12193 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12197 in k12193 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k12158 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12162 in k12158 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11404(t7,t6);}

/* k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11404,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11407(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11920,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11920(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11955,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11955(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11990,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11990(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12025,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_12025(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12060,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[218]);}
else{
t10=t9;
f_12060(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12095,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[219]);}
else{
t11=t10;
f_12095(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12124,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12124(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12122 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12124,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12139,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12137 in k12122 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12131(2,t2,C_SCHEME_UNDEFINED);}}

/* k12129 in k12122 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11407(t5,t4);}

/* k12093 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12099(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12097 in k12093 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k12058 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12064(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12062 in k12058 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k12023 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12029(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12027 in k12023 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_12029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k11988 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11994(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11992 in k11988 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k11953 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11959(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11957 in k11953 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k11918 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11924(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11922 in k11918 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11407(t7,t6);}

/* k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11407,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11410(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11680,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11680(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11715,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11715(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11750,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11750(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11785,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_11785(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11820,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[218]);}
else{
t10=t9;
f_11820(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11855,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[219]);}
else{
t11=t10;
f_11855(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11884,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11884(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11882 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11884,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11899,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11897 in k11882 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11891(2,t2,C_SCHEME_UNDEFINED);}}

/* k11889 in k11882 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11410(t5,t4);}

/* k11853 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11859,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11859(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11857 in k11853 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11818 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11824,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11824(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11822 in k11818 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11783 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11789(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11787 in k11783 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11748 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11754(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11752 in k11748 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11713 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11719(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11717 in k11713 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11678 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11684(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11682 in k11678 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11410(t7,t6);}

/* k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11410(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11410,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11413,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11413(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11440,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11440(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11475,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11475(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11510,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11510(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11545,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_11545(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11580,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[218]);}
else{
t10=t9;
f_11580(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11615,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[219]);}
else{
t11=t10;
f_11615(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11644,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11644(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11642 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11644,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11659,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11657 in k11642 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11651(2,t2,C_SCHEME_UNDEFINED);}}

/* k11649 in k11642 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11413(t5,t4);}

/* k11613 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11619(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11617 in k11613 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11578 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11582 in k11578 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11543 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11547 in k11543 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11508 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11514(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11512 in k11508 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11473 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11477 in k11473 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11438 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11442 in k11438 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11413(t7,t6);}

/* k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11413(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11413,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11416,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11416(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11416,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11175,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11175(t14,t13);}
else{
t13=t11;
f_11175(t13,C_SCHEME_UNDEFINED);}}

/* k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11175(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11175,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t19=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11184,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11188,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11188,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11190,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11262,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li154),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11295,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li155),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11305,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li156),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11325,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11360,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li157),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11375,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li158),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t11=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a11374 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11375,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11359 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11360,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11323 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  shuffle!");
t4=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11305 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11305(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11305,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11309,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11307 */
static void C_ccall f_11309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11295 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11295(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11295,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11303,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11301 */
static void C_ccall f_11303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11262 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11262,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11190 in k11186 in k11182 in k11173 in k11414 in k11411 in k11408 in k11405 in k11402 in k11399 in k11396 in spectrum-keys in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11190,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11194,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11257,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11255 */
static void C_ccall f_11257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  quantize");
t2=C_retrieve(lf[105]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11192 */
static void C_ccall f_11194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11194,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11205,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li151),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11205(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11230,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li152),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11230(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do995 in k11192 */
static void C_fcall f_11230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11230,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do991 in k11192 */
static void C_fcall f_11205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11205,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11146(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11146,3,t0,t1,t2);}
t3=lf[211];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11150,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11148 in spectrum-maxamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11150,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11161,a[2]=((C_word*)t0)[2],a[3]=((C_word)li149),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11160 in k11148 in spectrum-maxamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11161(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11161,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11157 in k11148 in spectrum-maxamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11115(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11115,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11119,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11117 in spectrum-minamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11119,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11128,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11130,a[2]=((C_word*)t0)[2],a[3]=((C_word)li147),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[209]);}}

/* a11129 in k11117 in spectrum-minamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11130,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11126 in k11117 in spectrum-minamp in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11097(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11097,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11105,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11103 in spectrum-maxfreq in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11113,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11111 in k11103 in spectrum-maxfreq in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11113,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11087(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11087,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11095,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11093 in spectrum-minfreq in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11028,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11035,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t7=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11033 in spectrum-pairs in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11036 in k11033 in spectrum-pairs in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11039 in k11036 in k11033 in spectrum-pairs in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_11041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11041,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11046,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li143),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11046(t5,((C_word*)t0)[2],C_fix(0));}

/* do954 in k11039 in k11036 in k11033 in spectrum-pairs in k10986 in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_11046(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11046,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[204]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-amps in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10978(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10978,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10969(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10969,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10960(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10960,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10951(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10951,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10942(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10942,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10933(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10933,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10924(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10924,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10909(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10909,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[193]));}

/* make-spectrum in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10903(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_10903,6,t0,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[193],t2,t3,t4,t5));}

/* scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10761(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_10761r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10761r(t0,t1,t2,t3);}}

static void C_ccall f_10761r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10765,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_10765(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10765(t8,t7);}}

/* k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10765,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10776,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10834,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 376  shuffle");
t2=C_retrieve(lf[143]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[191],((C_word*)((C_word*)t0)[4])[1]);}}

/* a10833 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10834(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10834,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10857,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10870,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10877,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10875 in a10833 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10881,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10879 in k10875 in a10833 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k10868 in a10833 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k10855 in a10833 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a10775 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10776,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10799,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10812,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10819,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10817 in a10775 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10823,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10821 in k10817 in a10775 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k10810 in a10775 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k10797 in a10775 in k10763 in scale-order in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10595,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10641,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10648,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10696,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10696(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 376  key");
t6=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[186],t2);}}}

/* k10694 in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10696,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10713,a[2]=t1,a[3]=((C_word)li129),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10648(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10741,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10745,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10743 in k10694 in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10648(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10739 in k10694 in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10712 in k10694 in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10713,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10648(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10648,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10657,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li127),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10657(t8,t1,t2,t4);}

/* do818 in transpkeys in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10657(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10657,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10639 in transpose in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10641,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  note");
t3=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10460(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10460,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[183],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10490,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10560,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 376  invkeys");
f_10490(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10582,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10586,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t7=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[184],t2);}}}

/* k10584 in invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  invkeys");
f_10490(((C_word*)t0)[2],t1);}

/* k10580 in invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10559 in invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10560(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10560,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10490(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10490,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10506,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li123),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10506(t9,t1,t5,t4);}

/* do803 in invkeys in invert in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10506(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10506,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10415,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  modulo");
t3=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[181]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10447,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10458,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10456 in pc in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  modulo");
t2=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10445 in pc in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[181]),t1);}

/* hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10299(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10299,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10314,a[2]=t5,a[3]=t3,a[4]=((C_word)li120),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10314(t7,t1,t2,lf[180],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7728(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10413,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10411 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do783 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10314(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10314,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10327,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10344,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10344(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10344(t14,(C_word)C_i_listp(t13));}}}

/* k10342 in do783 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10344,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10348,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  hz");
t4=C_retrieve(lf[179]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10363,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10361 in k10342 in do783 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10363,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10327(t9,t8);}

/* k10346 in k10342 in do783 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10348,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10327(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10325 in do783 in hz in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10314(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10177(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10177,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10192,a[2]=t5,a[3]=t3,a[4]=((C_word)li118),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10192(t7,t1,t2,lf[178],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub306(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10297,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10295 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do767 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10192(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10192,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10205,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10222,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10222(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10222(t14,(C_word)C_i_numberp(t13));}}}

/* k10220 in do767 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10222(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10222,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10226,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10241,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10239 in k10220 in do767 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10241,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10205(t9,t8);}

/* k10224 in k10220 in do767 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10226,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10205(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10203 in do767 in key in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10192(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10080(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10080,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10095,a[2]=t5,a[3]=t3,a[4]=((C_word)li116),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10095(t7,t1,t2,lf[176],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10175,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10173 in note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do753 in note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10095(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10095,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10108,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10126,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note");
t13=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10141,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note-aux");
f_10027(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10139 in do753 in note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10141,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10108(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10124 in do753 in note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10126,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10108(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10106 in do753 in note in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10108(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10095(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_10027(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10027,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9977,a[2]=t6,a[3]=t7,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[162],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10025,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  floor");
t9=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10050,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9925(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10065,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10063 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10065,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[174],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10070 in k10063 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9925(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10048 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9925(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10023 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_10025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10025,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[170]))){
t5=t4;
f_9997(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[171]);
t6=t4;
f_9997(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[172]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k9995 in k10023 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9997,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li114),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[162],"*notes*"),t1,t2);}

/* a9998 in k9995 in k10023 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9999,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[169],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a9976 in note-aux in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9977,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[168],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9925(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9925,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9929,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9962,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[162],"*notes*"),t2,t6);}

/* a9961 in string->note-entry in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9962,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k9927 in string->note-entry in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9929,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9945,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[166],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k9943 in k9927 in string->note-entry in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li110),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[162],"*notes*"),t1,t2);}

/* a9946 in k9943 in k9927 in string->note-entry in k9921 in k9918 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9947,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[164],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9711r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9711r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9711r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9724,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9724(t13,t12);}
else{
t9=t8;
f_9724(t9,C_SCHEME_UNDEFINED);}}}

/* k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9724(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9724,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[77],"tb:explseg"):C_retrieve2(lf[78],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9745,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[160],t7);}
else{
t12=t11;
f_9745(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[125]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9806(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9806(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[161],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9806(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9806,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9807 in k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9809,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9817,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li108),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9817(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do683 in k9807 in k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9817(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9817,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9858,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li107),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9829(t8,t1,((C_word*)t0)[3]);}}

/* do687 in do683 in k9807 in k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9829(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9829,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9850,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7589(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9848 in do687 in do683 in k9807 in k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9829(t4,((C_word*)t0)[2],t3);}

/* k9856 in do683 in k9807 in k9804 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9858,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9817(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9743 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9745,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li106),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9750(t5,((C_word*)t0)[2],C_fix(0));}

/* do671 in k9743 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9750(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9750,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9782,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9780 in do671 in k9743 in k9722 in segs in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9782,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9750(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9690(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9690r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9690r(t0,t1,t2);}}

static void C_ccall f_9690r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7826(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7826(t1,t3);}}

/* ranpoisson in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9671(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9671r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9671r(t0,t1,t2);}}

static void C_ccall f_9671r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[155])))){
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7836(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7836(t1,t3);}}

/* rangauss in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9630(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9630r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9630r(t0,t1,t2);}}

static void C_ccall f_9630r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7797(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7797(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7797(t1,t4,t5);}}}

/* ranexp in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9611(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9611r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9611r(t0,t1,t2);}}

static void C_ccall f_9611r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7808(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7808(t1,t3);}}

/* ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9383(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9383r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9383r(t0,t1,t2);}}

static void C_ccall f_9383r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[148];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9387,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9387(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[149]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9524,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[149]);}
else{
t19=t18;
f_9524(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[150]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9559,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[150]);}
else{
t20=t19;
f_9559(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9588,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9588(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9586 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9588,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9603,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9601 in k9586 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9595(2,t2,C_SCHEME_UNDEFINED);}}

/* k9593 in k9586 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9387(t5,t4);}

/* k9557 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9561 in k9557 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9387(t7,t6);}

/* k9522 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9526 in k9522 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9387(t7,t6);}

/* k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9390,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9390(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[149]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9424,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[149]);}
else{
t6=t5;
f_9424(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[150]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9459,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[150]);}
else{
t7=t6;
f_9459(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9488,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9488(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9486 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9488,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9503,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9501 in k9486 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9495(2,t2,C_SCHEME_UNDEFINED);}}

/* k9493 in k9486 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9390(t5,t4);}

/* k9457 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9461 in k9457 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9390(t7,t6);}

/* k9422 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9426 in k9422 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9390(t7,t6);}

/* k9388 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9390(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9390,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9393,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9393(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9391 in k9388 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9396(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9396(t5,t4);}}

/* k9394 in k9391 in k9388 in k9385 in ranbeta in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9396,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub359(t5,t6,t7));}

/* shuffle in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9341(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9341r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9341r(t0,t1,t2);}}

static void C_ccall f_9341r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9355,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9370,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9368 in shuffle in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9353 in shuffle in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9286(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9286,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9297,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7752(t4,t3);}

/* k9295 in shuffle! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9297,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9299,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li98),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9299(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do603 in k9295 in shuffle! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9299(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9299,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9327,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7752(t14,((C_word*)t0)[4]);}}

/* k9325 in do603 in k9295 in shuffle! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9299(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9187r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9187r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9187r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9191,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9191(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9191(t9,t8);}}

/* k9189 in vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9191(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9191,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9194(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[141],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9192 in k9189 in vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9196,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  vary1");
f_9196(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9258 in k9192 in k9189 in vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9259(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9259,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  vary1");
f_9196(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9192 in k9189 in vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_9196(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9196,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9212,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7759(t9,t8);}}

/* k9210 in vary1 in k9192 in k9189 in vary in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9212,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[140]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8959(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8959r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8959r(t0,t1,t2,t3);}}

static void C_ccall f_8959r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8963,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8963(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[137]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9100,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[137]);}
else{
t20=t19;
f_9100(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[138]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9135,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[138]);}
else{
t21=t20;
f_9135(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9164,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9164(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9162 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9164,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9179,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9177 in k9162 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9171(2,t2,C_SCHEME_UNDEFINED);}}

/* k9169 in k9162 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8963(t5,t4);}

/* k9133 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9139(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9137 in k9133 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8963(t7,t6);}

/* k9098 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9104(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9102 in k9098 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8963(t7,t6);}

/* k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8963,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8966,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8966(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[137]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9000,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[137]);}
else{
t6=t5;
f_9000(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[138]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9035,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[138]);}
else{
t7=t6;
f_9035(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9064,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9064(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9062 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9064,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9079,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9077 in k9062 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9071(2,t2,C_SCHEME_UNDEFINED);}}

/* k9069 in k9062 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8966(t5,t4);}

/* k9033 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9037 in k9033 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8966(t7,t6);}

/* k8998 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9002 in k8998 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_9004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8966(t7,t6);}

/* k8964 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8966,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8969,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8969(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8967 in k8964 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7759(t2,lf[136]);}

/* k8977 in k8967 in k8964 in k8961 in odds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8916(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_8916r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8916r(t0,t1,t2);}}

static void C_ccall f_8916r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8934,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7752(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8949,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7752(t4,t5);}}

/* k8947 in pick in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k8932 in pick in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8895,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub325(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub331(t9,t10,t11));}}

/* ran in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8860(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8860r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8860r(t0,t1,t2);}}

static void C_ccall f_8860r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8864,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8864(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8864(t7,t6);}}

/* k8862 in ran in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7752(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7759(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7759(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8752r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8752r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8752r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8759,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8759(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8839,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 376  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[131],((C_word*)t8)[1]);}
else{
t15=t14;
f_8839(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8759(t11,C_SCHEME_UNDEFINED);}}

/* k8837 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8759(t4,t3);}

/* k8757 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8759,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li89),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8768(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do526 in k8757 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8768(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8768,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8781,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8815,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  fit");
t10=C_retrieve(lf[126]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8781(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8813 in do526 in k8757 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8781(t3,t2);}

/* k8779 in do526 in k8757 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8781(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8781,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8807,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8805 in k8779 in do526 in k8757 in scale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8807,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8768(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8619r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8619r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8619r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8623,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8623(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8623(t12,t11);}}

/* k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8623(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8623,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8626(t6,t5);}
else{
t3=t2;
f_8626(t3,C_SCHEME_UNDEFINED);}}

/* k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8626(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8626,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8628,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li87),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 376  fit1");
f_8628(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8729 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8730(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8730,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  fit1");
f_8628(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8628(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8628,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8635,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8633 in fit1 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8635,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8658,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t9=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8677,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t8=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[128],((C_word*)t0)[2]);}}}

/* k8675 in k8633 in fit1 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8684,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[100]+1):*((C_word*)lf[98]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t2,t1);}}

/* k8682 in k8675 in k8633 in fit1 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8684,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8656 in k8633 in fit1 in k8624 in k8621 in fit in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8658,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8552r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8552r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8552r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[125]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8556,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8556(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8556(t16,t15);}}

/* k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8556(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8556,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8559,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8602,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8420(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8559(t3,C_SCHEME_UNDEFINED);}}

/* k8600 in k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8559(t3,t2);}

/* k8557 in k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8559,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8595,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8420(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8562(t3,C_SCHEME_UNDEFINED);}}

/* k8593 in k8557 in k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8562(t3,t2);}

/* k8560 in k8557 in k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8562,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8575,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8573 in k8560 in k8557 in k8554 in tendency in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8575,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8506(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8506r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8506r(t0,t1,t2,t3);}}

static void C_ccall f_8506r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8510,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[123]);}
else{
t5=t4;
f_8510(2,t5,C_SCHEME_UNDEFINED);}}

/* k8508 in interp in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 376  interp1");
f_8420(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 376  interp1");
f_8420(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8420(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8420,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8424,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[121],t3);}
else{
t6=t5;
f_8424(2,t6,(C_word)C_i_car(t3));}}

/* k8422 in interp1 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8424,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8427,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 376  err");
t6=C_retrieve(lf[119]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[120],((C_word*)t0)[4]);}
else{
t6=t4;
f_8427(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8425 in k8422 in interp1 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8427,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8436,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li82),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8436(t13,((C_word*)t0)[2],t9);}

/* do477 in k8425 in k8422 in interp1 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8436,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7589(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8458,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 376  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[118],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8458(2,t13,t12);}}}

/* k8456 in do477 in k8425 in k8422 in interp1 in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8436(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8405,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[76],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:scaler->cents");
t3=C_retrieve2(lf[76],"tb:scaler->cents");
f_7683(3,t3,t1,t2);}}

/* cents->ratio in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8390,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[75],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:cents->scaler");
t3=C_retrieve2(lf[75],"tb:cents->scaler");
f_7676(3,t3,t1,t2);}}

/* rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8154r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8154r(t0,t1,t2,t3);}}

static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[111];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[112];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8158,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8158(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[113]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8303,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[113]);}
else{
t20=t19;
f_8303(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[114]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8338,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[114]);}
else{
t21=t20;
f_8338(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8367,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8367(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8365 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8367,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8382,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8380 in k8365 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8374(2,t2,C_SCHEME_UNDEFINED);}}

/* k8372 in k8365 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8158(t5,t4);}

/* k8336 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8340 in k8336 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8158(t7,t6);}

/* k8301 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8305 in k8301 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8158(t7,t6);}

/* k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8158(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8158,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8161,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8161(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[113]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8203,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[113]);}
else{
t6=t5;
f_8203(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[114]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8238,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[114]);}
else{
t7=t6;
f_8238(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8267,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8267(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8265 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8267,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8282,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8280 in k8265 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8274(2,t2,C_SCHEME_UNDEFINED);}}

/* k8272 in k8265 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8161(t5,t4);}

/* k8236 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8242(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8240 in k8236 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8161(t7,t6);}

/* k8201 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8207(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8205 in k8201 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8161(t7,t6);}

/* k8159 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_8161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8161,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8164,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8164(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8162 in k8159 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8164,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li78),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7661(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8174 in k8162 in k8159 in k8156 in rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8175(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8175,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7661(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8114,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8118,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  expt");
t5=*((C_word*)lf[108]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[109],t3);}

/* k8116 in decimals in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8118,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8129,a[2]=t1,a[3]=((C_word)li76),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8148,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  round");
t4=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8146 in k8116 in decimals in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8148,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8128 in k8116 in decimals in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8129(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8129,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8137,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  round");
t5=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8135 in a8128 in k8116 in decimals in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8137,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8093,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8105,a[2]=t3,a[3]=((C_word)li74),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7650(t1,t2,t3);}}

/* a8104 in quantize in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8105,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7650(t1,t2,((C_word*)t0)[2]);}

/* minus in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_8067r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8067r(t0,t1,t2,t3);}}

static void C_ccall f_8067r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[100]+1),t2);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[100]+1),t2,t3);}}

/* plus in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8025(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8025r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8025r(t0,t1,t2);}}

static void C_ccall f_8025r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[98]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[98]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[98]+1),t2);}}}

/* int in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_8010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8010,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:int");
t3=C_retrieve2(lf[72],"tb:int");
f_7643(3,t3,t1,t2);}}

/* discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7899r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7899r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7899r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7903,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7903(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7974,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 376  not?");
t20=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7903(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7903(t19,t18);}}}

/* k7972 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7903(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7903(t2,C_SCHEME_UNDEFINED);}}

/* k7901 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7903(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7903,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7917,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li68),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7932,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7616(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7943,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li69),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7616(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a7942 in k7901 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7943(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7943,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7616(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7930 in k7901 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a7916 in k7901 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7917(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7917,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7925,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7616(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7923 in a7916 in k7901 in discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7865r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7865r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7865r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7877,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li66),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7589(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7589(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7876 in rescale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7877(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7877,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[93]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7846,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub379(t2));}

/* tb:ranpink in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7843,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub376(t2));}

/* tb:ranpoisson in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7836(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7836,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub373(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7833,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub369(t2));}

/* tb:rangamma in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7826(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7826,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub365(t3,t4));}

/* tb:ranexp in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7808(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7808,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub353(t3,t4));}

/* tb:rangauss in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7797(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7797,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub347(t4,t5,t6));}

/* tb:ranmiddle in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7794,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub342(t2));}

/* tb:ranhigh in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7791,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub339(t2));}

/* tb:ranlow in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7788,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub336(t2));}

/* tb:ranf in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7759(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7759,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub319(t3,t4));}

/* tb:rani in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7752(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7752,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub315(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7749,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub311(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7728(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7728,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub297(t3,t4));}

/* tb:geoseg in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7709,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub289(t6,t7,t8,t9,t10));}

/* tb:explseg in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7690,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub278(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7683(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7683,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub271(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7676(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7676,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub266(t3,t4));}

/* tb:rhythm->seconds in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7661(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7661,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub259(t5,t6,t7,t8));}

/* tb:quantize in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7650(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7650,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub251(t4,t5,t6));}

/* tb:int in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7643(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7643,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub246(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7616(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7616,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub237(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7589(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7589,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub222(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7548(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7548,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7554,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li41),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7554(t9,t1,C_SCHEME_FALSE);}

/* do187 in bitwise-test in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7554(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7554,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7564,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7564(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7564(t7,t6);}}
else{
t5=t4;
f_7564(t5,C_SCHEME_UNDEFINED);}}}

/* k7562 in do187 in bitwise-test in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7564,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7554(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7462r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7462r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7462r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[68],"list-prop"),t7,t3,t4);}}}

/* every? in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7423,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7429,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7429(t7,t1,t3,C_SCHEME_TRUE);}

/* do171 in every? in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7429(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7429,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7442,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7452,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7450 in do171 in every? in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7442(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7442(t3,t2);}}

/* k7440 in do171 in every? in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7429(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7384(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7384,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7390,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7390(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7390(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7390,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7400,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7410,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7408 in do160 in list-find in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7400(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7400(t2,C_SCHEME_UNDEFINED);}}

/* k7398 in do160 in list-find in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7390(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7344,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7350,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7350(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7350(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7350,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7360,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7374,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7372 in do149 in list-index in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7360(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7360(t2,C_SCHEME_UNDEFINED);}}

/* k7358 in do149 in list-index in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7360,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7350(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7245(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7245r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7245r(t0,t1,t2,t3);}}

static void C_ccall f_7245r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7249,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[64],t2);}
else{
t5=t4;
f_7249(2,t5,C_SCHEME_UNDEFINED);}}

/* k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7249,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7251,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7274,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 375  l1");
t8=((C_word*)t3)[1];
f_7251(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 375  l2");
t9=((C_word*)t5)[1];
f_7274(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  l1");
t10=((C_word*)t3)[1];
f_7251(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7274(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7274,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7291,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7289 in l2 in k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7295,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 375  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7274(t4,t2,t3,((C_word*)t0)[2]);}

/* k7293 in k7289 in l2 in k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7295,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7251(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7251,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7268,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 375  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7266 in l1 in k7247 in make-list in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7268,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7184(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7184,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7197,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7197(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_7197(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7197,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7174,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7134(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7134r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7134r(t0,t1,t2);}}

static void C_ccall f_7134r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[60]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7164,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[59]),t6);}}}

/* k7162 in list* in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7164,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7044(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7044,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tail");
t5=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6996(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6996,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7030,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7028 in butlast in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_7030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7030,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6973(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6973,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6967,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6952,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6938(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6938,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6928(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6928,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6918(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6918,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6908(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6908,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6898(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6898,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6869(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6869r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6869r(t0,t1,t2);}}

static void C_ccall f_6869r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6878,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6878 in chdir in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6878(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6878,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6883,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6883(2,t4,C_SCHEME_FALSE);}}

/* k6881 */
static void C_ccall f_6883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6863,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6863 in cwd in k6854 in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6863,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6565,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6845,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6834,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6843,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6575,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 281  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6575(2,t11,t2);}}

/* k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6578,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6826,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 282  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6825 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6826,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6581(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 283  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6581,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6596,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6596(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6596(t9,C_SCHEME_FALSE);}}

/* k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_6596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6596,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6606,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 297  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6606,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6608(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_6608(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6608,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6620,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6620(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6661,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6667(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 312  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6667,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6661(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6721,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6794,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 333  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6677,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 323  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6677(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6675 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6677,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6661(t9,t8);}

/* k6792 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6794,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6767,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 338  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6721(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6780,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6782,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6781 in k6792 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6782,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 342  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6778 in k6792 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 340  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6765 in k6792 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 337  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6719 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6721,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6727,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6727(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6748,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 349  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6746 in k6719 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 348  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6725 in k6719 in k6665 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6661(t6,t5);}

/* k6659 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_6661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6608(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_6620(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6620,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6633,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6633(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6633(t5,C_SCHEME_UNDEFINED);}}}

/* k6631 in do69 in do63 in k6604 in k6594 in k6579 in k6576 in k6573 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_fcall f_6633(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6620(t3,((C_word*)t0)[2],t2);}

/* f_6843 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6843(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6843,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6834 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6834(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6834,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6842,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 279  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6840 */
static void C_ccall f_6842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 279  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6845 in expand-send in k6561 in k6558 in k6554 in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6845(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6845r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6845r(t0,t1,t2,t3);}}

static void C_ccall f_6845r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6853,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6851 */
static void C_ccall f_6853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 275  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6267,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6428,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6520,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6519 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6520(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6520,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6534,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6538,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 227  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6549,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6553,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 228  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6551 in a6519 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 228  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6547 in a6519 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6549,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6536 in a6519 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6532 in a6519 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6534,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6431,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 231  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6437,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6514,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6513 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6514(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6514,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6280,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6339,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 191  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6337 in a6513 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 191  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6278 in a6513 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6280,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6444,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6456,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6490,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6504,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6503 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6504(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6504,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6488 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6490,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 237  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6454 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6460,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6464,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6481 in k6454 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6482(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6482,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6417,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6415 in a6481 in k6454 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6417,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6462 in k6454 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6464,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6458 in k6454 in k6442 in k6435 in k6432 in k6429 in k6426 in expand-optkeys in k6263 in k6260 in k6257 in k6254 */
static void C_ccall f_6460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6460,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2642] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6256ChickenBridge.scm",(void*)f_6256},
{"f_6259ChickenBridge.scm",(void*)f_6259},
{"f_6262ChickenBridge.scm",(void*)f_6262},
{"f_6265ChickenBridge.scm",(void*)f_6265},
{"f_39751ChickenBridge.scm",(void*)f_39751},
{"f_6556ChickenBridge.scm",(void*)f_6556},
{"f_6560ChickenBridge.scm",(void*)f_6560},
{"f_39699ChickenBridge.scm",(void*)f_39699},
{"f_39746ChickenBridge.scm",(void*)f_39746},
{"f_39736ChickenBridge.scm",(void*)f_39736},
{"f_39703ChickenBridge.scm",(void*)f_39703},
{"f_6563ChickenBridge.scm",(void*)f_6563},
{"f_39693ChickenBridge.scm",(void*)f_39693},
{"f_6856ChickenBridge.scm",(void*)f_6856},
{"f_9920ChickenBridge.scm",(void*)f_9920},
{"f_39477ChickenBridge.scm",(void*)f_39477},
{"f_39691ChickenBridge.scm",(void*)f_39691},
{"f_39511ChickenBridge.scm",(void*)f_39511},
{"f_39523ChickenBridge.scm",(void*)f_39523},
{"f_39527ChickenBridge.scm",(void*)f_39527},
{"f_39531ChickenBridge.scm",(void*)f_39531},
{"f_39675ChickenBridge.scm",(void*)f_39675},
{"f_39537ChickenBridge.scm",(void*)f_39537},
{"f_39557ChickenBridge.scm",(void*)f_39557},
{"f_39560ChickenBridge.scm",(void*)f_39560},
{"f_39568ChickenBridge.scm",(void*)f_39568},
{"f_39575ChickenBridge.scm",(void*)f_39575},
{"f_39578ChickenBridge.scm",(void*)f_39578},
{"f_39582ChickenBridge.scm",(void*)f_39582},
{"f_39589ChickenBridge.scm",(void*)f_39589},
{"f_39592ChickenBridge.scm",(void*)f_39592},
{"f_39596ChickenBridge.scm",(void*)f_39596},
{"f_39603ChickenBridge.scm",(void*)f_39603},
{"f_39547ChickenBridge.scm",(void*)f_39547},
{"f_39500ChickenBridge.scm",(void*)f_39500},
{"f_39490ChickenBridge.scm",(void*)f_39490},
{"f_39493ChickenBridge.scm",(void*)f_39493},
{"f_9923ChickenBridge.scm",(void*)f_9923},
{"f_39463ChickenBridge.scm",(void*)f_39463},
{"f_39471ChickenBridge.scm",(void*)f_39471},
{"f_39475ChickenBridge.scm",(void*)f_39475},
{"f_10988ChickenBridge.scm",(void*)f_10988},
{"f_39449ChickenBridge.scm",(void*)f_39449},
{"f_39457ChickenBridge.scm",(void*)f_39457},
{"f_39461ChickenBridge.scm",(void*)f_39461},
{"f_21743ChickenBridge.scm",(void*)f_21743},
{"f_21794ChickenBridge.scm",(void*)f_21794},
{"f_39439ChickenBridge.scm",(void*)f_39439},
{"f_39447ChickenBridge.scm",(void*)f_39447},
{"f_21899ChickenBridge.scm",(void*)f_21899},
{"f_39336ChickenBridge.scm",(void*)f_39336},
{"f_39399ChickenBridge.scm",(void*)f_39399},
{"f_39403ChickenBridge.scm",(void*)f_39403},
{"f_39417ChickenBridge.scm",(void*)f_39417},
{"f_39339ChickenBridge.scm",(void*)f_39339},
{"f_39359ChickenBridge.scm",(void*)f_39359},
{"f_39363ChickenBridge.scm",(void*)f_39363},
{"f_21902ChickenBridge.scm",(void*)f_21902},
{"f_39322ChickenBridge.scm",(void*)f_39322},
{"f_39330ChickenBridge.scm",(void*)f_39330},
{"f_39334ChickenBridge.scm",(void*)f_39334},
{"f_22095ChickenBridge.scm",(void*)f_22095},
{"f_39296ChickenBridge.scm",(void*)f_39296},
{"f_39300ChickenBridge.scm",(void*)f_39300},
{"f_39306ChickenBridge.scm",(void*)f_39306},
{"f_39317ChickenBridge.scm",(void*)f_39317},
{"f_39313ChickenBridge.scm",(void*)f_39313},
{"f_22164ChickenBridge.scm",(void*)f_22164},
{"f_39274ChickenBridge.scm",(void*)f_39274},
{"f_23409ChickenBridge.scm",(void*)f_23409},
{"f_39254ChickenBridge.scm",(void*)f_39254},
{"f_23412ChickenBridge.scm",(void*)f_23412},
{"f_39214ChickenBridge.scm",(void*)f_39214},
{"f_23415ChickenBridge.scm",(void*)f_23415},
{"f_39120ChickenBridge.scm",(void*)f_39120},
{"f_39124ChickenBridge.scm",(void*)f_39124},
{"f_39127ChickenBridge.scm",(void*)f_39127},
{"f_39145ChickenBridge.scm",(void*)f_39145},
{"f_39148ChickenBridge.scm",(void*)f_39148},
{"f_39179ChickenBridge.scm",(void*)f_39179},
{"f_39151ChickenBridge.scm",(void*)f_39151},
{"f_39157ChickenBridge.scm",(void*)f_39157},
{"f_39110ChickenBridge.scm",(void*)f_39110},
{"f_39104ChickenBridge.scm",(void*)f_39104},
{"f_23418ChickenBridge.scm",(void*)f_23418},
{"f_39012ChickenBridge.scm",(void*)f_39012},
{"f_39014ChickenBridge.scm",(void*)f_39014},
{"f_39018ChickenBridge.scm",(void*)f_39018},
{"f_39021ChickenBridge.scm",(void*)f_39021},
{"f_39024ChickenBridge.scm",(void*)f_39024},
{"f_39064ChickenBridge.scm",(void*)f_39064},
{"f_39056ChickenBridge.scm",(void*)f_39056},
{"f_39027ChickenBridge.scm",(void*)f_39027},
{"f_39030ChickenBridge.scm",(void*)f_39030},
{"f_39033ChickenBridge.scm",(void*)f_39033},
{"f_39004ChickenBridge.scm",(void*)f_39004},
{"f_23421ChickenBridge.scm",(void*)f_23421},
{"f_38976ChickenBridge.scm",(void*)f_38976},
{"f_23424ChickenBridge.scm",(void*)f_23424},
{"f_38940ChickenBridge.scm",(void*)f_38940},
{"f_38952ChickenBridge.scm",(void*)f_38952},
{"f_38948ChickenBridge.scm",(void*)f_38948},
{"f_38922ChickenBridge.scm",(void*)f_38922},
{"f_38916ChickenBridge.scm",(void*)f_38916},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_38830ChickenBridge.scm",(void*)f_38830},
{"f_38834ChickenBridge.scm",(void*)f_38834},
{"f_38837ChickenBridge.scm",(void*)f_38837},
{"f_38840ChickenBridge.scm",(void*)f_38840},
{"f_38853ChickenBridge.scm",(void*)f_38853},
{"f_38799ChickenBridge.scm",(void*)f_38799},
{"f_38803ChickenBridge.scm",(void*)f_38803},
{"f_38818ChickenBridge.scm",(void*)f_38818},
{"f_38793ChickenBridge.scm",(void*)f_38793},
{"f_23430ChickenBridge.scm",(void*)f_23430},
{"f_38679ChickenBridge.scm",(void*)f_38679},
{"f_38695ChickenBridge.scm",(void*)f_38695},
{"f_38706ChickenBridge.scm",(void*)f_38706},
{"f_38673ChickenBridge.scm",(void*)f_38673},
{"f_23486ChickenBridge.scm",(void*)f_23486},
{"f_38540ChickenBridge.scm",(void*)f_38540},
{"f_38563ChickenBridge.scm",(void*)f_38563},
{"f_38560ChickenBridge.scm",(void*)f_38560},
{"f_38534ChickenBridge.scm",(void*)f_38534},
{"f_23489ChickenBridge.scm",(void*)f_23489},
{"f_38388ChickenBridge.scm",(void*)f_38388},
{"f_38406ChickenBridge.scm",(void*)f_38406},
{"f_38415ChickenBridge.scm",(void*)f_38415},
{"f_38382ChickenBridge.scm",(void*)f_38382},
{"f_23492ChickenBridge.scm",(void*)f_23492},
{"f_38335ChickenBridge.scm",(void*)f_38335},
{"f_38339ChickenBridge.scm",(void*)f_38339},
{"f_38342ChickenBridge.scm",(void*)f_38342},
{"f_38358ChickenBridge.scm",(void*)f_38358},
{"f_38317ChickenBridge.scm",(void*)f_38317},
{"f_38311ChickenBridge.scm",(void*)f_38311},
{"f_23495ChickenBridge.scm",(void*)f_23495},
{"f_38235ChickenBridge.scm",(void*)f_38235},
{"f_23634ChickenBridge.scm",(void*)f_23634},
{"f_38161ChickenBridge.scm",(void*)f_38161},
{"f_38168ChickenBridge.scm",(void*)f_38168},
{"f_38155ChickenBridge.scm",(void*)f_38155},
{"f_23637ChickenBridge.scm",(void*)f_23637},
{"f_38051ChickenBridge.scm",(void*)f_38051},
{"f_38059ChickenBridge.scm",(void*)f_38059},
{"f_38025ChickenBridge.scm",(void*)f_38025},
{"f_38042ChickenBridge.scm",(void*)f_38042},
{"f_38033ChickenBridge.scm",(void*)f_38033},
{"f_38019ChickenBridge.scm",(void*)f_38019},
{"f_23640ChickenBridge.scm",(void*)f_23640},
{"f_37975ChickenBridge.scm",(void*)f_37975},
{"f_23643ChickenBridge.scm",(void*)f_23643},
{"f_37893ChickenBridge.scm",(void*)f_37893},
{"f_37904ChickenBridge.scm",(void*)f_37904},
{"f_37906ChickenBridge.scm",(void*)f_37906},
{"f_37935ChickenBridge.scm",(void*)f_37935},
{"f_37871ChickenBridge.scm",(void*)f_37871},
{"f_37887ChickenBridge.scm",(void*)f_37887},
{"f_37865ChickenBridge.scm",(void*)f_37865},
{"f_23646ChickenBridge.scm",(void*)f_23646},
{"f_37818ChickenBridge.scm",(void*)f_37818},
{"f_37822ChickenBridge.scm",(void*)f_37822},
{"f_37829ChickenBridge.scm",(void*)f_37829},
{"f_37796ChickenBridge.scm",(void*)f_37796},
{"f_37812ChickenBridge.scm",(void*)f_37812},
{"f_37790ChickenBridge.scm",(void*)f_37790},
{"f_23649ChickenBridge.scm",(void*)f_23649},
{"f_37658ChickenBridge.scm",(void*)f_37658},
{"f_37698ChickenBridge.scm",(void*)f_37698},
{"f_37662ChickenBridge.scm",(void*)f_37662},
{"f_37678ChickenBridge.scm",(void*)f_37678},
{"f_37690ChickenBridge.scm",(void*)f_37690},
{"f_37694ChickenBridge.scm",(void*)f_37694},
{"f_37686ChickenBridge.scm",(void*)f_37686},
{"f_37583ChickenBridge.scm",(void*)f_37583},
{"f_37626ChickenBridge.scm",(void*)f_37626},
{"f_37630ChickenBridge.scm",(void*)f_37630},
{"f_37590ChickenBridge.scm",(void*)f_37590},
{"f_37601ChickenBridge.scm",(void*)f_37601},
{"f_37577ChickenBridge.scm",(void*)f_37577},
{"f_23652ChickenBridge.scm",(void*)f_23652},
{"f_37557ChickenBridge.scm",(void*)f_37557},
{"f_37551ChickenBridge.scm",(void*)f_37551},
{"f_23655ChickenBridge.scm",(void*)f_23655},
{"f_37531ChickenBridge.scm",(void*)f_37531},
{"f_37535ChickenBridge.scm",(void*)f_37535},
{"f_37523ChickenBridge.scm",(void*)f_37523},
{"f_23658ChickenBridge.scm",(void*)f_23658},
{"f_37503ChickenBridge.scm",(void*)f_37503},
{"f_37507ChickenBridge.scm",(void*)f_37507},
{"f_37495ChickenBridge.scm",(void*)f_37495},
{"f_23661ChickenBridge.scm",(void*)f_23661},
{"f_37475ChickenBridge.scm",(void*)f_37475},
{"f_37479ChickenBridge.scm",(void*)f_37479},
{"f_37467ChickenBridge.scm",(void*)f_37467},
{"f_23664ChickenBridge.scm",(void*)f_23664},
{"f_37447ChickenBridge.scm",(void*)f_37447},
{"f_37451ChickenBridge.scm",(void*)f_37451},
{"f_37439ChickenBridge.scm",(void*)f_37439},
{"f_23667ChickenBridge.scm",(void*)f_23667},
{"f_37338ChickenBridge.scm",(void*)f_37338},
{"f_37308ChickenBridge.scm",(void*)f_37308},
{"f_37332ChickenBridge.scm",(void*)f_37332},
{"f_37302ChickenBridge.scm",(void*)f_37302},
{"f_23670ChickenBridge.scm",(void*)f_23670},
{"f_37252ChickenBridge.scm",(void*)f_37252},
{"f_37254ChickenBridge.scm",(void*)f_37254},
{"f_37258ChickenBridge.scm",(void*)f_37258},
{"f_37286ChickenBridge.scm",(void*)f_37286},
{"f_37278ChickenBridge.scm",(void*)f_37278},
{"f_37274ChickenBridge.scm",(void*)f_37274},
{"f_37261ChickenBridge.scm",(void*)f_37261},
{"f_37244ChickenBridge.scm",(void*)f_37244},
{"f_23673ChickenBridge.scm",(void*)f_23673},
{"f_37191ChickenBridge.scm",(void*)f_37191},
{"f_37193ChickenBridge.scm",(void*)f_37193},
{"f_37197ChickenBridge.scm",(void*)f_37197},
{"f_37228ChickenBridge.scm",(void*)f_37228},
{"f_37220ChickenBridge.scm",(void*)f_37220},
{"f_37216ChickenBridge.scm",(void*)f_37216},
{"f_37200ChickenBridge.scm",(void*)f_37200},
{"f_37203ChickenBridge.scm",(void*)f_37203},
{"f_37183ChickenBridge.scm",(void*)f_37183},
{"f_23676ChickenBridge.scm",(void*)f_23676},
{"f_37133ChickenBridge.scm",(void*)f_37133},
{"f_37147ChickenBridge.scm",(void*)f_37147},
{"f_37139ChickenBridge.scm",(void*)f_37139},
{"f_37098ChickenBridge.scm",(void*)f_37098},
{"f_37131ChickenBridge.scm",(void*)f_37131},
{"f_37092ChickenBridge.scm",(void*)f_37092},
{"f_23679ChickenBridge.scm",(void*)f_23679},
{"f_37039ChickenBridge.scm",(void*)f_37039},
{"f_37043ChickenBridge.scm",(void*)f_37043},
{"f_37056ChickenBridge.scm",(void*)f_37056},
{"f_37048ChickenBridge.scm",(void*)f_37048},
{"f_36996ChickenBridge.scm",(void*)f_36996},
{"f_37029ChickenBridge.scm",(void*)f_37029},
{"f_36990ChickenBridge.scm",(void*)f_36990},
{"f_23682ChickenBridge.scm",(void*)f_23682},
{"f_36910ChickenBridge.scm",(void*)f_36910},
{"f_36904ChickenBridge.scm",(void*)f_36904},
{"f_23685ChickenBridge.scm",(void*)f_23685},
{"f_36673ChickenBridge.scm",(void*)f_36673},
{"f_36677ChickenBridge.scm",(void*)f_36677},
{"f_36685ChickenBridge.scm",(void*)f_36685},
{"f_36708ChickenBridge.scm",(void*)f_36708},
{"f_36711ChickenBridge.scm",(void*)f_36711},
{"f_36714ChickenBridge.scm",(void*)f_36714},
{"f_36717ChickenBridge.scm",(void*)f_36717},
{"f_36777ChickenBridge.scm",(void*)f_36777},
{"f_36784ChickenBridge.scm",(void*)f_36784},
{"f_36794ChickenBridge.scm",(void*)f_36794},
{"f_36804ChickenBridge.scm",(void*)f_36804},
{"f_36818ChickenBridge.scm",(void*)f_36818},
{"f_36828ChickenBridge.scm",(void*)f_36828},
{"f_36838ChickenBridge.scm",(void*)f_36838},
{"f_36848ChickenBridge.scm",(void*)f_36848},
{"f_36720ChickenBridge.scm",(void*)f_36720},
{"f_36744ChickenBridge.scm",(void*)f_36744},
{"f_36723ChickenBridge.scm",(void*)f_36723},
{"f_36630ChickenBridge.scm",(void*)f_36630},
{"f_36663ChickenBridge.scm",(void*)f_36663},
{"f_36624ChickenBridge.scm",(void*)f_36624},
{"f_23688ChickenBridge.scm",(void*)f_23688},
{"f_36542ChickenBridge.scm",(void*)f_36542},
{"f_36546ChickenBridge.scm",(void*)f_36546},
{"f_36552ChickenBridge.scm",(void*)f_36552},
{"f_36572ChickenBridge.scm",(void*)f_36572},
{"f_36516ChickenBridge.scm",(void*)f_36516},
{"f_36526ChickenBridge.scm",(void*)f_36526},
{"f_36510ChickenBridge.scm",(void*)f_36510},
{"f_23691ChickenBridge.scm",(void*)f_23691},
{"f_36387ChickenBridge.scm",(void*)f_36387},
{"f_36391ChickenBridge.scm",(void*)f_36391},
{"f_36319ChickenBridge.scm",(void*)f_36319},
{"f_36338ChickenBridge.scm",(void*)f_36338},
{"f_36373ChickenBridge.scm",(void*)f_36373},
{"f_36344ChickenBridge.scm",(void*)f_36344},
{"f_36348ChickenBridge.scm",(void*)f_36348},
{"f_36362ChickenBridge.scm",(void*)f_36362},
{"f_36351ChickenBridge.scm",(void*)f_36351},
{"f_36332ChickenBridge.scm",(void*)f_36332},
{"f_36313ChickenBridge.scm",(void*)f_36313},
{"f_23694ChickenBridge.scm",(void*)f_23694},
{"f_36041ChickenBridge.scm",(void*)f_36041},
{"f_24217ChickenBridge.scm",(void*)f_24217},
{"f_35993ChickenBridge.scm",(void*)f_35993},
{"f_35985ChickenBridge.scm",(void*)f_35985},
{"f_24220ChickenBridge.scm",(void*)f_24220},
{"f_35865ChickenBridge.scm",(void*)f_35865},
{"f_24226ChickenBridge.scm",(void*)f_24226},
{"f_24685ChickenBridge.scm",(void*)f_24685},
{"f_24719ChickenBridge.scm",(void*)f_24719},
{"f_24711ChickenBridge.scm",(void*)f_24711},
{"f_24707ChickenBridge.scm",(void*)f_24707},
{"f_24692ChickenBridge.scm",(void*)f_24692},
{"f_24696ChickenBridge.scm",(void*)f_24696},
{"f_24689ChickenBridge.scm",(void*)f_24689},
{"f_24244ChickenBridge.scm",(void*)f_24244},
{"f_24678ChickenBridge.scm",(void*)f_24678},
{"f_24674ChickenBridge.scm",(void*)f_24674},
{"f_24251ChickenBridge.scm",(void*)f_24251},
{"f_24549ChickenBridge.scm",(void*)f_24549},
{"f_24570ChickenBridge.scm",(void*)f_24570},
{"f_24572ChickenBridge.scm",(void*)f_24572},
{"f_24586ChickenBridge.scm",(void*)f_24586},
{"f_24639ChickenBridge.scm",(void*)f_24639},
{"f_24589ChickenBridge.scm",(void*)f_24589},
{"f_24624ChickenBridge.scm",(void*)f_24624},
{"f_24592ChickenBridge.scm",(void*)f_24592},
{"f_24605ChickenBridge.scm",(void*)f_24605},
{"f_24617ChickenBridge.scm",(void*)f_24617},
{"f_24609ChickenBridge.scm",(void*)f_24609},
{"f_24595ChickenBridge.scm",(void*)f_24595},
{"f_24559ChickenBridge.scm",(void*)f_24559},
{"f_24254ChickenBridge.scm",(void*)f_24254},
{"f_24513ChickenBridge.scm",(void*)f_24513},
{"f_24539ChickenBridge.scm",(void*)f_24539},
{"f_24524ChickenBridge.scm",(void*)f_24524},
{"f_24257ChickenBridge.scm",(void*)f_24257},
{"f_24261ChickenBridge.scm",(void*)f_24261},
{"f_24457ChickenBridge.scm",(void*)f_24457},
{"f_24467ChickenBridge.scm",(void*)f_24467},
{"f_24470ChickenBridge.scm",(void*)f_24470},
{"f_24491ChickenBridge.scm",(void*)f_24491},
{"f_24473ChickenBridge.scm",(void*)f_24473},
{"f_24477ChickenBridge.scm",(void*)f_24477},
{"f_24264ChickenBridge.scm",(void*)f_24264},
{"f_24267ChickenBridge.scm",(void*)f_24267},
{"f_24420ChickenBridge.scm",(void*)f_24420},
{"f_24428ChickenBridge.scm",(void*)f_24428},
{"f_24424ChickenBridge.scm",(void*)f_24424},
{"f_24270ChickenBridge.scm",(void*)f_24270},
{"f_24298ChickenBridge.scm",(void*)f_24298},
{"f_24301ChickenBridge.scm",(void*)f_24301},
{"f_24304ChickenBridge.scm",(void*)f_24304},
{"f_24307ChickenBridge.scm",(void*)f_24307},
{"f_24310ChickenBridge.scm",(void*)f_24310},
{"f_24369ChickenBridge.scm",(void*)f_24369},
{"f_35819ChickenBridge.scm",(void*)f_35819},
{"f_35835ChickenBridge.scm",(void*)f_35835},
{"f_35838ChickenBridge.scm",(void*)f_35838},
{"f_35841ChickenBridge.scm",(void*)f_35841},
{"f_35844ChickenBridge.scm",(void*)f_35844},
{"f_35855ChickenBridge.scm",(void*)f_35855},
{"f_35813ChickenBridge.scm",(void*)f_35813},
{"f_24726ChickenBridge.scm",(void*)f_24726},
{"f_35674ChickenBridge.scm",(void*)f_35674},
{"f_35713ChickenBridge.scm",(void*)f_35713},
{"f_35687ChickenBridge.scm",(void*)f_35687},
{"f_35668ChickenBridge.scm",(void*)f_35668},
{"f_24729ChickenBridge.scm",(void*)f_24729},
{"f_35256ChickenBridge.scm",(void*)f_35256},
{"f_35260ChickenBridge.scm",(void*)f_35260},
{"f_35272ChickenBridge.scm",(void*)f_35272},
{"f_35330ChickenBridge.scm",(void*)f_35330},
{"f_35333ChickenBridge.scm",(void*)f_35333},
{"f_35336ChickenBridge.scm",(void*)f_35336},
{"f_35548ChickenBridge.scm",(void*)f_35548},
{"f_35486ChickenBridge.scm",(void*)f_35486},
{"f_35520ChickenBridge.scm",(void*)f_35520},
{"f_35495ChickenBridge.scm",(void*)f_35495},
{"f_35506ChickenBridge.scm",(void*)f_35506},
{"f_35502ChickenBridge.scm",(void*)f_35502},
{"f_35345ChickenBridge.scm",(void*)f_35345},
{"f_35423ChickenBridge.scm",(void*)f_35423},
{"f_35464ChickenBridge.scm",(void*)f_35464},
{"f_35468ChickenBridge.scm",(void*)f_35468},
{"f_35472ChickenBridge.scm",(void*)f_35472},
{"f_35427ChickenBridge.scm",(void*)f_35427},
{"f_35431ChickenBridge.scm",(void*)f_35431},
{"f_35458ChickenBridge.scm",(void*)f_35458},
{"f_35434ChickenBridge.scm",(void*)f_35434},
{"f_35348ChickenBridge.scm",(void*)f_35348},
{"f_35420ChickenBridge.scm",(void*)f_35420},
{"f_35362ChickenBridge.scm",(void*)f_35362},
{"f_35364ChickenBridge.scm",(void*)f_35364},
{"f_35412ChickenBridge.scm",(void*)f_35412},
{"f_35383ChickenBridge.scm",(void*)f_35383},
{"f_35400ChickenBridge.scm",(void*)f_35400},
{"f_35386ChickenBridge.scm",(void*)f_35386},
{"f_35379ChickenBridge.scm",(void*)f_35379},
{"f_35351ChickenBridge.scm",(void*)f_35351},
{"f_35281ChickenBridge.scm",(void*)f_35281},
{"f_35291ChickenBridge.scm",(void*)f_35291},
{"f_35297ChickenBridge.scm",(void*)f_35297},
{"f_35269ChickenBridge.scm",(void*)f_35269},
{"f_35217ChickenBridge.scm",(void*)f_35217},
{"f_35234ChickenBridge.scm",(void*)f_35234},
{"f_35250ChickenBridge.scm",(void*)f_35250},
{"f_35228ChickenBridge.scm",(void*)f_35228},
{"f_35211ChickenBridge.scm",(void*)f_35211},
{"f_24732ChickenBridge.scm",(void*)f_24732},
{"f_35135ChickenBridge.scm",(void*)f_35135},
{"f_24735ChickenBridge.scm",(void*)f_24735},
{"f_35111ChickenBridge.scm",(void*)f_35111},
{"f_35123ChickenBridge.scm",(void*)f_35123},
{"f_35119ChickenBridge.scm",(void*)f_35119},
{"f_35097ChickenBridge.scm",(void*)f_35097},
{"f_35105ChickenBridge.scm",(void*)f_35105},
{"f_35091ChickenBridge.scm",(void*)f_35091},
{"f_24738ChickenBridge.scm",(void*)f_24738},
{"f_35083ChickenBridge.scm",(void*)f_35083},
{"f_28509ChickenBridge.scm",(void*)f_28509},
{"f_28512ChickenBridge.scm",(void*)f_28512},
{"f_28678ChickenBridge.scm",(void*)f_28678},
{"f_28674ChickenBridge.scm",(void*)f_28674},
{"f_28664ChickenBridge.scm",(void*)f_28664},
{"f_28519ChickenBridge.scm",(void*)f_28519},
{"f_28523ChickenBridge.scm",(void*)f_28523},
{"f_28526ChickenBridge.scm",(void*)f_28526},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28545ChickenBridge.scm",(void*)f_28545},
{"f_28617ChickenBridge.scm",(void*)f_28617},
{"f_28625ChickenBridge.scm",(void*)f_28625},
{"f_28621ChickenBridge.scm",(void*)f_28621},
{"f_28613ChickenBridge.scm",(void*)f_28613},
{"f_28609ChickenBridge.scm",(void*)f_28609},
{"f_28581ChickenBridge.scm",(void*)f_28581},
{"f_28577ChickenBridge.scm",(void*)f_28577},
{"f_28541ChickenBridge.scm",(void*)f_28541},
{"f_25156ChickenBridge.scm",(void*)f_25156},
{"f_35069ChickenBridge.scm",(void*)f_35069},
{"f_25159ChickenBridge.scm",(void*)f_25159},
{"f_35040ChickenBridge.scm",(void*)f_35040},
{"f_35044ChickenBridge.scm",(void*)f_35044},
{"f_25162ChickenBridge.scm",(void*)f_25162},
{"f_35037ChickenBridge.scm",(void*)f_35037},
{"f_25165ChickenBridge.scm",(void*)f_25165},
{"f_34895ChickenBridge.scm",(void*)f_34895},
{"f_28691ChickenBridge.scm",(void*)f_28691},
{"f_28823ChickenBridge.scm",(void*)f_28823},
{"f_28694ChickenBridge.scm",(void*)f_28694},
{"f_28705ChickenBridge.scm",(void*)f_28705},
{"f_28713ChickenBridge.scm",(void*)f_28713},
{"f_28737ChickenBridge.scm",(void*)f_28737},
{"f_28740ChickenBridge.scm",(void*)f_28740},
{"f_28748ChickenBridge.scm",(void*)f_28748},
{"f_28756ChickenBridge.scm",(void*)f_28756},
{"f_28776ChickenBridge.scm",(void*)f_28776},
{"f_28772ChickenBridge.scm",(void*)f_28772},
{"f_28752ChickenBridge.scm",(void*)f_28752},
{"f_28744ChickenBridge.scm",(void*)f_28744},
{"f_28733ChickenBridge.scm",(void*)f_28733},
{"f_28709ChickenBridge.scm",(void*)f_28709},
{"f_28685ChickenBridge.scm",(void*)f_28685},
{"f_33607ChickenBridge.scm",(void*)f_33607},
{"f_33610ChickenBridge.scm",(void*)f_33610},
{"f_33613ChickenBridge.scm",(void*)f_33613},
{"f_33616ChickenBridge.scm",(void*)f_33616},
{"f_33619ChickenBridge.scm",(void*)f_33619},
{"f_33622ChickenBridge.scm",(void*)f_33622},
{"f_33625ChickenBridge.scm",(void*)f_33625},
{"f_33628ChickenBridge.scm",(void*)f_33628},
{"f_33631ChickenBridge.scm",(void*)f_33631},
{"f_33634ChickenBridge.scm",(void*)f_33634},
{"f_33637ChickenBridge.scm",(void*)f_33637},
{"f_33762ChickenBridge.scm",(void*)f_33762},
{"f_33765ChickenBridge.scm",(void*)f_33765},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_34832ChickenBridge.scm",(void*)f_34832},
{"f_34860ChickenBridge.scm",(void*)f_34860},
{"f_34499ChickenBridge.scm",(void*)f_34499},
{"f_34826ChickenBridge.scm",(void*)f_34826},
{"f_34544ChickenBridge.scm",(void*)f_34544},
{"f_34550ChickenBridge.scm",(void*)f_34550},
{"f_34553ChickenBridge.scm",(void*)f_34553},
{"f_34556ChickenBridge.scm",(void*)f_34556},
{"f_34560ChickenBridge.scm",(void*)f_34560},
{"f_34770ChickenBridge.scm",(void*)f_34770},
{"f_34782ChickenBridge.scm",(void*)f_34782},
{"f_34778ChickenBridge.scm",(void*)f_34778},
{"f_34563ChickenBridge.scm",(void*)f_34563},
{"f_34727ChickenBridge.scm",(void*)f_34727},
{"f_34763ChickenBridge.scm",(void*)f_34763},
{"f_34756ChickenBridge.scm",(void*)f_34756},
{"f_34566ChickenBridge.scm",(void*)f_34566},
{"f_34665ChickenBridge.scm",(void*)f_34665},
{"f_34673ChickenBridge.scm",(void*)f_34673},
{"f_34669ChickenBridge.scm",(void*)f_34669},
{"f_34661ChickenBridge.scm",(void*)f_34661},
{"f_34657ChickenBridge.scm",(void*)f_34657},
{"f_34613ChickenBridge.scm",(void*)f_34613},
{"f_34609ChickenBridge.scm",(void*)f_34609},
{"f_34576ChickenBridge.scm",(void*)f_34576},
{"f_34587ChickenBridge.scm",(void*)f_34587},
{"f_34595ChickenBridge.scm",(void*)f_34595},
{"f_34591ChickenBridge.scm",(void*)f_34591},
{"f_34789ChickenBridge.scm",(void*)f_34789},
{"f_34797ChickenBridge.scm",(void*)f_34797},
{"f_34811ChickenBridge.scm",(void*)f_34811},
{"f_34801ChickenBridge.scm",(void*)f_34801},
{"f_34792ChickenBridge.scm",(void*)f_34792},
{"f_34795ChickenBridge.scm",(void*)f_34795},
{"f_34501ChickenBridge.scm",(void*)f_34501},
{"f_34517ChickenBridge.scm",(void*)f_34517},
{"f_34428ChickenBridge.scm",(void*)f_34428},
{"f_34439ChickenBridge.scm",(void*)f_34439},
{"f_34442ChickenBridge.scm",(void*)f_34442},
{"f_34449ChickenBridge.scm",(void*)f_34449},
{"f_34418ChickenBridge.scm",(void*)f_34418},
{"f_34073ChickenBridge.scm",(void*)f_34073},
{"f_34422ChickenBridge.scm",(void*)f_34422},
{"f_34360ChickenBridge.scm",(void*)f_34360},
{"f_34378ChickenBridge.scm",(void*)f_34378},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34364ChickenBridge.scm",(void*)f_34364},
{"f_34351ChickenBridge.scm",(void*)f_34351},
{"f_34051ChickenBridge.scm",(void*)f_34051},
{"f_34355ChickenBridge.scm",(void*)f_34355},
{"f_34345ChickenBridge.scm",(void*)f_34345},
{"f_34033ChickenBridge.scm",(void*)f_34033},
{"f_34336ChickenBridge.scm",(void*)f_34336},
{"f_34042ChickenBridge.scm",(void*)f_34042},
{"f_34340ChickenBridge.scm",(void*)f_34340},
{"f_34273ChickenBridge.scm",(void*)f_34273},
{"f_34298ChickenBridge.scm",(void*)f_34298},
{"f_33998ChickenBridge.scm",(void*)f_33998},
{"f_34286ChickenBridge.scm",(void*)f_34286},
{"f_34097ChickenBridge.scm",(void*)f_34097},
{"f_34224ChickenBridge.scm",(void*)f_34224},
{"f_34219ChickenBridge.scm",(void*)f_34219},
{"f_34099ChickenBridge.scm",(void*)f_34099},
{"f_34218ChickenBridge.scm",(void*)f_34218},
{"f_34214ChickenBridge.scm",(void*)f_34214},
{"f_34206ChickenBridge.scm",(void*)f_34206},
{"f_34170ChickenBridge.scm",(void*)f_34170},
{"f_34203ChickenBridge.scm",(void*)f_34203},
{"f_34199ChickenBridge.scm",(void*)f_34199},
{"f_34180ChickenBridge.scm",(void*)f_34180},
{"f_34159ChickenBridge.scm",(void*)f_34159},
{"f_34129ChickenBridge.scm",(void*)f_34129},
{"f_34101ChickenBridge.scm",(void*)f_34101},
{"f_34078ChickenBridge.scm",(void*)f_34078},
{"f_34083ChickenBridge.scm",(void*)f_34083},
{"f_34088ChickenBridge.scm",(void*)f_34088},
{"f_34056ChickenBridge.scm",(void*)f_34056},
{"f_34060ChickenBridge.scm",(void*)f_34060},
{"f_34012ChickenBridge.scm",(void*)f_34012},
{"f_34016ChickenBridge.scm",(void*)f_34016},
{"f_34003ChickenBridge.scm",(void*)f_34003},
{"f_34007ChickenBridge.scm",(void*)f_34007},
{"f_33991ChickenBridge.scm",(void*)f_33991},
{"f_33988ChickenBridge.scm",(void*)f_33988},
{"f_33974ChickenBridge.scm",(void*)f_33974},
{"f_33979ChickenBridge.scm",(void*)f_33979},
{"f_33960ChickenBridge.scm",(void*)f_33960},
{"f_33965ChickenBridge.scm",(void*)f_33965},
{"f_33770ChickenBridge.scm",(void*)f_33770},
{"f_33831ChickenBridge.scm",(void*)f_33831},
{"f_33833ChickenBridge.scm",(void*)f_33833},
{"f_33843ChickenBridge.scm",(void*)f_33843},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33902ChickenBridge.scm",(void*)f_33902},
{"f_33944ChickenBridge.scm",(void*)f_33944},
{"f_33914ChickenBridge.scm",(void*)f_33914},
{"f_33899ChickenBridge.scm",(void*)f_33899},
{"f_33817ChickenBridge.scm",(void*)f_33817},
{"f_33782ChickenBridge.scm",(void*)f_33782},
{"f_33809ChickenBridge.scm",(void*)f_33809},
{"f_33790ChickenBridge.scm",(void*)f_33790},
{"f_33797ChickenBridge.scm",(void*)f_33797},
{"f_33801ChickenBridge.scm",(void*)f_33801},
{"f_33805ChickenBridge.scm",(void*)f_33805},
{"f_33882ChickenBridge.scm",(void*)f_33882},
{"f_33860ChickenBridge.scm",(void*)f_33860},
{"f_33846ChickenBridge.scm",(void*)f_33846},
{"f_33849ChickenBridge.scm",(void*)f_33849},
{"f_33824ChickenBridge.scm",(void*)f_33824},
{"f_33753ChickenBridge.scm",(void*)f_33753},
{"f_33758ChickenBridge.scm",(void*)f_33758},
{"f_33696ChickenBridge.scm",(void*)f_33696},
{"f_33729ChickenBridge.scm",(void*)f_33729},
{"f_33709ChickenBridge.scm",(void*)f_33709},
{"f_33717ChickenBridge.scm",(void*)f_33717},
{"f_33700ChickenBridge.scm",(void*)f_33700},
{"f_33639ChickenBridge.scm",(void*)f_33639},
{"f_33672ChickenBridge.scm",(void*)f_33672},
{"f_33652ChickenBridge.scm",(void*)f_33652},
{"f_33660ChickenBridge.scm",(void*)f_33660},
{"f_33643ChickenBridge.scm",(void*)f_33643},
{"f_33549ChickenBridge.scm",(void*)f_33549},
{"f_33603ChickenBridge.scm",(void*)f_33603},
{"f_33598ChickenBridge.scm",(void*)f_33598},
{"f_33561ChickenBridge.scm",(void*)f_33561},
{"f_33567ChickenBridge.scm",(void*)f_33567},
{"f_33593ChickenBridge.scm",(void*)f_33593},
{"f_33597ChickenBridge.scm",(void*)f_33597},
{"f_33573ChickenBridge.scm",(void*)f_33573},
{"f_33591ChickenBridge.scm",(void*)f_33591},
{"f_33588ChickenBridge.scm",(void*)f_33588},
{"f_33584ChickenBridge.scm",(void*)f_33584},
{"f_33577ChickenBridge.scm",(void*)f_33577},
{"f_33534ChickenBridge.scm",(void*)f_33534},
{"f_33539ChickenBridge.scm",(void*)f_33539},
{"f_33506ChickenBridge.scm",(void*)f_33506},
{"f_33511ChickenBridge.scm",(void*)f_33511},
{"f_33478ChickenBridge.scm",(void*)f_33478},
{"f_33483ChickenBridge.scm",(void*)f_33483},
{"f_33450ChickenBridge.scm",(void*)f_33450},
{"f_33455ChickenBridge.scm",(void*)f_33455},
{"f_33422ChickenBridge.scm",(void*)f_33422},
{"f_33427ChickenBridge.scm",(void*)f_33427},
{"f_33394ChickenBridge.scm",(void*)f_33394},
{"f_33399ChickenBridge.scm",(void*)f_33399},
{"f_33366ChickenBridge.scm",(void*)f_33366},
{"f_33371ChickenBridge.scm",(void*)f_33371},
{"f_33338ChickenBridge.scm",(void*)f_33338},
{"f_33343ChickenBridge.scm",(void*)f_33343},
{"f_33310ChickenBridge.scm",(void*)f_33310},
{"f_33315ChickenBridge.scm",(void*)f_33315},
{"f_33282ChickenBridge.scm",(void*)f_33282},
{"f_33287ChickenBridge.scm",(void*)f_33287},
{"f_33259ChickenBridge.scm",(void*)f_33259},
{"f_33264ChickenBridge.scm",(void*)f_33264},
{"f_33263ChickenBridge.scm",(void*)f_33263},
{"f_33240ChickenBridge.scm",(void*)f_33240},
{"f_33245ChickenBridge.scm",(void*)f_33245},
{"f_33185ChickenBridge.scm",(void*)f_33185},
{"f_33192ChickenBridge.scm",(void*)f_33192},
{"f_33195ChickenBridge.scm",(void*)f_33195},
{"f_33219ChickenBridge.scm",(void*)f_33219},
{"f_33199ChickenBridge.scm",(void*)f_33199},
{"f_33189ChickenBridge.scm",(void*)f_33189},
{"f_33138ChickenBridge.scm",(void*)f_33138},
{"f_33145ChickenBridge.scm",(void*)f_33145},
{"f_33148ChickenBridge.scm",(void*)f_33148},
{"f_33168ChickenBridge.scm",(void*)f_33168},
{"f_33152ChickenBridge.scm",(void*)f_33152},
{"f_33115ChickenBridge.scm",(void*)f_33115},
{"f_33120ChickenBridge.scm",(void*)f_33120},
{"f_33119ChickenBridge.scm",(void*)f_33119},
{"f_33096ChickenBridge.scm",(void*)f_33096},
{"f_33101ChickenBridge.scm",(void*)f_33101},
{"f_33073ChickenBridge.scm",(void*)f_33073},
{"f_33078ChickenBridge.scm",(void*)f_33078},
{"f_33077ChickenBridge.scm",(void*)f_33077},
{"f_33054ChickenBridge.scm",(void*)f_33054},
{"f_33059ChickenBridge.scm",(void*)f_33059},
{"f_33035ChickenBridge.scm",(void*)f_33035},
{"f_33040ChickenBridge.scm",(void*)f_33040},
{"f_33039ChickenBridge.scm",(void*)f_33039},
{"f_33020ChickenBridge.scm",(void*)f_33020},
{"f_33025ChickenBridge.scm",(void*)f_33025},
{"f_33001ChickenBridge.scm",(void*)f_33001},
{"f_33006ChickenBridge.scm",(void*)f_33006},
{"f_33005ChickenBridge.scm",(void*)f_33005},
{"f_32986ChickenBridge.scm",(void*)f_32986},
{"f_32991ChickenBridge.scm",(void*)f_32991},
{"f_32971ChickenBridge.scm",(void*)f_32971},
{"f_32976ChickenBridge.scm",(void*)f_32976},
{"f_32953ChickenBridge.scm",(void*)f_32953},
{"f_32961ChickenBridge.scm",(void*)f_32961},
{"f_32957ChickenBridge.scm",(void*)f_32957},
{"f_32483ChickenBridge.scm",(void*)f_32483},
{"f_32911ChickenBridge.scm",(void*)f_32911},
{"f_32926ChickenBridge.scm",(void*)f_32926},
{"f_32918ChickenBridge.scm",(void*)f_32918},
{"f_32882ChickenBridge.scm",(void*)f_32882},
{"f_32886ChickenBridge.scm",(void*)f_32886},
{"f_32847ChickenBridge.scm",(void*)f_32847},
{"f_32851ChickenBridge.scm",(void*)f_32851},
{"f_32812ChickenBridge.scm",(void*)f_32812},
{"f_32816ChickenBridge.scm",(void*)f_32816},
{"f_32487ChickenBridge.scm",(void*)f_32487},
{"f_32776ChickenBridge.scm",(void*)f_32776},
{"f_32791ChickenBridge.scm",(void*)f_32791},
{"f_32783ChickenBridge.scm",(void*)f_32783},
{"f_32747ChickenBridge.scm",(void*)f_32747},
{"f_32751ChickenBridge.scm",(void*)f_32751},
{"f_32712ChickenBridge.scm",(void*)f_32712},
{"f_32716ChickenBridge.scm",(void*)f_32716},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32681ChickenBridge.scm",(void*)f_32681},
{"f_32490ChickenBridge.scm",(void*)f_32490},
{"f_32641ChickenBridge.scm",(void*)f_32641},
{"f_32656ChickenBridge.scm",(void*)f_32656},
{"f_32648ChickenBridge.scm",(void*)f_32648},
{"f_32612ChickenBridge.scm",(void*)f_32612},
{"f_32616ChickenBridge.scm",(void*)f_32616},
{"f_32577ChickenBridge.scm",(void*)f_32577},
{"f_32581ChickenBridge.scm",(void*)f_32581},
{"f_32542ChickenBridge.scm",(void*)f_32542},
{"f_32546ChickenBridge.scm",(void*)f_32546},
{"f_32493ChickenBridge.scm",(void*)f_32493},
{"f_32496ChickenBridge.scm",(void*)f_32496},
{"f_32500ChickenBridge.scm",(void*)f_32500},
{"f_32464ChickenBridge.scm",(void*)f_32464},
{"f_32469ChickenBridge.scm",(void*)f_32469},
{"f_32013ChickenBridge.scm",(void*)f_32013},
{"f_32441ChickenBridge.scm",(void*)f_32441},
{"f_32456ChickenBridge.scm",(void*)f_32456},
{"f_32448ChickenBridge.scm",(void*)f_32448},
{"f_32412ChickenBridge.scm",(void*)f_32412},
{"f_32416ChickenBridge.scm",(void*)f_32416},
{"f_32377ChickenBridge.scm",(void*)f_32377},
{"f_32381ChickenBridge.scm",(void*)f_32381},
{"f_32342ChickenBridge.scm",(void*)f_32342},
{"f_32346ChickenBridge.scm",(void*)f_32346},
{"f_32017ChickenBridge.scm",(void*)f_32017},
{"f_32306ChickenBridge.scm",(void*)f_32306},
{"f_32321ChickenBridge.scm",(void*)f_32321},
{"f_32313ChickenBridge.scm",(void*)f_32313},
{"f_32277ChickenBridge.scm",(void*)f_32277},
{"f_32281ChickenBridge.scm",(void*)f_32281},
{"f_32242ChickenBridge.scm",(void*)f_32242},
{"f_32246ChickenBridge.scm",(void*)f_32246},
{"f_32207ChickenBridge.scm",(void*)f_32207},
{"f_32211ChickenBridge.scm",(void*)f_32211},
{"f_32020ChickenBridge.scm",(void*)f_32020},
{"f_32171ChickenBridge.scm",(void*)f_32171},
{"f_32186ChickenBridge.scm",(void*)f_32186},
{"f_32178ChickenBridge.scm",(void*)f_32178},
{"f_32142ChickenBridge.scm",(void*)f_32142},
{"f_32146ChickenBridge.scm",(void*)f_32146},
{"f_32107ChickenBridge.scm",(void*)f_32107},
{"f_32111ChickenBridge.scm",(void*)f_32111},
{"f_32072ChickenBridge.scm",(void*)f_32072},
{"f_32076ChickenBridge.scm",(void*)f_32076},
{"f_32023ChickenBridge.scm",(void*)f_32023},
{"f_32026ChickenBridge.scm",(void*)f_32026},
{"f_32030ChickenBridge.scm",(void*)f_32030},
{"f_31994ChickenBridge.scm",(void*)f_31994},
{"f_31999ChickenBridge.scm",(void*)f_31999},
{"f_31543ChickenBridge.scm",(void*)f_31543},
{"f_31971ChickenBridge.scm",(void*)f_31971},
{"f_31986ChickenBridge.scm",(void*)f_31986},
{"f_31978ChickenBridge.scm",(void*)f_31978},
{"f_31942ChickenBridge.scm",(void*)f_31942},
{"f_31946ChickenBridge.scm",(void*)f_31946},
{"f_31907ChickenBridge.scm",(void*)f_31907},
{"f_31911ChickenBridge.scm",(void*)f_31911},
{"f_31872ChickenBridge.scm",(void*)f_31872},
{"f_31876ChickenBridge.scm",(void*)f_31876},
{"f_31547ChickenBridge.scm",(void*)f_31547},
{"f_31836ChickenBridge.scm",(void*)f_31836},
{"f_31851ChickenBridge.scm",(void*)f_31851},
{"f_31843ChickenBridge.scm",(void*)f_31843},
{"f_31807ChickenBridge.scm",(void*)f_31807},
{"f_31811ChickenBridge.scm",(void*)f_31811},
{"f_31772ChickenBridge.scm",(void*)f_31772},
{"f_31776ChickenBridge.scm",(void*)f_31776},
{"f_31737ChickenBridge.scm",(void*)f_31737},
{"f_31741ChickenBridge.scm",(void*)f_31741},
{"f_31550ChickenBridge.scm",(void*)f_31550},
{"f_31701ChickenBridge.scm",(void*)f_31701},
{"f_31716ChickenBridge.scm",(void*)f_31716},
{"f_31708ChickenBridge.scm",(void*)f_31708},
{"f_31672ChickenBridge.scm",(void*)f_31672},
{"f_31676ChickenBridge.scm",(void*)f_31676},
{"f_31637ChickenBridge.scm",(void*)f_31637},
{"f_31641ChickenBridge.scm",(void*)f_31641},
{"f_31602ChickenBridge.scm",(void*)f_31602},
{"f_31606ChickenBridge.scm",(void*)f_31606},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_31556ChickenBridge.scm",(void*)f_31556},
{"f_31560ChickenBridge.scm",(void*)f_31560},
{"f_31524ChickenBridge.scm",(void*)f_31524},
{"f_31529ChickenBridge.scm",(void*)f_31529},
{"f_30795ChickenBridge.scm",(void*)f_30795},
{"f_31501ChickenBridge.scm",(void*)f_31501},
{"f_31516ChickenBridge.scm",(void*)f_31516},
{"f_31508ChickenBridge.scm",(void*)f_31508},
{"f_31472ChickenBridge.scm",(void*)f_31472},
{"f_31476ChickenBridge.scm",(void*)f_31476},
{"f_31437ChickenBridge.scm",(void*)f_31437},
{"f_31441ChickenBridge.scm",(void*)f_31441},
{"f_31402ChickenBridge.scm",(void*)f_31402},
{"f_31406ChickenBridge.scm",(void*)f_31406},
{"f_31367ChickenBridge.scm",(void*)f_31367},
{"f_31371ChickenBridge.scm",(void*)f_31371},
{"f_30799ChickenBridge.scm",(void*)f_30799},
{"f_31331ChickenBridge.scm",(void*)f_31331},
{"f_31346ChickenBridge.scm",(void*)f_31346},
{"f_31338ChickenBridge.scm",(void*)f_31338},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31306ChickenBridge.scm",(void*)f_31306},
{"f_31267ChickenBridge.scm",(void*)f_31267},
{"f_31271ChickenBridge.scm",(void*)f_31271},
{"f_31232ChickenBridge.scm",(void*)f_31232},
{"f_31236ChickenBridge.scm",(void*)f_31236},
{"f_31197ChickenBridge.scm",(void*)f_31197},
{"f_31201ChickenBridge.scm",(void*)f_31201},
{"f_30802ChickenBridge.scm",(void*)f_30802},
{"f_31161ChickenBridge.scm",(void*)f_31161},
{"f_31176ChickenBridge.scm",(void*)f_31176},
{"f_31168ChickenBridge.scm",(void*)f_31168},
{"f_31132ChickenBridge.scm",(void*)f_31132},
{"f_31136ChickenBridge.scm",(void*)f_31136},
{"f_31097ChickenBridge.scm",(void*)f_31097},
{"f_31101ChickenBridge.scm",(void*)f_31101},
{"f_31062ChickenBridge.scm",(void*)f_31062},
{"f_31066ChickenBridge.scm",(void*)f_31066},
{"f_31027ChickenBridge.scm",(void*)f_31027},
{"f_31031ChickenBridge.scm",(void*)f_31031},
{"f_30805ChickenBridge.scm",(void*)f_30805},
{"f_30991ChickenBridge.scm",(void*)f_30991},
{"f_31006ChickenBridge.scm",(void*)f_31006},
{"f_30998ChickenBridge.scm",(void*)f_30998},
{"f_30962ChickenBridge.scm",(void*)f_30962},
{"f_30966ChickenBridge.scm",(void*)f_30966},
{"f_30927ChickenBridge.scm",(void*)f_30927},
{"f_30931ChickenBridge.scm",(void*)f_30931},
{"f_30892ChickenBridge.scm",(void*)f_30892},
{"f_30896ChickenBridge.scm",(void*)f_30896},
{"f_30857ChickenBridge.scm",(void*)f_30857},
{"f_30861ChickenBridge.scm",(void*)f_30861},
{"f_30808ChickenBridge.scm",(void*)f_30808},
{"f_30811ChickenBridge.scm",(void*)f_30811},
{"f_30815ChickenBridge.scm",(void*)f_30815},
{"f_30776ChickenBridge.scm",(void*)f_30776},
{"f_30781ChickenBridge.scm",(void*)f_30781},
{"f_30047ChickenBridge.scm",(void*)f_30047},
{"f_30753ChickenBridge.scm",(void*)f_30753},
{"f_30768ChickenBridge.scm",(void*)f_30768},
{"f_30760ChickenBridge.scm",(void*)f_30760},
{"f_30724ChickenBridge.scm",(void*)f_30724},
{"f_30728ChickenBridge.scm",(void*)f_30728},
{"f_30689ChickenBridge.scm",(void*)f_30689},
{"f_30693ChickenBridge.scm",(void*)f_30693},
{"f_30654ChickenBridge.scm",(void*)f_30654},
{"f_30658ChickenBridge.scm",(void*)f_30658},
{"f_30619ChickenBridge.scm",(void*)f_30619},
{"f_30623ChickenBridge.scm",(void*)f_30623},
{"f_30051ChickenBridge.scm",(void*)f_30051},
{"f_30583ChickenBridge.scm",(void*)f_30583},
{"f_30598ChickenBridge.scm",(void*)f_30598},
{"f_30590ChickenBridge.scm",(void*)f_30590},
{"f_30554ChickenBridge.scm",(void*)f_30554},
{"f_30558ChickenBridge.scm",(void*)f_30558},
{"f_30519ChickenBridge.scm",(void*)f_30519},
{"f_30523ChickenBridge.scm",(void*)f_30523},
{"f_30484ChickenBridge.scm",(void*)f_30484},
{"f_30488ChickenBridge.scm",(void*)f_30488},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30453ChickenBridge.scm",(void*)f_30453},
{"f_30054ChickenBridge.scm",(void*)f_30054},
{"f_30413ChickenBridge.scm",(void*)f_30413},
{"f_30428ChickenBridge.scm",(void*)f_30428},
{"f_30420ChickenBridge.scm",(void*)f_30420},
{"f_30384ChickenBridge.scm",(void*)f_30384},
{"f_30388ChickenBridge.scm",(void*)f_30388},
{"f_30349ChickenBridge.scm",(void*)f_30349},
{"f_30353ChickenBridge.scm",(void*)f_30353},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30318ChickenBridge.scm",(void*)f_30318},
{"f_30279ChickenBridge.scm",(void*)f_30279},
{"f_30283ChickenBridge.scm",(void*)f_30283},
{"f_30057ChickenBridge.scm",(void*)f_30057},
{"f_30243ChickenBridge.scm",(void*)f_30243},
{"f_30258ChickenBridge.scm",(void*)f_30258},
{"f_30250ChickenBridge.scm",(void*)f_30250},
{"f_30214ChickenBridge.scm",(void*)f_30214},
{"f_30218ChickenBridge.scm",(void*)f_30218},
{"f_30179ChickenBridge.scm",(void*)f_30179},
{"f_30183ChickenBridge.scm",(void*)f_30183},
{"f_30144ChickenBridge.scm",(void*)f_30144},
{"f_30148ChickenBridge.scm",(void*)f_30148},
{"f_30109ChickenBridge.scm",(void*)f_30109},
{"f_30113ChickenBridge.scm",(void*)f_30113},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30063ChickenBridge.scm",(void*)f_30063},
{"f_30067ChickenBridge.scm",(void*)f_30067},
{"f_30028ChickenBridge.scm",(void*)f_30028},
{"f_30033ChickenBridge.scm",(void*)f_30033},
{"f_29577ChickenBridge.scm",(void*)f_29577},
{"f_30005ChickenBridge.scm",(void*)f_30005},
{"f_30020ChickenBridge.scm",(void*)f_30020},
{"f_30012ChickenBridge.scm",(void*)f_30012},
{"f_29976ChickenBridge.scm",(void*)f_29976},
{"f_29980ChickenBridge.scm",(void*)f_29980},
{"f_29941ChickenBridge.scm",(void*)f_29941},
{"f_29945ChickenBridge.scm",(void*)f_29945},
{"f_29906ChickenBridge.scm",(void*)f_29906},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29581ChickenBridge.scm",(void*)f_29581},
{"f_29870ChickenBridge.scm",(void*)f_29870},
{"f_29885ChickenBridge.scm",(void*)f_29885},
{"f_29877ChickenBridge.scm",(void*)f_29877},
{"f_29841ChickenBridge.scm",(void*)f_29841},
{"f_29845ChickenBridge.scm",(void*)f_29845},
{"f_29806ChickenBridge.scm",(void*)f_29806},
{"f_29810ChickenBridge.scm",(void*)f_29810},
{"f_29771ChickenBridge.scm",(void*)f_29771},
{"f_29775ChickenBridge.scm",(void*)f_29775},
{"f_29584ChickenBridge.scm",(void*)f_29584},
{"f_29735ChickenBridge.scm",(void*)f_29735},
{"f_29750ChickenBridge.scm",(void*)f_29750},
{"f_29742ChickenBridge.scm",(void*)f_29742},
{"f_29706ChickenBridge.scm",(void*)f_29706},
{"f_29710ChickenBridge.scm",(void*)f_29710},
{"f_29671ChickenBridge.scm",(void*)f_29671},
{"f_29675ChickenBridge.scm",(void*)f_29675},
{"f_29636ChickenBridge.scm",(void*)f_29636},
{"f_29640ChickenBridge.scm",(void*)f_29640},
{"f_29587ChickenBridge.scm",(void*)f_29587},
{"f_29590ChickenBridge.scm",(void*)f_29590},
{"f_29594ChickenBridge.scm",(void*)f_29594},
{"f_29558ChickenBridge.scm",(void*)f_29558},
{"f_29563ChickenBridge.scm",(void*)f_29563},
{"f_28829ChickenBridge.scm",(void*)f_28829},
{"f_29535ChickenBridge.scm",(void*)f_29535},
{"f_29550ChickenBridge.scm",(void*)f_29550},
{"f_29542ChickenBridge.scm",(void*)f_29542},
{"f_29506ChickenBridge.scm",(void*)f_29506},
{"f_29510ChickenBridge.scm",(void*)f_29510},
{"f_29471ChickenBridge.scm",(void*)f_29471},
{"f_29475ChickenBridge.scm",(void*)f_29475},
{"f_29436ChickenBridge.scm",(void*)f_29436},
{"f_29440ChickenBridge.scm",(void*)f_29440},
{"f_29401ChickenBridge.scm",(void*)f_29401},
{"f_29405ChickenBridge.scm",(void*)f_29405},
{"f_28833ChickenBridge.scm",(void*)f_28833},
{"f_29365ChickenBridge.scm",(void*)f_29365},
{"f_29380ChickenBridge.scm",(void*)f_29380},
{"f_29372ChickenBridge.scm",(void*)f_29372},
{"f_29336ChickenBridge.scm",(void*)f_29336},
{"f_29340ChickenBridge.scm",(void*)f_29340},
{"f_29301ChickenBridge.scm",(void*)f_29301},
{"f_29305ChickenBridge.scm",(void*)f_29305},
{"f_29266ChickenBridge.scm",(void*)f_29266},
{"f_29270ChickenBridge.scm",(void*)f_29270},
{"f_29231ChickenBridge.scm",(void*)f_29231},
{"f_29235ChickenBridge.scm",(void*)f_29235},
{"f_28836ChickenBridge.scm",(void*)f_28836},
{"f_29195ChickenBridge.scm",(void*)f_29195},
{"f_29210ChickenBridge.scm",(void*)f_29210},
{"f_29202ChickenBridge.scm",(void*)f_29202},
{"f_29166ChickenBridge.scm",(void*)f_29166},
{"f_29170ChickenBridge.scm",(void*)f_29170},
{"f_29131ChickenBridge.scm",(void*)f_29131},
{"f_29135ChickenBridge.scm",(void*)f_29135},
{"f_29096ChickenBridge.scm",(void*)f_29096},
{"f_29100ChickenBridge.scm",(void*)f_29100},
{"f_29061ChickenBridge.scm",(void*)f_29061},
{"f_29065ChickenBridge.scm",(void*)f_29065},
{"f_28839ChickenBridge.scm",(void*)f_28839},
{"f_29025ChickenBridge.scm",(void*)f_29025},
{"f_29040ChickenBridge.scm",(void*)f_29040},
{"f_29032ChickenBridge.scm",(void*)f_29032},
{"f_28996ChickenBridge.scm",(void*)f_28996},
{"f_29000ChickenBridge.scm",(void*)f_29000},
{"f_28961ChickenBridge.scm",(void*)f_28961},
{"f_28965ChickenBridge.scm",(void*)f_28965},
{"f_28926ChickenBridge.scm",(void*)f_28926},
{"f_28930ChickenBridge.scm",(void*)f_28930},
{"f_28891ChickenBridge.scm",(void*)f_28891},
{"f_28895ChickenBridge.scm",(void*)f_28895},
{"f_28842ChickenBridge.scm",(void*)f_28842},
{"f_28845ChickenBridge.scm",(void*)f_28845},
{"f_28849ChickenBridge.scm",(void*)f_28849},
{"f_28491ChickenBridge.scm",(void*)f_28491},
{"f_28331ChickenBridge.scm",(void*)f_28331},
{"f_28366ChickenBridge.scm",(void*)f_28366},
{"f_28376ChickenBridge.scm",(void*)f_28376},
{"f_28380ChickenBridge.scm",(void*)f_28380},
{"f_28383ChickenBridge.scm",(void*)f_28383},
{"f_28444ChickenBridge.scm",(void*)f_28444},
{"f_28435ChickenBridge.scm",(void*)f_28435},
{"f_28386ChickenBridge.scm",(void*)f_28386},
{"f_28405ChickenBridge.scm",(void*)f_28405},
{"f_28412ChickenBridge.scm",(void*)f_28412},
{"f_28389ChickenBridge.scm",(void*)f_28389},
{"f_28395ChickenBridge.scm",(void*)f_28395},
{"f_28364ChickenBridge.scm",(void*)f_28364},
{"f_28339ChickenBridge.scm",(void*)f_28339},
{"f_28338ChickenBridge.scm",(void*)f_28338},
{"f_28499ChickenBridge.scm",(void*)f_28499},
{"f_28077ChickenBridge.scm",(void*)f_28077},
{"f_28099ChickenBridge.scm",(void*)f_28099},
{"f_28114ChickenBridge.scm",(void*)f_28114},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28293ChickenBridge.scm",(void*)f_28293},
{"f_28287ChickenBridge.scm",(void*)f_28287},
{"f_28120ChickenBridge.scm",(void*)f_28120},
{"f_28269ChickenBridge.scm",(void*)f_28269},
{"f_28123ChickenBridge.scm",(void*)f_28123},
{"f_28126ChickenBridge.scm",(void*)f_28126},
{"f_28262ChickenBridge.scm",(void*)f_28262},
{"f_28250ChickenBridge.scm",(void*)f_28250},
{"f_28146ChickenBridge.scm",(void*)f_28146},
{"f_28153ChickenBridge.scm",(void*)f_28153},
{"f_28223ChickenBridge.scm",(void*)f_28223},
{"f_28209ChickenBridge.scm",(void*)f_28209},
{"f_28217ChickenBridge.scm",(void*)f_28217},
{"f_28156ChickenBridge.scm",(void*)f_28156},
{"f_28195ChickenBridge.scm",(void*)f_28195},
{"f_28159ChickenBridge.scm",(void*)f_28159},
{"f_28188ChickenBridge.scm",(void*)f_28188},
{"f_28165ChickenBridge.scm",(void*)f_28165},
{"f_28168ChickenBridge.scm",(void*)f_28168},
{"f_28172ChickenBridge.scm",(void*)f_28172},
{"f_28133ChickenBridge.scm",(void*)f_28133},
{"f_28136ChickenBridge.scm",(void*)f_28136},
{"f_27946ChickenBridge.scm",(void*)f_27946},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27903ChickenBridge.scm",(void*)f_27903},
{"f_27909ChickenBridge.scm",(void*)f_27909},
{"f_27972ChickenBridge.scm",(void*)f_27972},
{"f_28058ChickenBridge.scm",(void*)f_28058},
{"f_28045ChickenBridge.scm",(void*)f_28045},
{"f_28053ChickenBridge.scm",(void*)f_28053},
{"f_27975ChickenBridge.scm",(void*)f_27975},
{"f_27979ChickenBridge.scm",(void*)f_27979},
{"f_28022ChickenBridge.scm",(void*)f_28022},
{"f_27984ChickenBridge.scm",(void*)f_27984},
{"f_27950ChickenBridge.scm",(void*)f_27950},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27852ChickenBridge.scm",(void*)f_27852},
{"f_27883ChickenBridge.scm",(void*)f_27883},
{"f_27879ChickenBridge.scm",(void*)f_27879},
{"f_27871ChickenBridge.scm",(void*)f_27871},
{"f_27754ChickenBridge.scm",(void*)f_27754},
{"f_27761ChickenBridge.scm",(void*)f_27761},
{"f_27829ChickenBridge.scm",(void*)f_27829},
{"f_27772ChickenBridge.scm",(void*)f_27772},
{"f_27799ChickenBridge.scm",(void*)f_27799},
{"f_27783ChickenBridge.scm",(void*)f_27783},
{"f_27688ChickenBridge.scm",(void*)f_27688},
{"f_27699ChickenBridge.scm",(void*)f_27699},
{"f_27702ChickenBridge.scm",(void*)f_27702},
{"f_27709ChickenBridge.scm",(void*)f_27709},
{"f_27682ChickenBridge.scm",(void*)f_27682},
{"f_27136ChickenBridge.scm",(void*)f_27136},
{"f_27167ChickenBridge.scm",(void*)f_27167},
{"f_27631ChickenBridge.scm",(void*)f_27631},
{"f_27637ChickenBridge.scm",(void*)f_27637},
{"f_27178ChickenBridge.scm",(void*)f_27178},
{"f_27063ChickenBridge.scm",(void*)f_27063},
{"f_27088ChickenBridge.scm",(void*)f_27088},
{"f_27023ChickenBridge.scm",(void*)f_27023},
{"f_27036ChickenBridge.scm",(void*)f_27036},
{"f_27077ChickenBridge.scm",(void*)f_27077},
{"f_27182ChickenBridge.scm",(void*)f_27182},
{"f_27619ChickenBridge.scm",(void*)f_27619},
{"f_27615ChickenBridge.scm",(void*)f_27615},
{"f_27611ChickenBridge.scm",(void*)f_27611},
{"f_27185ChickenBridge.scm",(void*)f_27185},
{"f_27405ChickenBridge.scm",(void*)f_27405},
{"f_27514ChickenBridge.scm",(void*)f_27514},
{"f_27579ChickenBridge.scm",(void*)f_27579},
{"f_27521ChickenBridge.scm",(void*)f_27521},
{"f_27525ChickenBridge.scm",(void*)f_27525},
{"f_27529ChickenBridge.scm",(void*)f_27529},
{"f_27571ChickenBridge.scm",(void*)f_27571},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27545ChickenBridge.scm",(void*)f_27545},
{"f_27408ChickenBridge.scm",(void*)f_27408},
{"f_27411ChickenBridge.scm",(void*)f_27411},
{"f_27310ChickenBridge.scm",(void*)f_27310},
{"f_27393ChickenBridge.scm",(void*)f_27393},
{"f_27360ChickenBridge.scm",(void*)f_27360},
{"f_27386ChickenBridge.scm",(void*)f_27386},
{"f_27368ChickenBridge.scm",(void*)f_27368},
{"f_27316ChickenBridge.scm",(void*)f_27316},
{"f_27356ChickenBridge.scm",(void*)f_27356},
{"f_27298ChickenBridge.scm",(void*)f_27298},
{"f_27269ChickenBridge.scm",(void*)f_27269},
{"f_27291ChickenBridge.scm",(void*)f_27291},
{"f_27277ChickenBridge.scm",(void*)f_27277},
{"f_27231ChickenBridge.scm",(void*)f_27231},
{"f_27188ChickenBridge.scm",(void*)f_27188},
{"f_27199ChickenBridge.scm",(void*)f_27199},
{"f_27203ChickenBridge.scm",(void*)f_27203},
{"f_27207ChickenBridge.scm",(void*)f_27207},
{"f_27211ChickenBridge.scm",(void*)f_27211},
{"f_27195ChickenBridge.scm",(void*)f_27195},
{"f_27155ChickenBridge.scm",(void*)f_27155},
{"f_27150ChickenBridge.scm",(void*)f_27150},
{"f_27145ChickenBridge.scm",(void*)f_27145},
{"f_26977ChickenBridge.scm",(void*)f_26977},
{"f_26988ChickenBridge.scm",(void*)f_26988},
{"f_27003ChickenBridge.scm",(void*)f_27003},
{"f_26939ChickenBridge.scm",(void*)f_26939},
{"f_26950ChickenBridge.scm",(void*)f_26950},
{"f_26965ChickenBridge.scm",(void*)f_26965},
{"f_26872ChickenBridge.scm",(void*)f_26872},
{"f_26892ChickenBridge.scm",(void*)f_26892},
{"f_26902ChickenBridge.scm",(void*)f_26902},
{"f_26915ChickenBridge.scm",(void*)f_26915},
{"f_26883ChickenBridge.scm",(void*)f_26883},
{"f_26890ChickenBridge.scm",(void*)f_26890},
{"f_26679ChickenBridge.scm",(void*)f_26679},
{"f_26739ChickenBridge.scm",(void*)f_26739},
{"f_26749ChickenBridge.scm",(void*)f_26749},
{"f_26863ChickenBridge.scm",(void*)f_26863},
{"f_26828ChickenBridge.scm",(void*)f_26828},
{"f_26820ChickenBridge.scm",(void*)f_26820},
{"f_26791ChickenBridge.scm",(void*)f_26791},
{"f_26769ChickenBridge.scm",(void*)f_26769},
{"f_26772ChickenBridge.scm",(void*)f_26772},
{"f_26760ChickenBridge.scm",(void*)f_26760},
{"f_26686ChickenBridge.scm",(void*)f_26686},
{"f_26737ChickenBridge.scm",(void*)f_26737},
{"f_26729ChickenBridge.scm",(void*)f_26729},
{"f_26689ChickenBridge.scm",(void*)f_26689},
{"f_26700ChickenBridge.scm",(void*)f_26700},
{"f_26704ChickenBridge.scm",(void*)f_26704},
{"f_26696ChickenBridge.scm",(void*)f_26696},
{"f_26537ChickenBridge.scm",(void*)f_26537},
{"f_26585ChickenBridge.scm",(void*)f_26585},
{"f_26595ChickenBridge.scm",(void*)f_26595},
{"f_26606ChickenBridge.scm",(void*)f_26606},
{"f_26643ChickenBridge.scm",(void*)f_26643},
{"f_26618ChickenBridge.scm",(void*)f_26618},
{"f_26609ChickenBridge.scm",(void*)f_26609},
{"f_26547ChickenBridge.scm",(void*)f_26547},
{"f_26583ChickenBridge.scm",(void*)f_26583},
{"f_26554ChickenBridge.scm",(void*)f_26554},
{"f_26186ChickenBridge.scm",(void*)f_26186},
{"f_26193ChickenBridge.scm",(void*)f_26193},
{"f_26427ChickenBridge.scm",(void*)f_26427},
{"f_26437ChickenBridge.scm",(void*)f_26437},
{"f_26448ChickenBridge.scm",(void*)f_26448},
{"f_26460ChickenBridge.scm",(void*)f_26460},
{"f_26463ChickenBridge.scm",(void*)f_26463},
{"f_26451ChickenBridge.scm",(void*)f_26451},
{"f_26199ChickenBridge.scm",(void*)f_26199},
{"f_26425ChickenBridge.scm",(void*)f_26425},
{"f_26421ChickenBridge.scm",(void*)f_26421},
{"f_26367ChickenBridge.scm",(void*)f_26367},
{"f_26332ChickenBridge.scm",(void*)f_26332},
{"f_26348ChickenBridge.scm",(void*)f_26348},
{"f_26303ChickenBridge.scm",(void*)f_26303},
{"f_26227ChickenBridge.scm",(void*)f_26227},
{"f_26230ChickenBridge.scm",(void*)f_26230},
{"f_26294ChickenBridge.scm",(void*)f_26294},
{"f_26290ChickenBridge.scm",(void*)f_26290},
{"f_26210ChickenBridge.scm",(void*)f_26210},
{"f_26221ChickenBridge.scm",(void*)f_26221},
{"f_26217ChickenBridge.scm",(void*)f_26217},
{"f_26139ChickenBridge.scm",(void*)f_26139},
{"f_26172ChickenBridge.scm",(void*)f_26172},
{"f_26154ChickenBridge.scm",(void*)f_26154},
{"f_26166ChickenBridge.scm",(void*)f_26166},
{"f_25757ChickenBridge.scm",(void*)f_25757},
{"f_25966ChickenBridge.scm",(void*)f_25966},
{"f_25976ChickenBridge.scm",(void*)f_25976},
{"f_25987ChickenBridge.scm",(void*)f_25987},
{"f_26107ChickenBridge.scm",(void*)f_26107},
{"f_26086ChickenBridge.scm",(void*)f_26086},
{"f_26065ChickenBridge.scm",(void*)f_26065},
{"f_26044ChickenBridge.scm",(void*)f_26044},
{"f_26023ChickenBridge.scm",(void*)f_26023},
{"f_26002ChickenBridge.scm",(void*)f_26002},
{"f_25990ChickenBridge.scm",(void*)f_25990},
{"f_25767ChickenBridge.scm",(void*)f_25767},
{"f_25770ChickenBridge.scm",(void*)f_25770},
{"f_25933ChickenBridge.scm",(void*)f_25933},
{"f_25773ChickenBridge.scm",(void*)f_25773},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25904ChickenBridge.scm",(void*)f_25904},
{"f_25776ChickenBridge.scm",(void*)f_25776},
{"f_25869ChickenBridge.scm",(void*)f_25869},
{"f_25886ChickenBridge.scm",(void*)f_25886},
{"f_25779ChickenBridge.scm",(void*)f_25779},
{"f_25818ChickenBridge.scm",(void*)f_25818},
{"f_25852ChickenBridge.scm",(void*)f_25852},
{"f_25836ChickenBridge.scm",(void*)f_25836},
{"f_25821ChickenBridge.scm",(void*)f_25821},
{"f_25786ChickenBridge.scm",(void*)f_25786},
{"f_25797ChickenBridge.scm",(void*)f_25797},
{"f_25801ChickenBridge.scm",(void*)f_25801},
{"f_25793ChickenBridge.scm",(void*)f_25793},
{"f_25675ChickenBridge.scm",(void*)f_25675},
{"f_25679ChickenBridge.scm",(void*)f_25679},
{"f_25697ChickenBridge.scm",(void*)f_25697},
{"f_25515ChickenBridge.scm",(void*)f_25515},
{"f_25523ChickenBridge.scm",(void*)f_25523},
{"f_25533ChickenBridge.scm",(void*)f_25533},
{"f_25571ChickenBridge.scm",(void*)f_25571},
{"f_25574ChickenBridge.scm",(void*)f_25574},
{"f_25577ChickenBridge.scm",(void*)f_25577},
{"f_25652ChickenBridge.scm",(void*)f_25652},
{"f_25662ChickenBridge.scm",(void*)f_25662},
{"f_25580ChickenBridge.scm",(void*)f_25580},
{"f_25583ChickenBridge.scm",(void*)f_25583},
{"f_25586ChickenBridge.scm",(void*)f_25586},
{"f_25606ChickenBridge.scm",(void*)f_25606},
{"f_25616ChickenBridge.scm",(void*)f_25616},
{"f_25619ChickenBridge.scm",(void*)f_25619},
{"f_25622ChickenBridge.scm",(void*)f_25622},
{"f_25589ChickenBridge.scm",(void*)f_25589},
{"f_25592ChickenBridge.scm",(void*)f_25592},
{"f_25509ChickenBridge.scm",(void*)f_25509},
{"f_25503ChickenBridge.scm",(void*)f_25503},
{"f_25497ChickenBridge.scm",(void*)f_25497},
{"f_25426ChickenBridge.scm",(void*)f_25426},
{"f_25467ChickenBridge.scm",(void*)f_25467},
{"f_25471ChickenBridge.scm",(void*)f_25471},
{"f_25475ChickenBridge.scm",(void*)f_25475},
{"f_25479ChickenBridge.scm",(void*)f_25479},
{"f_25483ChickenBridge.scm",(void*)f_25483},
{"f_25487ChickenBridge.scm",(void*)f_25487},
{"f_25491ChickenBridge.scm",(void*)f_25491},
{"f_25495ChickenBridge.scm",(void*)f_25495},
{"f_25428ChickenBridge.scm",(void*)f_25428},
{"f_25434ChickenBridge.scm",(void*)f_25434},
{"f_25456ChickenBridge.scm",(void*)f_25456},
{"f_25445ChickenBridge.scm",(void*)f_25445},
{"f_25275ChickenBridge.scm",(void*)f_25275},
{"f_25290ChickenBridge.scm",(void*)f_25290},
{"f_25303ChickenBridge.scm",(void*)f_25303},
{"f_25263ChickenBridge.scm",(void*)f_25263},
{"f_25251ChickenBridge.scm",(void*)f_25251},
{"f_25239ChickenBridge.scm",(void*)f_25239},
{"f_25233ChickenBridge.scm",(void*)f_25233},
{"f_25227ChickenBridge.scm",(void*)f_25227},
{"f_25215ChickenBridge.scm",(void*)f_25215},
{"f_25203ChickenBridge.scm",(void*)f_25203},
{"f_25191ChickenBridge.scm",(void*)f_25191},
{"f_25179ChickenBridge.scm",(void*)f_25179},
{"f_25173ChickenBridge.scm",(void*)f_25173},
{"f_25137ChickenBridge.scm",(void*)f_25137},
{"f_25131ChickenBridge.scm",(void*)f_25131},
{"f_25084ChickenBridge.scm",(void*)f_25084},
{"f_25088ChickenBridge.scm",(void*)f_25088},
{"f_25104ChickenBridge.scm",(void*)f_25104},
{"f_25113ChickenBridge.scm",(void*)f_25113},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_25075ChickenBridge.scm",(void*)f_25075},
{"f_25079ChickenBridge.scm",(void*)f_25079},
{"f_24922ChickenBridge.scm",(void*)f_24922},
{"f_25049ChickenBridge.scm",(void*)f_25049},
{"f_25062ChickenBridge.scm",(void*)f_25062},
{"f_25044ChickenBridge.scm",(void*)f_25044},
{"f_24925ChickenBridge.scm",(void*)f_24925},
{"f_25041ChickenBridge.scm",(void*)f_25041},
{"f_25025ChickenBridge.scm",(void*)f_25025},
{"f_24953ChickenBridge.scm",(void*)f_24953},
{"f_24961ChickenBridge.scm",(void*)f_24961},
{"f_24971ChickenBridge.scm",(void*)f_24971},
{"f_24974ChickenBridge.scm",(void*)f_24974},
{"f_24956ChickenBridge.scm",(void*)f_24956},
{"f_24745ChickenBridge.scm",(void*)f_24745},
{"f_24749ChickenBridge.scm",(void*)f_24749},
{"f_24754ChickenBridge.scm",(void*)f_24754},
{"f_24757ChickenBridge.scm",(void*)f_24757},
{"f_22569ChickenBridge.scm",(void*)f_22569},
{"f_22582ChickenBridge.scm",(void*)f_22582},
{"f_22589ChickenBridge.scm",(void*)f_22589},
{"f_22596ChickenBridge.scm",(void*)f_22596},
{"f_22575ChickenBridge.scm",(void*)f_22575},
{"f_24761ChickenBridge.scm",(void*)f_24761},
{"f_24798ChickenBridge.scm",(void*)f_24798},
{"f_24891ChickenBridge.scm",(void*)f_24891},
{"f_24901ChickenBridge.scm",(void*)f_24901},
{"f_24804ChickenBridge.scm",(void*)f_24804},
{"f_24861ChickenBridge.scm",(void*)f_24861},
{"f_24871ChickenBridge.scm",(void*)f_24871},
{"f_24812ChickenBridge.scm",(void*)f_24812},
{"f_24826ChickenBridge.scm",(void*)f_24826},
{"f_24830ChickenBridge.scm",(void*)f_24830},
{"f_24834ChickenBridge.scm",(void*)f_24834},
{"f_24838ChickenBridge.scm",(void*)f_24838},
{"f_24845ChickenBridge.scm",(void*)f_24845},
{"f_24822ChickenBridge.scm",(void*)f_24822},
{"f_24815ChickenBridge.scm",(void*)f_24815},
{"f_24764ChickenBridge.scm",(void*)f_24764},
{"f_23696ChickenBridge.scm",(void*)f_23696},
{"f_23709ChickenBridge.scm",(void*)f_23709},
{"f_23759ChickenBridge.scm",(void*)f_23759},
{"f_23856ChickenBridge.scm",(void*)f_23856},
{"f_23924ChickenBridge.scm",(void*)f_23924},
{"f_24181ChickenBridge.scm",(void*)f_24181},
{"f_23931ChickenBridge.scm",(void*)f_23931},
{"f_24169ChickenBridge.scm",(void*)f_24169},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_24126ChickenBridge.scm",(void*)f_24126},
{"f_24150ChickenBridge.scm",(void*)f_24150},
{"f_24146ChickenBridge.scm",(void*)f_24146},
{"f_24134ChickenBridge.scm",(void*)f_24134},
{"f_23934ChickenBridge.scm",(void*)f_23934},
{"f_24096ChickenBridge.scm",(void*)f_24096},
{"f_24100ChickenBridge.scm",(void*)f_24100},
{"f_23937ChickenBridge.scm",(void*)f_23937},
{"f_24073ChickenBridge.scm",(void*)f_24073},
{"f_24077ChickenBridge.scm",(void*)f_24077},
{"f_23940ChickenBridge.scm",(void*)f_23940},
{"f_24050ChickenBridge.scm",(void*)f_24050},
{"f_24054ChickenBridge.scm",(void*)f_24054},
{"f_23943ChickenBridge.scm",(void*)f_23943},
{"f_23975ChickenBridge.scm",(void*)f_23975},
{"f_23993ChickenBridge.scm",(void*)f_23993},
{"f_24011ChickenBridge.scm",(void*)f_24011},
{"f_24029ChickenBridge.scm",(void*)f_24029},
{"f_23946ChickenBridge.scm",(void*)f_23946},
{"f_23950ChickenBridge.scm",(void*)f_23950},
{"f_23860ChickenBridge.scm",(void*)f_23860},
{"f_23864ChickenBridge.scm",(void*)f_23864},
{"f_23868ChickenBridge.scm",(void*)f_23868},
{"f_23763ChickenBridge.scm",(void*)f_23763},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23771ChickenBridge.scm",(void*)f_23771},
{"f_23790ChickenBridge.scm",(void*)f_23790},
{"f_23794ChickenBridge.scm",(void*)f_23794},
{"f_23774ChickenBridge.scm",(void*)f_23774},
{"f_23778ChickenBridge.scm",(void*)f_23778},
{"f_23713ChickenBridge.scm",(void*)f_23713},
{"f_23717ChickenBridge.scm",(void*)f_23717},
{"f_23721ChickenBridge.scm",(void*)f_23721},
{"f_23703ChickenBridge.scm",(void*)f_23703},
{"f_23518ChickenBridge.scm",(void*)f_23518},
{"f_23530ChickenBridge.scm",(void*)f_23530},
{"f_23549ChickenBridge.scm",(void*)f_23549},
{"f_23567ChickenBridge.scm",(void*)f_23567},
{"f_23599ChickenBridge.scm",(void*)f_23599},
{"f_23602ChickenBridge.scm",(void*)f_23602},
{"f_23595ChickenBridge.scm",(void*)f_23595},
{"f_23581ChickenBridge.scm",(void*)f_23581},
{"f_23552ChickenBridge.scm",(void*)f_23552},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23504ChickenBridge.scm",(void*)f_23504},
{"f_23507ChickenBridge.scm",(void*)f_23507},
{"f_23513ChickenBridge.scm",(void*)f_23513},
{"f_23432ChickenBridge.scm",(void*)f_23432},
{"f_23441ChickenBridge.scm",(void*)f_23441},
{"f_23464ChickenBridge.scm",(void*)f_23464},
{"f_23454ChickenBridge.scm",(void*)f_23454},
{"f_23388ChickenBridge.scm",(void*)f_23388},
{"f_23376ChickenBridge.scm",(void*)f_23376},
{"f_23274ChickenBridge.scm",(void*)f_23274},
{"f_23226ChickenBridge.scm",(void*)f_23226},
{"f_22607ChickenBridge.scm",(void*)f_22607},
{"f_22611ChickenBridge.scm",(void*)f_22611},
{"f_22614ChickenBridge.scm",(void*)f_22614},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_23036ChickenBridge.scm",(void*)f_23036},
{"f_23032ChickenBridge.scm",(void*)f_23032},
{"f_22617ChickenBridge.scm",(void*)f_22617},
{"f_22740ChickenBridge.scm",(void*)f_22740},
{"f_21973ChickenBridge.scm",(void*)f_21973},
{"f_22746ChickenBridge.scm",(void*)f_22746},
{"f_21989ChickenBridge.scm",(void*)f_21989},
{"f_22834ChickenBridge.scm",(void*)f_22834},
{"f_22904ChickenBridge.scm",(void*)f_22904},
{"f_22005ChickenBridge.scm",(void*)f_22005},
{"f_22907ChickenBridge.scm",(void*)f_22907},
{"f_22037ChickenBridge.scm",(void*)f_22037},
{"f_22985ChickenBridge.scm",(void*)f_22985},
{"f_23011ChickenBridge.scm",(void*)f_23011},
{"f_23005ChickenBridge.scm",(void*)f_23005},
{"f_22994ChickenBridge.scm",(void*)f_22994},
{"f_22936ChickenBridge.scm",(void*)f_22936},
{"f_22946ChickenBridge.scm",(void*)f_22946},
{"f_22972ChickenBridge.scm",(void*)f_22972},
{"f_22966ChickenBridge.scm",(void*)f_22966},
{"f_22949ChickenBridge.scm",(void*)f_22949},
{"f_22959ChickenBridge.scm",(void*)f_22959},
{"f_22952ChickenBridge.scm",(void*)f_22952},
{"f_22913ChickenBridge.scm",(void*)f_22913},
{"f_22922ChickenBridge.scm",(void*)f_22922},
{"f_22916ChickenBridge.scm",(void*)f_22916},
{"f_22840ChickenBridge.scm",(void*)f_22840},
{"f_22858ChickenBridge.scm",(void*)f_22858},
{"f_22891ChickenBridge.scm",(void*)f_22891},
{"f_22877ChickenBridge.scm",(void*)f_22877},
{"f_22885ChickenBridge.scm",(void*)f_22885},
{"f_22868ChickenBridge.scm",(void*)f_22868},
{"f_22843ChickenBridge.scm",(void*)f_22843},
{"f_22755ChickenBridge.scm",(void*)f_22755},
{"f_22777ChickenBridge.scm",(void*)f_22777},
{"f_22824ChickenBridge.scm",(void*)f_22824},
{"f_22810ChickenBridge.scm",(void*)f_22810},
{"f_22818ChickenBridge.scm",(void*)f_22818},
{"f_22790ChickenBridge.scm",(void*)f_22790},
{"f_22793ChickenBridge.scm",(void*)f_22793},
{"f_22758ChickenBridge.scm",(void*)f_22758},
{"f_22775ChickenBridge.scm",(void*)f_22775},
{"f_22761ChickenBridge.scm",(void*)f_22761},
{"f_22626ChickenBridge.scm",(void*)f_22626},
{"f_22632ChickenBridge.scm",(void*)f_22632},
{"f_22690ChickenBridge.scm",(void*)f_22690},
{"f_22693ChickenBridge.scm",(void*)f_22693},
{"f_22714ChickenBridge.scm",(void*)f_22714},
{"f_22725ChickenBridge.scm",(void*)f_22725},
{"f_22704ChickenBridge.scm",(void*)f_22704},
{"f_22638ChickenBridge.scm",(void*)f_22638},
{"f_22648ChickenBridge.scm",(void*)f_22648},
{"f_22684ChickenBridge.scm",(void*)f_22684},
{"f_22654ChickenBridge.scm",(void*)f_22654},
{"f_22669ChickenBridge.scm",(void*)f_22669},
{"f_22673ChickenBridge.scm",(void*)f_22673},
{"f_22677ChickenBridge.scm",(void*)f_22677},
{"f_22661ChickenBridge.scm",(void*)f_22661},
{"f_22503ChickenBridge.scm",(void*)f_22503},
{"f_22505ChickenBridge.scm",(void*)f_22505},
{"f_22553ChickenBridge.scm",(void*)f_22553},
{"f_22509ChickenBridge.scm",(void*)f_22509},
{"f_22512ChickenBridge.scm",(void*)f_22512},
{"f_22517ChickenBridge.scm",(void*)f_22517},
{"f_22538ChickenBridge.scm",(void*)f_22538},
{"f_22495ChickenBridge.scm",(void*)f_22495},
{"f_22497ChickenBridge.scm",(void*)f_22497},
{"f_22287ChickenBridge.scm",(void*)f_22287},
{"f_22304ChickenBridge.scm",(void*)f_22304},
{"f_22308ChickenBridge.scm",(void*)f_22308},
{"f_22254ChickenBridge.scm",(void*)f_22254},
{"f_22261ChickenBridge.scm",(void*)f_22261},
{"f_22205ChickenBridge.scm",(void*)f_22205},
{"f_22212ChickenBridge.scm",(void*)f_22212},
{"f_22270ChickenBridge.scm",(void*)f_22270},
{"f_22493ChickenBridge.scm",(void*)f_22493},
{"f_22470ChickenBridge.scm",(void*)f_22470},
{"f_22486ChickenBridge.scm",(void*)f_22486},
{"f_22332ChickenBridge.scm",(void*)f_22332},
{"f_22335ChickenBridge.scm",(void*)f_22335},
{"f_22359ChickenBridge.scm",(void*)f_22359},
{"f_22416ChickenBridge.scm",(void*)f_22416},
{"f_22422ChickenBridge.scm",(void*)f_22422},
{"f_22431ChickenBridge.scm",(void*)f_22431},
{"f_22440ChickenBridge.scm",(void*)f_22440},
{"f_22449ChickenBridge.scm",(void*)f_22449},
{"f_22458ChickenBridge.scm",(void*)f_22458},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22365ChickenBridge.scm",(void*)f_22365},
{"f_22371ChickenBridge.scm",(void*)f_22371},
{"f_22377ChickenBridge.scm",(void*)f_22377},
{"f_22383ChickenBridge.scm",(void*)f_22383},
{"f_22389ChickenBridge.scm",(void*)f_22389},
{"f_22395ChickenBridge.scm",(void*)f_22395},
{"f_22236ChickenBridge.scm",(void*)f_22236},
{"f_22243ChickenBridge.scm",(void*)f_22243},
{"f_22226ChickenBridge.scm",(void*)f_22226},
{"f_22214ChickenBridge.scm",(void*)f_22214},
{"f_22182ChickenBridge.scm",(void*)f_22182},
{"f_22189ChickenBridge.scm",(void*)f_22189},
{"f_22196ChickenBridge.scm",(void*)f_22196},
{"f_22166ChickenBridge.scm",(void*)f_22166},
{"f_22173ChickenBridge.scm",(void*)f_22173},
{"f_22180ChickenBridge.scm",(void*)f_22180},
{"f_22154ChickenBridge.scm",(void*)f_22154},
{"f_22136ChickenBridge.scm",(void*)f_22136},
{"f_22118ChickenBridge.scm",(void*)f_22118},
{"f_22103ChickenBridge.scm",(void*)f_22103},
{"f_22097ChickenBridge.scm",(void*)f_22097},
{"f_22085ChickenBridge.scm",(void*)f_22085},
{"f_22067ChickenBridge.scm",(void*)f_22067},
{"f_22046ChickenBridge.scm",(void*)f_22046},
{"f_22014ChickenBridge.scm",(void*)f_22014},
{"f_22021ChickenBridge.scm",(void*)f_22021},
{"f_21956ChickenBridge.scm",(void*)f_21956},
{"f_21964ChickenBridge.scm",(void*)f_21964},
{"f_21946ChickenBridge.scm",(void*)f_21946},
{"f_21954ChickenBridge.scm",(void*)f_21954},
{"f_21940ChickenBridge.scm",(void*)f_21940},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21925ChickenBridge.scm",(void*)f_21925},
{"f_21904ChickenBridge.scm",(void*)f_21904},
{"f_21817ChickenBridge.scm",(void*)f_21817},
{"f_21796ChickenBridge.scm",(void*)f_21796},
{"f_21786ChickenBridge.scm",(void*)f_21786},
{"f_21774ChickenBridge.scm",(void*)f_21774},
{"f_21745ChickenBridge.scm",(void*)f_21745},
{"f_21733ChickenBridge.scm",(void*)f_21733},
{"f_21715ChickenBridge.scm",(void*)f_21715},
{"f_21697ChickenBridge.scm",(void*)f_21697},
{"f_21676ChickenBridge.scm",(void*)f_21676},
{"f_20654ChickenBridge.scm",(void*)f_20654},
{"f_21653ChickenBridge.scm",(void*)f_21653},
{"f_21668ChickenBridge.scm",(void*)f_21668},
{"f_21660ChickenBridge.scm",(void*)f_21660},
{"f_21624ChickenBridge.scm",(void*)f_21624},
{"f_21628ChickenBridge.scm",(void*)f_21628},
{"f_21589ChickenBridge.scm",(void*)f_21589},
{"f_21593ChickenBridge.scm",(void*)f_21593},
{"f_20664ChickenBridge.scm",(void*)f_20664},
{"f_21553ChickenBridge.scm",(void*)f_21553},
{"f_21568ChickenBridge.scm",(void*)f_21568},
{"f_21560ChickenBridge.scm",(void*)f_21560},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21528ChickenBridge.scm",(void*)f_21528},
{"f_21489ChickenBridge.scm",(void*)f_21489},
{"f_21493ChickenBridge.scm",(void*)f_21493},
{"f_20667ChickenBridge.scm",(void*)f_20667},
{"f_20670ChickenBridge.scm",(void*)f_20670},
{"f_20675ChickenBridge.scm",(void*)f_20675},
{"f_21382ChickenBridge.scm",(void*)f_21382},
{"f_21405ChickenBridge.scm",(void*)f_21405},
{"f_21458ChickenBridge.scm",(void*)f_21458},
{"f_21440ChickenBridge.scm",(void*)f_21440},
{"f_21433ChickenBridge.scm",(void*)f_21433},
{"f_21415ChickenBridge.scm",(void*)f_21415},
{"f_21392ChickenBridge.scm",(void*)f_21392},
{"f_20869ChickenBridge.scm",(void*)f_20869},
{"f_21344ChickenBridge.scm",(void*)f_21344},
{"f_21366ChickenBridge.scm",(void*)f_21366},
{"f_21350ChickenBridge.scm",(void*)f_21350},
{"f_21358ChickenBridge.scm",(void*)f_21358},
{"f_21362ChickenBridge.scm",(void*)f_21362},
{"f_21348ChickenBridge.scm",(void*)f_21348},
{"f_21338ChickenBridge.scm",(void*)f_21338},
{"f_20872ChickenBridge.scm",(void*)f_20872},
{"f_21215ChickenBridge.scm",(void*)f_21215},
{"f_21239ChickenBridge.scm",(void*)f_21239},
{"f_21301ChickenBridge.scm",(void*)f_21301},
{"f_21242ChickenBridge.scm",(void*)f_21242},
{"f_21258ChickenBridge.scm",(void*)f_21258},
{"f_21283ChickenBridge.scm",(void*)f_21283},
{"f_21249ChickenBridge.scm",(void*)f_21249},
{"f_21226ChickenBridge.scm",(void*)f_21226},
{"f_20875ChickenBridge.scm",(void*)f_20875},
{"f_21201ChickenBridge.scm",(void*)f_21201},
{"f_20879ChickenBridge.scm",(void*)f_20879},
{"f_20923ChickenBridge.scm",(void*)f_20923},
{"f_20926ChickenBridge.scm",(void*)f_20926},
{"f_21182ChickenBridge.scm",(void*)f_21182},
{"f_21192ChickenBridge.scm",(void*)f_21192},
{"f_20929ChickenBridge.scm",(void*)f_20929},
{"f_21120ChickenBridge.scm",(void*)f_21120},
{"f_21130ChickenBridge.scm",(void*)f_21130},
{"f_21133ChickenBridge.scm",(void*)f_21133},
{"f_21153ChickenBridge.scm",(void*)f_21153},
{"f_21155ChickenBridge.scm",(void*)f_21155},
{"f_21165ChickenBridge.scm",(void*)f_21165},
{"f_21139ChickenBridge.scm",(void*)f_21139},
{"f_21142ChickenBridge.scm",(void*)f_21142},
{"f_20932ChickenBridge.scm",(void*)f_20932},
{"f_20940ChickenBridge.scm",(void*)f_20940},
{"f_20953ChickenBridge.scm",(void*)f_20953},
{"f_20827ChickenBridge.scm",(void*)f_20827},
{"f_20836ChickenBridge.scm",(void*)f_20836},
{"f_20858ChickenBridge.scm",(void*)f_20858},
{"f_20847ChickenBridge.scm",(void*)f_20847},
{"f_20956ChickenBridge.scm",(void*)f_20956},
{"f_21091ChickenBridge.scm",(void*)f_21091},
{"f_21093ChickenBridge.scm",(void*)f_21093},
{"f_21103ChickenBridge.scm",(void*)f_21103},
{"f_20962ChickenBridge.scm",(void*)f_20962},
{"f_21064ChickenBridge.scm",(void*)f_21064},
{"f_21066ChickenBridge.scm",(void*)f_21066},
{"f_21076ChickenBridge.scm",(void*)f_21076},
{"f_20965ChickenBridge.scm",(void*)f_20965},
{"f_20977ChickenBridge.scm",(void*)f_20977},
{"f_21003ChickenBridge.scm",(void*)f_21003},
{"f_21009ChickenBridge.scm",(void*)f_21009},
{"f_21015ChickenBridge.scm",(void*)f_21015},
{"f_21025ChickenBridge.scm",(void*)f_21025},
{"f_21027ChickenBridge.scm",(void*)f_21027},
{"f_21037ChickenBridge.scm",(void*)f_21037},
{"f_21018ChickenBridge.scm",(void*)f_21018},
{"f_20990ChickenBridge.scm",(void*)f_20990},
{"f_20968ChickenBridge.scm",(void*)f_20968},
{"f_20935ChickenBridge.scm",(void*)f_20935},
{"f_20882ChickenBridge.scm",(void*)f_20882},
{"f_20905ChickenBridge.scm",(void*)f_20905},
{"f_20894ChickenBridge.scm",(void*)f_20894},
{"f_20759ChickenBridge.scm",(void*)f_20759},
{"f_20807ChickenBridge.scm",(void*)f_20807},
{"f_20769ChickenBridge.scm",(void*)f_20769},
{"f_20797ChickenBridge.scm",(void*)f_20797},
{"f_20772ChickenBridge.scm",(void*)f_20772},
{"f_20677ChickenBridge.scm",(void*)f_20677},
{"f_20749ChickenBridge.scm",(void*)f_20749},
{"f_20681ChickenBridge.scm",(void*)f_20681},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20731ChickenBridge.scm",(void*)f_20731},
{"f_20560ChickenBridge.scm",(void*)f_20560},
{"f_20564ChickenBridge.scm",(void*)f_20564},
{"f_20593ChickenBridge.scm",(void*)f_20593},
{"f_20598ChickenBridge.scm",(void*)f_20598},
{"f_20623ChickenBridge.scm",(void*)f_20623},
{"f_20608ChickenBridge.scm",(void*)f_20608},
{"f_20042ChickenBridge.scm",(void*)f_20042},
{"f_20313ChickenBridge.scm",(void*)f_20313},
{"f_20317ChickenBridge.scm",(void*)f_20317},
{"f_20322ChickenBridge.scm",(void*)f_20322},
{"f_20528ChickenBridge.scm",(void*)f_20528},
{"f_20543ChickenBridge.scm",(void*)f_20543},
{"f_20535ChickenBridge.scm",(void*)f_20535},
{"f_20499ChickenBridge.scm",(void*)f_20499},
{"f_20503ChickenBridge.scm",(void*)f_20503},
{"f_20464ChickenBridge.scm",(void*)f_20464},
{"f_20468ChickenBridge.scm",(void*)f_20468},
{"f_20326ChickenBridge.scm",(void*)f_20326},
{"f_20428ChickenBridge.scm",(void*)f_20428},
{"f_20443ChickenBridge.scm",(void*)f_20443},
{"f_20435ChickenBridge.scm",(void*)f_20435},
{"f_20399ChickenBridge.scm",(void*)f_20399},
{"f_20403ChickenBridge.scm",(void*)f_20403},
{"f_20364ChickenBridge.scm",(void*)f_20364},
{"f_20368ChickenBridge.scm",(void*)f_20368},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20332ChickenBridge.scm",(void*)f_20332},
{"f_20335ChickenBridge.scm",(void*)f_20335},
{"f_20304ChickenBridge.scm",(void*)f_20304},
{"f_20046ChickenBridge.scm",(void*)f_20046},
{"f_20273ChickenBridge.scm",(void*)f_20273},
{"f_20288ChickenBridge.scm",(void*)f_20288},
{"f_20280ChickenBridge.scm",(void*)f_20280},
{"f_20244ChickenBridge.scm",(void*)f_20244},
{"f_20248ChickenBridge.scm",(void*)f_20248},
{"f_20209ChickenBridge.scm",(void*)f_20209},
{"f_20213ChickenBridge.scm",(void*)f_20213},
{"f_20049ChickenBridge.scm",(void*)f_20049},
{"f_20173ChickenBridge.scm",(void*)f_20173},
{"f_20188ChickenBridge.scm",(void*)f_20188},
{"f_20180ChickenBridge.scm",(void*)f_20180},
{"f_20144ChickenBridge.scm",(void*)f_20144},
{"f_20148ChickenBridge.scm",(void*)f_20148},
{"f_20109ChickenBridge.scm",(void*)f_20109},
{"f_20113ChickenBridge.scm",(void*)f_20113},
{"f_20052ChickenBridge.scm",(void*)f_20052},
{"f_20055ChickenBridge.scm",(void*)f_20055},
{"f_20058ChickenBridge.scm",(void*)f_20058},
{"f_20070ChickenBridge.scm",(void*)f_20070},
{"f_20088ChickenBridge.scm",(void*)f_20088},
{"f_20076ChickenBridge.scm",(void*)f_20076},
{"f_20064ChickenBridge.scm",(void*)f_20064},
{"f_19979ChickenBridge.scm",(void*)f_19979},
{"f_19639ChickenBridge.scm",(void*)f_19639},
{"f_19821ChickenBridge.scm",(void*)f_19821},
{"f_19825ChickenBridge.scm",(void*)f_19825},
{"f_19827ChickenBridge.scm",(void*)f_19827},
{"f_19752ChickenBridge.scm",(void*)f_19752},
{"f_19762ChickenBridge.scm",(void*)f_19762},
{"f_19769ChickenBridge.scm",(void*)f_19769},
{"f_19837ChickenBridge.scm",(void*)f_19837},
{"f_19840ChickenBridge.scm",(void*)f_19840},
{"f_19844ChickenBridge.scm",(void*)f_19844},
{"f_19864ChickenBridge.scm",(void*)f_19864},
{"f_19880ChickenBridge.scm",(void*)f_19880},
{"f_19847ChickenBridge.scm",(void*)f_19847},
{"f_19642ChickenBridge.scm",(void*)f_19642},
{"f_19654ChickenBridge.scm",(void*)f_19654},
{"f_19690ChickenBridge.scm",(void*)f_19690},
{"f_19710ChickenBridge.scm",(void*)f_19710},
{"f_19715ChickenBridge.scm",(void*)f_19715},
{"f_19152ChickenBridge.scm",(void*)f_19152},
{"f_19079ChickenBridge.scm",(void*)f_19079},
{"f_18924ChickenBridge.scm",(void*)f_18924},
{"f_18930ChickenBridge.scm",(void*)f_18930},
{"f_19015ChickenBridge.scm",(void*)f_19015},
{"f_18942ChickenBridge.scm",(void*)f_18942},
{"f_18958ChickenBridge.scm",(void*)f_18958},
{"f_18962ChickenBridge.scm",(void*)f_18962},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_18945ChickenBridge.scm",(void*)f_18945},
{"f_18956ChickenBridge.scm",(void*)f_18956},
{"f_19096ChickenBridge.scm",(void*)f_19096},
{"f_19633ChickenBridge.scm",(void*)f_19633},
{"f_19156ChickenBridge.scm",(void*)f_19156},
{"f_19602ChickenBridge.scm",(void*)f_19602},
{"f_19617ChickenBridge.scm",(void*)f_19617},
{"f_19609ChickenBridge.scm",(void*)f_19609},
{"f_19573ChickenBridge.scm",(void*)f_19573},
{"f_19577ChickenBridge.scm",(void*)f_19577},
{"f_19538ChickenBridge.scm",(void*)f_19538},
{"f_19542ChickenBridge.scm",(void*)f_19542},
{"f_19503ChickenBridge.scm",(void*)f_19503},
{"f_19507ChickenBridge.scm",(void*)f_19507},
{"f_19159ChickenBridge.scm",(void*)f_19159},
{"f_19467ChickenBridge.scm",(void*)f_19467},
{"f_19482ChickenBridge.scm",(void*)f_19482},
{"f_19474ChickenBridge.scm",(void*)f_19474},
{"f_19438ChickenBridge.scm",(void*)f_19438},
{"f_19442ChickenBridge.scm",(void*)f_19442},
{"f_19403ChickenBridge.scm",(void*)f_19403},
{"f_19407ChickenBridge.scm",(void*)f_19407},
{"f_19368ChickenBridge.scm",(void*)f_19368},
{"f_19372ChickenBridge.scm",(void*)f_19372},
{"f_19162ChickenBridge.scm",(void*)f_19162},
{"f_19332ChickenBridge.scm",(void*)f_19332},
{"f_19347ChickenBridge.scm",(void*)f_19347},
{"f_19339ChickenBridge.scm",(void*)f_19339},
{"f_19303ChickenBridge.scm",(void*)f_19303},
{"f_19307ChickenBridge.scm",(void*)f_19307},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19272ChickenBridge.scm",(void*)f_19272},
{"f_19233ChickenBridge.scm",(void*)f_19233},
{"f_19237ChickenBridge.scm",(void*)f_19237},
{"f_19165ChickenBridge.scm",(void*)f_19165},
{"f_19168ChickenBridge.scm",(void*)f_19168},
{"f_19171ChickenBridge.scm",(void*)f_19171},
{"f_19204ChickenBridge.scm",(void*)f_19204},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19177ChickenBridge.scm",(void*)f_19177},
{"f_19190ChickenBridge.scm",(void*)f_19190},
{"f_19180ChickenBridge.scm",(void*)f_19180},
{"f_19183ChickenBridge.scm",(void*)f_19183},
{"f_18719ChickenBridge.scm",(void*)f_18719},
{"f_18723ChickenBridge.scm",(void*)f_18723},
{"f_18726ChickenBridge.scm",(void*)f_18726},
{"f_18729ChickenBridge.scm",(void*)f_18729},
{"f_18898ChickenBridge.scm",(void*)f_18898},
{"f_18911ChickenBridge.scm",(void*)f_18911},
{"f_18915ChickenBridge.scm",(void*)f_18915},
{"f_18735ChickenBridge.scm",(void*)f_18735},
{"f_18891ChickenBridge.scm",(void*)f_18891},
{"f_18872ChickenBridge.scm",(void*)f_18872},
{"f_18879ChickenBridge.scm",(void*)f_18879},
{"f_18883ChickenBridge.scm",(void*)f_18883},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_18831ChickenBridge.scm",(void*)f_18831},
{"f_18833ChickenBridge.scm",(void*)f_18833},
{"f_18855ChickenBridge.scm",(void*)f_18855},
{"f_18862ChickenBridge.scm",(void*)f_18862},
{"f_18866ChickenBridge.scm",(void*)f_18866},
{"f_18852ChickenBridge.scm",(void*)f_18852},
{"f_18848ChickenBridge.scm",(void*)f_18848},
{"f_18789ChickenBridge.scm",(void*)f_18789},
{"f_18806ChickenBridge.scm",(void*)f_18806},
{"f_18816ChickenBridge.scm",(void*)f_18816},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18751ChickenBridge.scm",(void*)f_18751},
{"f_18759ChickenBridge.scm",(void*)f_18759},
{"f_18761ChickenBridge.scm",(void*)f_18761},
{"f_18782ChickenBridge.scm",(void*)f_18782},
{"f_18607ChickenBridge.scm",(void*)f_18607},
{"f_18717ChickenBridge.scm",(void*)f_18717},
{"f_18676ChickenBridge.scm",(void*)f_18676},
{"f_18709ChickenBridge.scm",(void*)f_18709},
{"f_18705ChickenBridge.scm",(void*)f_18705},
{"f_18690ChickenBridge.scm",(void*)f_18690},
{"f_18614ChickenBridge.scm",(void*)f_18614},
{"f_18622ChickenBridge.scm",(void*)f_18622},
{"f_18667ChickenBridge.scm",(void*)f_18667},
{"f_18655ChickenBridge.scm",(void*)f_18655},
{"f_18639ChickenBridge.scm",(void*)f_18639},
{"f_17840ChickenBridge.scm",(void*)f_17840},
{"f_18157ChickenBridge.scm",(void*)f_18157},
{"f_18164ChickenBridge.scm",(void*)f_18164},
{"f_18569ChickenBridge.scm",(void*)f_18569},
{"f_18584ChickenBridge.scm",(void*)f_18584},
{"f_18576ChickenBridge.scm",(void*)f_18576},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18544ChickenBridge.scm",(void*)f_18544},
{"f_18505ChickenBridge.scm",(void*)f_18505},
{"f_18509ChickenBridge.scm",(void*)f_18509},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18474ChickenBridge.scm",(void*)f_18474},
{"f_18167ChickenBridge.scm",(void*)f_18167},
{"f_18434ChickenBridge.scm",(void*)f_18434},
{"f_18449ChickenBridge.scm",(void*)f_18449},
{"f_18441ChickenBridge.scm",(void*)f_18441},
{"f_18405ChickenBridge.scm",(void*)f_18405},
{"f_18409ChickenBridge.scm",(void*)f_18409},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18339ChickenBridge.scm",(void*)f_18339},
{"f_18170ChickenBridge.scm",(void*)f_18170},
{"f_18299ChickenBridge.scm",(void*)f_18299},
{"f_18314ChickenBridge.scm",(void*)f_18314},
{"f_18306ChickenBridge.scm",(void*)f_18306},
{"f_18270ChickenBridge.scm",(void*)f_18270},
{"f_18274ChickenBridge.scm",(void*)f_18274},
{"f_18235ChickenBridge.scm",(void*)f_18235},
{"f_18239ChickenBridge.scm",(void*)f_18239},
{"f_18200ChickenBridge.scm",(void*)f_18200},
{"f_18204ChickenBridge.scm",(void*)f_18204},
{"f_18173ChickenBridge.scm",(void*)f_18173},
{"f_18176ChickenBridge.scm",(void*)f_18176},
{"f_17844ChickenBridge.scm",(void*)f_17844},
{"f_17847ChickenBridge.scm",(void*)f_17847},
{"f_18121ChickenBridge.scm",(void*)f_18121},
{"f_18125ChickenBridge.scm",(void*)f_18125},
{"f_18128ChickenBridge.scm",(void*)f_18128},
{"f_18131ChickenBridge.scm",(void*)f_18131},
{"f_18134ChickenBridge.scm",(void*)f_18134},
{"f_18147ChickenBridge.scm",(void*)f_18147},
{"f_18137ChickenBridge.scm",(void*)f_18137},
{"f_17853ChickenBridge.scm",(void*)f_17853},
{"f_17860ChickenBridge.scm",(void*)f_17860},
{"f_18091ChickenBridge.scm",(void*)f_18091},
{"f_18106ChickenBridge.scm",(void*)f_18106},
{"f_18098ChickenBridge.scm",(void*)f_18098},
{"f_18062ChickenBridge.scm",(void*)f_18062},
{"f_18066ChickenBridge.scm",(void*)f_18066},
{"f_18027ChickenBridge.scm",(void*)f_18027},
{"f_18031ChickenBridge.scm",(void*)f_18031},
{"f_17863ChickenBridge.scm",(void*)f_17863},
{"f_17991ChickenBridge.scm",(void*)f_17991},
{"f_18006ChickenBridge.scm",(void*)f_18006},
{"f_17998ChickenBridge.scm",(void*)f_17998},
{"f_17962ChickenBridge.scm",(void*)f_17962},
{"f_17966ChickenBridge.scm",(void*)f_17966},
{"f_17927ChickenBridge.scm",(void*)f_17927},
{"f_17931ChickenBridge.scm",(void*)f_17931},
{"f_17866ChickenBridge.scm",(void*)f_17866},
{"f_17869ChickenBridge.scm",(void*)f_17869},
{"f_17884ChickenBridge.scm",(void*)f_17884},
{"f_17906ChickenBridge.scm",(void*)f_17906},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_17898ChickenBridge.scm",(void*)f_17898},
{"f_17872ChickenBridge.scm",(void*)f_17872},
{"f_17875ChickenBridge.scm",(void*)f_17875},
{"f_17757ChickenBridge.scm",(void*)f_17757},
{"f_17748ChickenBridge.scm",(void*)f_17748},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_17721ChickenBridge.scm",(void*)f_17721},
{"f_17703ChickenBridge.scm",(void*)f_17703},
{"f_17685ChickenBridge.scm",(void*)f_17685},
{"f_17676ChickenBridge.scm",(void*)f_17676},
{"f_17667ChickenBridge.scm",(void*)f_17667},
{"f_17445ChickenBridge.scm",(void*)f_17445},
{"f_17495ChickenBridge.scm",(void*)f_17495},
{"f_17640ChickenBridge.scm",(void*)f_17640},
{"f_17521ChickenBridge.scm",(void*)f_17521},
{"f_17636ChickenBridge.scm",(void*)f_17636},
{"f_17621ChickenBridge.scm",(void*)f_17621},
{"f_17602ChickenBridge.scm",(void*)f_17602},
{"f_17575ChickenBridge.scm",(void*)f_17575},
{"f_17528ChickenBridge.scm",(void*)f_17528},
{"f_17498ChickenBridge.scm",(void*)f_17498},
{"f_17448ChickenBridge.scm",(void*)f_17448},
{"f_17454ChickenBridge.scm",(void*)f_17454},
{"f_17470ChickenBridge.scm",(void*)f_17470},
{"f_17473ChickenBridge.scm",(void*)f_17473},
{"f_16971ChickenBridge.scm",(void*)f_16971},
{"f_17435ChickenBridge.scm",(void*)f_17435},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_17407ChickenBridge.scm",(void*)f_17407},
{"f_17422ChickenBridge.scm",(void*)f_17422},
{"f_17414ChickenBridge.scm",(void*)f_17414},
{"f_17378ChickenBridge.scm",(void*)f_17378},
{"f_17382ChickenBridge.scm",(void*)f_17382},
{"f_17343ChickenBridge.scm",(void*)f_17343},
{"f_17347ChickenBridge.scm",(void*)f_17347},
{"f_17308ChickenBridge.scm",(void*)f_17308},
{"f_17312ChickenBridge.scm",(void*)f_17312},
{"f_16978ChickenBridge.scm",(void*)f_16978},
{"f_17272ChickenBridge.scm",(void*)f_17272},
{"f_17287ChickenBridge.scm",(void*)f_17287},
{"f_17279ChickenBridge.scm",(void*)f_17279},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17247ChickenBridge.scm",(void*)f_17247},
{"f_17208ChickenBridge.scm",(void*)f_17208},
{"f_17212ChickenBridge.scm",(void*)f_17212},
{"f_17173ChickenBridge.scm",(void*)f_17173},
{"f_17177ChickenBridge.scm",(void*)f_17177},
{"f_16981ChickenBridge.scm",(void*)f_16981},
{"f_17137ChickenBridge.scm",(void*)f_17137},
{"f_17152ChickenBridge.scm",(void*)f_17152},
{"f_17144ChickenBridge.scm",(void*)f_17144},
{"f_17108ChickenBridge.scm",(void*)f_17108},
{"f_17112ChickenBridge.scm",(void*)f_17112},
{"f_17073ChickenBridge.scm",(void*)f_17073},
{"f_17077ChickenBridge.scm",(void*)f_17077},
{"f_17038ChickenBridge.scm",(void*)f_17038},
{"f_17042ChickenBridge.scm",(void*)f_17042},
{"f_16984ChickenBridge.scm",(void*)f_16984},
{"f_16987ChickenBridge.scm",(void*)f_16987},
{"f_16990ChickenBridge.scm",(void*)f_16990},
{"f_17005ChickenBridge.scm",(void*)f_17005},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_16996ChickenBridge.scm",(void*)f_16996},
{"f_16999ChickenBridge.scm",(void*)f_16999},
{"f_16895ChickenBridge.scm",(void*)f_16895},
{"f_16899ChickenBridge.scm",(void*)f_16899},
{"f_16918ChickenBridge.scm",(void*)f_16918},
{"f_16928ChickenBridge.scm",(void*)f_16928},
{"f_16930ChickenBridge.scm",(void*)f_16930},
{"f_16947ChickenBridge.scm",(void*)f_16947},
{"f_16950ChickenBridge.scm",(void*)f_16950},
{"f_16961ChickenBridge.scm",(void*)f_16961},
{"f_16902ChickenBridge.scm",(void*)f_16902},
{"f_16632ChickenBridge.scm",(void*)f_16632},
{"f_16885ChickenBridge.scm",(void*)f_16885},
{"f_16636ChickenBridge.scm",(void*)f_16636},
{"f_16857ChickenBridge.scm",(void*)f_16857},
{"f_16872ChickenBridge.scm",(void*)f_16872},
{"f_16864ChickenBridge.scm",(void*)f_16864},
{"f_16828ChickenBridge.scm",(void*)f_16828},
{"f_16832ChickenBridge.scm",(void*)f_16832},
{"f_16793ChickenBridge.scm",(void*)f_16793},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_16639ChickenBridge.scm",(void*)f_16639},
{"f_16757ChickenBridge.scm",(void*)f_16757},
{"f_16772ChickenBridge.scm",(void*)f_16772},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_16728ChickenBridge.scm",(void*)f_16728},
{"f_16732ChickenBridge.scm",(void*)f_16732},
{"f_16693ChickenBridge.scm",(void*)f_16693},
{"f_16697ChickenBridge.scm",(void*)f_16697},
{"f_16642ChickenBridge.scm",(void*)f_16642},
{"f_16645ChickenBridge.scm",(void*)f_16645},
{"f_16648ChickenBridge.scm",(void*)f_16648},
{"f_16660ChickenBridge.scm",(void*)f_16660},
{"f_16672ChickenBridge.scm",(void*)f_16672},
{"f_16654ChickenBridge.scm",(void*)f_16654},
{"f_16596ChickenBridge.scm",(void*)f_16596},
{"f_16600ChickenBridge.scm",(void*)f_16600},
{"f_16622ChickenBridge.scm",(void*)f_16622},
{"f_16616ChickenBridge.scm",(void*)f_16616},
{"f_16609ChickenBridge.scm",(void*)f_16609},
{"f_16349ChickenBridge.scm",(void*)f_16349},
{"f_16353ChickenBridge.scm",(void*)f_16353},
{"f_16566ChickenBridge.scm",(void*)f_16566},
{"f_16581ChickenBridge.scm",(void*)f_16581},
{"f_16573ChickenBridge.scm",(void*)f_16573},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16541ChickenBridge.scm",(void*)f_16541},
{"f_16502ChickenBridge.scm",(void*)f_16502},
{"f_16506ChickenBridge.scm",(void*)f_16506},
{"f_16356ChickenBridge.scm",(void*)f_16356},
{"f_16466ChickenBridge.scm",(void*)f_16466},
{"f_16481ChickenBridge.scm",(void*)f_16481},
{"f_16473ChickenBridge.scm",(void*)f_16473},
{"f_16437ChickenBridge.scm",(void*)f_16437},
{"f_16441ChickenBridge.scm",(void*)f_16441},
{"f_16402ChickenBridge.scm",(void*)f_16402},
{"f_16406ChickenBridge.scm",(void*)f_16406},
{"f_16359ChickenBridge.scm",(void*)f_16359},
{"f_16362ChickenBridge.scm",(void*)f_16362},
{"f_16365ChickenBridge.scm",(void*)f_16365},
{"f_16373ChickenBridge.scm",(void*)f_16373},
{"f_16381ChickenBridge.scm",(void*)f_16381},
{"f_16371ChickenBridge.scm",(void*)f_16371},
{"f_16134ChickenBridge.scm",(void*)f_16134},
{"f_16138ChickenBridge.scm",(void*)f_16138},
{"f_16347ChickenBridge.scm",(void*)f_16347},
{"f_16300ChickenBridge.scm",(void*)f_16300},
{"f_16312ChickenBridge.scm",(void*)f_16312},
{"f_16168ChickenBridge.scm",(void*)f_16168},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16177ChickenBridge.scm",(void*)f_16177},
{"f_16180ChickenBridge.scm",(void*)f_16180},
{"f_16268ChickenBridge.scm",(void*)f_16268},
{"f_16183ChickenBridge.scm",(void*)f_16183},
{"f_16262ChickenBridge.scm",(void*)f_16262},
{"f_16189ChickenBridge.scm",(void*)f_16189},
{"f_16192ChickenBridge.scm",(void*)f_16192},
{"f_16144ChickenBridge.scm",(void*)f_16144},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16154ChickenBridge.scm",(void*)f_16154},
{"f_15664ChickenBridge.scm",(void*)f_15664},
{"f_15668ChickenBridge.scm",(void*)f_15668},
{"f_16104ChickenBridge.scm",(void*)f_16104},
{"f_16119ChickenBridge.scm",(void*)f_16119},
{"f_16111ChickenBridge.scm",(void*)f_16111},
{"f_16075ChickenBridge.scm",(void*)f_16075},
{"f_16079ChickenBridge.scm",(void*)f_16079},
{"f_16040ChickenBridge.scm",(void*)f_16040},
{"f_16044ChickenBridge.scm",(void*)f_16044},
{"f_16005ChickenBridge.scm",(void*)f_16005},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_15671ChickenBridge.scm",(void*)f_15671},
{"f_15969ChickenBridge.scm",(void*)f_15969},
{"f_15984ChickenBridge.scm",(void*)f_15984},
{"f_15976ChickenBridge.scm",(void*)f_15976},
{"f_15940ChickenBridge.scm",(void*)f_15940},
{"f_15944ChickenBridge.scm",(void*)f_15944},
{"f_15905ChickenBridge.scm",(void*)f_15905},
{"f_15909ChickenBridge.scm",(void*)f_15909},
{"f_15870ChickenBridge.scm",(void*)f_15870},
{"f_15874ChickenBridge.scm",(void*)f_15874},
{"f_15674ChickenBridge.scm",(void*)f_15674},
{"f_15834ChickenBridge.scm",(void*)f_15834},
{"f_15849ChickenBridge.scm",(void*)f_15849},
{"f_15841ChickenBridge.scm",(void*)f_15841},
{"f_15805ChickenBridge.scm",(void*)f_15805},
{"f_15809ChickenBridge.scm",(void*)f_15809},
{"f_15770ChickenBridge.scm",(void*)f_15770},
{"f_15774ChickenBridge.scm",(void*)f_15774},
{"f_15735ChickenBridge.scm",(void*)f_15735},
{"f_15739ChickenBridge.scm",(void*)f_15739},
{"f_15677ChickenBridge.scm",(void*)f_15677},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15683ChickenBridge.scm",(void*)f_15683},
{"f_15706ChickenBridge.scm",(void*)f_15706},
{"f_15714ChickenBridge.scm",(void*)f_15714},
{"f_15689ChickenBridge.scm",(void*)f_15689},
{"f_15692ChickenBridge.scm",(void*)f_15692},
{"f_15584ChickenBridge.scm",(void*)f_15584},
{"f_15575ChickenBridge.scm",(void*)f_15575},
{"f_15503ChickenBridge.scm",(void*)f_15503},
{"f_15507ChickenBridge.scm",(void*)f_15507},
{"f_15510ChickenBridge.scm",(void*)f_15510},
{"f_15248ChickenBridge.scm",(void*)f_15248},
{"f_15252ChickenBridge.scm",(void*)f_15252},
{"f_15473ChickenBridge.scm",(void*)f_15473},
{"f_15488ChickenBridge.scm",(void*)f_15488},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15444ChickenBridge.scm",(void*)f_15444},
{"f_15448ChickenBridge.scm",(void*)f_15448},
{"f_15409ChickenBridge.scm",(void*)f_15409},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15255ChickenBridge.scm",(void*)f_15255},
{"f_15373ChickenBridge.scm",(void*)f_15373},
{"f_15388ChickenBridge.scm",(void*)f_15388},
{"f_15380ChickenBridge.scm",(void*)f_15380},
{"f_15344ChickenBridge.scm",(void*)f_15344},
{"f_15348ChickenBridge.scm",(void*)f_15348},
{"f_15309ChickenBridge.scm",(void*)f_15309},
{"f_15313ChickenBridge.scm",(void*)f_15313},
{"f_15258ChickenBridge.scm",(void*)f_15258},
{"f_15261ChickenBridge.scm",(void*)f_15261},
{"f_15264ChickenBridge.scm",(void*)f_15264},
{"f_15276ChickenBridge.scm",(void*)f_15276},
{"f_15288ChickenBridge.scm",(void*)f_15288},
{"f_15270ChickenBridge.scm",(void*)f_15270},
{"f_15133ChickenBridge.scm",(void*)f_15133},
{"f_15246ChickenBridge.scm",(void*)f_15246},
{"f_15143ChickenBridge.scm",(void*)f_15143},
{"f_15231ChickenBridge.scm",(void*)f_15231},
{"f_15242ChickenBridge.scm",(void*)f_15242},
{"f_15238ChickenBridge.scm",(void*)f_15238},
{"f_15146ChickenBridge.scm",(void*)f_15146},
{"f_15228ChickenBridge.scm",(void*)f_15228},
{"f_15154ChickenBridge.scm",(void*)f_15154},
{"f_15218ChickenBridge.scm",(void*)f_15218},
{"f_15163ChickenBridge.scm",(void*)f_15163},
{"f_15182ChickenBridge.scm",(void*)f_15182},
{"f_15211ChickenBridge.scm",(void*)f_15211},
{"f_15192ChickenBridge.scm",(void*)f_15192},
{"f_15207ChickenBridge.scm",(void*)f_15207},
{"f_15195ChickenBridge.scm",(void*)f_15195},
{"f_15166ChickenBridge.scm",(void*)f_15166},
{"f_15176ChickenBridge.scm",(void*)f_15176},
{"f_15157ChickenBridge.scm",(void*)f_15157},
{"f_15160ChickenBridge.scm",(void*)f_15160},
{"f_15087ChickenBridge.scm",(void*)f_15087},
{"f_15078ChickenBridge.scm",(void*)f_15078},
{"f_14777ChickenBridge.scm",(void*)f_14777},
{"f_14784ChickenBridge.scm",(void*)f_14784},
{"f_15073ChickenBridge.scm",(void*)f_15073},
{"f_14787ChickenBridge.scm",(void*)f_14787},
{"f_15058ChickenBridge.scm",(void*)f_15058},
{"f_15050ChickenBridge.scm",(void*)f_15050},
{"f_15042ChickenBridge.scm",(void*)f_15042},
{"f_15045ChickenBridge.scm",(void*)f_15045},
{"f_15013ChickenBridge.scm",(void*)f_15013},
{"f_15036ChickenBridge.scm",(void*)f_15036},
{"f_15019ChickenBridge.scm",(void*)f_15019},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_14790ChickenBridge.scm",(void*)f_14790},
{"f_14796ChickenBridge.scm",(void*)f_14796},
{"f_14888ChickenBridge.scm",(void*)f_14888},
{"f_15000ChickenBridge.scm",(void*)f_15000},
{"f_15007ChickenBridge.scm",(void*)f_15007},
{"f_14911ChickenBridge.scm",(void*)f_14911},
{"f_14913ChickenBridge.scm",(void*)f_14913},
{"f_14962ChickenBridge.scm",(void*)f_14962},
{"f_14997ChickenBridge.scm",(void*)f_14997},
{"f_14986ChickenBridge.scm",(void*)f_14986},
{"f_15131ChickenBridge.scm",(void*)f_15131},
{"f_15106ChickenBridge.scm",(void*)f_15106},
{"f_15127ChickenBridge.scm",(void*)f_15127},
{"f_15123ChickenBridge.scm",(void*)f_15123},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_14979ChickenBridge.scm",(void*)f_14979},
{"f_14972ChickenBridge.scm",(void*)f_14972},
{"f_14920ChickenBridge.scm",(void*)f_14920},
{"f_14960ChickenBridge.scm",(void*)f_14960},
{"f_14924ChickenBridge.scm",(void*)f_14924},
{"f_14956ChickenBridge.scm",(void*)f_14956},
{"f_14943ChickenBridge.scm",(void*)f_14943},
{"f_14951ChickenBridge.scm",(void*)f_14951},
{"f_14947ChickenBridge.scm",(void*)f_14947},
{"f_14927ChickenBridge.scm",(void*)f_14927},
{"f_14930ChickenBridge.scm",(void*)f_14930},
{"f_14904ChickenBridge.scm",(void*)f_14904},
{"f_14891ChickenBridge.scm",(void*)f_14891},
{"f_14900ChickenBridge.scm",(void*)f_14900},
{"f_14895ChickenBridge.scm",(void*)f_14895},
{"f_14802ChickenBridge.scm",(void*)f_14802},
{"f_14882ChickenBridge.scm",(void*)f_14882},
{"f_14862ChickenBridge.scm",(void*)f_14862},
{"f_14868ChickenBridge.scm",(void*)f_14868},
{"f_14879ChickenBridge.scm",(void*)f_14879},
{"f_14859ChickenBridge.scm",(void*)f_14859},
{"f_14847ChickenBridge.scm",(void*)f_14847},
{"f_14850ChickenBridge.scm",(void*)f_14850},
{"f_14805ChickenBridge.scm",(void*)f_14805},
{"f_14841ChickenBridge.scm",(void*)f_14841},
{"f_14836ChickenBridge.scm",(void*)f_14836},
{"f_14808ChickenBridge.scm",(void*)f_14808},
{"f_14821ChickenBridge.scm",(void*)f_14821},
{"f_14811ChickenBridge.scm",(void*)f_14811},
{"f_14814ChickenBridge.scm",(void*)f_14814},
{"f_14817ChickenBridge.scm",(void*)f_14817},
{"f_14654ChickenBridge.scm",(void*)f_14654},
{"f_14713ChickenBridge.scm",(void*)f_14713},
{"f_14723ChickenBridge.scm",(void*)f_14723},
{"f_14725ChickenBridge.scm",(void*)f_14725},
{"f_14754ChickenBridge.scm",(void*)f_14754},
{"f_14759ChickenBridge.scm",(void*)f_14759},
{"f_14744ChickenBridge.scm",(void*)f_14744},
{"f_14675ChickenBridge.scm",(void*)f_14675},
{"f_14707ChickenBridge.scm",(void*)f_14707},
{"f_14635ChickenBridge.scm",(void*)f_14635},
{"f_14642ChickenBridge.scm",(void*)f_14642},
{"f_14649ChickenBridge.scm",(void*)f_14649},
{"f_14616ChickenBridge.scm",(void*)f_14616},
{"f_14623ChickenBridge.scm",(void*)f_14623},
{"f_14630ChickenBridge.scm",(void*)f_14630},
{"f_14436ChickenBridge.scm",(void*)f_14436},
{"f_14440ChickenBridge.scm",(void*)f_14440},
{"f_14443ChickenBridge.scm",(void*)f_14443},
{"f_14446ChickenBridge.scm",(void*)f_14446},
{"f_14449ChickenBridge.scm",(void*)f_14449},
{"f_14606ChickenBridge.scm",(void*)f_14606},
{"f_14613ChickenBridge.scm",(void*)f_14613},
{"f_14452ChickenBridge.scm",(void*)f_14452},
{"f_14455ChickenBridge.scm",(void*)f_14455},
{"f_14461ChickenBridge.scm",(void*)f_14461},
{"f_14467ChickenBridge.scm",(void*)f_14467},
{"f_14530ChickenBridge.scm",(void*)f_14530},
{"f_14544ChickenBridge.scm",(void*)f_14544},
{"f_14470ChickenBridge.scm",(void*)f_14470},
{"f_14473ChickenBridge.scm",(void*)f_14473},
{"f_14479ChickenBridge.scm",(void*)f_14479},
{"f_14492ChickenBridge.scm",(void*)f_14492},
{"f_14482ChickenBridge.scm",(void*)f_14482},
{"f_14485ChickenBridge.scm",(void*)f_14485},
{"f_14426ChickenBridge.scm",(void*)f_14426},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14362ChickenBridge.scm",(void*)f_14362},
{"f_14245ChickenBridge.scm",(void*)f_14245},
{"f_14236ChickenBridge.scm",(void*)f_14236},
{"f_14227ChickenBridge.scm",(void*)f_14227},
{"f_14218ChickenBridge.scm",(void*)f_14218},
{"f_14209ChickenBridge.scm",(void*)f_14209},
{"f_14191ChickenBridge.scm",(void*)f_14191},
{"f_14182ChickenBridge.scm",(void*)f_14182},
{"f_14173ChickenBridge.scm",(void*)f_14173},
{"f_14155ChickenBridge.scm",(void*)f_14155},
{"f_14146ChickenBridge.scm",(void*)f_14146},
{"f_14137ChickenBridge.scm",(void*)f_14137},
{"f_14122ChickenBridge.scm",(void*)f_14122},
{"f_14077ChickenBridge.scm",(void*)f_14077},
{"f_14059ChickenBridge.scm",(void*)f_14059},
{"f_14050ChickenBridge.scm",(void*)f_14050},
{"f_14023ChickenBridge.scm",(void*)f_14023},
{"f_14005ChickenBridge.scm",(void*)f_14005},
{"f_13987ChickenBridge.scm",(void*)f_13987},
{"f_13978ChickenBridge.scm",(void*)f_13978},
{"f_13966ChickenBridge.scm",(void*)f_13966},
{"f_13365ChickenBridge.scm",(void*)f_13365},
{"f_13433ChickenBridge.scm",(void*)f_13433},
{"f_13436ChickenBridge.scm",(void*)f_13436},
{"f_13439ChickenBridge.scm",(void*)f_13439},
{"f_13442ChickenBridge.scm",(void*)f_13442},
{"f_13445ChickenBridge.scm",(void*)f_13445},
{"f_13543ChickenBridge.scm",(void*)f_13543},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13511ChickenBridge.scm",(void*)f_13511},
{"f_13521ChickenBridge.scm",(void*)f_13521},
{"f_13462ChickenBridge.scm",(void*)f_13462},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_13491ChickenBridge.scm",(void*)f_13491},
{"f_13472ChickenBridge.scm",(void*)f_13472},
{"f_13448ChickenBridge.scm",(void*)f_13448},
{"f_13401ChickenBridge.scm",(void*)f_13401},
{"f_13411ChickenBridge.scm",(void*)f_13411},
{"f_13384ChickenBridge.scm",(void*)f_13384},
{"f_13391ChickenBridge.scm",(void*)f_13391},
{"f_13367ChickenBridge.scm",(void*)f_13367},
{"f_13374ChickenBridge.scm",(void*)f_13374},
{"f_13186ChickenBridge.scm",(void*)f_13186},
{"f_13194ChickenBridge.scm",(void*)f_13194},
{"f_13198ChickenBridge.scm",(void*)f_13198},
{"f_13200ChickenBridge.scm",(void*)f_13200},
{"f_13210ChickenBridge.scm",(void*)f_13210},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13290ChickenBridge.scm",(void*)f_13290},
{"f_13293ChickenBridge.scm",(void*)f_13293},
{"f_13304ChickenBridge.scm",(void*)f_13304},
{"f_13256ChickenBridge.scm",(void*)f_13256},
{"f_13225ChickenBridge.scm",(void*)f_13225},
{"f_13228ChickenBridge.scm",(void*)f_13228},
{"f_13213ChickenBridge.scm",(void*)f_13213},
{"f_12867ChickenBridge.scm",(void*)f_12867},
{"f_13184ChickenBridge.scm",(void*)f_13184},
{"f_13113ChickenBridge.scm",(void*)f_13113},
{"f_13115ChickenBridge.scm",(void*)f_13115},
{"f_7854ChickenBridge.scm",(void*)f_7854},
{"f_13134ChickenBridge.scm",(void*)f_13134},
{"f_13137ChickenBridge.scm",(void*)f_13137},
{"f_12880ChickenBridge.scm",(void*)f_12880},
{"f_12956ChickenBridge.scm",(void*)f_12956},
{"f_13109ChickenBridge.scm",(void*)f_13109},
{"f_13093ChickenBridge.scm",(void*)f_13093},
{"f_13045ChickenBridge.scm",(void*)f_13045},
{"f_13059ChickenBridge.scm",(void*)f_13059},
{"f_13012ChickenBridge.scm",(void*)f_13012},
{"f_12987ChickenBridge.scm",(void*)f_12987},
{"f_12883ChickenBridge.scm",(void*)f_12883},
{"f_12891ChickenBridge.scm",(void*)f_12891},
{"f_12924ChickenBridge.scm",(void*)f_12924},
{"f_11394ChickenBridge.scm",(void*)f_11394},
{"f_12844ChickenBridge.scm",(void*)f_12844},
{"f_12859ChickenBridge.scm",(void*)f_12859},
{"f_12851ChickenBridge.scm",(void*)f_12851},
{"f_12815ChickenBridge.scm",(void*)f_12815},
{"f_12819ChickenBridge.scm",(void*)f_12819},
{"f_12780ChickenBridge.scm",(void*)f_12780},
{"f_12784ChickenBridge.scm",(void*)f_12784},
{"f_12745ChickenBridge.scm",(void*)f_12745},
{"f_12749ChickenBridge.scm",(void*)f_12749},
{"f_12710ChickenBridge.scm",(void*)f_12710},
{"f_12714ChickenBridge.scm",(void*)f_12714},
{"f_12675ChickenBridge.scm",(void*)f_12675},
{"f_12679ChickenBridge.scm",(void*)f_12679},
{"f_12640ChickenBridge.scm",(void*)f_12640},
{"f_12644ChickenBridge.scm",(void*)f_12644},
{"f_11398ChickenBridge.scm",(void*)f_11398},
{"f_12604ChickenBridge.scm",(void*)f_12604},
{"f_12619ChickenBridge.scm",(void*)f_12619},
{"f_12611ChickenBridge.scm",(void*)f_12611},
{"f_12575ChickenBridge.scm",(void*)f_12575},
{"f_12579ChickenBridge.scm",(void*)f_12579},
{"f_12540ChickenBridge.scm",(void*)f_12540},
{"f_12544ChickenBridge.scm",(void*)f_12544},
{"f_12505ChickenBridge.scm",(void*)f_12505},
{"f_12509ChickenBridge.scm",(void*)f_12509},
{"f_12470ChickenBridge.scm",(void*)f_12470},
{"f_12474ChickenBridge.scm",(void*)f_12474},
{"f_12435ChickenBridge.scm",(void*)f_12435},
{"f_12439ChickenBridge.scm",(void*)f_12439},
{"f_12400ChickenBridge.scm",(void*)f_12400},
{"f_12404ChickenBridge.scm",(void*)f_12404},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_12364ChickenBridge.scm",(void*)f_12364},
{"f_12379ChickenBridge.scm",(void*)f_12379},
{"f_12371ChickenBridge.scm",(void*)f_12371},
{"f_12335ChickenBridge.scm",(void*)f_12335},
{"f_12339ChickenBridge.scm",(void*)f_12339},
{"f_12300ChickenBridge.scm",(void*)f_12300},
{"f_12304ChickenBridge.scm",(void*)f_12304},
{"f_12265ChickenBridge.scm",(void*)f_12265},
{"f_12269ChickenBridge.scm",(void*)f_12269},
{"f_12230ChickenBridge.scm",(void*)f_12230},
{"f_12234ChickenBridge.scm",(void*)f_12234},
{"f_12195ChickenBridge.scm",(void*)f_12195},
{"f_12199ChickenBridge.scm",(void*)f_12199},
{"f_12160ChickenBridge.scm",(void*)f_12160},
{"f_12164ChickenBridge.scm",(void*)f_12164},
{"f_11404ChickenBridge.scm",(void*)f_11404},
{"f_12124ChickenBridge.scm",(void*)f_12124},
{"f_12139ChickenBridge.scm",(void*)f_12139},
{"f_12131ChickenBridge.scm",(void*)f_12131},
{"f_12095ChickenBridge.scm",(void*)f_12095},
{"f_12099ChickenBridge.scm",(void*)f_12099},
{"f_12060ChickenBridge.scm",(void*)f_12060},
{"f_12064ChickenBridge.scm",(void*)f_12064},
{"f_12025ChickenBridge.scm",(void*)f_12025},
{"f_12029ChickenBridge.scm",(void*)f_12029},
{"f_11990ChickenBridge.scm",(void*)f_11990},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_11955ChickenBridge.scm",(void*)f_11955},
{"f_11959ChickenBridge.scm",(void*)f_11959},
{"f_11920ChickenBridge.scm",(void*)f_11920},
{"f_11924ChickenBridge.scm",(void*)f_11924},
{"f_11407ChickenBridge.scm",(void*)f_11407},
{"f_11884ChickenBridge.scm",(void*)f_11884},
{"f_11899ChickenBridge.scm",(void*)f_11899},
{"f_11891ChickenBridge.scm",(void*)f_11891},
{"f_11855ChickenBridge.scm",(void*)f_11855},
{"f_11859ChickenBridge.scm",(void*)f_11859},
{"f_11820ChickenBridge.scm",(void*)f_11820},
{"f_11824ChickenBridge.scm",(void*)f_11824},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_11789ChickenBridge.scm",(void*)f_11789},
{"f_11750ChickenBridge.scm",(void*)f_11750},
{"f_11754ChickenBridge.scm",(void*)f_11754},
{"f_11715ChickenBridge.scm",(void*)f_11715},
{"f_11719ChickenBridge.scm",(void*)f_11719},
{"f_11680ChickenBridge.scm",(void*)f_11680},
{"f_11684ChickenBridge.scm",(void*)f_11684},
{"f_11410ChickenBridge.scm",(void*)f_11410},
{"f_11644ChickenBridge.scm",(void*)f_11644},
{"f_11659ChickenBridge.scm",(void*)f_11659},
{"f_11651ChickenBridge.scm",(void*)f_11651},
{"f_11615ChickenBridge.scm",(void*)f_11615},
{"f_11619ChickenBridge.scm",(void*)f_11619},
{"f_11580ChickenBridge.scm",(void*)f_11580},
{"f_11584ChickenBridge.scm",(void*)f_11584},
{"f_11545ChickenBridge.scm",(void*)f_11545},
{"f_11549ChickenBridge.scm",(void*)f_11549},
{"f_11510ChickenBridge.scm",(void*)f_11510},
{"f_11514ChickenBridge.scm",(void*)f_11514},
{"f_11475ChickenBridge.scm",(void*)f_11475},
{"f_11479ChickenBridge.scm",(void*)f_11479},
{"f_11440ChickenBridge.scm",(void*)f_11440},
{"f_11444ChickenBridge.scm",(void*)f_11444},
{"f_11413ChickenBridge.scm",(void*)f_11413},
{"f_11416ChickenBridge.scm",(void*)f_11416},
{"f_11175ChickenBridge.scm",(void*)f_11175},
{"f_11184ChickenBridge.scm",(void*)f_11184},
{"f_11188ChickenBridge.scm",(void*)f_11188},
{"f_11375ChickenBridge.scm",(void*)f_11375},
{"f_11360ChickenBridge.scm",(void*)f_11360},
{"f_11325ChickenBridge.scm",(void*)f_11325},
{"f_11305ChickenBridge.scm",(void*)f_11305},
{"f_11309ChickenBridge.scm",(void*)f_11309},
{"f_11295ChickenBridge.scm",(void*)f_11295},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11262ChickenBridge.scm",(void*)f_11262},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11257ChickenBridge.scm",(void*)f_11257},
{"f_11194ChickenBridge.scm",(void*)f_11194},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11205ChickenBridge.scm",(void*)f_11205},
{"f_11146ChickenBridge.scm",(void*)f_11146},
{"f_11150ChickenBridge.scm",(void*)f_11150},
{"f_11161ChickenBridge.scm",(void*)f_11161},
{"f_11159ChickenBridge.scm",(void*)f_11159},
{"f_11115ChickenBridge.scm",(void*)f_11115},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11130ChickenBridge.scm",(void*)f_11130},
{"f_11128ChickenBridge.scm",(void*)f_11128},
{"f_11097ChickenBridge.scm",(void*)f_11097},
{"f_11105ChickenBridge.scm",(void*)f_11105},
{"f_11113ChickenBridge.scm",(void*)f_11113},
{"f_11087ChickenBridge.scm",(void*)f_11087},
{"f_11095ChickenBridge.scm",(void*)f_11095},
{"f_11028ChickenBridge.scm",(void*)f_11028},
{"f_11035ChickenBridge.scm",(void*)f_11035},
{"f_11038ChickenBridge.scm",(void*)f_11038},
{"f_11041ChickenBridge.scm",(void*)f_11041},
{"f_11046ChickenBridge.scm",(void*)f_11046},
{"f_10978ChickenBridge.scm",(void*)f_10978},
{"f_10969ChickenBridge.scm",(void*)f_10969},
{"f_10960ChickenBridge.scm",(void*)f_10960},
{"f_10951ChickenBridge.scm",(void*)f_10951},
{"f_10942ChickenBridge.scm",(void*)f_10942},
{"f_10933ChickenBridge.scm",(void*)f_10933},
{"f_10924ChickenBridge.scm",(void*)f_10924},
{"f_10909ChickenBridge.scm",(void*)f_10909},
{"f_10903ChickenBridge.scm",(void*)f_10903},
{"f_10761ChickenBridge.scm",(void*)f_10761},
{"f_10765ChickenBridge.scm",(void*)f_10765},
{"f_10834ChickenBridge.scm",(void*)f_10834},
{"f_10877ChickenBridge.scm",(void*)f_10877},
{"f_10881ChickenBridge.scm",(void*)f_10881},
{"f_10870ChickenBridge.scm",(void*)f_10870},
{"f_10857ChickenBridge.scm",(void*)f_10857},
{"f_10776ChickenBridge.scm",(void*)f_10776},
{"f_10819ChickenBridge.scm",(void*)f_10819},
{"f_10823ChickenBridge.scm",(void*)f_10823},
{"f_10812ChickenBridge.scm",(void*)f_10812},
{"f_10799ChickenBridge.scm",(void*)f_10799},
{"f_10595ChickenBridge.scm",(void*)f_10595},
{"f_10696ChickenBridge.scm",(void*)f_10696},
{"f_10745ChickenBridge.scm",(void*)f_10745},
{"f_10741ChickenBridge.scm",(void*)f_10741},
{"f_10713ChickenBridge.scm",(void*)f_10713},
{"f_10648ChickenBridge.scm",(void*)f_10648},
{"f_10657ChickenBridge.scm",(void*)f_10657},
{"f_10641ChickenBridge.scm",(void*)f_10641},
{"f_10460ChickenBridge.scm",(void*)f_10460},
{"f_10586ChickenBridge.scm",(void*)f_10586},
{"f_10582ChickenBridge.scm",(void*)f_10582},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10506ChickenBridge.scm",(void*)f_10506},
{"f_10415ChickenBridge.scm",(void*)f_10415},
{"f_10458ChickenBridge.scm",(void*)f_10458},
{"f_10447ChickenBridge.scm",(void*)f_10447},
{"f_10299ChickenBridge.scm",(void*)f_10299},
{"f_10413ChickenBridge.scm",(void*)f_10413},
{"f_10314ChickenBridge.scm",(void*)f_10314},
{"f_10344ChickenBridge.scm",(void*)f_10344},
{"f_10363ChickenBridge.scm",(void*)f_10363},
{"f_10348ChickenBridge.scm",(void*)f_10348},
{"f_10327ChickenBridge.scm",(void*)f_10327},
{"f_10177ChickenBridge.scm",(void*)f_10177},
{"f_10297ChickenBridge.scm",(void*)f_10297},
{"f_10192ChickenBridge.scm",(void*)f_10192},
{"f_10222ChickenBridge.scm",(void*)f_10222},
{"f_10241ChickenBridge.scm",(void*)f_10241},
{"f_10226ChickenBridge.scm",(void*)f_10226},
{"f_10205ChickenBridge.scm",(void*)f_10205},
{"f_10080ChickenBridge.scm",(void*)f_10080},
{"f_10175ChickenBridge.scm",(void*)f_10175},
{"f_10095ChickenBridge.scm",(void*)f_10095},
{"f_10141ChickenBridge.scm",(void*)f_10141},
{"f_10126ChickenBridge.scm",(void*)f_10126},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10027ChickenBridge.scm",(void*)f_10027},
{"f_10065ChickenBridge.scm",(void*)f_10065},
{"f_10072ChickenBridge.scm",(void*)f_10072},
{"f_10050ChickenBridge.scm",(void*)f_10050},
{"f_10025ChickenBridge.scm",(void*)f_10025},
{"f_9997ChickenBridge.scm",(void*)f_9997},
{"f_9999ChickenBridge.scm",(void*)f_9999},
{"f_9977ChickenBridge.scm",(void*)f_9977},
{"f_9925ChickenBridge.scm",(void*)f_9925},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9929ChickenBridge.scm",(void*)f_9929},
{"f_9945ChickenBridge.scm",(void*)f_9945},
{"f_9947ChickenBridge.scm",(void*)f_9947},
{"f_9711ChickenBridge.scm",(void*)f_9711},
{"f_9724ChickenBridge.scm",(void*)f_9724},
{"f_9806ChickenBridge.scm",(void*)f_9806},
{"f_9809ChickenBridge.scm",(void*)f_9809},
{"f_9817ChickenBridge.scm",(void*)f_9817},
{"f_9829ChickenBridge.scm",(void*)f_9829},
{"f_9850ChickenBridge.scm",(void*)f_9850},
{"f_9858ChickenBridge.scm",(void*)f_9858},
{"f_9745ChickenBridge.scm",(void*)f_9745},
{"f_9750ChickenBridge.scm",(void*)f_9750},
{"f_9782ChickenBridge.scm",(void*)f_9782},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9671ChickenBridge.scm",(void*)f_9671},
{"f_9630ChickenBridge.scm",(void*)f_9630},
{"f_9611ChickenBridge.scm",(void*)f_9611},
{"f_9383ChickenBridge.scm",(void*)f_9383},
{"f_9588ChickenBridge.scm",(void*)f_9588},
{"f_9603ChickenBridge.scm",(void*)f_9603},
{"f_9595ChickenBridge.scm",(void*)f_9595},
{"f_9559ChickenBridge.scm",(void*)f_9559},
{"f_9563ChickenBridge.scm",(void*)f_9563},
{"f_9524ChickenBridge.scm",(void*)f_9524},
{"f_9528ChickenBridge.scm",(void*)f_9528},
{"f_9387ChickenBridge.scm",(void*)f_9387},
{"f_9488ChickenBridge.scm",(void*)f_9488},
{"f_9503ChickenBridge.scm",(void*)f_9503},
{"f_9495ChickenBridge.scm",(void*)f_9495},
{"f_9459ChickenBridge.scm",(void*)f_9459},
{"f_9463ChickenBridge.scm",(void*)f_9463},
{"f_9424ChickenBridge.scm",(void*)f_9424},
{"f_9428ChickenBridge.scm",(void*)f_9428},
{"f_9390ChickenBridge.scm",(void*)f_9390},
{"f_9393ChickenBridge.scm",(void*)f_9393},
{"f_9396ChickenBridge.scm",(void*)f_9396},
{"f_9341ChickenBridge.scm",(void*)f_9341},
{"f_9370ChickenBridge.scm",(void*)f_9370},
{"f_9355ChickenBridge.scm",(void*)f_9355},
{"f_9286ChickenBridge.scm",(void*)f_9286},
{"f_9297ChickenBridge.scm",(void*)f_9297},
{"f_9299ChickenBridge.scm",(void*)f_9299},
{"f_9327ChickenBridge.scm",(void*)f_9327},
{"f_9187ChickenBridge.scm",(void*)f_9187},
{"f_9191ChickenBridge.scm",(void*)f_9191},
{"f_9194ChickenBridge.scm",(void*)f_9194},
{"f_9259ChickenBridge.scm",(void*)f_9259},
{"f_9196ChickenBridge.scm",(void*)f_9196},
{"f_9212ChickenBridge.scm",(void*)f_9212},
{"f_8959ChickenBridge.scm",(void*)f_8959},
{"f_9164ChickenBridge.scm",(void*)f_9164},
{"f_9179ChickenBridge.scm",(void*)f_9179},
{"f_9171ChickenBridge.scm",(void*)f_9171},
{"f_9135ChickenBridge.scm",(void*)f_9135},
{"f_9139ChickenBridge.scm",(void*)f_9139},
{"f_9100ChickenBridge.scm",(void*)f_9100},
{"f_9104ChickenBridge.scm",(void*)f_9104},
{"f_8963ChickenBridge.scm",(void*)f_8963},
{"f_9064ChickenBridge.scm",(void*)f_9064},
{"f_9079ChickenBridge.scm",(void*)f_9079},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9039ChickenBridge.scm",(void*)f_9039},
{"f_9000ChickenBridge.scm",(void*)f_9000},
{"f_9004ChickenBridge.scm",(void*)f_9004},
{"f_8966ChickenBridge.scm",(void*)f_8966},
{"f_8969ChickenBridge.scm",(void*)f_8969},
{"f_8979ChickenBridge.scm",(void*)f_8979},
{"f_8916ChickenBridge.scm",(void*)f_8916},
{"f_8949ChickenBridge.scm",(void*)f_8949},
{"f_8934ChickenBridge.scm",(void*)f_8934},
{"f_8895ChickenBridge.scm",(void*)f_8895},
{"f_8860ChickenBridge.scm",(void*)f_8860},
{"f_8864ChickenBridge.scm",(void*)f_8864},
{"f_8752ChickenBridge.scm",(void*)f_8752},
{"f_8839ChickenBridge.scm",(void*)f_8839},
{"f_8759ChickenBridge.scm",(void*)f_8759},
{"f_8768ChickenBridge.scm",(void*)f_8768},
{"f_8815ChickenBridge.scm",(void*)f_8815},
{"f_8781ChickenBridge.scm",(void*)f_8781},
{"f_8807ChickenBridge.scm",(void*)f_8807},
{"f_8619ChickenBridge.scm",(void*)f_8619},
{"f_8623ChickenBridge.scm",(void*)f_8623},
{"f_8626ChickenBridge.scm",(void*)f_8626},
{"f_8730ChickenBridge.scm",(void*)f_8730},
{"f_8628ChickenBridge.scm",(void*)f_8628},
{"f_8635ChickenBridge.scm",(void*)f_8635},
{"f_8677ChickenBridge.scm",(void*)f_8677},
{"f_8684ChickenBridge.scm",(void*)f_8684},
{"f_8658ChickenBridge.scm",(void*)f_8658},
{"f_8552ChickenBridge.scm",(void*)f_8552},
{"f_8556ChickenBridge.scm",(void*)f_8556},
{"f_8602ChickenBridge.scm",(void*)f_8602},
{"f_8559ChickenBridge.scm",(void*)f_8559},
{"f_8595ChickenBridge.scm",(void*)f_8595},
{"f_8562ChickenBridge.scm",(void*)f_8562},
{"f_8575ChickenBridge.scm",(void*)f_8575},
{"f_8506ChickenBridge.scm",(void*)f_8506},
{"f_8510ChickenBridge.scm",(void*)f_8510},
{"f_8420ChickenBridge.scm",(void*)f_8420},
{"f_8424ChickenBridge.scm",(void*)f_8424},
{"f_8427ChickenBridge.scm",(void*)f_8427},
{"f_8436ChickenBridge.scm",(void*)f_8436},
{"f_8458ChickenBridge.scm",(void*)f_8458},
{"f_8405ChickenBridge.scm",(void*)f_8405},
{"f_8390ChickenBridge.scm",(void*)f_8390},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8382ChickenBridge.scm",(void*)f_8382},
{"f_8374ChickenBridge.scm",(void*)f_8374},
{"f_8338ChickenBridge.scm",(void*)f_8338},
{"f_8342ChickenBridge.scm",(void*)f_8342},
{"f_8303ChickenBridge.scm",(void*)f_8303},
{"f_8307ChickenBridge.scm",(void*)f_8307},
{"f_8158ChickenBridge.scm",(void*)f_8158},
{"f_8267ChickenBridge.scm",(void*)f_8267},
{"f_8282ChickenBridge.scm",(void*)f_8282},
{"f_8274ChickenBridge.scm",(void*)f_8274},
{"f_8238ChickenBridge.scm",(void*)f_8238},
{"f_8242ChickenBridge.scm",(void*)f_8242},
{"f_8203ChickenBridge.scm",(void*)f_8203},
{"f_8207ChickenBridge.scm",(void*)f_8207},
{"f_8161ChickenBridge.scm",(void*)f_8161},
{"f_8164ChickenBridge.scm",(void*)f_8164},
{"f_8175ChickenBridge.scm",(void*)f_8175},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8118ChickenBridge.scm",(void*)f_8118},
{"f_8148ChickenBridge.scm",(void*)f_8148},
{"f_8129ChickenBridge.scm",(void*)f_8129},
{"f_8137ChickenBridge.scm",(void*)f_8137},
{"f_8093ChickenBridge.scm",(void*)f_8093},
{"f_8105ChickenBridge.scm",(void*)f_8105},
{"f_8067ChickenBridge.scm",(void*)f_8067},
{"f_8025ChickenBridge.scm",(void*)f_8025},
{"f_8010ChickenBridge.scm",(void*)f_8010},
{"f_7899ChickenBridge.scm",(void*)f_7899},
{"f_7974ChickenBridge.scm",(void*)f_7974},
{"f_7903ChickenBridge.scm",(void*)f_7903},
{"f_7943ChickenBridge.scm",(void*)f_7943},
{"f_7932ChickenBridge.scm",(void*)f_7932},
{"f_7917ChickenBridge.scm",(void*)f_7917},
{"f_7925ChickenBridge.scm",(void*)f_7925},
{"f_7865ChickenBridge.scm",(void*)f_7865},
{"f_7877ChickenBridge.scm",(void*)f_7877},
{"f_7846ChickenBridge.scm",(void*)f_7846},
{"f_7843ChickenBridge.scm",(void*)f_7843},
{"f_7836ChickenBridge.scm",(void*)f_7836},
{"f_7833ChickenBridge.scm",(void*)f_7833},
{"f_7826ChickenBridge.scm",(void*)f_7826},
{"f_7808ChickenBridge.scm",(void*)f_7808},
{"f_7797ChickenBridge.scm",(void*)f_7797},
{"f_7794ChickenBridge.scm",(void*)f_7794},
{"f_7791ChickenBridge.scm",(void*)f_7791},
{"f_7788ChickenBridge.scm",(void*)f_7788},
{"f_7759ChickenBridge.scm",(void*)f_7759},
{"f_7752ChickenBridge.scm",(void*)f_7752},
{"f_7749ChickenBridge.scm",(void*)f_7749},
{"f_7728ChickenBridge.scm",(void*)f_7728},
{"f_7709ChickenBridge.scm",(void*)f_7709},
{"f_7690ChickenBridge.scm",(void*)f_7690},
{"f_7683ChickenBridge.scm",(void*)f_7683},
{"f_7676ChickenBridge.scm",(void*)f_7676},
{"f_7661ChickenBridge.scm",(void*)f_7661},
{"f_7650ChickenBridge.scm",(void*)f_7650},
{"f_7643ChickenBridge.scm",(void*)f_7643},
{"f_7616ChickenBridge.scm",(void*)f_7616},
{"f_7589ChickenBridge.scm",(void*)f_7589},
{"f_7548ChickenBridge.scm",(void*)f_7548},
{"f_7554ChickenBridge.scm",(void*)f_7554},
{"f_7564ChickenBridge.scm",(void*)f_7564},
{"f_7462ChickenBridge.scm",(void*)f_7462},
{"f_7423ChickenBridge.scm",(void*)f_7423},
{"f_7429ChickenBridge.scm",(void*)f_7429},
{"f_7452ChickenBridge.scm",(void*)f_7452},
{"f_7442ChickenBridge.scm",(void*)f_7442},
{"f_7384ChickenBridge.scm",(void*)f_7384},
{"f_7390ChickenBridge.scm",(void*)f_7390},
{"f_7410ChickenBridge.scm",(void*)f_7410},
{"f_7400ChickenBridge.scm",(void*)f_7400},
{"f_7344ChickenBridge.scm",(void*)f_7344},
{"f_7350ChickenBridge.scm",(void*)f_7350},
{"f_7374ChickenBridge.scm",(void*)f_7374},
{"f_7360ChickenBridge.scm",(void*)f_7360},
{"f_7245ChickenBridge.scm",(void*)f_7245},
{"f_7249ChickenBridge.scm",(void*)f_7249},
{"f_7274ChickenBridge.scm",(void*)f_7274},
{"f_7291ChickenBridge.scm",(void*)f_7291},
{"f_7295ChickenBridge.scm",(void*)f_7295},
{"f_7251ChickenBridge.scm",(void*)f_7251},
{"f_7268ChickenBridge.scm",(void*)f_7268},
{"f_7184ChickenBridge.scm",(void*)f_7184},
{"f_7197ChickenBridge.scm",(void*)f_7197},
{"f_7174ChickenBridge.scm",(void*)f_7174},
{"f_7134ChickenBridge.scm",(void*)f_7134},
{"f_7164ChickenBridge.scm",(void*)f_7164},
{"f_7044ChickenBridge.scm",(void*)f_7044},
{"f_6996ChickenBridge.scm",(void*)f_6996},
{"f_7030ChickenBridge.scm",(void*)f_7030},
{"f_6973ChickenBridge.scm",(void*)f_6973},
{"f_6967ChickenBridge.scm",(void*)f_6967},
{"f_6952ChickenBridge.scm",(void*)f_6952},
{"f_6938ChickenBridge.scm",(void*)f_6938},
{"f_6928ChickenBridge.scm",(void*)f_6928},
{"f_6918ChickenBridge.scm",(void*)f_6918},
{"f_6908ChickenBridge.scm",(void*)f_6908},
{"f_6898ChickenBridge.scm",(void*)f_6898},
{"f_6869ChickenBridge.scm",(void*)f_6869},
{"f_6878ChickenBridge.scm",(void*)f_6878},
{"f_6883ChickenBridge.scm",(void*)f_6883},
{"f_6858ChickenBridge.scm",(void*)f_6858},
{"f_6863ChickenBridge.scm",(void*)f_6863},
{"f_6565ChickenBridge.scm",(void*)f_6565},
{"f_6575ChickenBridge.scm",(void*)f_6575},
{"f_6826ChickenBridge.scm",(void*)f_6826},
{"f_6578ChickenBridge.scm",(void*)f_6578},
{"f_6581ChickenBridge.scm",(void*)f_6581},
{"f_6596ChickenBridge.scm",(void*)f_6596},
{"f_6606ChickenBridge.scm",(void*)f_6606},
{"f_6608ChickenBridge.scm",(void*)f_6608},
{"f_6667ChickenBridge.scm",(void*)f_6667},
{"f_6677ChickenBridge.scm",(void*)f_6677},
{"f_6794ChickenBridge.scm",(void*)f_6794},
{"f_6782ChickenBridge.scm",(void*)f_6782},
{"f_6780ChickenBridge.scm",(void*)f_6780},
{"f_6767ChickenBridge.scm",(void*)f_6767},
{"f_6721ChickenBridge.scm",(void*)f_6721},
{"f_6748ChickenBridge.scm",(void*)f_6748},
{"f_6727ChickenBridge.scm",(void*)f_6727},
{"f_6661ChickenBridge.scm",(void*)f_6661},
{"f_6620ChickenBridge.scm",(void*)f_6620},
{"f_6633ChickenBridge.scm",(void*)f_6633},
{"f_6843ChickenBridge.scm",(void*)f_6843},
{"f_6834ChickenBridge.scm",(void*)f_6834},
{"f_6842ChickenBridge.scm",(void*)f_6842},
{"f_6845ChickenBridge.scm",(void*)f_6845},
{"f_6853ChickenBridge.scm",(void*)f_6853},
{"f_6267ChickenBridge.scm",(void*)f_6267},
{"f_6520ChickenBridge.scm",(void*)f_6520},
{"f_6553ChickenBridge.scm",(void*)f_6553},
{"f_6549ChickenBridge.scm",(void*)f_6549},
{"f_6538ChickenBridge.scm",(void*)f_6538},
{"f_6534ChickenBridge.scm",(void*)f_6534},
{"f_6428ChickenBridge.scm",(void*)f_6428},
{"f_6431ChickenBridge.scm",(void*)f_6431},
{"f_6434ChickenBridge.scm",(void*)f_6434},
{"f_6514ChickenBridge.scm",(void*)f_6514},
{"f_6339ChickenBridge.scm",(void*)f_6339},
{"f_6280ChickenBridge.scm",(void*)f_6280},
{"f_6437ChickenBridge.scm",(void*)f_6437},
{"f_6444ChickenBridge.scm",(void*)f_6444},
{"f_6504ChickenBridge.scm",(void*)f_6504},
{"f_6490ChickenBridge.scm",(void*)f_6490},
{"f_6456ChickenBridge.scm",(void*)f_6456},
{"f_6482ChickenBridge.scm",(void*)f_6482},
{"f_6417ChickenBridge.scm",(void*)f_6417},
{"f_6464ChickenBridge.scm",(void*)f_6464},
{"f_6460ChickenBridge.scm",(void*)f_6460},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
