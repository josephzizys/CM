/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-21 21:05
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[817];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,51,56,51,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,52,48,53,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,52,49,53,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,52,50,49,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,55,52,55,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,55,51,54,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,55,52,53,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,54,56,51,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,55,54,53,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,55,56,48,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,48,57,41,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,49,48,32,112,111,115,49,49,49,32,118,97,108,49,49,50,41};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,50,48,32,112,114,111,112,49,50,49,32,46,32,100,101,102,49,50,50,41,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,12),40,100,111,49,50,56,32,102,49,51,48,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,50,54,32,98,49,50,55,41};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,53,57,49,54,50,32,97,49,53,56,49,54,51,32,97,49,53,55,49,54,52,32,97,49,53,54,49,54,53,32,97,49,53,53,49,54,54,32,97,49,53,52,49,54,55,41,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,55,52,49,55,55,32,97,49,55,51,49,55,56,32,97,49,55,50,49,55,57,32,97,49,55,49,49,56,48,32,97,49,55,48,49,56,49,32,97,49,54,57,49,56,50,41,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,41,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,49,57,50,50,50,41,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,51,55,50,52,48,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,52,49,50,52,52,41,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,54,57,50,55,50,32,97,50,54,56,50,55,51,41,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,55,53,50,55,56,41,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,28),40,116,98,58,114,97,110,98,101,116,97,32,97,50,56,49,50,56,52,32,97,50,56,48,50,56,53,41,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,56,55,50,57,48,41,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,57,53,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,48,53,32,120,49,51,48,54,32,120,50,51,48,55,32,121,49,51,48,56,32,121,50,51,48,57,32,46,32,98,51,49,48,41,0,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,49,49,32,120,49,51,49,50,32,120,50,51,49,51,32,105,49,51,49,52,32,46,32,97,114,103,115,51,49,53,41,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,49,54,41,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,49,55,32,115,116,101,112,115,51,49,56,41,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,49,57,32,46,32,100,105,103,105,116,115,51,50,48,41,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,26),40,98,111,100,121,51,50,53,32,116,101,109,112,111,51,51,49,32,98,101,97,116,51,51,50,41,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,26),40,100,101,102,45,98,101,97,116,51,50,56,32,37,116,101,109,112,111,51,50,51,51,51,52,41,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,14),40,100,101,102,45,116,101,109,112,111,51,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,50,49,32,46,32,97,114,103,115,51,50,50,41,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,52,49,41};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,15),40,100,111,51,53,49,32,116,97,105,108,51,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,52,51,32,99,111,111,114,100,115,51,52,52,32,46,32,98,97,115,101,51,52,53,41,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,51,54,49,32,46,32,97,114,103,115,51,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,27),40,100,111,51,54,55,32,105,51,54,57,32,107,51,55,48,32,108,51,55,49,32,116,51,55,50,41,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,34),40,115,116,101,112,115,32,108,101,110,51,54,51,32,107,101,121,110,117,109,51,54,52,32,46,32,97,114,103,115,51,54,53,41,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,18),40,114,97,110,45,115,101,116,33,32,115,101,101,100,51,55,55,41,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,97,114,103,115,51,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,51,55,57,32,98,51,56,48,41,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,51,56,49,32,46,32,97,114,103,115,51,56,50,41,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,15),40,112,105,99,107,108,32,97,114,103,115,51,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,51,56,52,41};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,8),40,114,97,110,108,111,119,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,9),40,114,97,110,104,105,103,104,41,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,11),40,114,97,110,109,105,100,100,108,101,41,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,56,53,41,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,56,54,41,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,56,55,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,11),40,114,97,110,99,97,117,99,104,121,41,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,56,57,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,10),40,114,97,110,98,114,111,119,110,41,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,9),40,114,97,110,112,105,110,107,41,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,7),40,97,55,49,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,7),40,97,55,49,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,52,51,49,32,111,99,116,52,51,50,32,101,114,114,52,51,51,41,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,7),40,97,55,49,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,7),40,97,55,50,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,52,51,57,32,100,111,99,116,52,52,48,32,101,114,114,63,52,52,49,41,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,39),40,100,111,52,52,52,32,116,97,105,108,52,52,54,32,100,101,102,111,52,52,55,32,116,104,105,115,52,52,56,32,114,101,115,108,52,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,52,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,39),40,100,111,52,53,56,32,116,97,105,108,52,54,48,32,100,101,102,111,52,54,49,32,116,104,105,115,52,54,50,32,114,101,115,108,52,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,52,53,54,41,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,39),40,100,111,52,55,52,32,116,97,105,108,52,55,54,32,100,101,102,111,52,55,55,32,116,104,105,115,52,55,56,32,114,101,115,108,52,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,52,55,50,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,53,53,48,32,108,101,110,103,116,104,53,53,49,32,115,116,114,101,97,109,53,53,50,32,100,101,102,97,117,108,116,53,53,51,32,111,109,105,116,53,53,52,32,114,101,112,115,53,53,53,41,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,53,53,55,32,118,97,108,53,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,53,54,48,41,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,53,54,54,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,53,55,50,41,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,53,56,49,32,118,97,108,53,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,53,56,52,41,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,53,57,48,41,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,54,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,54,50,48,41,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,54,50,51,32,118,97,108,54,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,54,50,54,41,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,54,51,50,41,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,54,51,53,32,118,97,108,54,51,54,41};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,54,51,56,41,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,54,52,52,41,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,54,52,55,32,118,97,108,54,52,56,41};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,13),40,102,95,55,56,56,57,32,120,54,53,48,41,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,54,53,51,32,118,97,108,54,53,52,41};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,54,53,54,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,54,57,53,32,118,97,108,54,57,54,41};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,54,57,56,41,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,12),40,97,56,50,54,55,32,120,55,50,56,41,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,55,49,56,32,100,97,116,97,55,49,57,32,102,111,114,55,50,48,32,114,101,112,55,50,49,32,102,108,97,103,115,55,50,50,32,108,101,110,55,50,51,32,100,112,101,114,55,50,52,32,103,101,116,114,55,50,53,32,109,97,112,114,55,50,54,41,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,55,53,51,41,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,55,53,52,41,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,17),40,100,111,55,53,57,32,105,55,54,49,32,101,55,54,50,41,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,22),40,100,111,55,54,54,32,110,55,54,56,32,101,55,54,57,32,102,55,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,55,53,53,32,46,32,97,114,103,115,55,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,7),40,100,111,55,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,23),40,100,111,55,57,48,32,100,121,110,63,55,57,50,32,115,116,111,112,55,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,55,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,56,49,52,41};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,56,49,53,32,111,98,106,56,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,97,56,56,52,51,32,120,56,50,53,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,56,50,48,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,97,56,57,51,55,32,102,110,56,55,55,32,111,98,106,56,55,56,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,56,51,52,32,46,32,97,114,103,115,56,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,56,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,16),40,112,97,108,105,110,45,108,101,110,32,120,57,48,52,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,28),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,57,48,55,32,118,97,108,57,48,56,41,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,22),40,97,57,51,54,55,32,102,110,49,48,48,53,32,111,98,106,49,48,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,57,51,51,32,46,32,97,114,103,115,57,51,52,41,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,48,49,52,41,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,23),40,97,49,48,48,51,52,32,102,110,49,48,55,54,32,111,98,106,49,48,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,48,51,51,32,46,32,97,114,103,115,49,48,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,48,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,23),40,97,49,48,51,50,49,32,102,110,49,49,51,49,32,111,98,106,49,49,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,48,56,56,32,46,32,97,114,103,115,49,48,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,52,50,32,105,49,49,52,52,32,106,49,49,52,53,32,118,49,49,52,54,41,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,49,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,23),40,97,49,48,54,54,54,32,102,110,49,50,50,54,32,111,98,106,49,50,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,49,53,52,32,46,32,97,114,103,115,49,49,53,53,41,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,52,50,32,105,49,50,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,50,51,55,32,115,116,97,114,116,49,50,51,56,32,115,116,101,112,49,50,51,57,32,119,105,100,116,104,49,50,52,48,32,101,110,100,49,50,52,49,41,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,50,51,53,41,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,50,54,57,41,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,50,55,50,32,118,97,108,49,50,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,50,55,53,41,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,50,56,49,41,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,50,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,50,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,50,57,54,32,118,97,108,49,50,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,50,57,57,41,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,14),40,97,49,49,53,53,49,32,105,49,51,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,23),40,97,49,49,53,52,53,32,102,110,49,51,56,48,32,111,98,106,49,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,17),40,97,49,49,55,56,50,32,105,116,101,109,49,51,51,53,41,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,51,57,51,41,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,51,50,53,32,46,32,97,114,103,115,49,51,50,54,41,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,37),40,100,111,49,52,56,48,32,116,97,105,108,49,52,56,50,32,105,110,100,101,120,49,52,56,51,32,116,111,116,97,108,49,52,56,52,41,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,55,52,32,116,97,105,108,49,52,55,54,41,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,52,55,48,32,102,105,120,63,49,52,55,49,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,27),40,100,111,49,53,48,50,32,116,97,105,108,49,53,48,52,32,105,110,100,101,120,49,53,48,53,41,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,53,48,48,32,114,49,53,48,49,41,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,49,49,32,116,97,105,108,49,53,49,51,41,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,48,55,32,105,116,101,109,49,53,48,57,41,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,52,57,48,41,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,14),40,109,107,32,97,49,49,55,32,98,49,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,23),40,97,49,50,56,54,53,32,102,110,49,54,51,57,32,111,98,106,49,54,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,14),40,97,49,50,54,49,57,32,115,49,53,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,8),40,100,111,49,53,51,51,41};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,41),40,100,111,49,53,53,53,32,116,97,105,108,49,53,53,55,32,111,114,100,101,114,49,53,53,56,32,108,105,115,49,53,53,57,32,112,49,53,54,48,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,53,54,55,32,46,32,97,114,103,115,49,53,54,56,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,54,52,32,116,97,105,108,49,54,54,54,41,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,33),40,100,111,49,54,53,52,32,116,97,105,108,49,54,53,54,32,111,117,116,49,54,53,55,32,115,117,109,49,54,53,56,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,54,53,50,32,111,117,116,112,117,116,115,49,54,53,51,41,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,57,52,32,108,97,115,116,49,54,57,54,41,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,55,48,32,105,49,54,55,50,32,106,49,54,55,51,32,102,49,54,55,52,41,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,35),40,100,111,49,54,56,53,32,116,97,105,108,49,54,56,55,32,112,97,115,116,49,54,56,56,32,105,116,101,109,49,54,56,57,41,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,54,52,57,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,55,49,52,41};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,14),40,97,49,51,55,51,55,32,110,49,55,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,23),40,97,49,51,55,51,49,32,102,110,49,55,55,56,32,111,98,106,49,55,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,28),40,97,49,51,57,56,51,32,105,116,101,109,49,55,57,48,32,46,32,97,114,103,115,49,55,57,49,41,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,55,56,57,41,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,55,51,53,32,46,32,97,114,103,115,49,55,51,54,41};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,52,52,32,116,97,105,108,49,56,52,54,41,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,49,56,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,49,56,57,49,32,115,116,114,105,110,103,49,56,57,50,32,112,111,115,105,116,105,111,110,49,56,57,51,41,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,49,56,57,56,41,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,49,57,48,52,41,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,49,57,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,49,57,49,57,41,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,49,57,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,49,57,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,49,57,50,52,32,116,121,112,101,49,57,50,53,32,112,97,116,116,101,114,110,49,57,50,54,32,112,97,114,115,101,114,49,57,50,55,32,101,109,105,116,101,114,49,57,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,49,57,51,51,41,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,49,57,55,55,32,100,101,102,49,57,55,56,41,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,49,57,56,48,41,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,49,57,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,49,57,56,51,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,49,57,56,52,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,49,57,56,53,32,105,49,57,56,54,41,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,49,57,57,48,41,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,49,57,57,50,32,112,111,115,105,116,105,111,110,49,57,57,51,41,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,49,57,57,56,41,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,48,48,52,41,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,48,49,50,32,112,97,114,115,101,100,50,48,49,51,32,112,111,115,105,116,105,111,110,50,48,49,52,41,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,48,49,53,41,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,48,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,48,50,53,41,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,48,51,49,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,48,52,49,41,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,48,52,50,32,116,121,112,50,48,52,51,41,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,48,52,53,32,105,110,102,111,50,48,52,54,41,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,48,52,56,32,100,97,116,97,50,48,52,57,32,105,110,102,111,50,48,53,48,41,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,48,53,49,32,100,97,116,97,50,48,53,50,32,105,110,102,111,50,48,53,51,41,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,48,53,54,32,105,110,102,111,50,48,53,55,32,101,114,114,102,50,48,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,48,53,57,32,105,110,102,111,50,48,54,48,32,101,114,114,102,50,48,54,49,41,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,27),40,102,95,49,53,49,51,55,32,97,114,103,115,50,48,55,52,32,101,114,114,102,50,48,55,53,41,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,48,55,51,41,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,17),40,100,111,50,48,56,51,32,116,97,105,108,50,48,56,53,41,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,36),40,102,95,49,53,49,52,53,32,117,110,105,116,50,48,55,55,32,105,110,102,111,50,48,55,56,32,101,114,114,102,50,48,55,57,41,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,48,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,8),40,97,49,53,51,52,51,41};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,26),40,97,49,53,51,53,51,32,97,50,49,49,53,32,98,50,49,49,54,32,99,50,49,49,55,41,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,8),40,97,49,53,52,52,57,41};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,26),40,97,49,53,52,54,51,32,97,50,49,51,49,32,98,50,49,51,50,32,99,50,49,51,51,41,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,50,54,32,105,50,49,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,8),40,97,49,53,53,49,54,41};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,26),40,97,49,53,53,51,48,32,97,50,49,53,51,32,98,50,49,53,52,32,99,50,49,53,53,41,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,52,56,32,105,50,49,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,8),40,97,49,53,54,48,53,41};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,26),40,97,49,53,54,49,49,32,97,50,49,55,50,32,98,50,49,55,51,32,99,50,49,55,52,41,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,8),40,100,111,50,49,54,56,41};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,8),40,97,49,53,54,52,52,41};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,26),40,97,49,53,54,53,48,32,97,50,49,57,48,32,98,50,49,57,49,32,99,50,49,57,50,41,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,49,48,50,32,116,111,107,101,110,115,50,49,48,51,32,102,111,114,99,101,45,97,110,100,50,49,48,52,32,108,101,118,101,108,50,49,48,53,32,116,114,97,99,101,50,49,48,54,32,101,114,114,102,50,49,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,51,54,55,41,0,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,51,55,49,41,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,51,56,48,41,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,51,56,49,32,116,121,112,50,50,51,56,50,41,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,51,49,32,116,111,107,115,50,52,51,51,41,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,52,50,55,32,116,121,112,50,52,50,56,41,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,52,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,29),40,100,111,50,52,54,55,32,119,50,50,52,54,57,32,111,107,50,52,55,48,32,108,105,50,52,55,49,41,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,8),40,100,111,50,52,54,53,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,52,54,48,41,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,54,50,54,32,101,114,114,102,50,54,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,51,53,32,102,50,56,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,50,56,32,102,50,56,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,8),40,97,49,53,50,49,52,41};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,44),40,97,49,53,50,50,49,32,115,117,99,99,101,115,115,50,48,57,55,32,114,101,115,117,108,116,115,50,48,57,56,32,114,101,109,97,105,110,115,50,48,57,57,41,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,17),40,97,49,53,50,48,56,32,101,114,114,102,50,48,57,53,41,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,56,49,51,32,114,117,108,101,50,56,49,52,32,116,111,107,101,110,115,50,56,49,53,32,116,114,97,99,101,63,50,56,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,52,32,116,97,105,108,50,56,53,54,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,19),40,112,114,105,110,116,101,114,32,116,104,105,110,103,50,56,53,51,41,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,54,50,32,116,97,105,108,50,56,54,52,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,50,56,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,50,56,54,57,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,50,56,55,49,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,50,56,55,53,41,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,50,56,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,48,48,54,32,120,51,48,48,55,41};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,48,48,56,41,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,48,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,48,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,48,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,48,50,48,41,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,48,50,49,32,120,51,48,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,48,50,51,41,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,48,50,54,41,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,48,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,51,52,32,97,51,48,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,48,51,50,41,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,52,54,32,108,51,48,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,48,52,52,32,97,99,99,101,115,115,111,114,51,48,52,53,41};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,48,52,49,32,99,108,97,117,115,101,115,51,48,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,48,53,50,32,111,112,115,51,48,53,51,41};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,48,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,48,53,53,32,118,97,108,51,48,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,55,56,32,116,97,105,108,51,48,56,48,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,55,51,32,116,97,105,108,51,48,55,53,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,54,51,32,104,51,48,54,53,32,108,51,48,54,54,41,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,48,53,55,32,102,111,114,109,115,51,48,53,56,32,97,114,103,115,51,48,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,48,57,50,32,99,108,97,117,115,101,115,51,48,57,51,32,111,112,115,51,48,57,52,41,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,49,50,32,110,101,120,116,51,49,49,52,41,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,48,57,56,32,99,108,97,117,115,101,115,51,48,57,57,32,111,112,115,51,49,48,48,41,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,8),40,97,49,56,56,50,56,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,30),40,97,49,56,56,52,54,32,99,108,97,117,115,101,51,49,57,51,32,105,103,110,111,114,101,51,49,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,49,57,48,32,99,108,97,117,115,101,115,51,49,57,49,32,111,112,115,51,49,57,50,41,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,49,49,32,110,101,120,116,51,50,49,51,41,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,49,57,54,32,99,108,97,117,115,101,115,51,49,57,55,32,111,112,115,51,49,57,56,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,55,56,32,110,101,120,116,51,50,56,48,41,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,50,54,56,32,99,108,97,117,115,101,115,51,50,54,57,32,111,112,115,51,50,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,49,54,32,110,101,101,100,51,51,49,56,32,110,101,120,116,51,51,49,57,41,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,51,48,54,32,99,108,97,117,115,101,115,51,51,48,55,32,111,112,115,51,51,48,56,41,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,54,48,41};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,51,53,49,32,99,108,97,117,115,101,115,51,51,53,50,32,111,112,115,51,51,53,51,41};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,51,55,48,32,99,108,97,117,115,101,115,51,51,55,49,32,111,112,115,51,51,55,50,41,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,51,56,52,32,99,108,97,117,115,101,115,51,51,56,53,32,111,112,115,51,51,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,52,53,49,32,116,121,112,101,51,52,53,50,32,97,99,99,51,52,53,51,32,104,101,97,100,51,52,53,52,41,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,52,53,53,41};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,52,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,48,51,32,97,51,52,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,14),40,100,111,51,52,49,49,32,99,51,52,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,52,51,48,32,99,108,97,117,115,101,115,51,52,51,49,32,111,112,115,51,52,51,50,41,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,53,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,53,51,50,32,99,108,97,117,115,101,115,51,53,51,51,32,111,112,115,51,53,51,52,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,53,53,51,32,99,108,97,117,115,101,115,51,53,53,52,32,111,112,115,51,53,53,53,41,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,53,54,57,32,99,108,97,117,115,101,115,51,53,55,48,32,111,112,115,51,53,55,49,41,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,8),40,97,50,48,55,49,57,41};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,20),40,97,50,48,55,51,50,32,97,51,53,57,54,32,98,51,53,57,55,41,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,38),40,100,111,51,53,56,57,32,111,112,51,53,57,49,32,99,108,97,117,115,101,51,53,57,50,32,114,101,109,97,105,110,115,51,53,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,53,56,51,32,99,108,97,117,115,101,115,51,53,56,52,32,111,112,115,51,53,56,53,41,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,8),40,97,50,48,56,56,51,41};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,20),40,97,50,48,56,57,55,32,97,51,54,50,53,32,98,51,54,50,54,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,8),40,97,50,48,57,54,49,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,20),40,97,50,48,57,54,55,32,97,51,54,50,50,32,98,51,54,50,51,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,54,48,57,32,99,108,97,117,115,101,115,51,54,49,48,32,111,112,115,51,54,49,49,41,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,54,53,50,32,116,121,112,101,51,54,53,51,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,8),40,97,50,49,49,48,57,41};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,20),40,97,50,49,49,49,56,32,97,51,54,54,53,32,98,51,54,54,54,41,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,47),40,100,111,51,54,53,54,32,111,112,51,54,53,56,32,99,108,97,117,115,101,51,54,53,57,32,114,101,109,97,105,110,115,51,54,54,48,32,98,111,100,121,51,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,54,55,56,32,102,111,114,109,115,51,54,55,57,32,111,112,115,51,54,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,59),40,102,95,50,49,53,50,52,32,97,51,56,53,55,51,56,54,48,32,97,51,56,53,54,51,56,54,49,32,97,51,56,53,53,51,56,54,50,32,97,51,56,53,52,51,56,54,51,32,97,51,56,53,51,51,56,54,52,41,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,55,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,29),40,102,95,50,50,50,51,56,32,97,51,56,55,51,51,56,55,55,32,97,51,56,55,50,51,56,55,56,41,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,51,56,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,50,54,57,32,97,51,57,53,50,51,57,53,53,32,97,51,57,53,49,51,57,53,54,32,97,51,57,53,48,51,57,53,55,32,97,51,57,52,57,51,57,53,56,32,97,51,57,52,56,51,57,53,57,41,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,51,56,56,48,41};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,29),40,102,95,50,50,55,48,56,32,97,51,57,54,55,51,57,55,49,32,97,51,57,54,54,51,57,55,50,41,0,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,51,57,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,55,52,50,32,97,52,48,56,51,52,48,56,54,32,97,52,48,56,50,52,48,56,55,32,97,52,48,56,49,52,48,56,56,32,97,52,48,56,48,52,48,56,57,32,97,52,48,55,57,52,48,57,48,41,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,51,57,55,52,41,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,52,53,54,32,97,52,48,57,57,52,49,48,51,32,97,52,48,57,56,52,49,48,52,41,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,48,57,55,41,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,52,57,48,32,97,52,50,49,53,52,50,49,56,32,97,52,50,49,52,52,50,49,57,32,97,52,50,49,51,52,50,50,48,32,97,52,50,49,50,52,50,50,49,32,97,52,50,49,49,52,50,50,50,41,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,49,48,54,41,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,50,48,52,32,97,52,50,51,49,52,50,51,53,32,97,52,50,51,48,52,50,51,54,41,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,50,50,57,41};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,50,51,53,32,97,52,51,49,48,52,51,49,51,32,97,52,51,48,57,52,51,49,52,32,97,52,51,48,56,52,51,49,53,32,97,52,51,48,55,52,51,49,54,32,97,52,51,48,54,52,51,49,55,41,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,50,51,56,41,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,54,55,52,32,97,52,51,50,53,52,51,50,57,32,97,52,51,50,52,52,51,51,48,41,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,51,50,51,41};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,55,48,53,32,97,52,52,48,52,52,52,48,55,32,97,52,52,48,51,52,52,48,56,32,97,52,52,48,50,52,52,48,57,32,97,52,52,48,49,52,52,49,48,32,97,52,52,48,48,52,52,49,49,41,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,51,51,50,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,49,52,52,32,97,52,52,49,57,52,52,50,51,32,97,52,52,49,56,52,52,50,52,41,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,52,49,55,41,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,49,55,53,32,97,52,52,57,56,52,53,48,49,32,97,52,52,57,55,52,53,48,50,32,97,52,52,57,54,52,53,48,51,32,97,52,52,57,53,52,53,48,52,32,97,52,52,57,52,52,53,48,53,41,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,52,50,54,41,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,19),40,102,95,50,53,54,51,54,32,97,52,53,50,49,52,53,50,53,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,53,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,19),40,102,95,50,53,54,53,49,32,97,52,53,50,57,52,53,51,51,41,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,53,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,19),40,102,95,50,53,54,54,54,32,97,52,53,51,55,52,53,52,49,41,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,53,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,54,56,49,32,97,52,53,52,55,52,53,53,49,32,97,52,53,52,54,52,53,53,50,41,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,53,52,52,32,116,52,53,52,53,41,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,19),40,102,95,50,53,55,48,48,32,97,52,53,53,54,52,53,54,48,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,53,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,55,49,53,32,97,52,53,54,53,52,53,54,57,32,97,52,53,54,52,52,53,55,48,41,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,53,54,50,32,99,52,53,54,51,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,55,51,52,32,97,52,53,55,53,52,53,55,57,32,97,52,53,55,52,52,53,56,48,41,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,53,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,39),40,102,95,50,53,55,53,51,32,97,52,53,56,54,52,53,57,48,32,97,52,53,56,53,52,53,57,49,32,97,52,53,56,52,52,53,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,53,56,50,32,107,52,53,56,51,41,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,55,55,54,32,97,52,53,57,55,52,54,48,49,32,97,52,53,57,54,52,54,48,50,41,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,53,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,39),40,102,95,50,53,55,57,53,32,97,52,54,48,56,52,54,49,50,32,97,52,54,48,55,52,54,49,51,32,97,52,54,48,54,52,54,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,54,48,52,32,118,52,54,48,53,41,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,56,50,55,32,97,52,54,50,49,52,54,50,53,32,97,52,54,50,48,52,54,50,54,41,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,56,52,51,32,97,52,54,50,57,52,54,51,51,32,97,52,54,50,56,52,54,51,52,41,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,54,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,39),40,102,95,50,53,56,55,52,32,97,52,54,52,50,52,54,52,54,32,97,52,54,52,49,52,54,52,55,32,97,52,54,52,48,52,54,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,39),40,102,95,50,53,56,57,52,32,97,52,54,53,50,52,54,53,54,32,97,52,54,53,49,52,54,53,55,32,97,52,54,53,48,52,54,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,54,51,54,32,118,52,54,51,55,41,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,57,50,48,32,97,52,54,54,51,52,54,54,55,32,97,52,54,54,50,52,54,54,56,41,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,54,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,39),40,102,95,50,53,57,51,57,32,97,52,54,55,52,52,54,55,56,32,97,52,54,55,51,52,54,55,57,32,97,52,54,55,50,52,54,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,54,55,48,32,118,52,54,55,49,41,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,57,54,50,32,97,52,54,57,50,52,54,57,53,32,97,52,54,57,49,52,54,57,54,32,97,52,54,57,48,52,54,57,55,32,97,52,54,56,57,52,54,57,56,32,97,52,54,56,56,52,54,57,57,41,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,54,56,51,32,100,117,114,52,54,56,52,32,107,101,121,52,54,56,53,32,97,109,112,52,54,56,54,32,99,104,97,110,52,54,56,55,41,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,57,57,48,32,97,52,55,48,57,52,55,49,50,32,97,52,55,48,56,52,55,49,51,32,97,52,55,48,55,52,55,49,52,32,97,52,55,48,54,52,55,49,53,32,97,52,55,48,53,52,55,49,54,41,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,55,48,48,32,100,117,114,52,55,48,49,32,107,101,121,52,55,48,50,32,97,109,112,52,55,48,51,32,99,104,97,110,52,55,48,52,41,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,48,49,56,32,97,52,55,50,52,52,55,50,55,32,97,52,55,50,51,52,55,50,56,32,97,52,55,50,50,52,55,50,57,32,97,52,55,50,49,52,55,51,48,32,97,52,55,50,48,52,55,51,49,41,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,55,49,55,32,107,101,121,52,55,49,56,32,99,104,97,110,52,55,49,57,41,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,48,52,54,32,97,52,55,52,48,52,55,52,51,32,97,52,55,51,57,52,55,52,52,32,97,52,55,51,56,52,55,52,53,32,97,52,55,51,55,52,55,52,54,32,97,52,55,51,54,52,55,52,55,41,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,55,51,50,32,107,101,121,52,55,51,51,32,118,101,108,52,55,51,52,32,99,104,97,110,52,55,51,53,41,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,48,55,52,32,97,52,55,53,54,52,55,53,57,32,97,52,55,53,53,52,55,54,48,32,97,52,55,53,52,52,55,54,49,32,97,52,55,53,51,52,55,54,50,32,97,52,55,53,50,52,55,54,51,41,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,55,52,56,32,107,101,121,52,55,52,57,32,118,97,108,52,55,53,48,32,99,104,97,110,52,55,53,49,41,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,48,50,32,97,52,55,55,50,52,55,55,53,32,97,52,55,55,49,52,55,55,54,32,97,52,55,55,48,52,55,55,55,32,97,52,55,54,57,52,55,55,56,32,97,52,55,54,56,52,55,55,57,41,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,55,54,52,32,110,117,109,52,55,54,53,32,118,97,108,52,55,54,54,32,99,104,97,110,52,55,54,55,41,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,51,48,32,97,52,55,56,55,52,55,57,48,32,97,52,55,56,54,52,55,57,49,32,97,52,55,56,53,52,55,57,50,32,97,52,55,56,52,52,55,57,51,32,97,52,55,56,51,52,55,57,52,41,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,55,56,48,32,118,97,108,52,55,56,49,32,99,104,97,110,52,55,56,50,41,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,53,56,32,97,52,56,48,50,52,56,48,53,32,97,52,56,48,49,52,56,48,54,32,97,52,56,48,48,52,56,48,55,32,97,52,55,57,57,52,56,48,56,32,97,52,55,57,56,52,56,48,57,41,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,55,57,53,32,118,97,108,52,55,57,54,32,99,104,97,110,52,55,57,55,41,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,56,54,32,97,52,56,49,55,52,56,50,48,32,97,52,56,49,54,52,56,50,49,32,97,52,56,49,53,52,56,50,50,32,97,52,56,49,52,52,56,50,51,32,97,52,56,49,51,52,56,50,52,41,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,56,49,48,32,118,97,108,52,56,49,49,32,99,104,97,110,52,56,49,50,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,50,49,52,32,97,52,56,50,54,52,56,51,48,41,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,52,56,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,17),40,97,50,54,50,52,55,32,37,101,114,114,52,56,51,57,41,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,8),40,97,50,54,50,54,55,41};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,18),40,97,50,54,50,52,49,32,37,99,111,110,116,52,56,51,56,41,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,17),40,97,50,54,50,51,53,32,37,109,115,103,52,56,51,55,41,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,50,55,51,32,97,52,56,51,51,52,56,51,54,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,50,55,56,32,97,52,56,52,50,52,56,52,53,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,52,56,51,50,41,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,51,51,53,32,97,52,56,57,56,52,57,48,49,32,97,52,56,57,55,52,57,48,50,32,97,52,56,57,54,52,57,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,52,56,57,53,41,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,39),40,102,95,50,54,51,57,50,32,97,52,57,48,57,52,57,49,50,32,97,52,57,48,56,52,57,49,51,32,97,52,57,48,55,52,57,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,52,57,48,54,41,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,9),40,102,95,50,54,52,51,51,41,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,14),40,100,111,52,57,51,57,32,120,52,57,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,26),40,100,111,52,57,50,53,32,101,52,57,51,54,32,118,52,57,51,55,32,121,52,57,51,56,41,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,52,57,50,52,41,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,52,57,52,57,52,57,53,51,41,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,52,57,53,53,52,57,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,52,57,55,49,52,57,55,52,41,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,52,57,55,57,52,57,56,50,32,97,52,57,55,56,52,57,56,51,32,97,52,57,55,55,52,57,56,52,41};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,52,57,57,57,53,48,48,50,41,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,19),40,102,95,50,54,55,52,57,32,97,53,48,49,48,53,48,49,52,41,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,48,48,57,41};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,14),40,100,111,53,48,51,52,32,112,53,48,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,48,50,48,32,115,116,97,114,116,53,48,50,54,32,105,100,53,48,50,55,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,48,50,51,32,37,115,116,97,114,116,53,48,49,56,53,48,52,50,41,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,48,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,48,49,54,32,46,32,97,114,103,115,53,48,49,55,41,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,48,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,54,50,32,116,97,105,108,53,48,54,52,41,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,48,54,49,41,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,57,52,32,100,101,99,108,53,48,57,54,41,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,55,56,32,116,97,105,108,53,48,56,48,41,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,46),40,97,50,55,53,52,54,32,98,105,110,100,105,110,103,115,53,48,54,57,32,116,101,114,109,105,110,97,116,101,53,48,55,48,32,46,32,98,111,100,121,53,48,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,17),40,97,50,55,53,53,50,32,97,114,103,115,51,54,57,49,41,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,16),40,97,50,55,54,57,52,32,115,121,109,51,48,48,52,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,16),40,97,50,55,54,57,55,32,115,121,109,51,48,48,50,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,24),40,97,50,55,55,50,54,32,118,97,108,51,48,48,48,32,115,121,109,51,48,48,49,41};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,17),40,97,50,55,55,52,48,32,97,114,103,115,50,57,57,57,41,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,26),40,97,50,55,55,53,52,32,97,114,103,115,50,56,48,56,32,101,114,114,102,50,56,48,57,41,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,35),40,97,50,55,55,54,56,32,117,110,105,116,50,56,49,48,32,105,110,102,111,50,56,49,49,32,101,114,114,102,50,56,49,50,41,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,26),40,97,50,55,56,55,52,32,97,114,103,115,50,55,53,55,32,101,114,114,102,50,55,53,56,41,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,54,57,32,114,101,115,116,50,55,55,49,41,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,57,53,32,97,114,103,115,50,55,57,55,32,116,97,105,108,50,55,57,56,41,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,35),40,97,50,55,57,49,51,32,117,110,105,116,50,55,54,50,32,105,110,102,111,50,55,54,51,32,101,114,114,102,50,55,54,52,41,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,26),40,97,50,56,51,51,49,32,97,114,103,115,50,55,53,48,32,101,114,114,102,50,55,53,49,41,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,26),40,97,50,56,52,55,54,32,97,114,103,115,50,55,51,54,32,101,114,114,102,50,55,51,55,41,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,49,51,32,116,97,105,108,50,55,49,53,41,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,48,56,32,116,97,105,108,50,55,49,48,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,57,55,32,99,108,97,117,115,101,115,50,54,57,57,41,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,57,52,32,116,97,105,108,50,54,57,54,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,35),40,97,50,56,53,50,50,32,117,110,105,116,50,55,52,54,32,105,110,102,111,50,55,52,55,32,101,114,114,102,50,55,52,56,41,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,26),40,97,50,56,57,55,54,32,97,114,103,115,50,54,49,48,32,101,114,114,102,50,54,49,49,41,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,35),40,97,50,57,48,52,52,32,117,110,105,116,50,54,50,50,32,105,110,102,111,50,54,50,51,32,101,114,114,102,50,54,50,52,41,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,26),40,97,50,57,49,55,51,32,97,114,103,115,50,53,57,56,32,101,114,114,102,50,53,57,57,41,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,35),40,97,50,57,49,57,57,32,117,110,105,116,50,54,48,51,32,105,110,102,111,50,54,48,52,32,101,114,114,102,50,54,48,53,41,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,26),40,97,50,57,50,56,55,32,97,114,103,115,50,53,55,54,32,101,114,114,102,50,53,55,55,41,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,56,52,32,105,116,101,114,50,53,56,54,41,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,35),40,97,50,57,51,51,48,32,117,110,105,116,50,53,55,56,32,105,110,102,111,50,53,55,57,32,101,114,114,102,50,53,56,48,41,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,26),40,97,50,57,53,54,55,32,97,114,103,115,50,53,55,51,32,101,114,114,102,50,53,55,52,41,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,26),40,97,50,57,54,53,51,32,97,114,103,115,50,53,54,53,32,101,114,114,102,50,53,54,54,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,14),40,97,50,57,55,48,53,32,101,50,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,35),40,97,50,57,54,57,54,32,117,110,105,116,50,53,54,55,32,105,110,102,111,50,53,54,56,32,101,114,114,102,50,53,54,57,41,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,26),40,97,50,57,55,53,53,32,97,114,103,115,50,53,53,56,32,101,114,114,102,50,53,53,57,41,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,14),40,97,50,57,55,57,54,32,101,50,53,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,35),40,97,50,57,55,57,48,32,117,110,105,116,50,53,54,48,32,105,110,102,111,50,53,54,49,32,101,114,114,102,50,53,54,50,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,35),40,97,50,57,56,53,48,32,117,110,105,116,50,53,53,49,32,105,110,102,111,50,53,53,50,32,101,114,114,102,50,53,53,51,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,35),40,97,50,57,57,49,49,32,117,110,105,116,50,53,52,53,32,105,110,102,111,50,53,52,54,32,101,114,114,102,50,53,52,55,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,26),40,97,50,57,57,54,53,32,97,114,103,115,50,53,51,57,32,101,114,114,102,50,53,52,48,41,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,35),40,97,50,57,57,57,53,32,117,110,105,116,50,53,52,49,32,105,110,102,111,50,53,52,50,32,101,114,114,102,50,53,52,51,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,49,52,32,97,114,103,115,50,53,51,50,32,101,114,114,102,50,53,51,51,41,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,52,48,32,97,114,103,115,50,53,49,57,32,101,114,114,102,50,53,50,48,41,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,27),40,97,51,48,51,50,49,32,115,116,114,50,53,50,57,32,46,32,97,114,103,115,50,53,51,48,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,35),40,97,51,48,51,48,49,32,117,110,105,116,50,53,50,52,32,105,110,102,111,50,53,50,53,32,101,114,114,102,50,53,50,54,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,51,57,32,97,114,103,115,50,53,49,50,32,101,114,114,102,50,53,49,51,41,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,35),40,97,51,48,52,54,49,32,117,110,105,116,50,53,49,52,32,105,110,102,111,50,53,49,53,32,101,114,114,102,50,53,49,54,41,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,26),40,97,51,48,53,49,52,32,97,114,103,115,50,52,57,56,32,101,114,114,102,50,52,57,57,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,48,53,32,97,114,103,115,50,53,48,55,41,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,35),40,97,51,48,53,51,54,32,117,110,105,116,50,53,48,48,32,105,110,102,111,50,53,48,49,32,101,114,114,102,50,53,48,50,41,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,54,56,32,97,114,103,115,50,52,57,49,32,101,114,114,102,50,52,57,50,41,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,35),40,97,51,48,54,57,52,32,117,110,105,116,50,52,57,51,32,105,110,102,111,50,52,57,52,32,101,114,114,102,50,52,57,53,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,26),40,97,51,48,56,48,52,32,97,114,103,115,50,52,56,55,32,101,114,114,102,50,52,56,56,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,54,48,32,97,114,103,115,50,52,53,48,32,101,114,114,102,50,52,53,49,41,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,55,56,32,117,110,105,116,50,52,53,50,32,105,110,102,111,50,52,53,51,32,101,114,114,102,50,52,53,52,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,51,49,32,97,114,103,115,50,52,52,52,32,101,114,114,102,50,52,52,53,41,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,26),40,97,51,49,49,56,51,32,97,114,103,115,50,52,52,49,32,101,114,114,102,50,52,52,50,41,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,50,50,32,97,114,103,115,50,52,51,56,32,101,114,114,102,50,52,51,57,41,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,97,51,49,52,52,50,32,97,114,103,115,50,52,49,55,32,101,114,114,102,50,52,49,56,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,55,51,32,117,110,105,116,50,52,50,48,32,105,110,102,111,50,52,50,49,32,101,114,114,102,50,52,50,50,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,26),40,97,51,49,53,54,53,32,97,114,103,115,50,52,49,49,32,101,114,114,102,50,52,49,50,41,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,35),40,97,51,49,53,56,51,32,117,110,105,116,50,52,49,51,32,105,110,102,111,50,52,49,52,32,101,114,114,102,50,52,49,53,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,35),40,97,51,49,54,53,55,32,117,110,105,116,50,52,48,48,32,105,110,102,111,50,52,48,49,32,101,114,114,102,50,52,48,50,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,26),40,97,51,49,55,53,51,32,97,114,103,115,50,51,56,56,32,101,114,114,102,50,51,56,57,41,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,35),40,97,51,49,55,54,51,32,117,110,105,116,50,51,57,48,32,105,110,102,111,50,51,57,49,32,101,114,114,102,50,51,57,50,41,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,20),40,97,51,49,57,51,57,32,117,50,48,51,56,32,112,50,48,51,57,41,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,20),40,97,51,49,57,54,53,32,101,50,48,49,48,32,112,50,48,49,49,41,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,49,57,55,51,41,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,55,57,32,116,121,112,49,57,54,57,32,112,97,116,49,57,55,48,32,46,32,97,114,103,115,49,57,55,49,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,20),40,97,51,50,48,56,50,32,114,49,57,54,54,32,112,49,57,54,55,41,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,20),40,97,51,50,48,57,50,32,116,49,57,49,55,32,112,49,57,49,56,41,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,71),40,100,111,51,57,57,32,100,52,48,49,32,107,52,48,50,32,112,52,48,51,32,107,60,52,48,52,32,107,62,52,48,53,32,102,52,48,54,32,102,62,52,48,55,32,102,60,52,48,56,32,111,52,48,57,32,120,52,49,48,32,110,52,49,49,32,101,52,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,51,32,107,101,121,51,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,24),40,97,51,50,51,50,50,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,22),40,97,51,50,51,50,56,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,24),40,97,51,50,51,56,48,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k26752 */
static C_word C_fcall stub5011(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5011(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k26737 in hush in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub5005)
static void C_ccall stub5005(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5005(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26731 */
C_noret_decl(stub5000)
static void C_ccall stub5000(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5000(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26715 in cont in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub4995)
static void C_ccall stub4995(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub4995(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26706 in pause in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub4991)
static void C_ccall stub4991(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub4991(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26697 in paused? in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub4987)
static void C_ccall stub4987(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub4987(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26691 */
C_noret_decl(stub4980)
static void C_ccall stub4980(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub4980(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26671 in scheduler-set-time-milliseconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub4972)
static void C_ccall stub4972(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub4972(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k26662 in time-format in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
C_noret_decl(stub4967)
static void C_ccall stub4967(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub4967(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub4964(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub4964(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub4961(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub4961(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k26643 in print-error in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub4956(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4956(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k26629 in print-message in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub4950(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4950(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_26433 in cs:clear in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub4917(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub4917(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k26399 */
static C_word C_fcall stub4910(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4910(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k26342 */
static C_word C_fcall stub4899(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4899(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_26278 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub4843(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4843(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_26273 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub4834(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4834(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k26217 */
static C_word C_fcall stub4827(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4827(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k26205 */
static C_word C_fcall stub4818(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4818(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26177 */
static C_word C_fcall stub4803(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4803(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26149 */
static C_word C_fcall stub4788(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4788(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26121 */
static C_word C_fcall stub4773(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4773(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26093 */
static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4757(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26065 */
static C_word C_fcall stub4741(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4741(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26037 */
static C_word C_fcall stub4725(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4725(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k26009 */
static C_word C_fcall stub4710(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4710(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k25981 */
static C_word C_fcall stub4693(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4693(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k25950 */
static C_word C_fcall stub4675(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4675(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k25927 */
static C_word C_fcall stub4664(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4664(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k25905 */
static C_word C_fcall stub4653(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4653(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k25885 */
static C_word C_fcall stub4643(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4643(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k25850 */
static C_word C_fcall stub4630(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4630(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k25834 */
static C_word C_fcall stub4622(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4622(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k25806 */
static C_word C_fcall stub4609(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4609(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k25783 */
static C_word C_fcall stub4598(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4598(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k25764 */
static C_word C_fcall stub4587(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4587(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k25741 */
static C_word C_fcall stub4576(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4576(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k25722 */
static C_word C_fcall stub4566(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4566(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k25703 */
static C_word C_fcall stub4557(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4557(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k25688 */
static C_word C_fcall stub4548(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4548(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k25669 */
static C_word C_fcall stub4538(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4538(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k25654 */
static C_word C_fcall stub4530(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4530(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k25639 */
static C_word C_fcall stub4522(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4522(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k25621 */
static C_word C_fcall stub4514(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4514(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25194 */
static C_word C_fcall stub4499(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4499(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25151 */
static C_word C_fcall stub4420(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4420(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24724 */
static C_word C_fcall stub4405(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4405(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24681 */
static C_word C_fcall stub4326(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4326(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24254 */
static C_word C_fcall stub4311(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4311(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24211 */
static C_word C_fcall stub4232(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4232(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23509 */
static C_word C_fcall stub4216(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4216(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23463 */
static C_word C_fcall stub4100(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4100(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22761 */
static C_word C_fcall stub4084(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4084(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k22715 */
static C_word C_fcall stub3968(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub3968(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22288 */
static C_word C_fcall stub3953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub3953(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k22245 */
static C_word C_fcall stub3874(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub3874(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k21543 */
static C_word C_fcall stub3858(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub3858(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown */
static C_word C_fcall stub302(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink */
static C_word C_fcall stub299(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub299(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6397 */
static C_word C_fcall stub296(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy */
static C_word C_fcall stub292(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub292(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6387 */
static C_word C_fcall stub288(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub288(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6380 */
static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6369 */
static C_word C_fcall stub276(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub276(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6362 */
static C_word C_fcall stub270(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle */
static C_word C_fcall stub265(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub265(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh */
static C_word C_fcall stub262(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow */
static C_word C_fcall stub259(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6342 */
static C_word C_fcall stub254(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub254(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6331 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6320 */
static C_word C_fcall stub242(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub242(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6313 */
static C_word C_fcall stub238(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub238(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6303 */
static C_word C_fcall stub229(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub229(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6296 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6289 */
static C_word C_fcall stub220(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub220(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6282 */
static C_word C_fcall stub216(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub216(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6275 */
static C_word C_fcall stub211(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6268 */
static C_word C_fcall stub204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6253 */
static C_word C_fcall stub196(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub196(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6242 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6231 */
static C_word C_fcall stub184(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub184(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6224 */
static C_word C_fcall stub175(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub175(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6197 */
static C_word C_fcall stub160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5783 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5765 in cwd in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5158)
static void C_ccall f_5158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5161)
static void C_ccall f_5161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5164)
static void C_ccall f_5164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5167)
static void C_ccall f_5167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32381)
static void C_ccall f_32381(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32381)
static void C_ccall f_32381r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5458)
static void C_ccall f_5458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5462)
static void C_ccall f_5462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32329)
static void C_ccall f_32329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32376)
static void C_ccall f_32376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32366)
static void C_ccall f_32366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32333)
static void C_ccall f_32333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5465)
static void C_ccall f_5465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32323)
static void C_ccall f_32323(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32323)
static void C_ccall f_32323r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5758)
static void C_ccall f_5758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7137)
static void C_ccall f_7137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32107)
static void C_fcall f_32107(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32321)
static void C_ccall f_32321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32141)
static void C_ccall f_32141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32153)
static void C_ccall f_32153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32157)
static void C_ccall f_32157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32161)
static void C_ccall f_32161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32305)
static void C_ccall f_32305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32167)
static void C_fcall f_32167(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_32187)
static void C_fcall f_32187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32190)
static void C_fcall f_32190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32198)
static void C_ccall f_32198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32205)
static void C_ccall f_32205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32208)
static void C_ccall f_32208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32212)
static void C_ccall f_32212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32219)
static void C_ccall f_32219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32222)
static void C_ccall f_32222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32226)
static void C_ccall f_32226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32233)
static void C_ccall f_32233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32177)
static void C_ccall f_32177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32130)
static void C_ccall f_32130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32120)
static void C_ccall f_32120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32123)
static void C_ccall f_32123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7140)
static void C_ccall f_7140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32093)
static void C_ccall f_32093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32101)
static void C_ccall f_32101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32105)
static void C_ccall f_32105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14383)
static void C_ccall f_14383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14434)
static void C_ccall f_14434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32083)
static void C_ccall f_32083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32091)
static void C_ccall f_32091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14539)
static void C_ccall f_14539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31980)
static void C_ccall f_31980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_31980)
static void C_ccall f_31980r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_32043)
static void C_ccall f_32043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32047)
static void C_ccall f_32047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32061)
static void C_fcall f_32061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31983)
static void C_fcall f_31983(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32003)
static void C_ccall f_32003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32007)
static void C_ccall f_32007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14542)
static void C_ccall f_14542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31966)
static void C_ccall f_31966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31974)
static void C_ccall f_31974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31978)
static void C_ccall f_31978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14735)
static void C_ccall f_14735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31940)
static void C_ccall f_31940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31944)
static void C_ccall f_31944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31950)
static void C_ccall f_31950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31961)
static void C_ccall f_31961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31957)
static void C_ccall f_31957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14804)
static void C_ccall f_14804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31918)
static void C_ccall f_31918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16049)
static void C_ccall f_16049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31898)
static void C_ccall f_31898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16052)
static void C_ccall f_16052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31858)
static void C_ccall f_31858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16055)
static void C_ccall f_16055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31764)
static void C_ccall f_31764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31768)
static void C_ccall f_31768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31771)
static void C_ccall f_31771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31789)
static void C_ccall f_31789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31792)
static void C_ccall f_31792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31823)
static void C_ccall f_31823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31795)
static void C_fcall f_31795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31801)
static void C_ccall f_31801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31754)
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31748)
static void C_ccall f_31748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16058)
static void C_ccall f_16058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31656)
static void C_ccall f_31656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31658)
static void C_ccall f_31658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31662)
static void C_ccall f_31662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31665)
static void C_ccall f_31665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31668)
static void C_ccall f_31668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31708)
static void C_ccall f_31708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31700)
static void C_ccall f_31700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31671)
static void C_ccall f_31671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31674)
static void C_ccall f_31674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31677)
static void C_ccall f_31677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31648)
static void C_ccall f_31648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16061)
static void C_ccall f_16061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31620)
static void C_ccall f_31620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16064)
static void C_ccall f_16064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31584)
static void C_ccall f_31584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31596)
static void C_ccall f_31596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_ccall f_31592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31566)
static void C_ccall f_31566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31560)
static void C_ccall f_31560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16067)
static void C_ccall f_16067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31478)
static void C_ccall f_31478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31481)
static void C_ccall f_31481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31484)
static void C_ccall f_31484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31443)
static void C_ccall f_31443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31447)
static void C_ccall f_31447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31462)
static void C_ccall f_31462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31437)
static void C_ccall f_31437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16070)
static void C_ccall f_16070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31323)
static void C_ccall f_31323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31339)
static void C_ccall f_31339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31350)
static void C_ccall f_31350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31317)
static void C_ccall f_31317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16126)
static void C_ccall f_16126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31184)
static void C_ccall f_31184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31207)
static void C_ccall f_31207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31204)
static void C_ccall f_31204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31178)
static void C_ccall f_31178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16129)
static void C_ccall f_16129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31032)
static void C_ccall f_31032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31050)
static void C_ccall f_31050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31059)
static void C_ccall f_31059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31026)
static void C_ccall f_31026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16132)
static void C_ccall f_16132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30979)
static void C_ccall f_30979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30983)
static void C_ccall f_30983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30986)
static void C_ccall f_30986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31002)
static void C_ccall f_31002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30961)
static void C_ccall f_30961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30955)
static void C_ccall f_30955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16135)
static void C_ccall f_16135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30879)
static void C_ccall f_30879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16274)
static void C_ccall f_16274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30805)
static void C_ccall f_30805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30812)
static void C_ccall f_30812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30799)
static void C_ccall f_30799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16277)
static void C_ccall f_16277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30695)
static void C_ccall f_30695(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30703)
static void C_ccall f_30703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30669)
static void C_ccall f_30669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30686)
static void C_ccall f_30686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30677)
static void C_fcall f_30677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30663)
static void C_ccall f_30663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16280)
static void C_ccall f_16280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30619)
static void C_ccall f_30619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16283)
static void C_ccall f_16283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30537)
static void C_ccall f_30537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30548)
static void C_ccall f_30548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30550)
static void C_fcall f_30550(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30579)
static void C_ccall f_30579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30515)
static void C_ccall f_30515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30531)
static void C_ccall f_30531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30509)
static void C_ccall f_30509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16286)
static void C_ccall f_16286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30462)
static void C_ccall f_30462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30466)
static void C_ccall f_30466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30473)
static void C_ccall f_30473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30440)
static void C_ccall f_30440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30456)
static void C_ccall f_30456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30434)
static void C_ccall f_30434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16289)
static void C_ccall f_16289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30302)
static void C_ccall f_30302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30342)
static void C_ccall f_30342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30306)
static void C_ccall f_30306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30322)
static void C_ccall f_30322(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_30322)
static void C_ccall f_30322r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_30334)
static void C_ccall f_30334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30338)
static void C_ccall f_30338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30330)
static void C_ccall f_30330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30241)
static void C_ccall f_30241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30288)
static void C_ccall f_30288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30248)
static void C_fcall f_30248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30259)
static void C_ccall f_30259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30235)
static void C_ccall f_30235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16292)
static void C_ccall f_16292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30215)
static void C_ccall f_30215(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30209)
static void C_ccall f_30209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16295)
static void C_ccall f_16295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30189)
static void C_ccall f_30189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30193)
static void C_ccall f_30193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30181)
static void C_ccall f_30181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16298)
static void C_ccall f_16298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30161)
static void C_ccall f_30161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30165)
static void C_ccall f_30165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30153)
static void C_ccall f_30153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16301)
static void C_ccall f_16301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30133)
static void C_ccall f_30133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30137)
static void C_ccall f_30137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30125)
static void C_ccall f_30125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16304)
static void C_ccall f_16304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30105)
static void C_ccall f_30105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30109)
static void C_ccall f_30109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30097)
static void C_ccall f_30097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29996)
static void C_ccall f_29996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29966)
static void C_ccall f_29966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29990)
static void C_ccall f_29990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29960)
static void C_ccall f_29960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16310)
static void C_ccall f_16310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29910)
static void C_ccall f_29910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29912)
static void C_ccall f_29912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29916)
static void C_ccall f_29916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29944)
static void C_ccall f_29944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29936)
static void C_ccall f_29936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29932)
static void C_ccall f_29932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29919)
static void C_ccall f_29919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29902)
static void C_ccall f_29902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16313)
static void C_ccall f_16313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29849)
static void C_ccall f_29849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29851)
static void C_ccall f_29851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29855)
static void C_ccall f_29855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29886)
static void C_ccall f_29886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29878)
static void C_ccall f_29878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29874)
static void C_ccall f_29874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29858)
static void C_ccall f_29858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29861)
static void C_ccall f_29861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29841)
static void C_ccall f_29841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16316)
static void C_ccall f_16316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29791)
static void C_ccall f_29791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29805)
static void C_ccall f_29805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29797)
static void C_ccall f_29797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29756)
static void C_ccall f_29756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29789)
static void C_ccall f_29789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29750)
static void C_ccall f_29750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16319)
static void C_ccall f_16319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29697)
static void C_ccall f_29697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29701)
static void C_ccall f_29701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29714)
static void C_ccall f_29714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29706)
static void C_ccall f_29706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29654)
static void C_ccall f_29654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29687)
static void C_ccall f_29687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29648)
static void C_ccall f_29648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16322)
static void C_ccall f_16322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29568)
static void C_ccall f_29568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29562)
static void C_ccall f_29562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16325)
static void C_ccall f_16325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29331)
static void C_ccall f_29331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29343)
static void C_fcall f_29343(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29366)
static void C_ccall f_29366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29369)
static void C_ccall f_29369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29372)
static void C_ccall f_29372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29375)
static void C_ccall f_29375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29435)
static void C_ccall f_29435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29442)
static void C_ccall f_29442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29452)
static void C_ccall f_29452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29462)
static void C_ccall f_29462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29476)
static void C_ccall f_29476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29486)
static void C_ccall f_29486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29496)
static void C_ccall f_29496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29506)
static void C_ccall f_29506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29378)
static void C_fcall f_29378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29402)
static void C_fcall f_29402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29381)
static void C_fcall f_29381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_ccall f_29288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29321)
static void C_ccall f_29321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29282)
static void C_ccall f_29282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16328)
static void C_ccall f_16328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29200)
static void C_ccall f_29200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29204)
static void C_ccall f_29204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29210)
static void C_ccall f_29210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29230)
static void C_ccall f_29230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29174)
static void C_ccall f_29174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29184)
static void C_fcall f_29184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29168)
static void C_ccall f_29168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16331)
static void C_ccall f_16331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29045)
static void C_ccall f_29045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29049)
static void C_ccall f_29049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28977)
static void C_ccall f_28977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28996)
static void C_ccall f_28996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29031)
static void C_ccall f_29031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29002)
static void C_fcall f_29002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29006)
static void C_ccall f_29006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29020)
static void C_ccall f_29020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29009)
static void C_fcall f_29009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28990)
static void C_fcall f_28990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28971)
static void C_ccall f_28971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16334)
static void C_ccall f_16334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28699)
static void C_ccall f_28699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16857)
static void C_ccall f_16857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28651)
static void C_ccall f_28651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28643)
static void C_ccall f_28643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16860)
static void C_ccall f_16860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28523)
static void C_ccall f_28523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16866)
static void C_ccall f_16866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17341)
static void C_ccall f_17341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17375)
static void C_ccall f_17375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17367)
static void C_ccall f_17367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17363)
static void C_ccall f_17363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17348)
static void C_ccall f_17348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17352)
static void C_ccall f_17352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17345)
static void C_ccall f_17345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16884)
static void C_fcall f_16884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17334)
static void C_ccall f_17334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17330)
static void C_ccall f_17330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16891)
static void C_fcall f_16891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17205)
static void C_fcall f_17205(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17226)
static void C_ccall f_17226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17228)
static void C_fcall f_17228(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17242)
static void C_ccall f_17242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17295)
static void C_ccall f_17295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17245)
static void C_fcall f_17245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17280)
static void C_ccall f_17280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17248)
static void C_fcall f_17248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17261)
static void C_ccall f_17261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17273)
static void C_ccall f_17273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17265)
static void C_ccall f_17265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17251)
static void C_fcall f_17251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17215)
static void C_ccall f_17215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16894)
static void C_ccall f_16894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17169)
static void C_fcall f_17169(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17195)
static void C_ccall f_17195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17180)
static void C_ccall f_17180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16897)
static void C_ccall f_16897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16901)
static void C_ccall f_16901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17113)
static void C_fcall f_17113(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17123)
static void C_ccall f_17123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17126)
static void C_ccall f_17126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17147)
static void C_ccall f_17147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17129)
static void C_fcall f_17129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17133)
static void C_ccall f_17133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16904)
static void C_ccall f_16904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16907)
static void C_fcall f_16907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17076)
static void C_ccall f_17076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17084)
static void C_ccall f_17084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17080)
static void C_ccall f_17080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16910)
static void C_fcall f_16910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16938)
static void C_ccall f_16938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16941)
static void C_ccall f_16941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16944)
static void C_ccall f_16944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16947)
static void C_ccall f_16947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16950)
static void C_ccall f_16950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17009)
static void C_ccall f_17009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28477)
static void C_ccall f_28477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28493)
static void C_ccall f_28493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28496)
static void C_ccall f_28496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28499)
static void C_fcall f_28499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28502)
static void C_fcall f_28502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28513)
static void C_ccall f_28513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28471)
static void C_ccall f_28471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17382)
static void C_ccall f_17382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28332)
static void C_ccall f_28332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28371)
static void C_ccall f_28371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28345)
static void C_fcall f_28345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28326)
static void C_ccall f_28326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17385)
static void C_ccall f_17385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27914)
static void C_ccall f_27914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27918)
static void C_ccall f_27918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27930)
static void C_ccall f_27930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27988)
static void C_ccall f_27988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27991)
static void C_ccall f_27991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27994)
static void C_ccall f_27994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28206)
static void C_ccall f_28206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28144)
static void C_ccall f_28144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28178)
static void C_ccall f_28178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28153)
static void C_fcall f_28153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28164)
static void C_ccall f_28164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_ccall f_28160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28003)
static void C_fcall f_28003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28081)
static void C_ccall f_28081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28122)
static void C_ccall f_28122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28126)
static void C_ccall f_28126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28130)
static void C_ccall f_28130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28085)
static void C_ccall f_28085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28089)
static void C_ccall f_28089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28116)
static void C_ccall f_28116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28092)
static void C_fcall f_28092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28006)
static void C_fcall f_28006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28078)
static void C_ccall f_28078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28020)
static void C_ccall f_28020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28022)
static void C_fcall f_28022(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28070)
static void C_ccall f_28070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28041)
static void C_ccall f_28041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28058)
static void C_ccall f_28058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28044)
static void C_fcall f_28044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28037)
static void C_ccall f_28037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28009)
static void C_ccall f_28009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27939)
static void C_fcall f_27939(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27949)
static void C_ccall f_27949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27955)
static void C_ccall f_27955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27927)
static void C_ccall f_27927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27875)
static void C_ccall f_27875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27892)
static void C_ccall f_27892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27908)
static void C_ccall f_27908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27886)
static void C_fcall f_27886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27869)
static void C_ccall f_27869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17388)
static void C_ccall f_17388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27793)
static void C_ccall f_27793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17391)
static void C_ccall f_17391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27769)
static void C_ccall f_27769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27781)
static void C_ccall f_27781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27777)
static void C_ccall f_27777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27755)
static void C_ccall f_27755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27763)
static void C_ccall f_27763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27749)
static void C_ccall f_27749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17394)
static void C_ccall f_17394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27741)
static void C_ccall f_27741(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21184)
static void C_ccall f_21184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21187)
static void C_ccall f_21187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21353)
static void C_ccall f_21353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21349)
static void C_ccall f_21349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21339)
static void C_fcall f_21339(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21194)
static void C_ccall f_21194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21198)
static void C_ccall f_21198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21201)
static void C_fcall f_21201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21212)
static void C_ccall f_21212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_ccall f_21220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21292)
static void C_ccall f_21292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21296)
static void C_ccall f_21296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21288)
static void C_ccall f_21288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21284)
static void C_ccall f_21284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21256)
static void C_ccall f_21256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21252)
static void C_ccall f_21252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21216)
static void C_ccall f_21216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17831)
static void C_ccall f_17831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27727)
static void C_ccall f_27727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17834)
static void C_ccall f_17834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27698)
static void C_ccall f_27698(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27702)
static void C_ccall f_27702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17837)
static void C_ccall f_17837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27695)
static void C_ccall f_27695(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17840)
static void C_ccall f_17840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27553)
static void C_ccall f_27553(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21366)
static void C_ccall f_21366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21498)
static void C_ccall f_21498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21369)
static void C_ccall f_21369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21380)
static void C_ccall f_21380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21388)
static void C_ccall f_21388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21412)
static void C_ccall f_21412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21415)
static void C_fcall f_21415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21423)
static void C_ccall f_21423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21431)
static void C_ccall f_21431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21451)
static void C_ccall f_21451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21447)
static void C_ccall f_21447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21427)
static void C_ccall f_21427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21419)
static void C_ccall f_21419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21408)
static void C_ccall f_21408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21384)
static void C_ccall f_21384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21360)
static void C_ccall f_21360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26282)
static void C_ccall f_26282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26285)
static void C_ccall f_26285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26288)
static void C_ccall f_26288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26291)
static void C_ccall f_26291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26294)
static void C_ccall f_26294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26297)
static void C_ccall f_26297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26300)
static void C_ccall f_26300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26303)
static void C_ccall f_26303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26306)
static void C_ccall f_26306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26309)
static void C_ccall f_26309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26312)
static void C_ccall f_26312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26437)
static void C_ccall f_26437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26440)
static void C_ccall f_26440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26443)
static void C_ccall f_26443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27547)
static void C_ccall f_27547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_27547)
static void C_ccall f_27547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_27101)
static void C_ccall f_27101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27104)
static void C_ccall f_27104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27382)
static void C_fcall f_27382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27490)
static void C_ccall f_27490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27402)
static void C_fcall f_27402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27411)
static void C_fcall f_27411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27415)
static void C_ccall f_27415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27419)
static void C_ccall f_27419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27427)
static void C_fcall f_27427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27423)
static void C_ccall f_27423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27392)
static void C_ccall f_27392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27107)
static void C_ccall f_27107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27110)
static void C_ccall f_27110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27113)
static void C_ccall f_27113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27116)
static void C_ccall f_27116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27119)
static void C_ccall f_27119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27376)
static void C_ccall f_27376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27275)
static void C_fcall f_27275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27282)
static void C_ccall f_27282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27284)
static void C_fcall f_27284(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27356)
static void C_ccall f_27356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27308)
static void C_fcall f_27308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27311)
static void C_ccall f_27311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27298)
static void C_ccall f_27298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27122)
static void C_ccall f_27122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27264)
static void C_ccall f_27264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27252)
static void C_ccall f_27252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27248)
static void C_ccall f_27248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27129)
static void C_fcall f_27129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27086)
static void C_ccall f_27086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27545)
static void C_ccall f_27545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27076)
static void C_ccall f_27076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26739)
static void C_ccall f_26739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27080)
static void C_ccall f_27080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27018)
static void C_ccall f_27018(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27018)
static void C_ccall f_27018r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27036)
static void C_fcall f_27036(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27046)
static void C_ccall f_27046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27022)
static void C_ccall f_27022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27009)
static void C_ccall f_27009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26717)
static void C_ccall f_26717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27013)
static void C_ccall f_27013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27003)
static void C_ccall f_27003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26699)
static void C_ccall f_26699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26994)
static void C_ccall f_26994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26708)
static void C_ccall f_26708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26998)
static void C_ccall f_26998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26956)
static void C_fcall f_26956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26664)
static void C_ccall f_26664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26944)
static void C_ccall f_26944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26763)
static void C_ccall f_26763(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_26763)
static void C_ccall f_26763r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_26882)
static void C_fcall f_26882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26877)
static void C_fcall f_26877(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26765)
static void C_fcall f_26765(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26872)
static void C_ccall f_26872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26876)
static void C_ccall f_26876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26868)
static void C_ccall f_26868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26836)
static void C_fcall f_26836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26861)
static void C_ccall f_26861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26865)
static void C_ccall f_26865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26846)
static void C_ccall f_26846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26825)
static void C_ccall f_26825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26795)
static void C_fcall f_26795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26767)
static void C_fcall f_26767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26744)
static void C_ccall f_26744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26749)
static void C_ccall f_26749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26754)
static void C_ccall f_26754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26722)
static void C_fcall f_26722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26726)
static void C_ccall f_26726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26678)
static void C_fcall f_26678(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26682)
static void C_ccall f_26682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26669)
static void C_fcall f_26669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26673)
static void C_ccall f_26673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26657)
static void C_ccall f_26657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26654)
static void C_ccall f_26654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26640)
static void C_ccall f_26640(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26645)
static void C_ccall f_26645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26626)
static void C_ccall f_26626(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26631)
static void C_ccall f_26631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26445)
static void C_ccall f_26445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26506)
static void C_ccall f_26506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26508)
static void C_fcall f_26508(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26534)
static void C_fcall f_26534(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26574)
static void C_ccall f_26574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26616)
static void C_ccall f_26616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26586)
static void C_ccall f_26586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26571)
static void C_fcall f_26571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26492)
static void C_ccall f_26492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26457)
static void C_ccall f_26457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26484)
static void C_ccall f_26484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26465)
static void C_ccall f_26465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26472)
static void C_ccall f_26472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26476)
static void C_ccall f_26476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26480)
static void C_ccall f_26480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26554)
static void C_ccall f_26554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26532)
static void C_ccall f_26532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26518)
static void C_ccall f_26518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26521)
static void C_ccall f_26521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26499)
static void C_ccall f_26499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26428)
static void C_ccall f_26428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26433)
static void C_ccall f_26433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26371)
static void C_ccall f_26371(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26371)
static void C_ccall f_26371r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26404)
static void C_fcall f_26404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26384)
static void C_fcall f_26384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26392)
static void C_ccall f_26392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26375)
static void C_ccall f_26375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26314)
static void C_ccall f_26314(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26314)
static void C_ccall f_26314r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26347)
static void C_fcall f_26347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26327)
static void C_fcall f_26327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26335)
static void C_ccall f_26335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26318)
static void C_ccall f_26318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26224)
static void C_ccall f_26224(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26278)
static void C_ccall f_26278(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26273)
static void C_ccall f_26273(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26236)
static void C_ccall f_26236(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26242)
static void C_ccall f_26242(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26268)
static void C_ccall f_26268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26272)
static void C_ccall f_26272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26248)
static void C_ccall f_26248(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26266)
static void C_ccall f_26266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26263)
static void C_ccall f_26263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26252)
static void C_ccall f_26252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26209)
static void C_ccall f_26209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26214)
static void C_ccall f_26214(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26181)
static void C_ccall f_26181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26186)
static void C_ccall f_26186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26153)
static void C_ccall f_26153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26158)
static void C_ccall f_26158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26125)
static void C_ccall f_26125(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26130)
static void C_ccall f_26130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26097)
static void C_ccall f_26097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26102)
static void C_ccall f_26102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26069)
static void C_ccall f_26069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26074)
static void C_ccall f_26074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26041)
static void C_ccall f_26041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26013)
static void C_ccall f_26013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26018)
static void C_ccall f_26018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25985)
static void C_ccall f_25985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25990)
static void C_ccall f_25990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25957)
static void C_ccall f_25957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25962)
static void C_ccall f_25962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25934)
static void C_ccall f_25934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25939)
static void C_ccall f_25939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25938)
static void C_ccall f_25938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25915)
static void C_ccall f_25915(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25920)
static void C_ccall f_25920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25860)
static void C_ccall f_25860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25867)
static void C_ccall f_25867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25870)
static void C_ccall f_25870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25894)
static void C_ccall f_25894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25874)
static void C_ccall f_25874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25864)
static void C_ccall f_25864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25813)
static void C_ccall f_25813(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25820)
static void C_ccall f_25820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25823)
static void C_ccall f_25823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25843)
static void C_ccall f_25843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25827)
static void C_ccall f_25827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25790)
static void C_ccall f_25790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25795)
static void C_ccall f_25795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25794)
static void C_ccall f_25794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25771)
static void C_ccall f_25771(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25776)
static void C_ccall f_25776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25748)
static void C_ccall f_25748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25753)
static void C_ccall f_25753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25752)
static void C_ccall f_25752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25729)
static void C_ccall f_25729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25734)
static void C_ccall f_25734(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25710)
static void C_ccall f_25710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25715)
static void C_ccall f_25715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25714)
static void C_ccall f_25714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25695)
static void C_ccall f_25695(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25700)
static void C_ccall f_25700(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25676)
static void C_ccall f_25676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25681)
static void C_ccall f_25681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25680)
static void C_ccall f_25680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25661)
static void C_ccall f_25661(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25666)
static void C_ccall f_25666(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25646)
static void C_ccall f_25646(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25651)
static void C_ccall f_25651(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25628)
static void C_ccall f_25628(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25636)
static void C_ccall f_25636(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25632)
static void C_ccall f_25632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25158)
static void C_ccall f_25158(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25158)
static void C_ccall f_25158r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25586)
static void C_ccall f_25586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25601)
static void C_ccall f_25601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25593)
static void C_ccall f_25593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25557)
static void C_ccall f_25557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25561)
static void C_ccall f_25561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25522)
static void C_ccall f_25522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25526)
static void C_ccall f_25526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25487)
static void C_ccall f_25487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25491)
static void C_ccall f_25491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25162)
static void C_fcall f_25162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25451)
static void C_ccall f_25451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25466)
static void C_ccall f_25466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25458)
static void C_ccall f_25458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25422)
static void C_ccall f_25422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25426)
static void C_ccall f_25426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25387)
static void C_ccall f_25387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25391)
static void C_ccall f_25391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25352)
static void C_ccall f_25352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25356)
static void C_ccall f_25356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25165)
static void C_fcall f_25165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25316)
static void C_ccall f_25316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25331)
static void C_ccall f_25331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25323)
static void C_ccall f_25323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25287)
static void C_ccall f_25287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25291)
static void C_ccall f_25291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25252)
static void C_ccall f_25252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25256)
static void C_ccall f_25256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25217)
static void C_ccall f_25217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25221)
static void C_ccall f_25221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25168)
static void C_fcall f_25168(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25171)
static void C_ccall f_25171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25175)
static void C_ccall f_25175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25139)
static void C_ccall f_25139(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25144)
static void C_ccall f_25144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24688)
static void C_ccall f_24688(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24688)
static void C_ccall f_24688r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25116)
static void C_ccall f_25116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25131)
static void C_ccall f_25131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25123)
static void C_ccall f_25123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_ccall f_25087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25052)
static void C_ccall f_25052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25056)
static void C_ccall f_25056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25017)
static void C_ccall f_25017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25021)
static void C_ccall f_25021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24692)
static void C_fcall f_24692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24981)
static void C_ccall f_24981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24996)
static void C_ccall f_24996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24988)
static void C_ccall f_24988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24952)
static void C_ccall f_24952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24956)
static void C_ccall f_24956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24917)
static void C_ccall f_24917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24921)
static void C_ccall f_24921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24882)
static void C_ccall f_24882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24886)
static void C_ccall f_24886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24695)
static void C_fcall f_24695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24846)
static void C_ccall f_24846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24861)
static void C_ccall f_24861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24853)
static void C_ccall f_24853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24817)
static void C_ccall f_24817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24821)
static void C_ccall f_24821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24782)
static void C_ccall f_24782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24786)
static void C_ccall f_24786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24751)
static void C_ccall f_24751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24698)
static void C_fcall f_24698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24701)
static void C_ccall f_24701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24705)
static void C_ccall f_24705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24669)
static void C_ccall f_24669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24674)
static void C_ccall f_24674(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24218)
static void C_ccall f_24218(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24218)
static void C_ccall f_24218r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24646)
static void C_ccall f_24646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24661)
static void C_ccall f_24661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24653)
static void C_ccall f_24653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24617)
static void C_ccall f_24617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24621)
static void C_ccall f_24621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24582)
static void C_ccall f_24582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24586)
static void C_ccall f_24586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24547)
static void C_ccall f_24547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24551)
static void C_ccall f_24551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24222)
static void C_fcall f_24222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24511)
static void C_ccall f_24511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24526)
static void C_ccall f_24526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24518)
static void C_ccall f_24518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24482)
static void C_ccall f_24482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24486)
static void C_ccall f_24486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24447)
static void C_ccall f_24447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24451)
static void C_ccall f_24451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24412)
static void C_ccall f_24412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24416)
static void C_ccall f_24416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24225)
static void C_fcall f_24225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24376)
static void C_ccall f_24376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24391)
static void C_ccall f_24391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24383)
static void C_ccall f_24383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24347)
static void C_ccall f_24347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24351)
static void C_ccall f_24351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24312)
static void C_ccall f_24312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24316)
static void C_ccall f_24316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24277)
static void C_ccall f_24277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24281)
static void C_ccall f_24281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24228)
static void C_fcall f_24228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24231)
static void C_ccall f_24231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24235)
static void C_ccall f_24235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24199)
static void C_ccall f_24199(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24204)
static void C_ccall f_24204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23470)
static void C_ccall f_23470(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23470)
static void C_ccall f_23470r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24176)
static void C_ccall f_24176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24191)
static void C_ccall f_24191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24183)
static void C_ccall f_24183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24147)
static void C_ccall f_24147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24151)
static void C_ccall f_24151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24112)
static void C_ccall f_24112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24116)
static void C_ccall f_24116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24077)
static void C_ccall f_24077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24081)
static void C_ccall f_24081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24042)
static void C_ccall f_24042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24046)
static void C_ccall f_24046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23474)
static void C_fcall f_23474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24006)
static void C_ccall f_24006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24021)
static void C_ccall f_24021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24013)
static void C_ccall f_24013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23977)
static void C_ccall f_23977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23981)
static void C_ccall f_23981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23942)
static void C_ccall f_23942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23946)
static void C_ccall f_23946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23907)
static void C_ccall f_23907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23911)
static void C_ccall f_23911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23872)
static void C_ccall f_23872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23876)
static void C_ccall f_23876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23477)
static void C_fcall f_23477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23836)
static void C_ccall f_23836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23851)
static void C_ccall f_23851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23843)
static void C_ccall f_23843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23807)
static void C_ccall f_23807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23811)
static void C_ccall f_23811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23772)
static void C_ccall f_23772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23776)
static void C_ccall f_23776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23737)
static void C_ccall f_23737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23741)
static void C_ccall f_23741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23702)
static void C_ccall f_23702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23706)
static void C_ccall f_23706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23480)
static void C_fcall f_23480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23666)
static void C_ccall f_23666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23681)
static void C_ccall f_23681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23673)
static void C_ccall f_23673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23637)
static void C_ccall f_23637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23641)
static void C_ccall f_23641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23602)
static void C_ccall f_23602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23606)
static void C_ccall f_23606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23567)
static void C_ccall f_23567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23571)
static void C_ccall f_23571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23532)
static void C_ccall f_23532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23536)
static void C_ccall f_23536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23483)
static void C_fcall f_23483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23486)
static void C_ccall f_23486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23490)
static void C_ccall f_23490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23451)
static void C_ccall f_23451(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23456)
static void C_ccall f_23456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22722)
static void C_ccall f_22722(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22722)
static void C_ccall f_22722r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23428)
static void C_ccall f_23428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23443)
static void C_ccall f_23443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23435)
static void C_ccall f_23435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23399)
static void C_ccall f_23399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23403)
static void C_ccall f_23403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23364)
static void C_ccall f_23364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23368)
static void C_ccall f_23368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23329)
static void C_ccall f_23329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23333)
static void C_ccall f_23333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23294)
static void C_ccall f_23294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23298)
static void C_ccall f_23298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22726)
static void C_fcall f_22726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23258)
static void C_ccall f_23258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23273)
static void C_ccall f_23273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23265)
static void C_ccall f_23265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23229)
static void C_ccall f_23229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23233)
static void C_ccall f_23233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23194)
static void C_ccall f_23194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23198)
static void C_ccall f_23198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23159)
static void C_ccall f_23159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23163)
static void C_ccall f_23163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23124)
static void C_ccall f_23124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23128)
static void C_ccall f_23128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22729)
static void C_fcall f_22729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23088)
static void C_ccall f_23088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23103)
static void C_ccall f_23103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23095)
static void C_ccall f_23095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23059)
static void C_ccall f_23059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23063)
static void C_ccall f_23063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23024)
static void C_ccall f_23024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23028)
static void C_ccall f_23028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22989)
static void C_ccall f_22989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22993)
static void C_ccall f_22993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22954)
static void C_ccall f_22954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22958)
static void C_ccall f_22958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22732)
static void C_fcall f_22732(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22918)
static void C_ccall f_22918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22933)
static void C_ccall f_22933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22925)
static void C_ccall f_22925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22889)
static void C_ccall f_22889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22893)
static void C_ccall f_22893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22854)
static void C_ccall f_22854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22858)
static void C_ccall f_22858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22819)
static void C_ccall f_22819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22823)
static void C_ccall f_22823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22784)
static void C_ccall f_22784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22788)
static void C_ccall f_22788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22735)
static void C_fcall f_22735(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22738)
static void C_ccall f_22738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22742)
static void C_ccall f_22742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22703)
static void C_ccall f_22703(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22708)
static void C_ccall f_22708(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22252)
static void C_ccall f_22252(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22252)
static void C_ccall f_22252r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22680)
static void C_ccall f_22680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22695)
static void C_ccall f_22695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22687)
static void C_ccall f_22687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22651)
static void C_ccall f_22651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22655)
static void C_ccall f_22655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22616)
static void C_ccall f_22616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_ccall f_22620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22581)
static void C_ccall f_22581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22585)
static void C_ccall f_22585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22256)
static void C_fcall f_22256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22545)
static void C_ccall f_22545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22560)
static void C_ccall f_22560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22552)
static void C_ccall f_22552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22516)
static void C_ccall f_22516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22520)
static void C_ccall f_22520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22481)
static void C_ccall f_22481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22485)
static void C_ccall f_22485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22446)
static void C_ccall f_22446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22450)
static void C_ccall f_22450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22259)
static void C_fcall f_22259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22425)
static void C_ccall f_22425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22417)
static void C_ccall f_22417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22381)
static void C_ccall f_22381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22385)
static void C_ccall f_22385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22346)
static void C_ccall f_22346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22350)
static void C_ccall f_22350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22311)
static void C_ccall f_22311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22315)
static void C_ccall f_22315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22262)
static void C_fcall f_22262(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22265)
static void C_ccall f_22265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22269)
static void C_ccall f_22269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22233)
static void C_ccall f_22233(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22238)
static void C_ccall f_22238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21504)
static void C_ccall f_21504(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21504)
static void C_ccall f_21504r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22210)
static void C_ccall f_22210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22225)
static void C_ccall f_22225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22217)
static void C_ccall f_22217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22181)
static void C_ccall f_22181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22185)
static void C_ccall f_22185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22146)
static void C_ccall f_22146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22150)
static void C_ccall f_22150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22111)
static void C_ccall f_22111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22115)
static void C_ccall f_22115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22076)
static void C_ccall f_22076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22080)
static void C_ccall f_22080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21508)
static void C_fcall f_21508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22040)
static void C_ccall f_22040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22055)
static void C_ccall f_22055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22011)
static void C_ccall f_22011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22015)
static void C_ccall f_22015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21976)
static void C_ccall f_21976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21980)
static void C_ccall f_21980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21941)
static void C_ccall f_21941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21945)
static void C_ccall f_21945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21906)
static void C_ccall f_21906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21910)
static void C_ccall f_21910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21511)
static void C_fcall f_21511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21870)
static void C_ccall f_21870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21885)
static void C_ccall f_21885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21877)
static void C_ccall f_21877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21841)
static void C_ccall f_21841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21845)
static void C_ccall f_21845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21806)
static void C_ccall f_21806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21810)
static void C_ccall f_21810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21771)
static void C_ccall f_21771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21775)
static void C_ccall f_21775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21736)
static void C_ccall f_21736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21740)
static void C_ccall f_21740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21514)
static void C_fcall f_21514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21700)
static void C_ccall f_21700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21715)
static void C_ccall f_21715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21707)
static void C_ccall f_21707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21671)
static void C_ccall f_21671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21675)
static void C_ccall f_21675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21636)
static void C_ccall f_21636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21640)
static void C_ccall f_21640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21601)
static void C_ccall f_21601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21605)
static void C_ccall f_21605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21570)
static void C_ccall f_21570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21517)
static void C_fcall f_21517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21520)
static void C_ccall f_21520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_21166)
static void C_fcall f_21166(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21006)
static void C_fcall f_21006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21041)
static void C_fcall f_21041(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21051)
static void C_fcall f_21051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21055)
static void C_ccall f_21055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21058)
static void C_ccall f_21058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21119)
static void C_ccall f_21119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21110)
static void C_ccall f_21110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21061)
static void C_ccall f_21061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21080)
static void C_ccall f_21080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21087)
static void C_ccall f_21087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21064)
static void C_ccall f_21064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21070)
static void C_ccall f_21070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21039)
static void C_ccall f_21039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21014)
static void C_fcall f_21014(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21013)
static void C_ccall f_21013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21174)
static void C_fcall f_21174(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20752)
static void C_ccall f_20752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20774)
static void C_ccall f_20774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20789)
static void C_ccall f_20789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20792)
static void C_fcall f_20792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20968)
static void C_ccall f_20968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20962)
static void C_ccall f_20962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20795)
static void C_ccall f_20795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20944)
static void C_ccall f_20944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20798)
static void C_fcall f_20798(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20801)
static void C_ccall f_20801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20937)
static void C_ccall f_20937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20925)
static void C_ccall f_20925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20821)
static void C_fcall f_20821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20828)
static void C_ccall f_20828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20898)
static void C_ccall f_20898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20884)
static void C_ccall f_20884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20892)
static void C_ccall f_20892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20831)
static void C_ccall f_20831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20834)
static void C_fcall f_20834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20863)
static void C_ccall f_20863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20840)
static void C_ccall f_20840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20843)
static void C_ccall f_20843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20847)
static void C_ccall f_20847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20808)
static void C_fcall f_20808(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20811)
static void C_ccall f_20811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20621)
static void C_fcall f_20621(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20630)
static void C_fcall f_20630(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20578)
static void C_ccall f_20578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20584)
static void C_fcall f_20584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20647)
static void C_ccall f_20647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20733)
static void C_ccall f_20733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20720)
static void C_ccall f_20720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20728)
static void C_ccall f_20728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20650)
static void C_ccall f_20650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20654)
static void C_ccall f_20654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20697)
static void C_ccall f_20697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20659)
static void C_ccall f_20659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20625)
static void C_ccall f_20625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20520)
static void C_ccall f_20520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20527)
static void C_ccall f_20527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20558)
static void C_ccall f_20558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_ccall f_20554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20546)
static void C_ccall f_20546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20429)
static void C_ccall f_20429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20436)
static void C_ccall f_20436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20504)
static void C_ccall f_20504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20447)
static void C_fcall f_20447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20474)
static void C_ccall f_20474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20458)
static void C_ccall f_20458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20363)
static void C_ccall f_20363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20374)
static void C_ccall f_20374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20377)
static void C_fcall f_20377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20384)
static void C_ccall f_20384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20357)
static void C_ccall f_20357(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19811)
static void C_ccall f_19811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19842)
static void C_ccall f_19842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20306)
static void C_ccall f_20306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20312)
static void C_ccall f_20312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19853)
static void C_ccall f_19853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19738)
static void C_fcall f_19738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19763)
static void C_ccall f_19763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19698)
static void C_fcall f_19698(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19711)
static void C_fcall f_19711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19752)
static void C_ccall f_19752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19857)
static void C_ccall f_19857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20294)
static void C_ccall f_20294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20290)
static void C_fcall f_20290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20286)
static void C_ccall f_20286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19860)
static void C_ccall f_19860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20080)
static void C_fcall f_20080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20189)
static void C_ccall f_20189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20254)
static void C_ccall f_20254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20196)
static void C_fcall f_20196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20200)
static void C_ccall f_20200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20204)
static void C_ccall f_20204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20246)
static void C_ccall f_20246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20242)
static void C_ccall f_20242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20220)
static void C_ccall f_20220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20083)
static void C_fcall f_20083(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20086)
static void C_fcall f_20086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19985)
static void C_ccall f_19985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20068)
static void C_ccall f_20068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20035)
static void C_ccall f_20035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20061)
static void C_ccall f_20061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20043)
static void C_ccall f_20043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19991)
static void C_fcall f_19991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20031)
static void C_ccall f_20031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19973)
static void C_ccall f_19973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19944)
static void C_ccall f_19944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19966)
static void C_ccall f_19966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19952)
static void C_ccall f_19952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19906)
static void C_fcall f_19906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19863)
static void C_fcall f_19863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19874)
static void C_ccall f_19874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19878)
static void C_ccall f_19878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19882)
static void C_ccall f_19882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19886)
static void C_ccall f_19886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19870)
static void C_ccall f_19870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19830)
static void C_fcall f_19830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19825)
static void C_fcall f_19825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19820)
static void C_fcall f_19820(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19652)
static void C_ccall f_19652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19678)
static void C_ccall f_19678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19614)
static void C_ccall f_19614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19625)
static void C_ccall f_19625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19640)
static void C_ccall f_19640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19547)
static void C_ccall f_19547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19567)
static void C_fcall f_19567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19577)
static void C_ccall f_19577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19590)
static void C_ccall f_19590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19558)
static void C_ccall f_19558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19565)
static void C_ccall f_19565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19354)
static void C_ccall f_19354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19414)
static void C_fcall f_19414(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19424)
static void C_ccall f_19424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19538)
static void C_ccall f_19538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19503)
static void C_ccall f_19503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19495)
static void C_ccall f_19495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19466)
static void C_ccall f_19466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19444)
static void C_ccall f_19444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19447)
static void C_ccall f_19447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19435)
static void C_ccall f_19435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19361)
static void C_ccall f_19361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19412)
static void C_ccall f_19412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19404)
static void C_ccall f_19404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19364)
static void C_ccall f_19364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19375)
static void C_ccall f_19375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19379)
static void C_ccall f_19379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19371)
static void C_ccall f_19371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19260)
static void C_fcall f_19260(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19270)
static void C_ccall f_19270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19281)
static void C_ccall f_19281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19318)
static void C_ccall f_19318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19293)
static void C_ccall f_19293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19284)
static void C_ccall f_19284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19222)
static void C_ccall f_19222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19258)
static void C_ccall f_19258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19229)
static void C_ccall f_19229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18861)
static void C_ccall f_18861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18868)
static void C_ccall f_18868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19102)
static void C_fcall f_19102(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19112)
static void C_ccall f_19112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19123)
static void C_ccall f_19123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19135)
static void C_fcall f_19135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19138)
static void C_ccall f_19138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19126)
static void C_ccall f_19126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18874)
static void C_ccall f_18874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19100)
static void C_ccall f_19100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19096)
static void C_ccall f_19096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19042)
static void C_fcall f_19042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19007)
static void C_fcall f_19007(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19023)
static void C_fcall f_19023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18978)
static void C_fcall f_18978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18902)
static void C_ccall f_18902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18905)
static void C_ccall f_18905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18969)
static void C_ccall f_18969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18965)
static void C_ccall f_18965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18885)
static void C_fcall f_18885(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18896)
static void C_ccall f_18896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18892)
static void C_ccall f_18892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18814)
static void C_ccall f_18814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18847)
static void C_ccall f_18847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18829)
static void C_ccall f_18829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18432)
static void C_ccall f_18432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18641)
static void C_fcall f_18641(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18651)
static void C_ccall f_18651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18662)
static void C_ccall f_18662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18782)
static void C_ccall f_18782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18761)
static void C_ccall f_18761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18740)
static void C_ccall f_18740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18719)
static void C_ccall f_18719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18698)
static void C_ccall f_18698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18677)
static void C_ccall f_18677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18665)
static void C_ccall f_18665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18442)
static void C_ccall f_18442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18445)
static void C_fcall f_18445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18608)
static void C_fcall f_18608(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18448)
static void C_fcall f_18448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18599)
static void C_ccall f_18599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18579)
static void C_ccall f_18579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18451)
static void C_fcall f_18451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18544)
static void C_ccall f_18544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18561)
static void C_ccall f_18561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18454)
static void C_fcall f_18454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18493)
static void C_ccall f_18493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18527)
static void C_ccall f_18527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18511)
static void C_ccall f_18511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18496)
static void C_fcall f_18496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18461)
static void C_fcall f_18461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18472)
static void C_ccall f_18472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18476)
static void C_ccall f_18476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18468)
static void C_ccall f_18468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18350)
static void C_ccall f_18350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18354)
static void C_ccall f_18354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18372)
static void C_ccall f_18372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18190)
static void C_fcall f_18190(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18198)
static void C_fcall f_18198(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18208)
static void C_ccall f_18208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18246)
static void C_ccall f_18246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18249)
static void C_ccall f_18249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18252)
static void C_ccall f_18252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18327)
static void C_fcall f_18327(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18337)
static void C_ccall f_18337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18255)
static void C_ccall f_18255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18258)
static void C_ccall f_18258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18261)
static void C_ccall f_18261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18281)
static void C_fcall f_18281(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18291)
static void C_ccall f_18291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18294)
static void C_ccall f_18294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18297)
static void C_ccall f_18297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18264)
static void C_ccall f_18264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18267)
static void C_ccall f_18267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18184)
static void C_fcall f_18184(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18178)
static void C_fcall f_18178(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18172)
static void C_fcall f_18172(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18101)
static void C_fcall f_18101(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18142)
static void C_ccall f_18142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18146)
static void C_ccall f_18146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18150)
static void C_ccall f_18150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18154)
static void C_ccall f_18154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18158)
static void C_ccall f_18158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18162)
static void C_ccall f_18162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18166)
static void C_ccall f_18166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18170)
static void C_ccall f_18170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18103)
static void C_fcall f_18103(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18109)
static void C_fcall f_18109(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18131)
static void C_ccall f_18131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18120)
static void C_ccall f_18120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17950)
static void C_fcall f_17950(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17965)
static void C_fcall f_17965(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17978)
static void C_ccall f_17978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17938)
static void C_ccall f_17938(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17926)
static void C_ccall f_17926(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17914)
static void C_ccall f_17914(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17908)
static void C_fcall f_17908(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17902)
static void C_ccall f_17902(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17878)
static void C_ccall f_17878(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17866)
static void C_ccall f_17866(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17854)
static void C_ccall f_17854(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17848)
static void C_fcall f_17848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17812)
static void C_ccall f_17812(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_17806)
static void C_ccall f_17806(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_17759)
static void C_ccall f_17759(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17763)
static void C_ccall f_17763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17779)
static void C_ccall f_17779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17788)
static void C_ccall f_17788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17766)
static void C_ccall f_17766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17750)
static void C_ccall f_17750(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17754)
static void C_ccall f_17754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17571)
static void C_ccall f_17571(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_17571)
static void C_ccall f_17571r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_17724)
static void C_fcall f_17724(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17737)
static void C_ccall f_17737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17719)
static void C_ccall f_17719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17574)
static void C_fcall f_17574(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17716)
static void C_ccall f_17716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17700)
static void C_ccall f_17700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17693)
static void C_ccall f_17693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17689)
static void C_ccall f_17689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17602)
static void C_ccall f_17602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17610)
static void C_fcall f_17610(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17620)
static void C_ccall f_17620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17623)
static void C_ccall f_17623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17605)
static void C_ccall f_17605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17400)
static void C_ccall f_17400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17406)
static void C_ccall f_17406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17409)
static void C_fcall f_17409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15209)
static void C_ccall f_15209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15222)
static void C_ccall f_15222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15229)
static void C_fcall f_15229(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15236)
static void C_ccall f_15236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17413)
static void C_ccall f_17413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17447)
static void C_ccall f_17447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17540)
static void C_fcall f_17540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17550)
static void C_fcall f_17550(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17453)
static void C_ccall f_17453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17510)
static void C_fcall f_17510(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17520)
static void C_fcall f_17520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17461)
static void C_ccall f_17461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17475)
static void C_ccall f_17475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17479)
static void C_ccall f_17479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17483)
static void C_ccall f_17483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17487)
static void C_ccall f_17487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17494)
static void C_ccall f_17494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17471)
static void C_ccall f_17471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17464)
static void C_ccall f_17464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17416)
static void C_ccall f_17416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_ccall f_16336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16349)
static void C_ccall f_16349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16399)
static void C_ccall f_16399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16496)
static void C_ccall f_16496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16564)
static void C_ccall f_16564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16821)
static void C_ccall f_16821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16571)
static void C_fcall f_16571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16809)
static void C_ccall f_16809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16760)
static void C_ccall f_16760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16766)
static void C_ccall f_16766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16790)
static void C_ccall f_16790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16786)
static void C_ccall f_16786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16774)
static void C_ccall f_16774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16574)
static void C_fcall f_16574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16736)
static void C_ccall f_16736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16740)
static void C_ccall f_16740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16577)
static void C_fcall f_16577(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16713)
static void C_ccall f_16713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16717)
static void C_ccall f_16717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16580)
static void C_fcall f_16580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16690)
static void C_ccall f_16690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16694)
static void C_ccall f_16694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16583)
static void C_fcall f_16583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16615)
static void C_ccall f_16615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16633)
static void C_ccall f_16633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16651)
static void C_ccall f_16651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16669)
static void C_ccall f_16669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16586)
static void C_fcall f_16586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16590)
static void C_ccall f_16590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16500)
static void C_ccall f_16500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16504)
static void C_ccall f_16504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16508)
static void C_ccall f_16508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16403)
static void C_ccall f_16403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16407)
static void C_ccall f_16407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16411)
static void C_ccall f_16411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16430)
static void C_ccall f_16430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16434)
static void C_ccall f_16434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16414)
static void C_fcall f_16414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16418)
static void C_ccall f_16418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16353)
static void C_ccall f_16353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16357)
static void C_ccall f_16357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16361)
static void C_ccall f_16361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16343)
static void C_fcall f_16343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16158)
static void C_fcall f_16158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16170)
static void C_fcall f_16170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16189)
static void C_ccall f_16189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16207)
static void C_fcall f_16207(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16239)
static void C_ccall f_16239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16242)
static void C_fcall f_16242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16235)
static void C_ccall f_16235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16221)
static void C_ccall f_16221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16192)
static void C_ccall f_16192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16137)
static void C_fcall f_16137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16144)
static void C_ccall f_16144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16153)
static void C_ccall f_16153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16072)
static void C_fcall f_16072(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16081)
static void C_fcall f_16081(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16104)
static void C_ccall f_16104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_fcall f_16094(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16028)
static void C_fcall f_16028(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16016)
static void C_fcall f_16016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15914)
static void C_fcall f_15914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15866)
static void C_fcall f_15866(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15247)
static void C_fcall f_15247(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15251)
static void C_ccall f_15251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15254)
static void C_ccall f_15254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15680)
static void C_ccall f_15680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15676)
static void C_ccall f_15676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15672)
static void C_ccall f_15672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15257)
static void C_fcall f_15257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15380)
static void C_ccall f_15380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14613)
static void C_ccall f_14613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15386)
static void C_fcall f_15386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14629)
static void C_ccall f_14629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15474)
static void C_fcall f_15474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15544)
static void C_ccall f_15544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14645)
static void C_ccall f_14645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15547)
static void C_fcall f_15547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14677)
static void C_ccall f_14677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15625)
static void C_fcall f_15625(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15651)
static void C_ccall f_15651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15645)
static void C_ccall f_15645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15634)
static void C_ccall f_15634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15576)
static void C_fcall f_15576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15586)
static void C_ccall f_15586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15612)
static void C_ccall f_15612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15606)
static void C_ccall f_15606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15589)
static void C_ccall f_15589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15599)
static void C_ccall f_15599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15592)
static void C_fcall f_15592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15553)
static void C_ccall f_15553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15562)
static void C_ccall f_15562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15556)
static void C_fcall f_15556(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15498)
static void C_fcall f_15498(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15531)
static void C_ccall f_15531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15517)
static void C_ccall f_15517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15508)
static void C_ccall f_15508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15483)
static void C_ccall f_15483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15395)
static void C_ccall f_15395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15417)
static void C_fcall f_15417(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15464)
static void C_ccall f_15464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15450)
static void C_ccall f_15450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_ccall f_15458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15430)
static void C_ccall f_15430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15433)
static void C_fcall f_15433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15398)
static void C_ccall f_15398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15415)
static void C_ccall f_15415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15401)
static void C_fcall f_15401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15266)
static void C_ccall f_15266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15272)
static void C_ccall f_15272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15330)
static void C_ccall f_15330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15333)
static void C_ccall f_15333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15354)
static void C_ccall f_15354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15365)
static void C_ccall f_15365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15344)
static void C_ccall f_15344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15278)
static void C_ccall f_15278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15288)
static void C_ccall f_15288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15324)
static void C_ccall f_15324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15294)
static void C_ccall f_15294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15309)
static void C_ccall f_15309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15313)
static void C_ccall f_15313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15317)
static void C_ccall f_15317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15301)
static void C_ccall f_15301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15143)
static void C_fcall f_15143(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15145)
static void C_ccall f_15145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15193)
static void C_ccall f_15193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15149)
static void C_ccall f_15149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15152)
static void C_fcall f_15152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15157)
static void C_fcall f_15157(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15178)
static void C_ccall f_15178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15135)
static void C_fcall f_15135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15137)
static void C_ccall f_15137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14927)
static void C_fcall f_14927(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14944)
static void C_ccall f_14944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14894)
static void C_fcall f_14894(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14901)
static void C_ccall f_14901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14845)
static void C_ccall f_14845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14910)
static void C_ccall f_14910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15133)
static void C_ccall f_15133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15110)
static void C_ccall f_15110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15126)
static void C_ccall f_15126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14972)
static void C_ccall f_14972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14975)
static void C_ccall f_14975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14999)
static void C_ccall f_14999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15056)
static void C_ccall f_15056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15062)
static void C_ccall f_15062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15071)
static void C_ccall f_15071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15080)
static void C_ccall f_15080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15089)
static void C_ccall f_15089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15098)
static void C_ccall f_15098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15050)
static void C_ccall f_15050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15005)
static void C_ccall f_15005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15011)
static void C_ccall f_15011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15017)
static void C_ccall f_15017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15029)
static void C_ccall f_15029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15035)
static void C_ccall f_15035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14876)
static void C_fcall f_14876(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14883)
static void C_ccall f_14883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14866)
static void C_fcall f_14866(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14854)
static void C_fcall f_14854(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14822)
static void C_fcall f_14822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14829)
static void C_ccall f_14829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14836)
static void C_ccall f_14836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14806)
static void C_fcall f_14806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14813)
static void C_ccall f_14813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14820)
static void C_ccall f_14820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14794)
static void C_fcall f_14794(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14776)
static void C_fcall f_14776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14758)
static void C_fcall f_14758(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14743)
static void C_fcall f_14743(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14737)
static void C_fcall f_14737(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14725)
static void C_fcall f_14725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14707)
static void C_fcall f_14707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14686)
static void C_fcall f_14686(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14654)
static void C_fcall f_14654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14661)
static void C_ccall f_14661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14596)
static void C_fcall f_14596(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14604)
static void C_ccall f_14604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14586)
static void C_fcall f_14586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14594)
static void C_ccall f_14594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14580)
static void C_fcall f_14580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14568)
static void C_fcall f_14568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14565)
static void C_ccall f_14565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14544)
static void C_fcall f_14544(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14457)
static void C_fcall f_14457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14436)
static void C_fcall f_14436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14426)
static void C_fcall f_14426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14414)
static void C_fcall f_14414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14385)
static void C_ccall f_14385(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14373)
static void C_fcall f_14373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14355)
static void C_fcall f_14355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14337)
static void C_fcall f_14337(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14316)
static void C_ccall f_14316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14222)
static void C_ccall f_14222(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14226)
static void C_ccall f_14226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14255)
static void C_ccall f_14255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14260)
static void C_fcall f_14260(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14285)
static void C_fcall f_14285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14270)
static void C_ccall f_14270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13704)
static void C_ccall f_13704(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13704)
static void C_ccall f_13704r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13975)
static void C_ccall f_13975(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13979)
static void C_ccall f_13979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13984)
static void C_ccall f_13984(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13984)
static void C_ccall f_13984r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14190)
static void C_ccall f_14190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14205)
static void C_ccall f_14205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14197)
static void C_ccall f_14197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14161)
static void C_ccall f_14161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14165)
static void C_ccall f_14165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14126)
static void C_ccall f_14126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14130)
static void C_ccall f_14130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_fcall f_13988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14090)
static void C_ccall f_14090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14105)
static void C_ccall f_14105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14097)
static void C_ccall f_14097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14061)
static void C_ccall f_14061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14065)
static void C_ccall f_14065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14026)
static void C_ccall f_14026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14030)
static void C_ccall f_14030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13991)
static void C_fcall f_13991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13997)
static void C_fcall f_13997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13966)
static void C_ccall f_13966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13708)
static void C_ccall f_13708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13935)
static void C_ccall f_13935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13950)
static void C_ccall f_13950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13942)
static void C_ccall f_13942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13906)
static void C_ccall f_13906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13910)
static void C_ccall f_13910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13871)
static void C_ccall f_13871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13875)
static void C_ccall f_13875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13711)
static void C_fcall f_13711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13835)
static void C_ccall f_13835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13850)
static void C_ccall f_13850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13842)
static void C_ccall f_13842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13806)
static void C_ccall f_13806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13810)
static void C_ccall f_13810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13771)
static void C_ccall f_13771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13775)
static void C_ccall f_13775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13714)
static void C_fcall f_13714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13717)
static void C_ccall f_13717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13720)
static void C_ccall f_13720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13732)
static void C_ccall f_13732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13750)
static void C_ccall f_13750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13738)
static void C_ccall f_13738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13726)
static void C_ccall f_13726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13641)
static void C_fcall f_13641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13301)
static void C_ccall f_13301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13487)
static void C_ccall f_13487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13489)
static void C_fcall f_13489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13414)
static void C_fcall f_13414(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13424)
static void C_fcall f_13424(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13431)
static void C_fcall f_13431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13499)
static void C_ccall f_13499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13502)
static void C_ccall f_13502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13506)
static void C_ccall f_13506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13526)
static void C_fcall f_13526(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13542)
static void C_ccall f_13542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13509)
static void C_ccall f_13509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13304)
static void C_fcall f_13304(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13316)
static void C_fcall f_13316(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13352)
static void C_ccall f_13352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13372)
static void C_ccall f_13372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13377)
static void C_fcall f_13377(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12814)
static void C_ccall f_12814(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12814)
static void C_ccall f_12814r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12741)
static void C_fcall f_12741(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12586)
static void C_ccall f_12586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12592)
static void C_ccall f_12592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12677)
static void C_fcall f_12677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12604)
static void C_ccall f_12604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12620)
static void C_ccall f_12620(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12624)
static void C_fcall f_12624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12627)
static void C_fcall f_12627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12607)
static void C_ccall f_12607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12618)
static void C_ccall f_12618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12758)
static void C_ccall f_12758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13295)
static void C_ccall f_13295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12818)
static void C_ccall f_12818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13264)
static void C_ccall f_13264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13279)
static void C_ccall f_13279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13271)
static void C_ccall f_13271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13235)
static void C_ccall f_13235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_ccall f_13239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13200)
static void C_ccall f_13200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13204)
static void C_ccall f_13204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13165)
static void C_ccall f_13165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13169)
static void C_ccall f_13169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12821)
static void C_fcall f_12821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13129)
static void C_ccall f_13129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13144)
static void C_ccall f_13144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13136)
static void C_ccall f_13136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13100)
static void C_ccall f_13100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13104)
static void C_ccall f_13104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13065)
static void C_ccall f_13065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13069)
static void C_ccall f_13069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13030)
static void C_ccall f_13030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12824)
static void C_fcall f_12824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13009)
static void C_ccall f_13009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13001)
static void C_ccall f_13001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12965)
static void C_ccall f_12965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12969)
static void C_ccall f_12969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12930)
static void C_ccall f_12930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12934)
static void C_ccall f_12934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12895)
static void C_ccall f_12895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12899)
static void C_ccall f_12899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12827)
static void C_fcall f_12827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12830)
static void C_ccall f_12830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12833)
static void C_ccall f_12833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12866)
static void C_ccall f_12866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12874)
static void C_ccall f_12874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12839)
static void C_ccall f_12839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6011)
static void C_fcall f_6011(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6028)
static void C_ccall f_6028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12852)
static void C_ccall f_12852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12842)
static void C_fcall f_12842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12845)
static void C_ccall f_12845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12381)
static void C_ccall f_12381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12385)
static void C_ccall f_12385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12388)
static void C_ccall f_12388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12391)
static void C_ccall f_12391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12560)
static void C_ccall f_12560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12573)
static void C_ccall f_12573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12577)
static void C_ccall f_12577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12397)
static void C_ccall f_12397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12553)
static void C_ccall f_12553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12534)
static void C_ccall f_12534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12541)
static void C_ccall f_12541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12545)
static void C_ccall f_12545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12403)
static void C_fcall f_12403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12409)
static void C_ccall f_12409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12493)
static void C_ccall f_12493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12495)
static void C_fcall f_12495(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12517)
static void C_ccall f_12517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12524)
static void C_ccall f_12524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12528)
static void C_ccall f_12528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12514)
static void C_fcall f_12514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12510)
static void C_ccall f_12510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_ccall f_12451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12468)
static void C_fcall f_12468(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12478)
static void C_ccall f_12478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12454)
static void C_ccall f_12454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12413)
static void C_fcall f_12413(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12421)
static void C_ccall f_12421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12423)
static void C_fcall f_12423(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12444)
static void C_ccall f_12444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12269)
static void C_fcall f_12269(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12379)
static void C_ccall f_12379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12338)
static void C_fcall f_12338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12371)
static void C_ccall f_12371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12367)
static void C_ccall f_12367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12352)
static void C_ccall f_12352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12276)
static void C_ccall f_12276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12284)
static void C_fcall f_12284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12329)
static void C_ccall f_12329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12317)
static void C_ccall f_12317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12301)
static void C_ccall f_12301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11502)
static void C_ccall f_11502(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11502)
static void C_ccall f_11502r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11819)
static void C_ccall f_11819(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11826)
static void C_fcall f_11826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12231)
static void C_ccall f_12231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12246)
static void C_ccall f_12246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12238)
static void C_ccall f_12238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12202)
static void C_ccall f_12202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12206)
static void C_ccall f_12206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12167)
static void C_ccall f_12167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12171)
static void C_ccall f_12171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12132)
static void C_ccall f_12132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12136)
static void C_ccall f_12136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11829)
static void C_fcall f_11829(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12096)
static void C_ccall f_12096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12111)
static void C_ccall f_12111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12103)
static void C_ccall f_12103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12067)
static void C_ccall f_12067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12071)
static void C_ccall f_12071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12032)
static void C_ccall f_12032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12036)
static void C_ccall f_12036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11997)
static void C_ccall f_11997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12001)
static void C_ccall f_12001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11832)
static void C_fcall f_11832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11961)
static void C_ccall f_11961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11976)
static void C_ccall f_11976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11968)
static void C_ccall f_11968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11932)
static void C_ccall f_11932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11936)
static void C_ccall f_11936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11897)
static void C_ccall f_11897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11901)
static void C_ccall f_11901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11862)
static void C_ccall f_11862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11866)
static void C_ccall f_11866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11835)
static void C_fcall f_11835(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11838)
static void C_ccall f_11838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11506)
static void C_ccall f_11506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11509)
static void C_ccall f_11509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11783)
static void C_ccall f_11783(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11787)
static void C_ccall f_11787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11790)
static void C_ccall f_11790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11793)
static void C_ccall f_11793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11796)
static void C_ccall f_11796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11809)
static void C_ccall f_11809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11799)
static void C_fcall f_11799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11515)
static void C_ccall f_11515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11522)
static void C_fcall f_11522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11753)
static void C_ccall f_11753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11768)
static void C_ccall f_11768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11760)
static void C_ccall f_11760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11724)
static void C_ccall f_11724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11728)
static void C_ccall f_11728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11689)
static void C_ccall f_11689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11693)
static void C_ccall f_11693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11525)
static void C_fcall f_11525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11653)
static void C_ccall f_11653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11668)
static void C_ccall f_11668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11660)
static void C_ccall f_11660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11628)
static void C_ccall f_11628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11589)
static void C_ccall f_11589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11593)
static void C_ccall f_11593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11528)
static void C_fcall f_11528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11531)
static void C_ccall f_11531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11546)
static void C_ccall f_11546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11568)
static void C_ccall f_11568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11552)
static void C_ccall f_11552(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11560)
static void C_ccall f_11560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11534)
static void C_ccall f_11534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11537)
static void C_ccall f_11537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11419)
static void C_fcall f_11419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11410)
static void C_fcall f_11410(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11401)
static void C_fcall f_11401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11383)
static void C_fcall f_11383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11365)
static void C_fcall f_11365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11347)
static void C_fcall f_11347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11338)
static void C_fcall f_11338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11329)
static void C_fcall f_11329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11107)
static void C_ccall f_11107(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11157)
static void C_ccall f_11157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11302)
static void C_ccall f_11302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11183)
static void C_ccall f_11183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11298)
static void C_ccall f_11298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11283)
static void C_ccall f_11283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11264)
static void C_ccall f_11264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11237)
static void C_ccall f_11237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11160)
static void C_fcall f_11160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11110)
static void C_ccall f_11110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11116)
static void C_fcall f_11116(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11132)
static void C_ccall f_11132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11135)
static void C_ccall f_11135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11097)
static void C_ccall f_11097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10637)
static void C_fcall f_10637(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11069)
static void C_ccall f_11069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11084)
static void C_ccall f_11084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11076)
static void C_ccall f_11076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11040)
static void C_ccall f_11040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11044)
static void C_ccall f_11044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11005)
static void C_ccall f_11005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11009)
static void C_ccall f_11009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10970)
static void C_ccall f_10970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10974)
static void C_ccall f_10974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10640)
static void C_fcall f_10640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10934)
static void C_ccall f_10934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10949)
static void C_ccall f_10949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10941)
static void C_ccall f_10941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10905)
static void C_ccall f_10905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10909)
static void C_ccall f_10909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10870)
static void C_ccall f_10870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10874)
static void C_ccall f_10874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10835)
static void C_ccall f_10835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10839)
static void C_ccall f_10839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10643)
static void C_fcall f_10643(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10799)
static void C_ccall f_10799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10814)
static void C_ccall f_10814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10806)
static void C_ccall f_10806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_ccall f_10770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10774)
static void C_ccall f_10774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10735)
static void C_ccall f_10735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10739)
static void C_ccall f_10739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10700)
static void C_ccall f_10700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10704)
static void C_ccall f_10704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10646)
static void C_fcall f_10646(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10649)
static void C_ccall f_10649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10652)
static void C_ccall f_10652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10667)
static void C_ccall f_10667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10679)
static void C_ccall f_10679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10658)
static void C_ccall f_10658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10661)
static void C_ccall f_10661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10557)
static void C_ccall f_10557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10561)
static void C_ccall f_10561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10580)
static void C_ccall f_10580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10590)
static void C_ccall f_10590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10592)
static void C_fcall f_10592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10609)
static void C_ccall f_10609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10612)
static void C_ccall f_10612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10623)
static void C_ccall f_10623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10564)
static void C_ccall f_10564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10294)
static void C_ccall f_10294(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10294)
static void C_ccall f_10294r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10547)
static void C_ccall f_10547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10298)
static void C_fcall f_10298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10519)
static void C_ccall f_10519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10534)
static void C_ccall f_10534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10526)
static void C_ccall f_10526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10490)
static void C_ccall f_10490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10494)
static void C_ccall f_10494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10455)
static void C_ccall f_10455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10459)
static void C_ccall f_10459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10301)
static void C_fcall f_10301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10419)
static void C_ccall f_10419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10434)
static void C_ccall f_10434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10426)
static void C_ccall f_10426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10390)
static void C_ccall f_10390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10394)
static void C_ccall f_10394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10355)
static void C_ccall f_10355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10359)
static void C_ccall f_10359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10304)
static void C_fcall f_10304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10307)
static void C_ccall f_10307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10310)
static void C_ccall f_10310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10322)
static void C_ccall f_10322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10334)
static void C_ccall f_10334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10316)
static void C_ccall f_10316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10258)
static void C_ccall f_10258(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10262)
static void C_ccall f_10262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10284)
static void C_ccall f_10284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10278)
static void C_ccall f_10278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10271)
static void C_ccall f_10271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10011)
static void C_ccall f_10011(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10011)
static void C_ccall f_10011r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10015)
static void C_fcall f_10015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10228)
static void C_ccall f_10228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10243)
static void C_ccall f_10243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10235)
static void C_ccall f_10235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10199)
static void C_ccall f_10199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10203)
static void C_ccall f_10203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10164)
static void C_ccall f_10164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10168)
static void C_ccall f_10168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10018)
static void C_fcall f_10018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10128)
static void C_ccall f_10128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10143)
static void C_ccall f_10143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10135)
static void C_ccall f_10135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10099)
static void C_ccall f_10099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10103)
static void C_ccall f_10103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10064)
static void C_ccall f_10064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10068)
static void C_ccall f_10068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10021)
static void C_fcall f_10021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10024)
static void C_ccall f_10024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10027)
static void C_ccall f_10027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10035)
static void C_ccall f_10035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10043)
static void C_ccall f_10043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10033)
static void C_ccall f_10033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9796)
static void C_ccall f_9796(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9800)
static void C_ccall f_9800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10009)
static void C_ccall f_10009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9962)
static void C_ccall f_9962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9974)
static void C_fcall f_9974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9830)
static void C_ccall f_9830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9839)
static void C_ccall f_9839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9842)
static void C_ccall f_9842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9930)
static void C_fcall f_9930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9845)
static void C_fcall f_9845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9924)
static void C_ccall f_9924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9851)
static void C_ccall f_9851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9854)
static void C_ccall f_9854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9806)
static void C_ccall f_9806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9809)
static void C_ccall f_9809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9816)
static void C_ccall f_9816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9326)
static void C_ccall f_9326(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9326)
static void C_ccall f_9326r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9330)
static void C_fcall f_9330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9766)
static void C_ccall f_9766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9781)
static void C_ccall f_9781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9773)
static void C_ccall f_9773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9737)
static void C_ccall f_9737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9741)
static void C_ccall f_9741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9702)
static void C_ccall f_9702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9706)
static void C_ccall f_9706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9667)
static void C_ccall f_9667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9333)
static void C_fcall f_9333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9631)
static void C_ccall f_9631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9646)
static void C_ccall f_9646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9638)
static void C_ccall f_9638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9602)
static void C_ccall f_9602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9606)
static void C_ccall f_9606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9567)
static void C_ccall f_9567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9571)
static void C_ccall f_9571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9532)
static void C_ccall f_9532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9536)
static void C_ccall f_9536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9336)
static void C_fcall f_9336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9496)
static void C_ccall f_9496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9511)
static void C_ccall f_9511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9503)
static void C_ccall f_9503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9467)
static void C_ccall f_9467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9471)
static void C_ccall f_9471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9432)
static void C_ccall f_9432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9436)
static void C_ccall f_9436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9397)
static void C_ccall f_9397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9401)
static void C_ccall f_9401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9339)
static void C_fcall f_9339(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9342)
static void C_ccall f_9342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9345)
static void C_ccall f_9345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9368)
static void C_ccall f_9368(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9376)
static void C_ccall f_9376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9351)
static void C_ccall f_9351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9354)
static void C_ccall f_9354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9246)
static void C_fcall f_9246(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9237)
static void C_fcall f_9237(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9165)
static void C_ccall f_9165(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9169)
static void C_ccall f_9169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9172)
static void C_fcall f_9172(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8910)
static void C_ccall f_8910(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8910)
static void C_ccall f_8910r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8914)
static void C_fcall f_8914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9135)
static void C_ccall f_9135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9150)
static void C_ccall f_9150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9142)
static void C_ccall f_9142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9106)
static void C_ccall f_9106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9110)
static void C_ccall f_9110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9071)
static void C_ccall f_9071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9075)
static void C_ccall f_9075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8917)
static void C_fcall f_8917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9035)
static void C_ccall f_9035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9050)
static void C_ccall f_9050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9042)
static void C_ccall f_9042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9006)
static void C_ccall f_9006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9010)
static void C_ccall f_9010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8971)
static void C_ccall f_8971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8975)
static void C_ccall f_8975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8920)
static void C_fcall f_8920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8923)
static void C_ccall f_8923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8926)
static void C_ccall f_8926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8938)
static void C_ccall f_8938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8950)
static void C_ccall f_8950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8932)
static void C_ccall f_8932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8795)
static void C_fcall f_8795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8908)
static void C_ccall f_8908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8805)
static void C_ccall f_8805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8893)
static void C_ccall f_8893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8904)
static void C_ccall f_8904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8900)
static void C_ccall f_8900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8808)
static void C_ccall f_8808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8890)
static void C_ccall f_8890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8816)
static void C_ccall f_8816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8880)
static void C_ccall f_8880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8825)
static void C_ccall f_8825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8844)
static void C_ccall f_8844(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8873)
static void C_ccall f_8873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8854)
static void C_ccall f_8854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8869)
static void C_ccall f_8869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8857)
static void C_ccall f_8857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8828)
static void C_ccall f_8828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8838)
static void C_ccall f_8838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8819)
static void C_fcall f_8819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8822)
static void C_ccall f_8822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8749)
static void C_fcall f_8749(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8740)
static void C_fcall f_8740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8439)
static void C_fcall f_8439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8446)
static void C_ccall f_8446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8735)
static void C_ccall f_8735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8449)
static void C_ccall f_8449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8720)
static void C_ccall f_8720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8704)
static void C_ccall f_8704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8707)
static void C_ccall f_8707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8675)
static void C_fcall f_8675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8698)
static void C_ccall f_8698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8681)
static void C_fcall f_8681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8685)
static void C_ccall f_8685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8452)
static void C_ccall f_8452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8458)
static void C_ccall f_8458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8550)
static void C_ccall f_8550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8662)
static void C_ccall f_8662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8669)
static void C_ccall f_8669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8573)
static void C_fcall f_8573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8575)
static void C_fcall f_8575(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8624)
static void C_fcall f_8624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8659)
static void C_ccall f_8659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8793)
static void C_ccall f_8793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8768)
static void C_ccall f_8768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8789)
static void C_ccall f_8789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8785)
static void C_ccall f_8785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8777)
static void C_ccall f_8777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8641)
static void C_ccall f_8641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8634)
static void C_ccall f_8634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8582)
static void C_ccall f_8582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8622)
static void C_ccall f_8622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8586)
static void C_ccall f_8586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8618)
static void C_ccall f_8618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8605)
static void C_ccall f_8605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8613)
static void C_ccall f_8613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8609)
static void C_ccall f_8609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8589)
static void C_fcall f_8589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8566)
static void C_ccall f_8566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8553)
static void C_ccall f_8553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8562)
static void C_ccall f_8562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8557)
static void C_ccall f_8557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8464)
static void C_ccall f_8464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8544)
static void C_ccall f_8544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8524)
static void C_ccall f_8524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8530)
static void C_ccall f_8530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8541)
static void C_ccall f_8541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8521)
static void C_ccall f_8521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8509)
static void C_ccall f_8509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8512)
static void C_ccall f_8512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8467)
static void C_ccall f_8467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8503)
static void C_ccall f_8503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8498)
static void C_ccall f_8498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8470)
static void C_ccall f_8470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8483)
static void C_ccall f_8483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8473)
static void C_fcall f_8473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8476)
static void C_ccall f_8476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8479)
static void C_ccall f_8479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8316)
static void C_ccall f_8316(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8316)
static void C_ccall f_8316r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8375)
static void C_ccall f_8375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8385)
static void C_ccall f_8385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8387)
static void C_fcall f_8387(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8416)
static void C_ccall f_8416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8421)
static void C_ccall f_8421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8406)
static void C_fcall f_8406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8337)
static void C_fcall f_8337(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8369)
static void C_ccall f_8369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8297)
static void C_ccall f_8297(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8304)
static void C_ccall f_8304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8311)
static void C_ccall f_8311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8278)
static void C_ccall f_8278(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8285)
static void C_ccall f_8285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8292)
static void C_ccall f_8292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8098)
static void C_fcall f_8098(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_8102)
static void C_ccall f_8102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8105)
static void C_ccall f_8105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8108)
static void C_ccall f_8108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8268)
static void C_ccall f_8268(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8275)
static void C_ccall f_8275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8117)
static void C_fcall f_8117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8123)
static void C_ccall f_8123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8129)
static void C_ccall f_8129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8192)
static void C_ccall f_8192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8206)
static void C_ccall f_8206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8132)
static void C_fcall f_8132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8135)
static void C_ccall f_8135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8141)
static void C_fcall f_8141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8144)
static void C_ccall f_8144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8147)
static void C_ccall f_8147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8088)
static void C_fcall f_8088(C_word t0) C_noret;
C_noret_decl(f_8033)
static void C_fcall f_8033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8024)
static void C_fcall f_8024(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7907)
static void C_fcall f_7907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7898)
static void C_fcall f_7898(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7889)
static void C_ccall f_7889(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7880)
static void C_fcall f_7880(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7871)
static void C_fcall f_7871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7853)
static void C_fcall f_7853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7844)
static void C_fcall f_7844(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7835)
static void C_fcall f_7835(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7817)
static void C_fcall f_7817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7808)
static void C_fcall f_7808(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7799)
static void C_fcall f_7799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7784)
static void C_fcall f_7784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7739)
static void C_fcall f_7739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7721)
static void C_fcall f_7721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7712)
static void C_fcall f_7712(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7685)
static void C_fcall f_7685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7667)
static void C_fcall f_7667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7649)
static void C_fcall f_7649(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7640)
static void C_fcall f_7640(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7628)
static void C_fcall f_7628(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7512)
static void C_ccall f_7512(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7626)
static void C_ccall f_7626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7527)
static void C_fcall f_7527(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7557)
static void C_fcall f_7557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7576)
static void C_ccall f_7576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7561)
static void C_ccall f_7561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7540)
static void C_fcall f_7540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7390)
static void C_ccall f_7390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7510)
static void C_ccall f_7510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7405)
static void C_fcall f_7405(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7435)
static void C_fcall f_7435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7454)
static void C_ccall f_7454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7439)
static void C_ccall f_7439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7418)
static void C_fcall f_7418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7293)
static void C_ccall f_7293(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7388)
static void C_ccall f_7388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7308)
static void C_fcall f_7308(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7354)
static void C_ccall f_7354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7339)
static void C_ccall f_7339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7321)
static void C_fcall f_7321(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7240)
static void C_fcall f_7240(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7278)
static void C_ccall f_7278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7285)
static void C_ccall f_7285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7263)
static void C_ccall f_7263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7204)
static void C_ccall f_7204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7214)
static void C_fcall f_7214(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7216)
static void C_ccall f_7216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7194)
static void C_ccall f_7194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7142)
static void C_fcall f_7142(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7179)
static void C_ccall f_7179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7146)
static void C_ccall f_7146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7162)
static void C_ccall f_7162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7164)
static void C_ccall f_7164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7129)
static void C_ccall f_7129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7123)
static void C_ccall f_7123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7104)
static void C_ccall f_7104(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7104)
static void C_ccall f_7104r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7085)
static void C_ccall f_7085(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7085)
static void C_ccall f_7085r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7079)
static void C_ccall f_7079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7039)
static void C_ccall f_7039(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7039)
static void C_ccall f_7039r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7020)
static void C_ccall f_7020(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7020)
static void C_ccall f_7020r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6976)
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6976)
static void C_ccall f_6976r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6970)
static void C_ccall f_6970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6958)
static void C_ccall f_6958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6952)
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6952)
static void C_ccall f_6952r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6929)
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6946)
static void C_ccall f_6946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6871)
static void C_ccall f_6871(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6871)
static void C_ccall f_6871r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6923)
static void C_ccall f_6923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6907)
static void C_ccall f_6907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6888)
static void C_ccall f_6888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6865)
static void C_ccall f_6865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6777)
static void C_ccall f_6777(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6777)
static void C_ccall f_6777r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6823)
static void C_fcall f_6823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6771)
static void C_ccall f_6771(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6712)
static void C_ccall f_6712(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6712)
static void C_ccall f_6712r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6725)
static void C_fcall f_6725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6761)
static void C_ccall f_6761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6706)
static void C_ccall f_6706(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6706)
static void C_ccall f_6706r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6611)
static void C_ccall f_6611(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6611)
static void C_ccall f_6611r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6615)
static void C_ccall f_6615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6618)
static void C_ccall f_6618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6630)
static void C_fcall f_6630(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6652)
static void C_ccall f_6652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6605)
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6599)
static void C_ccall f_6599(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6539)
static void C_ccall f_6539(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6539)
static void C_ccall f_6539r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6551)
static void C_fcall f_6551(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6546)
static void C_fcall f_6546(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6541)
static void C_fcall f_6541(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6514)
static void C_ccall f_6514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6508)
static void C_ccall f_6508(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6426)
static void C_ccall f_6426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6426)
static void C_ccall f_6426r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6440)
static void C_ccall f_6440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6407)
static void C_ccall f_6407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6407)
static void C_ccall f_6407r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6394)
static void C_fcall f_6394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6384)
static void C_fcall f_6384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6373)
static void C_fcall f_6373(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6366)
static void C_fcall f_6366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6355)
static void C_fcall f_6355(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6317)
static void C_fcall f_6317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6310)
static void C_fcall f_6310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6286)
static void C_fcall f_6286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6235)
static void C_fcall f_6235(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6201)
static void C_fcall f_6201(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6174)
static void C_fcall f_6174(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6133)
static void C_fcall f_6133(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6139)
static void C_fcall f_6139(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6149)
static void C_fcall f_6149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6047)
static void C_ccall f_6047(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6047)
static void C_ccall f_6047r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_5989)
static void C_fcall f_5989(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5949)
static void C_ccall f_5949(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5949)
static void C_ccall f_5949r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5979)
static void C_ccall f_5979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5901)
static void C_ccall f_5901(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5935)
static void C_ccall f_5935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5878)
static void C_ccall f_5878(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5858)
static void C_ccall f_5858(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5844)
static void C_ccall f_5844(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5834)
static void C_ccall f_5834(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5824)
static void C_ccall f_5824(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5814)
static void C_ccall f_5814(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5804)
static void C_ccall f_5804(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5771)
static void C_ccall f_5771(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5771)
static void C_ccall f_5771r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5780)
static void C_ccall f_5780(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5785)
static void C_ccall f_5785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5760)
static void C_ccall f_5760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5765)
static void C_ccall f_5765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5467)
static void C_ccall f_5467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5477)
static void C_ccall f_5477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5728)
static void C_ccall f_5728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5480)
static void C_ccall f_5480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5483)
static void C_ccall f_5483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5498)
static void C_fcall f_5498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5508)
static void C_ccall f_5508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5510)
static void C_fcall f_5510(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5569)
static void C_ccall f_5569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5579)
static void C_ccall f_5579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5696)
static void C_ccall f_5696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5684)
static void C_ccall f_5684(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5682)
static void C_ccall f_5682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5669)
static void C_ccall f_5669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5623)
static void C_ccall f_5623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5650)
static void C_ccall f_5650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5629)
static void C_ccall f_5629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5563)
static void C_fcall f_5563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5522)
static void C_fcall f_5522(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5535)
static void C_fcall f_5535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5745)
static void C_ccall f_5745(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5736)
static void C_ccall f_5736(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5744)
static void C_ccall f_5744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5747)
static void C_ccall f_5747(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5747)
static void C_ccall f_5747r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5755)
static void C_ccall f_5755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5169)
static void C_ccall f_5169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5422)
static void C_ccall f_5422(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5455)
static void C_ccall f_5455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5451)
static void C_ccall f_5451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5440)
static void C_ccall f_5440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5436)
static void C_ccall f_5436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5330)
static void C_ccall f_5330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5333)
static void C_ccall f_5333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5336)
static void C_ccall f_5336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5416)
static void C_ccall f_5416(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5241)
static void C_ccall f_5241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5182)
static void C_ccall f_5182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5339)
static void C_ccall f_5339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5346)
static void C_ccall f_5346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5406)
static void C_ccall f_5406(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5392)
static void C_ccall f_5392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5358)
static void C_ccall f_5358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5384)
static void C_ccall f_5384(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5319)
static void C_ccall f_5319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5366)
static void C_ccall f_5366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5362)
static void C_ccall f_5362(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_32107)
static void C_fcall trf_32107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32107(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32107(t0,t1,t2);}

C_noret_decl(trf_32167)
static void C_fcall trf_32167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32167(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_32167(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_32187)
static void C_fcall trf_32187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32187(t0,t1);}

C_noret_decl(trf_32190)
static void C_fcall trf_32190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32190(t0,t1);}

C_noret_decl(trf_32061)
static void C_fcall trf_32061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32061(t0,t1);}

C_noret_decl(trf_31983)
static void C_fcall trf_31983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31983(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31983(t0,t1,t2);}

C_noret_decl(trf_31795)
static void C_fcall trf_31795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31795(t0,t1);}

C_noret_decl(trf_30677)
static void C_fcall trf_30677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30677(t0,t1);}

C_noret_decl(trf_30550)
static void C_fcall trf_30550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30550(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30550(t0,t1,t2);}

C_noret_decl(trf_30248)
static void C_fcall trf_30248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30248(t0,t1);}

C_noret_decl(trf_29343)
static void C_fcall trf_29343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29343(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29343(t0,t1,t2);}

C_noret_decl(trf_29378)
static void C_fcall trf_29378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29378(t0,t1);}

C_noret_decl(trf_29402)
static void C_fcall trf_29402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29402(t0,t1);}

C_noret_decl(trf_29381)
static void C_fcall trf_29381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29381(t0,t1);}

C_noret_decl(trf_29184)
static void C_fcall trf_29184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29184(t0,t1);}

C_noret_decl(trf_29002)
static void C_fcall trf_29002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29002(t0,t1);}

C_noret_decl(trf_29009)
static void C_fcall trf_29009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29009(t0,t1);}

C_noret_decl(trf_28990)
static void C_fcall trf_28990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28990(t0,t1);}

C_noret_decl(trf_16884)
static void C_fcall trf_16884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16884(t0,t1);}

C_noret_decl(trf_16891)
static void C_fcall trf_16891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16891(t0,t1);}

C_noret_decl(trf_17205)
static void C_fcall trf_17205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17205(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17205(t0,t1,t2);}

C_noret_decl(trf_17228)
static void C_fcall trf_17228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17228(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17228(t0,t1,t2);}

C_noret_decl(trf_17245)
static void C_fcall trf_17245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17245(t0,t1);}

C_noret_decl(trf_17248)
static void C_fcall trf_17248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17248(t0,t1);}

C_noret_decl(trf_17251)
static void C_fcall trf_17251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17251(t0,t1);}

C_noret_decl(trf_17169)
static void C_fcall trf_17169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17169(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17169(t0,t1,t2);}

C_noret_decl(trf_17113)
static void C_fcall trf_17113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17113(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17113(t0,t1,t2);}

C_noret_decl(trf_17129)
static void C_fcall trf_17129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17129(t0,t1);}

C_noret_decl(trf_16907)
static void C_fcall trf_16907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16907(t0,t1);}

C_noret_decl(trf_16910)
static void C_fcall trf_16910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16910(t0,t1);}

C_noret_decl(trf_28499)
static void C_fcall trf_28499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28499(t0,t1);}

C_noret_decl(trf_28502)
static void C_fcall trf_28502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28502(t0,t1);}

C_noret_decl(trf_28345)
static void C_fcall trf_28345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28345(t0,t1);}

C_noret_decl(trf_28153)
static void C_fcall trf_28153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28153(t0,t1);}

C_noret_decl(trf_28003)
static void C_fcall trf_28003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28003(t0,t1);}

C_noret_decl(trf_28092)
static void C_fcall trf_28092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28092(t0,t1);}

C_noret_decl(trf_28006)
static void C_fcall trf_28006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28006(t0,t1);}

C_noret_decl(trf_28022)
static void C_fcall trf_28022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28022(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28022(t0,t1,t2,t3);}

C_noret_decl(trf_28044)
static void C_fcall trf_28044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28044(t0,t1);}

C_noret_decl(trf_27939)
static void C_fcall trf_27939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27939(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27939(t0,t1,t2);}

C_noret_decl(trf_27886)
static void C_fcall trf_27886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27886(t0,t1);}

C_noret_decl(trf_21339)
static void C_fcall trf_21339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21339(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21339(t0,t1);}

C_noret_decl(trf_21201)
static void C_fcall trf_21201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21201(t0,t1);}

C_noret_decl(trf_21415)
static void C_fcall trf_21415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21415(t0,t1);}

C_noret_decl(trf_27382)
static void C_fcall trf_27382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27382(t0,t1,t2);}

C_noret_decl(trf_27402)
static void C_fcall trf_27402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27402(t0,t1);}

C_noret_decl(trf_27411)
static void C_fcall trf_27411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27411(t0,t1);}

C_noret_decl(trf_27427)
static void C_fcall trf_27427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27427(t0,t1);}

C_noret_decl(trf_27275)
static void C_fcall trf_27275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27275(t0,t1);}

C_noret_decl(trf_27284)
static void C_fcall trf_27284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27284(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27284(t0,t1,t2);}

C_noret_decl(trf_27308)
static void C_fcall trf_27308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27308(t0,t1);}

C_noret_decl(trf_27129)
static void C_fcall trf_27129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27129(t0,t1);}

C_noret_decl(trf_27036)
static void C_fcall trf_27036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27036(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27036(t0,t1,t2);}

C_noret_decl(trf_26956)
static void C_fcall trf_26956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26956(t0,t1);}

C_noret_decl(trf_26882)
static void C_fcall trf_26882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26882(t0,t1);}

C_noret_decl(trf_26877)
static void C_fcall trf_26877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26877(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26877(t0,t1,t2);}

C_noret_decl(trf_26765)
static void C_fcall trf_26765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26765(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26765(t0,t1,t2,t3);}

C_noret_decl(trf_26836)
static void C_fcall trf_26836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26836(t0,t1,t2);}

C_noret_decl(trf_26795)
static void C_fcall trf_26795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26795(t0,t1);}

C_noret_decl(trf_26767)
static void C_fcall trf_26767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26767(t0,t1);}

C_noret_decl(trf_26722)
static void C_fcall trf_26722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26722(t0,t1);}

C_noret_decl(trf_26678)
static void C_fcall trf_26678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26678(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26678(t0,t1,t2,t3);}

C_noret_decl(trf_26669)
static void C_fcall trf_26669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26669(t0,t1);}

C_noret_decl(trf_26508)
static void C_fcall trf_26508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26508(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26508(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26534)
static void C_fcall trf_26534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26534(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26534(t0,t1,t2);}

C_noret_decl(trf_26571)
static void C_fcall trf_26571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26571(t0,t1);}

C_noret_decl(trf_26404)
static void C_fcall trf_26404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26404(t0,t1);}

C_noret_decl(trf_26384)
static void C_fcall trf_26384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26384(t0,t1);}

C_noret_decl(trf_26347)
static void C_fcall trf_26347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26347(t0,t1);}

C_noret_decl(trf_26327)
static void C_fcall trf_26327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26327(t0,t1);}

C_noret_decl(trf_25162)
static void C_fcall trf_25162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25162(t0,t1);}

C_noret_decl(trf_25165)
static void C_fcall trf_25165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25165(t0,t1);}

C_noret_decl(trf_25168)
static void C_fcall trf_25168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25168(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25168(t0,t1);}

C_noret_decl(trf_24692)
static void C_fcall trf_24692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24692(t0,t1);}

C_noret_decl(trf_24695)
static void C_fcall trf_24695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24695(t0,t1);}

C_noret_decl(trf_24698)
static void C_fcall trf_24698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24698(t0,t1);}

C_noret_decl(trf_24222)
static void C_fcall trf_24222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24222(t0,t1);}

C_noret_decl(trf_24225)
static void C_fcall trf_24225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24225(t0,t1);}

C_noret_decl(trf_24228)
static void C_fcall trf_24228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24228(t0,t1);}

C_noret_decl(trf_23474)
static void C_fcall trf_23474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23474(t0,t1);}

C_noret_decl(trf_23477)
static void C_fcall trf_23477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23477(t0,t1);}

C_noret_decl(trf_23480)
static void C_fcall trf_23480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23480(t0,t1);}

C_noret_decl(trf_23483)
static void C_fcall trf_23483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23483(t0,t1);}

C_noret_decl(trf_22726)
static void C_fcall trf_22726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22726(t0,t1);}

C_noret_decl(trf_22729)
static void C_fcall trf_22729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22729(t0,t1);}

C_noret_decl(trf_22732)
static void C_fcall trf_22732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22732(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22732(t0,t1);}

C_noret_decl(trf_22735)
static void C_fcall trf_22735(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22735(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22735(t0,t1);}

C_noret_decl(trf_22256)
static void C_fcall trf_22256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22256(t0,t1);}

C_noret_decl(trf_22259)
static void C_fcall trf_22259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22259(t0,t1);}

C_noret_decl(trf_22262)
static void C_fcall trf_22262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22262(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22262(t0,t1);}

C_noret_decl(trf_21508)
static void C_fcall trf_21508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21508(t0,t1);}

C_noret_decl(trf_21511)
static void C_fcall trf_21511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21511(t0,t1);}

C_noret_decl(trf_21514)
static void C_fcall trf_21514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21514(t0,t1);}

C_noret_decl(trf_21517)
static void C_fcall trf_21517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21517(t0,t1);}

C_noret_decl(trf_21166)
static void C_fcall trf_21166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21166(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21166(t0,t1,t2,t3);}

C_noret_decl(trf_21006)
static void C_fcall trf_21006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21006(t0,t1);}

C_noret_decl(trf_21041)
static void C_fcall trf_21041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21041(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21041(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21051)
static void C_fcall trf_21051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21051(t0,t1);}

C_noret_decl(trf_21014)
static void C_fcall trf_21014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21014(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21014(t0,t1,t2);}

C_noret_decl(trf_21174)
static void C_fcall trf_21174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21174(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21174(t0,t1);}

C_noret_decl(trf_20792)
static void C_fcall trf_20792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20792(t0,t1);}

C_noret_decl(trf_20798)
static void C_fcall trf_20798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20798(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20798(t0,t1);}

C_noret_decl(trf_20821)
static void C_fcall trf_20821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20821(t0,t1);}

C_noret_decl(trf_20834)
static void C_fcall trf_20834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20834(t0,t1);}

C_noret_decl(trf_20808)
static void C_fcall trf_20808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20808(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20808(t0,t1);}

C_noret_decl(trf_20621)
static void C_fcall trf_20621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20621(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20621(t0,t1,t2,t3);}

C_noret_decl(trf_20630)
static void C_fcall trf_20630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20630(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20630(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20584)
static void C_fcall trf_20584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20584(t0,t1);}

C_noret_decl(trf_20447)
static void C_fcall trf_20447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20447(t0,t1);}

C_noret_decl(trf_20377)
static void C_fcall trf_20377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20377(t0,t1);}

C_noret_decl(trf_19738)
static void C_fcall trf_19738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19738(t0,t1,t2);}

C_noret_decl(trf_19698)
static void C_fcall trf_19698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19698(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19698(t0,t1,t2);}

C_noret_decl(trf_19711)
static void C_fcall trf_19711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19711(t0,t1);}

C_noret_decl(trf_20290)
static void C_fcall trf_20290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20290(t0,t1);}

C_noret_decl(trf_20080)
static void C_fcall trf_20080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20080(t0,t1);}

C_noret_decl(trf_20196)
static void C_fcall trf_20196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20196(t0,t1);}

C_noret_decl(trf_20083)
static void C_fcall trf_20083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20083(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20083(t0,t1);}

C_noret_decl(trf_20086)
static void C_fcall trf_20086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20086(t0,t1);}

C_noret_decl(trf_19991)
static void C_fcall trf_19991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19991(t0,t1);}

C_noret_decl(trf_19906)
static void C_fcall trf_19906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19906(t0,t1);}

C_noret_decl(trf_19863)
static void C_fcall trf_19863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19863(t0,t1);}

C_noret_decl(trf_19830)
static void C_fcall trf_19830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19830(t0,t1);}

C_noret_decl(trf_19825)
static void C_fcall trf_19825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19825(t0,t1);}

C_noret_decl(trf_19820)
static void C_fcall trf_19820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19820(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19820(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19567)
static void C_fcall trf_19567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19567(t0,t1);}

C_noret_decl(trf_19414)
static void C_fcall trf_19414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19414(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19414(t0,t1,t2,t3);}

C_noret_decl(trf_19260)
static void C_fcall trf_19260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19260(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19260(t0,t1,t2);}

C_noret_decl(trf_19102)
static void C_fcall trf_19102(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19102(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19102(t0,t1,t2);}

C_noret_decl(trf_19135)
static void C_fcall trf_19135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19135(t0,t1);}

C_noret_decl(trf_19042)
static void C_fcall trf_19042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19042(t0,t1);}

C_noret_decl(trf_19007)
static void C_fcall trf_19007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19007(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19007(t0,t1);}

C_noret_decl(trf_19023)
static void C_fcall trf_19023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19023(t0,t1);}

C_noret_decl(trf_18978)
static void C_fcall trf_18978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18978(t0,t1);}

C_noret_decl(trf_18885)
static void C_fcall trf_18885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18885(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18885(t0,t1);}

C_noret_decl(trf_18641)
static void C_fcall trf_18641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18641(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18641(t0,t1,t2);}

C_noret_decl(trf_18445)
static void C_fcall trf_18445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18445(t0,t1);}

C_noret_decl(trf_18608)
static void C_fcall trf_18608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18608(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18608(t0,t1);}

C_noret_decl(trf_18448)
static void C_fcall trf_18448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18448(t0,t1);}

C_noret_decl(trf_18451)
static void C_fcall trf_18451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18451(t0,t1);}

C_noret_decl(trf_18454)
static void C_fcall trf_18454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18454(t0,t1);}

C_noret_decl(trf_18496)
static void C_fcall trf_18496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18496(t0,t1);}

C_noret_decl(trf_18461)
static void C_fcall trf_18461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18461(t0,t1);}

C_noret_decl(trf_18190)
static void C_fcall trf_18190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18190(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18190(t0,t1,t2,t3);}

C_noret_decl(trf_18198)
static void C_fcall trf_18198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18198(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18198(t0,t1,t2,t3);}

C_noret_decl(trf_18327)
static void C_fcall trf_18327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18327(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18327(t0,t1,t2);}

C_noret_decl(trf_18281)
static void C_fcall trf_18281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18281(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18281(t0,t1,t2);}

C_noret_decl(trf_18184)
static void C_fcall trf_18184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18184(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18184(t0,t1,t2);}

C_noret_decl(trf_18178)
static void C_fcall trf_18178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18178(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18178(t0,t1);}

C_noret_decl(trf_18172)
static void C_fcall trf_18172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18172(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18172(t0,t1,t2);}

C_noret_decl(trf_18101)
static void C_fcall trf_18101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18101(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18101(t0,t1,t2);}

C_noret_decl(trf_18103)
static void C_fcall trf_18103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18103(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18103(t0,t1,t2);}

C_noret_decl(trf_18109)
static void C_fcall trf_18109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18109(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18109(t0,t1,t2);}

C_noret_decl(trf_17950)
static void C_fcall trf_17950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17950(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17950(t0,t1);}

C_noret_decl(trf_17965)
static void C_fcall trf_17965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17965(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17965(t0,t1,t2);}

C_noret_decl(trf_17908)
static void C_fcall trf_17908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17908(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17908(t0,t1,t2);}

C_noret_decl(trf_17848)
static void C_fcall trf_17848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17848(t0,t1,t2);}

C_noret_decl(trf_17724)
static void C_fcall trf_17724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17724(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17724(t0,t1,t2);}

C_noret_decl(trf_17574)
static void C_fcall trf_17574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17574(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17574(t0,t1,t2);}

C_noret_decl(trf_17610)
static void C_fcall trf_17610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17610(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17610(t0,t1,t2);}

C_noret_decl(trf_17409)
static void C_fcall trf_17409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17409(t0,t1);}

C_noret_decl(trf_15229)
static void C_fcall trf_15229(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15229(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15229(t0,t1);}

C_noret_decl(trf_17540)
static void C_fcall trf_17540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17540(t0,t1,t2);}

C_noret_decl(trf_17550)
static void C_fcall trf_17550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17550(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17550(t0,t1);}

C_noret_decl(trf_17510)
static void C_fcall trf_17510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17510(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17510(t0,t1,t2);}

C_noret_decl(trf_17520)
static void C_fcall trf_17520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17520(t0,t1);}

C_noret_decl(trf_16571)
static void C_fcall trf_16571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16571(t0,t1);}

C_noret_decl(trf_16574)
static void C_fcall trf_16574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16574(t0,t1);}

C_noret_decl(trf_16577)
static void C_fcall trf_16577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16577(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16577(t0,t1);}

C_noret_decl(trf_16580)
static void C_fcall trf_16580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16580(t0,t1);}

C_noret_decl(trf_16583)
static void C_fcall trf_16583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16583(t0,t1);}

C_noret_decl(trf_16586)
static void C_fcall trf_16586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16586(t0,t1);}

C_noret_decl(trf_16414)
static void C_fcall trf_16414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16414(t0,t1);}

C_noret_decl(trf_16343)
static void C_fcall trf_16343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16343(t0,t1);}

C_noret_decl(trf_16158)
static void C_fcall trf_16158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16158(t0,t1);}

C_noret_decl(trf_16170)
static void C_fcall trf_16170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16170(t0,t1);}

C_noret_decl(trf_16207)
static void C_fcall trf_16207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16207(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16207(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16242)
static void C_fcall trf_16242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16242(t0,t1);}

C_noret_decl(trf_16137)
static void C_fcall trf_16137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16137(t0,t1);}

C_noret_decl(trf_16072)
static void C_fcall trf_16072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16072(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16072(t0,t1,t2);}

C_noret_decl(trf_16081)
static void C_fcall trf_16081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16081(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16081(t0,t1,t2);}

C_noret_decl(trf_16094)
static void C_fcall trf_16094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16094(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16094(t0,t1);}

C_noret_decl(trf_16028)
static void C_fcall trf_16028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16028(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16028(t0,t1,t2);}

C_noret_decl(trf_16016)
static void C_fcall trf_16016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16016(t0,t1);}

C_noret_decl(trf_15914)
static void C_fcall trf_15914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15914(t0,t1);}

C_noret_decl(trf_15866)
static void C_fcall trf_15866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15866(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15866(t0,t1);}

C_noret_decl(trf_15247)
static void C_fcall trf_15247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15247(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_15247(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_15257)
static void C_fcall trf_15257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15257(t0,t1);}

C_noret_decl(trf_15386)
static void C_fcall trf_15386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15386(t0,t1);}

C_noret_decl(trf_15474)
static void C_fcall trf_15474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15474(t0,t1);}

C_noret_decl(trf_15547)
static void C_fcall trf_15547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15547(t0,t1);}

C_noret_decl(trf_15625)
static void C_fcall trf_15625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15625(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15625(t0,t1);}

C_noret_decl(trf_15576)
static void C_fcall trf_15576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15576(t0,t1);}

C_noret_decl(trf_15592)
static void C_fcall trf_15592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15592(t0,t1);}

C_noret_decl(trf_15556)
static void C_fcall trf_15556(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15556(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15556(t0,t1);}

C_noret_decl(trf_15498)
static void C_fcall trf_15498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15498(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15498(t0,t1,t2);}

C_noret_decl(trf_15417)
static void C_fcall trf_15417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15417(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15417(t0,t1,t2);}

C_noret_decl(trf_15433)
static void C_fcall trf_15433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15433(t0,t1);}

C_noret_decl(trf_15401)
static void C_fcall trf_15401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15401(t0,t1);}

C_noret_decl(trf_15143)
static void C_fcall trf_15143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15143(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15143(t0,t1);}

C_noret_decl(trf_15152)
static void C_fcall trf_15152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15152(t0,t1);}

C_noret_decl(trf_15157)
static void C_fcall trf_15157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15157(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15157(t0,t1,t2);}

C_noret_decl(trf_15135)
static void C_fcall trf_15135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15135(t0,t1);}

C_noret_decl(trf_14927)
static void C_fcall trf_14927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14927(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14927(t0,t1,t2,t3);}

C_noret_decl(trf_14894)
static void C_fcall trf_14894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14894(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14894(t0,t1,t2,t3);}

C_noret_decl(trf_14876)
static void C_fcall trf_14876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14876(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14876(t0,t1,t2,t3);}

C_noret_decl(trf_14866)
static void C_fcall trf_14866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14866(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14866(t0,t1,t2,t3);}

C_noret_decl(trf_14854)
static void C_fcall trf_14854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14854(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14854(t0,t1,t2);}

C_noret_decl(trf_14822)
static void C_fcall trf_14822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14822(t0,t1,t2);}

C_noret_decl(trf_14806)
static void C_fcall trf_14806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14806(t0,t1);}

C_noret_decl(trf_14794)
static void C_fcall trf_14794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14794(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14794(t0,t1);}

C_noret_decl(trf_14776)
static void C_fcall trf_14776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14776(t0,t1);}

C_noret_decl(trf_14758)
static void C_fcall trf_14758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14758(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14758(t0,t1);}

C_noret_decl(trf_14743)
static void C_fcall trf_14743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14743(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14743(t0,t1);}

C_noret_decl(trf_14737)
static void C_fcall trf_14737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14737(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14737(t0,t1,t2,t3);}

C_noret_decl(trf_14725)
static void C_fcall trf_14725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14725(t0,t1);}

C_noret_decl(trf_14707)
static void C_fcall trf_14707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14707(t0,t1);}

C_noret_decl(trf_14686)
static void C_fcall trf_14686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14686(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14686(t0,t1,t2);}

C_noret_decl(trf_14654)
static void C_fcall trf_14654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14654(t0,t1);}

C_noret_decl(trf_14596)
static void C_fcall trf_14596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14596(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14596(t0,t1,t2);}

C_noret_decl(trf_14586)
static void C_fcall trf_14586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14586(t0,t1);}

C_noret_decl(trf_14580)
static void C_fcall trf_14580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14580(t0,t1);}

C_noret_decl(trf_14568)
static void C_fcall trf_14568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14568(t0,t1);}

C_noret_decl(trf_14544)
static void C_fcall trf_14544(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14544(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14544(t0,t1,t2);}

C_noret_decl(trf_14457)
static void C_fcall trf_14457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14457(t0,t1);}

C_noret_decl(trf_14436)
static void C_fcall trf_14436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14436(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14436(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14426)
static void C_fcall trf_14426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14426(t0,t1);}

C_noret_decl(trf_14414)
static void C_fcall trf_14414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14414(t0,t1);}

C_noret_decl(trf_14373)
static void C_fcall trf_14373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14373(t0,t1);}

C_noret_decl(trf_14355)
static void C_fcall trf_14355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14355(t0,t1);}

C_noret_decl(trf_14337)
static void C_fcall trf_14337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14337(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14337(t0,t1);}

C_noret_decl(trf_14260)
static void C_fcall trf_14260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14260(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14260(t0,t1,t2);}

C_noret_decl(trf_14285)
static void C_fcall trf_14285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14285(t0,t1);}

C_noret_decl(trf_13988)
static void C_fcall trf_13988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13988(t0,t1);}

C_noret_decl(trf_13991)
static void C_fcall trf_13991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13991(t0,t1);}

C_noret_decl(trf_13997)
static void C_fcall trf_13997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13997(t0,t1);}

C_noret_decl(trf_13711)
static void C_fcall trf_13711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13711(t0,t1);}

C_noret_decl(trf_13714)
static void C_fcall trf_13714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13714(t0,t1);}

C_noret_decl(trf_13641)
static void C_fcall trf_13641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13641(t0,t1);}

C_noret_decl(trf_13489)
static void C_fcall trf_13489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13489(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13489(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13414)
static void C_fcall trf_13414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13414(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13414(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13424)
static void C_fcall trf_13424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13424(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13424(t0,t1);}

C_noret_decl(trf_13431)
static void C_fcall trf_13431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13431(t0,t1);}

C_noret_decl(trf_13526)
static void C_fcall trf_13526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13526(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13526(t0,t1,t2);}

C_noret_decl(trf_13304)
static void C_fcall trf_13304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13304(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13304(t0,t1,t2,t3);}

C_noret_decl(trf_13316)
static void C_fcall trf_13316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13316(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13316(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13377)
static void C_fcall trf_13377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13377(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13377(t0,t1,t2);}

C_noret_decl(trf_12741)
static void C_fcall trf_12741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12741(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_12741(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_12677)
static void C_fcall trf_12677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12677(t0,t1);}

C_noret_decl(trf_12624)
static void C_fcall trf_12624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12624(t0,t1);}

C_noret_decl(trf_12627)
static void C_fcall trf_12627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12627(t0,t1);}

C_noret_decl(trf_12821)
static void C_fcall trf_12821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12821(t0,t1);}

C_noret_decl(trf_12824)
static void C_fcall trf_12824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12824(t0,t1);}

C_noret_decl(trf_12827)
static void C_fcall trf_12827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12827(t0,t1);}

C_noret_decl(trf_6011)
static void C_fcall trf_6011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6011(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6011(t0,t1,t2,t3);}

C_noret_decl(trf_12842)
static void C_fcall trf_12842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12842(t0,t1);}

C_noret_decl(trf_12403)
static void C_fcall trf_12403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12403(t0,t1);}

C_noret_decl(trf_12495)
static void C_fcall trf_12495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12495(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12495(t0,t1,t2);}

C_noret_decl(trf_12514)
static void C_fcall trf_12514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12514(t0,t1);}

C_noret_decl(trf_12468)
static void C_fcall trf_12468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12468(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12468(t0,t1,t2);}

C_noret_decl(trf_12413)
static void C_fcall trf_12413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12413(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12413(t0,t1,t2);}

C_noret_decl(trf_12423)
static void C_fcall trf_12423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12423(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12423(t0,t1,t2,t3);}

C_noret_decl(trf_12269)
static void C_fcall trf_12269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12269(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12269(t0,t1,t2);}

C_noret_decl(trf_12338)
static void C_fcall trf_12338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12338(t0,t1,t2);}

C_noret_decl(trf_12284)
static void C_fcall trf_12284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12284(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12284(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11826)
static void C_fcall trf_11826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11826(t0,t1);}

C_noret_decl(trf_11829)
static void C_fcall trf_11829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11829(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11829(t0,t1);}

C_noret_decl(trf_11832)
static void C_fcall trf_11832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11832(t0,t1);}

C_noret_decl(trf_11835)
static void C_fcall trf_11835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11835(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11835(t0,t1);}

C_noret_decl(trf_11799)
static void C_fcall trf_11799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11799(t0,t1);}

C_noret_decl(trf_11522)
static void C_fcall trf_11522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11522(t0,t1);}

C_noret_decl(trf_11525)
static void C_fcall trf_11525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11525(t0,t1);}

C_noret_decl(trf_11528)
static void C_fcall trf_11528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11528(t0,t1);}

C_noret_decl(trf_11419)
static void C_fcall trf_11419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11419(t0,t1);}

C_noret_decl(trf_11410)
static void C_fcall trf_11410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11410(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11410(t0,t1,t2);}

C_noret_decl(trf_11401)
static void C_fcall trf_11401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11401(t0,t1);}

C_noret_decl(trf_11383)
static void C_fcall trf_11383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11383(t0,t1);}

C_noret_decl(trf_11365)
static void C_fcall trf_11365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11365(t0,t1);}

C_noret_decl(trf_11347)
static void C_fcall trf_11347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11347(t0,t1);}

C_noret_decl(trf_11338)
static void C_fcall trf_11338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11338(t0,t1,t2);}

C_noret_decl(trf_11329)
static void C_fcall trf_11329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11329(t0,t1);}

C_noret_decl(trf_11160)
static void C_fcall trf_11160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11160(t0,t1);}

C_noret_decl(trf_11116)
static void C_fcall trf_11116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11116(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11116(t0,t1,t2);}

C_noret_decl(trf_10637)
static void C_fcall trf_10637(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10637(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10637(t0,t1);}

C_noret_decl(trf_10640)
static void C_fcall trf_10640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10640(t0,t1);}

C_noret_decl(trf_10643)
static void C_fcall trf_10643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10643(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10643(t0,t1);}

C_noret_decl(trf_10646)
static void C_fcall trf_10646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10646(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10646(t0,t1);}

C_noret_decl(trf_10592)
static void C_fcall trf_10592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10592(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10592(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10298)
static void C_fcall trf_10298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10298(t0,t1);}

C_noret_decl(trf_10301)
static void C_fcall trf_10301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10301(t0,t1);}

C_noret_decl(trf_10304)
static void C_fcall trf_10304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10304(t0,t1);}

C_noret_decl(trf_10015)
static void C_fcall trf_10015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10015(t0,t1);}

C_noret_decl(trf_10018)
static void C_fcall trf_10018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10018(t0,t1);}

C_noret_decl(trf_10021)
static void C_fcall trf_10021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10021(t0,t1);}

C_noret_decl(trf_9974)
static void C_fcall trf_9974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9974(t0,t1);}

C_noret_decl(trf_9930)
static void C_fcall trf_9930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9930(t0,t1);}

C_noret_decl(trf_9845)
static void C_fcall trf_9845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9845(t0,t1);}

C_noret_decl(trf_9330)
static void C_fcall trf_9330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9330(t0,t1);}

C_noret_decl(trf_9333)
static void C_fcall trf_9333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9333(t0,t1);}

C_noret_decl(trf_9336)
static void C_fcall trf_9336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9336(t0,t1);}

C_noret_decl(trf_9339)
static void C_fcall trf_9339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9339(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9339(t0,t1);}

C_noret_decl(trf_9246)
static void C_fcall trf_9246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9246(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9246(t0,t1,t2);}

C_noret_decl(trf_9237)
static void C_fcall trf_9237(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9237(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9237(t0,t1);}

C_noret_decl(trf_9172)
static void C_fcall trf_9172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9172(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9172(t0,t1);}

C_noret_decl(trf_8914)
static void C_fcall trf_8914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8914(t0,t1);}

C_noret_decl(trf_8917)
static void C_fcall trf_8917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8917(t0,t1);}

C_noret_decl(trf_8920)
static void C_fcall trf_8920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8920(t0,t1);}

C_noret_decl(trf_8795)
static void C_fcall trf_8795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8795(t0,t1);}

C_noret_decl(trf_8819)
static void C_fcall trf_8819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8819(t0,t1);}

C_noret_decl(trf_8749)
static void C_fcall trf_8749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8749(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8749(t0,t1,t2);}

C_noret_decl(trf_8740)
static void C_fcall trf_8740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8740(t0,t1);}

C_noret_decl(trf_8439)
static void C_fcall trf_8439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8439(t0,t1);}

C_noret_decl(trf_8675)
static void C_fcall trf_8675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8675(t0,t1);}

C_noret_decl(trf_8681)
static void C_fcall trf_8681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8681(t0,t1);}

C_noret_decl(trf_8573)
static void C_fcall trf_8573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8573(t0,t1);}

C_noret_decl(trf_8575)
static void C_fcall trf_8575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8575(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8575(t0,t1,t2,t3);}

C_noret_decl(trf_8624)
static void C_fcall trf_8624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8624(t0,t1);}

C_noret_decl(trf_8589)
static void C_fcall trf_8589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8589(t0,t1);}

C_noret_decl(trf_8473)
static void C_fcall trf_8473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8473(t0,t1);}

C_noret_decl(trf_8387)
static void C_fcall trf_8387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8387(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8387(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8406)
static void C_fcall trf_8406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8406(t0,t1);}

C_noret_decl(trf_8337)
static void C_fcall trf_8337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8337(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8337(t0,t1,t2,t3);}

C_noret_decl(trf_8098)
static void C_fcall trf_8098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8098(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_8098(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_8117)
static void C_fcall trf_8117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8117(t0,t1);}

C_noret_decl(trf_8132)
static void C_fcall trf_8132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8132(t0,t1);}

C_noret_decl(trf_8141)
static void C_fcall trf_8141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8141(t0,t1);}

C_noret_decl(trf_8088)
static void C_fcall trf_8088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8088(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_8088(t0);}

C_noret_decl(trf_8033)
static void C_fcall trf_8033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8033(t0,t1);}

C_noret_decl(trf_8024)
static void C_fcall trf_8024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8024(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8024(t0,t1,t2);}

C_noret_decl(trf_7907)
static void C_fcall trf_7907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7907(t0,t1);}

C_noret_decl(trf_7898)
static void C_fcall trf_7898(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7898(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7898(t0,t1,t2);}

C_noret_decl(trf_7880)
static void C_fcall trf_7880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7880(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7880(t0,t1,t2);}

C_noret_decl(trf_7871)
static void C_fcall trf_7871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7871(t0,t1);}

C_noret_decl(trf_7853)
static void C_fcall trf_7853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7853(t0,t1);}

C_noret_decl(trf_7844)
static void C_fcall trf_7844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7844(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7844(t0,t1,t2);}

C_noret_decl(trf_7835)
static void C_fcall trf_7835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7835(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7835(t0,t1);}

C_noret_decl(trf_7817)
static void C_fcall trf_7817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7817(t0,t1);}

C_noret_decl(trf_7808)
static void C_fcall trf_7808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7808(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7808(t0,t1,t2);}

C_noret_decl(trf_7799)
static void C_fcall trf_7799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7799(t0,t1);}

C_noret_decl(trf_7784)
static void C_fcall trf_7784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7784(t0,t1);}

C_noret_decl(trf_7739)
static void C_fcall trf_7739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7739(t0,t1);}

C_noret_decl(trf_7721)
static void C_fcall trf_7721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7721(t0,t1);}

C_noret_decl(trf_7712)
static void C_fcall trf_7712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7712(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7712(t0,t1,t2);}

C_noret_decl(trf_7685)
static void C_fcall trf_7685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7685(t0,t1);}

C_noret_decl(trf_7667)
static void C_fcall trf_7667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7667(t0,t1);}

C_noret_decl(trf_7649)
static void C_fcall trf_7649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7649(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7649(t0,t1);}

C_noret_decl(trf_7640)
static void C_fcall trf_7640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7640(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7640(t0,t1,t2);}

C_noret_decl(trf_7628)
static void C_fcall trf_7628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7628(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7628(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7527)
static void C_fcall trf_7527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7527(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7527(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7557)
static void C_fcall trf_7557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7557(t0,t1);}

C_noret_decl(trf_7540)
static void C_fcall trf_7540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7540(t0,t1);}

C_noret_decl(trf_7405)
static void C_fcall trf_7405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7405(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7405(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7435)
static void C_fcall trf_7435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7435(t0,t1);}

C_noret_decl(trf_7418)
static void C_fcall trf_7418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7418(t0,t1);}

C_noret_decl(trf_7308)
static void C_fcall trf_7308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7308(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7308(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7321)
static void C_fcall trf_7321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7321(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7321(t0,t1);}

C_noret_decl(trf_7240)
static void C_fcall trf_7240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7240(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7240(t0,t1,t2,t3);}

C_noret_decl(trf_7214)
static void C_fcall trf_7214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7214(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7214(t0,t1);}

C_noret_decl(trf_7142)
static void C_fcall trf_7142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7142(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7142(t0,t1,t2,t3);}

C_noret_decl(trf_6823)
static void C_fcall trf_6823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6823(t0,t1);}

C_noret_decl(trf_6725)
static void C_fcall trf_6725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6725(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6725(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6630)
static void C_fcall trf_6630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6630(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6630(t0,t1,t2);}

C_noret_decl(trf_6551)
static void C_fcall trf_6551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6551(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6551(t0,t1);}

C_noret_decl(trf_6546)
static void C_fcall trf_6546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6546(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6546(t0,t1,t2);}

C_noret_decl(trf_6541)
static void C_fcall trf_6541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6541(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6541(t0,t1,t2,t3);}

C_noret_decl(trf_6394)
static void C_fcall trf_6394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6394(t0,t1);}

C_noret_decl(trf_6384)
static void C_fcall trf_6384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6384(t0,t1);}

C_noret_decl(trf_6373)
static void C_fcall trf_6373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6373(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6373(t0,t1,t2);}

C_noret_decl(trf_6366)
static void C_fcall trf_6366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6366(t0,t1);}

C_noret_decl(trf_6355)
static void C_fcall trf_6355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6355(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6355(t0,t1,t2);}

C_noret_decl(trf_6317)
static void C_fcall trf_6317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6317(t0,t1);}

C_noret_decl(trf_6310)
static void C_fcall trf_6310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6310(t0,t1);}

C_noret_decl(trf_6286)
static void C_fcall trf_6286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6286(t0,t1);}

C_noret_decl(trf_6235)
static void C_fcall trf_6235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6235(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6235(t0,t1,t2);}

C_noret_decl(trf_6201)
static void C_fcall trf_6201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6201(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6201(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6174)
static void C_fcall trf_6174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6174(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6174(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6133)
static void C_fcall trf_6133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6133(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6133(t0,t1,t2);}

C_noret_decl(trf_6139)
static void C_fcall trf_6139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6139(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6139(t0,t1,t2);}

C_noret_decl(trf_6149)
static void C_fcall trf_6149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6149(t0,t1);}

C_noret_decl(trf_5989)
static void C_fcall trf_5989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5989(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_5989(t0,t1,t2,t3);}

C_noret_decl(trf_5498)
static void C_fcall trf_5498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5498(t0,t1);}

C_noret_decl(trf_5510)
static void C_fcall trf_5510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5510(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5510(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5563)
static void C_fcall trf_5563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5563(t0,t1);}

C_noret_decl(trf_5522)
static void C_fcall trf_5522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5522(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5522(t0,t1,t2);}

C_noret_decl(trf_5535)
static void C_fcall trf_5535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5535(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr7rv)
static void C_fcall tr7rv(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7rv(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n+1);
t7=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4824)){
C_save(t1);
C_rereclaim2(4824*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,817);
lf[1]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[2]=C_h_intern(&lf[2],14,"expand-optkeys");
lf[3]=C_h_intern(&lf[3],3,"let");
lf[4]=C_h_intern(&lf[4],4,"let*");
lf[5]=C_h_intern(&lf[5],5,"null\077");
lf[6]=C_h_intern(&lf[6],5,"error");
lf[7]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[8]=C_h_intern(&lf[8],6,"unless");
lf[9]=C_h_intern(&lf[9],10,"\003sysappend");
lf[10]=C_h_intern(&lf[10],3,"car");
lf[11]=C_h_intern(&lf[11],4,"case");
lf[12]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[13]=C_h_intern(&lf[13],4,"when");
lf[14]=C_h_intern(&lf[14],4,"set!");
lf[15]=C_h_intern(&lf[15],8,"keyword\077");
lf[16]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[17]=C_h_intern(&lf[17],3,"cdr");
lf[18]=C_h_intern(&lf[18],4,"else");
lf[19]=C_h_intern(&lf[19],7,"\003sysmap");
lf[20]=C_h_intern(&lf[20],6,"append");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[22]=C_h_intern(&lf[22],2,"if");
lf[23]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[24]=C_h_intern(&lf[24],4,"cadr");
lf[25]=C_h_intern(&lf[25],4,"cddr");
lf[26]=C_h_intern(&lf[26],15,"string->keyword");
lf[27]=C_h_intern(&lf[27],14,"symbol->string");
lf[28]=C_h_intern(&lf[28],6,"gensym");
lf[29]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[30]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[31]=C_h_intern(&lf[31],10,"*messages*");
lf[32]=C_h_intern(&lf[32],11,"expand-send");
lf[33]=C_h_intern(&lf[33],7,"sprintf");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[35]=C_h_intern(&lf[35],15,"keyword->string");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[39]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[41]=C_h_intern(&lf[41],5,"&rest");
lf[42]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[43]=C_h_intern(&lf[43],14,"hash-table-ref");
lf[44]=C_h_intern(&lf[44],3,"cwd");
lf[45]=C_h_intern(&lf[45],17,"\003syspeek-c-string");
lf[46]=C_h_intern(&lf[46],5,"chdir");
lf[47]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[48]=C_h_intern(&lf[48],17,"\003sysmake-c-string");
lf[49]=C_h_intern(&lf[49],5,"first");
lf[50]=C_h_intern(&lf[50],6,"second");
lf[51]=C_h_intern(&lf[51],5,"third");
lf[52]=C_h_intern(&lf[52],5,"caddr");
lf[53]=C_h_intern(&lf[53],6,"fourth");
lf[54]=C_h_intern(&lf[54],6,"cadddr");
lf[55]=C_h_intern(&lf[55],5,"fifth");
lf[56]=C_h_intern(&lf[56],5,"sixth");
lf[57]=C_h_intern(&lf[57],7,"seventh");
lf[58]=C_h_intern(&lf[58],6,"eighth");
lf[59]=C_h_intern(&lf[59],5,"ninth");
lf[60]=C_h_intern(&lf[60],5,"tenth");
lf[61]=C_h_intern(&lf[61],4,"last");
lf[62]=C_h_intern(&lf[62],7,"butlast");
lf[63]=C_h_intern(&lf[63],5,"list*");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[79]=C_h_intern(&lf[79],7,"rescale");
lf[80]=C_h_intern(&lf[80],8,"discrete");
lf[81]=C_h_intern(&lf[81],3,"int");
lf[82]=C_h_intern(&lf[82],8,"quantize");
lf[83]=C_h_intern(&lf[83],8,"decimals");
lf[84]=C_h_intern(&lf[84],15,"rhythm->seconds");
lf[85]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[86]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[87]=C_h_intern(&lf[87],9,"\003syserror");
lf[88]=C_h_intern(&lf[88],13,"cents->scaler");
lf[89]=C_h_intern(&lf[89],13,"scaler->cents");
lf[90]=C_h_intern(&lf[90],7,"interpl");
lf[91]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[92]=C_h_intern(&lf[92],3,"err");
lf[93]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[94]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[95]=C_h_intern(&lf[95],6,"interp");
lf[96]=C_h_intern(&lf[96],5,"steps");
lf[97]=C_h_intern(&lf[97],6,"modulo");
lf[98]=C_h_intern(&lf[98],8,"ran-set!");
lf[99]=C_h_intern(&lf[99],3,"ran");
lf[100]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[101]=C_h_intern(&lf[101],7,"between");
lf[102]=C_h_intern(&lf[102],4,"odds");
lf[103]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[104]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[105]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[106]=C_h_intern(&lf[106],5,"pickl");
lf[107]=C_decode_literal(C_heaptop,"\376B\000\000\035cannot pick from empty list: ");
lf[108]=C_h_intern(&lf[108],4,"pick");
lf[109]=C_h_intern(&lf[109],6,"ranlow");
lf[110]=C_h_intern(&lf[110],7,"ranhigh");
lf[111]=C_h_intern(&lf[111],9,"ranmiddle");
lf[112]=C_h_intern(&lf[112],7,"ranbeta");
lf[113]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[114]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[115]=C_h_intern(&lf[115],6,"ranexp");
lf[116]=C_h_intern(&lf[116],8,"rangauss");
lf[117]=C_h_intern(&lf[117],9,"rancauchy");
lf[118]=C_h_intern(&lf[118],10,"ranpoisson");
lf[119]=C_h_intern(&lf[119],3,"arg");
lf[120]=C_h_intern(&lf[120],8,"rangamma");
lf[121]=C_h_intern(&lf[121],8,"ranbrown");
lf[122]=C_h_intern(&lf[122],7,"ranpink");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[126]=C_h_intern(&lf[126],13,"string-append");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[130]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[131]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[132]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[133]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[134]=C_h_intern(&lf[134],5,"floor");
lf[135]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[136]=C_h_intern(&lf[136],4,"note");
lf[137]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[138]=C_h_intern(&lf[138],3,"key");
lf[139]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[140]=C_h_intern(&lf[140],2,"hz");
lf[141]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[143]=C_h_intern(&lf[143],6,"period");
lf[145]=C_h_intern(&lf[145],14,"\003sysblock-set!");
lf[153]=C_h_intern(&lf[153],7,"pattern");
lf[168]=C_h_intern(&lf[168],4,"\000nad");
lf[169]=C_h_intern(&lf[169],8,"\000periods");
lf[170]=C_h_intern(&lf[170],12,"\000depth-first");
lf[172]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[173]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[174]=C_h_intern(&lf[174],14,"\000breadth-first");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[176]=C_h_intern(&lf[176],7,"\000values");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[179]=C_h_intern(&lf[179],4,"eop\077");
lf[180]=C_h_intern(&lf[180],4,"\000eop");
lf[181]=C_h_intern(&lf[181],4,"eod\077");
lf[182]=C_h_intern(&lf[182],4,"\000eod");
lf[183]=C_h_intern(&lf[183],4,"next");
lf[187]=C_h_intern(&lf[187],5,"force");
lf[188]=C_h_intern(&lf[188],8,"promise\077");
lf[189]=C_h_intern(&lf[189],3,"max");
lf[190]=C_h_intern(&lf[190],10,"make-cycle");
lf[191]=C_h_intern(&lf[191],12,"\003sysfor-each");
lf[193]=C_h_intern(&lf[193],4,"\000for");
lf[194]=C_h_intern(&lf[194],7,"\000repeat");
lf[196]=C_h_intern(&lf[196],5,"palin");
lf[198]=C_h_intern(&lf[198],15,"make-palindrome");
lf[200]=C_h_intern(&lf[200],6,"\000elide");
lf[201]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[202]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[203]=C_h_intern(&lf[203],9,"make-line");
lf[205]=C_h_intern(&lf[205],9,"make-heap");
lf[207]=C_h_intern(&lf[207],6,"random");
lf[208]=C_h_intern(&lf[208],13,"make-rotation");
lf[210]=C_h_intern(&lf[210],7,"\000rotate");
lf[212]=C_h_intern(&lf[212],11,"random-item");
lf[220]=C_h_intern(&lf[220],14,"make-weighting");
lf[223]=C_h_intern(&lf[223],7,"\000weight");
lf[224]=C_h_intern(&lf[224],4,"\000min");
lf[225]=C_h_intern(&lf[225],4,"\000max");
lf[226]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[227]=C_h_intern(&lf[227],11,"make-markov");
lf[228]=C_h_intern(&lf[228],1,"*");
lf[229]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[231]=C_h_intern(&lf[231],5,"\000past");
lf[232]=C_h_intern(&lf[232],2,"->");
lf[233]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[234]=C_h_intern(&lf[234],7,"reverse");
lf[235]=C_h_intern(&lf[235],3,"\000->");
lf[236]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[237]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[238]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[241]=C_h_intern(&lf[241],10,"graph-node");
lf[242]=C_h_intern(&lf[242],10,"make-graph");
lf[244]=C_h_intern(&lf[244],3,"\000to");
lf[245]=C_h_intern(&lf[245],3,"\000id");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[248]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[250]=C_h_intern(&lf[250],5,"token");
lf[255]=C_h_intern(&lf[255],1,"t");
lf[260]=C_h_intern(&lf[260],4,"rule");
lf[263]=C_h_intern(&lf[263],22,"hash-table-ref/default");
lf[270]=C_h_intern(&lf[270],11,"parse-error");
lf[274]=C_h_intern(&lf[274],10,"parse-unit");
lf[286]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[288]=C_h_intern(&lf[288],14,"string->symbol");
lf[289]=C_h_intern(&lf[289],4,"expt");
lf[290]=C_h_intern(&lf[290],5,"equal");
lf[291]=C_h_intern(&lf[291],3,"and");
lf[292]=C_h_intern(&lf[292],2,"or");
lf[293]=C_h_intern(&lf[293],3,"not");
lf[294]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[295]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[298]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[306]=C_h_intern(&lf[306],1,"@");
lf[307]=C_h_intern(&lf[307],1,"+");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[309]=C_h_intern(&lf[309],6,"printf");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[315]=C_h_intern(&lf[315],2,">=");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[318]=C_h_intern(&lf[318],5,"begin");
lf[319]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[321]=C_h_intern(&lf[321],1,">");
lf[322]=C_h_intern(&lf[322],2,"<=");
lf[323]=C_h_intern(&lf[323],1,"-");
lf[324]=C_h_intern(&lf[324],1,"<");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[331]=C_h_intern(&lf[331],3,"sal");
lf[332]=C_h_intern(&lf[332],11,"print-error");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[334]=C_h_intern(&lf[334],11,"make-string");
lf[335]=C_h_intern(&lf[335],9,"substring");
lf[336]=C_h_intern(&lf[336],2,"pp");
lf[337]=C_h_intern(&lf[337],4,"eval");
lf[338]=C_h_intern(&lf[338],7,"\000syntax");
lf[339]=C_h_intern(&lf[339],7,"\000scheme");
lf[340]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[341]=C_h_intern(&lf[341],7,"call/cc");
lf[342]=C_h_intern(&lf[342],9,"sal:print");
lf[343]=C_h_intern(&lf[343],13,"print-message");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[347]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[352]=C_h_intern(&lf[352],9,"sal:chdir");
lf[353]=C_h_intern(&lf[353],8,"sal:load");
lf[354]=C_h_intern(&lf[354],13,"load-sal-file");
lf[355]=C_h_intern(&lf[355],4,"load");
lf[356]=C_h_intern(&lf[356],15,"\003syssubstring=\077");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[360]=C_h_intern(&lf[360],12,"file-exists\077");
lf[361]=C_h_intern(&lf[361],8,"sal:open");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[363]=C_h_intern(&lf[363],10,"sal:output");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[376]=C_h_intern(&lf[376],8,"operator");
lf[377]=C_h_intern(&lf[377],8,"bindings");
lf[378]=C_h_intern(&lf[378],10,"collectors");
lf[379]=C_h_intern(&lf[379],9,"initially");
lf[380]=C_h_intern(&lf[380],9,"end-tests");
lf[381]=C_h_intern(&lf[381],7,"looping");
lf[382]=C_h_intern(&lf[382],8,"stepping");
lf[383]=C_h_intern(&lf[383],7,"finally");
lf[384]=C_h_intern(&lf[384],9,"returning");
lf[390]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[391]=C_h_intern(&lf[391],7,"newline");
lf[392]=C_h_intern(&lf[392],7,"display");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[397]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[401]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[406]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[408]=C_h_intern(&lf[408],3,"for");
lf[409]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[411]=C_h_intern(&lf[411],8,"downfrom");
lf[412]=C_h_intern(&lf[412],5,"above");
lf[413]=C_h_intern(&lf[413],5,"below");
lf[414]=C_h_intern(&lf[414],6,"downto");
lf[415]=C_h_intern(&lf[415],4,"from");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[422]=C_h_intern(&lf[422],2,"to");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[431]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[432]=C_h_intern(&lf[432],2,"by");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[441]=C_h_intern(&lf[441],6,"across");
lf[442]=C_h_intern(&lf[442],13,"vector-length");
lf[443]=C_h_intern(&lf[443],10,"vector-ref");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[446]=C_h_intern(&lf[446],4,"over");
lf[447]=C_h_intern(&lf[447],2,"in");
lf[448]=C_h_intern(&lf[448],5,"quote");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[456]=C_h_intern(&lf[456],2,"on");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[460]=C_h_intern(&lf[460],1,"=");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[462]=C_h_intern(&lf[462],4,"then");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[465]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[468]=C_h_intern(&lf[468],4,"with");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[491]=C_h_intern(&lf[491],3,"sum");
lf[492]=C_h_intern(&lf[492],5,"count");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[494]=C_h_intern(&lf[494],8,"minimize");
lf[495]=C_h_intern(&lf[495],8,"maximize");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[498]=C_h_intern(&lf[498],4,"list");
lf[499]=C_h_intern(&lf[499],8,"set-cdr!");
lf[500]=C_h_intern(&lf[500],9,"last-pair");
lf[501]=C_h_intern(&lf[501],7,"collect");
lf[502]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[505]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[506]=C_h_intern(&lf[506],5,"nconc");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[510]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[511]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[512]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[513]=C_h_intern(&lf[513],4,"into");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[520]=C_h_intern(&lf[520],6,"return");
lf[522]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[523]=C_h_intern(&lf[523],5,"until");
lf[524]=C_h_intern(&lf[524],5,"while");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[528]=C_h_intern(&lf[528],7,"thereis");
lf[529]=C_h_intern(&lf[529],6,"always");
lf[530]=C_h_intern(&lf[530],5,"never");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[540]=C_h_intern(&lf[540],4,"task");
lf[541]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[543]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[549]=C_h_intern(&lf[549],2,"do");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[553]=C_h_intern(&lf[553],4,"iter");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[556]=C_h_intern(&lf[556],6,"repeat");
lf[557]=C_h_intern(&lf[557],2,"as");
lf[559]=C_h_intern(&lf[559],10,"mm:make-on");
lf[560]=C_h_intern(&lf[560],5,"\000time");
lf[561]=C_h_intern(&lf[561],4,"\000key");
lf[562]=C_h_intern(&lf[562],4,"\000vel");
lf[563]=C_h_intern(&lf[563],5,"\000chan");
lf[564]=C_h_intern(&lf[564],6,"mm:on\077");
lf[565]=C_h_intern(&lf[565],11,"mm:make-off");
lf[566]=C_h_intern(&lf[566],7,"mm:off\077");
lf[567]=C_h_intern(&lf[567],13,"mm:make-touch");
lf[568]=C_h_intern(&lf[568],4,"\000val");
lf[569]=C_h_intern(&lf[569],9,"mm:touch\077");
lf[570]=C_h_intern(&lf[570],12,"mm:make-ctrl");
lf[571]=C_h_intern(&lf[571],4,"\000num");
lf[572]=C_h_intern(&lf[572],8,"mm:ctrl\077");
lf[573]=C_h_intern(&lf[573],12,"mm:make-prog");
lf[574]=C_h_intern(&lf[574],8,"mm:prog\077");
lf[575]=C_h_intern(&lf[575],13,"mm:make-press");
lf[576]=C_h_intern(&lf[576],9,"mm:press\077");
lf[577]=C_h_intern(&lf[577],12,"mm:make-bend");
lf[578]=C_h_intern(&lf[578],7,"mm:free");
lf[579]=C_h_intern(&lf[579],7,"mm:copy");
lf[580]=C_h_intern(&lf[580],7,"mm:time");
lf[581]=C_h_intern(&lf[581],12,"mm:time-set!");
lf[582]=C_h_intern(&lf[582],7,"mm:chan");
lf[583]=C_h_intern(&lf[583],12,"mm:chan-set!");
lf[584]=C_h_intern(&lf[584],6,"mm:key");
lf[585]=C_h_intern(&lf[585],11,"mm:key-set!");
lf[586]=C_h_intern(&lf[586],6,"mm:vel");
lf[587]=C_h_intern(&lf[587],11,"mm:vel-set!");
lf[588]=C_h_intern(&lf[588],6,"mm:val");
lf[589]=C_h_intern(&lf[589],8,"mm:type\077");
lf[590]=C_h_intern(&lf[590],11,"mm:val-set!");
lf[591]=C_h_intern(&lf[591],1,"k");
lf[592]=C_h_intern(&lf[592],6,"mm:num");
lf[593]=C_h_intern(&lf[593],11,"mm:num-set!");
lf[594]=C_h_intern(&lf[594],7,"mp:note");
lf[595]=C_h_intern(&lf[595],7,"mp:midi");
lf[596]=C_h_intern(&lf[596],6,"mp:off");
lf[597]=C_h_intern(&lf[597],5,"mp:on");
lf[598]=C_h_intern(&lf[598],8,"mp:touch");
lf[599]=C_h_intern(&lf[599],7,"mp:ctrl");
lf[600]=C_h_intern(&lf[600],7,"mp:prog");
lf[601]=C_h_intern(&lf[601],8,"mp:press");
lf[602]=C_h_intern(&lf[602],7,"mp:bend");
lf[603]=C_h_intern(&lf[603],5,"mp:mm");
lf[604]=C_h_intern(&lf[604],9,"mp:inhook");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[606]=C_h_intern(&lf[606],27,"condition-property-accessor");
lf[607]=C_h_intern(&lf[607],3,"exn");
lf[608]=C_h_intern(&lf[608],7,"message");
lf[609]=C_h_intern(&lf[609],22,"with-exception-handler");
lf[610]=C_h_intern(&lf[610],30,"call-with-current-continuation");
lf[611]=C_h_intern(&lf[611],4,"cs:i");
lf[612]=C_h_intern(&lf[612],4,"cs:f");
lf[613]=C_h_intern(&lf[613],8,"cs:clear");
lf[614]=C_h_intern(&lf[614],7,"cm-logo");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[622]=C_h_intern(&lf[622],25,"current-time-milliseconds");
lf[623]=C_h_intern(&lf[623],20,"current-time-seconds");
lf[625]=C_h_intern(&lf[625],6,"\003sysgc");
lf[628]=C_h_intern(&lf[628],6,"sprout");
lf[629]=C_h_intern(&lf[629],3,"now");
lf[630]=C_h_intern(&lf[630],11,"time-format");
lf[631]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[632]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[633]=C_h_intern(&lf[633],1,"m");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[635]=C_h_intern(&lf[635],1,"s");
lf[636]=C_h_intern(&lf[636],5,"pause");
lf[637]=C_h_intern(&lf[637],7,"paused\077");
lf[638]=C_h_intern(&lf[638],4,"cont");
lf[639]=C_h_intern(&lf[639],4,"stop");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[641]=C_h_intern(&lf[641],4,"hush");
lf[642]=C_h_intern(&lf[642],14,"return-to-host");
lf[643]=C_h_intern(&lf[643],4,"cond");
lf[644]=C_h_intern(&lf[644],6,"lambda");
lf[645]=C_h_intern(&lf[645],7,"elapsed");
lf[646]=C_h_intern(&lf[646],1,"x");
lf[647]=C_h_intern(&lf[647],4,"wait");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[649]=C_h_intern(&lf[649],6,"safety");
lf[650]=C_h_intern(&lf[650],4,"cdar");
lf[651]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[652]=C_h_intern(&lf[652],4,"caar");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[654]=C_h_intern(&lf[654],7,"declare");
lf[655]=C_h_intern(&lf[655],5,"\000null");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[657]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[658]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[660]=C_h_intern(&lf[660],18,"\003sysregister-macro");
lf[661]=C_h_intern(&lf[661],2,"go");
lf[662]=C_h_intern(&lf[662],15,"hash-table-set!");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[664]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[666]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[668]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[669]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[670]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[672]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[674]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[676]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[678]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[680]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[681]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[682]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[684]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[686]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[688]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[690]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[691]=C_h_intern(&lf[691],5,":loop");
lf[692]=C_h_intern(&lf[692],7,"tagbody");
lf[693]=C_h_intern(&lf[693],5,"block");
lf[694]=C_h_intern(&lf[694],3,"nil");
lf[695]=C_h_intern(&lf[695],20,"\003sysregister-macro-2");
lf[696]=C_h_intern(&lf[696],8,"function");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[698]=C_h_intern(&lf[698],3,"pop");
lf[699]=C_h_intern(&lf[699],4,"cons");
lf[700]=C_h_intern(&lf[700],4,"push");
lf[701]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[702]=C_h_intern(&lf[702],4,"loop");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[705]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[706]=C_h_intern(&lf[706],6,"define");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[711]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[712]=C_h_intern(&lf[712],7,"\000return");
lf[713]=C_h_intern(&lf[713],9,"\000function");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[715]=C_h_intern(&lf[715],8,"\000process");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[725]=C_h_intern(&lf[725],5,"\000loop");
lf[726]=C_h_intern(&lf[726],4,"\000run");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[735]=C_h_intern(&lf[735],9,"list-tail");
lf[736]=C_h_intern(&lf[736],8,"set-car!");
lf[737]=C_h_intern(&lf[737],8,"list-ref");
lf[738]=C_h_intern(&lf[738],3,"min");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[741]=C_h_intern(&lf[741],9,"\000bindings");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[749]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[753]=C_h_intern(&lf[753],10,"sal:system");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[771]=C_h_intern(&lf[771],7,"unquote");
lf[772]=C_h_intern(&lf[772],16,"unquote-splicing");
lf[773]=C_h_intern(&lf[773],5,"\000list");
lf[774]=C_h_intern(&lf[774],8,"\000unquote");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[778]=C_h_intern(&lf[778],10,"quasiquote");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[783]=C_h_intern(&lf[783],7,"fprintf");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[786]=C_h_intern(&lf[786],27,"\003sysregister-record-printer");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[788]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[789]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[790]=C_h_intern(&lf[790],6,"ruleid");
lf[791]=C_h_intern(&lf[791],9,"make-rule");
lf[792]=C_h_intern(&lf[792],7,"*rules*");
lf[793]=C_h_intern(&lf[793],7,"defrule");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[795]=C_h_intern(&lf[795],15,"make-hash-table");
lf[796]=C_h_intern(&lf[796],3,"eq\077");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[799]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[801]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[802]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[803]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[804]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[810]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[811]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[812]=C_h_intern(&lf[812],6,"equal\077");
lf[813]=C_h_intern(&lf[813],4,"send");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[815]=C_h_intern(&lf[815],19,"define-send-message");
lf[816]=C_h_intern(&lf[816],12,"with-optkeys");
C_register_lf2(lf,817,create_ptable());
t2=C_mutate(&lf[0],lf[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5158,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t3);}

/* k5156 */
static void C_ccall f_5158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5161,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5159 in k5156 */
static void C_ccall f_5161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5164,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5162 in k5159 in k5156 */
static void C_ccall f_5164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5167,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5167,2,t0,t1);}
t2=C_mutate((C_word*)lf[2]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5169,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5458,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32381,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 235  ##sys#register-macro");
t5=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[816],t4);}

/* a32380 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32381(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_32381r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32381r(t0,t1,t2,t3);}}

static void C_ccall f_32381r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 236  expand-optkeys");
t6=*((C_word*)lf[2]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5462,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 242  make-hash-table");
t3=C_retrieve(lf[795]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[812]+1));}

/* k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5462,2,t0,t1);}
t2=C_mutate((C_word*)lf[31]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5465,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32329,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 244  ##sys#register-macro");
t5=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[815],t4);}

/* a32328 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32329(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32329,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32333,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_32333(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32366,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 251  string->symbol");
t10=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32376,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 253  symbol->string");
t9=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 255  error");
t8=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[814]);}}}}

/* k32374 in a32328 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32333(2,t3,t2);}

/* k32364 in a32328 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32333(2,t3,t2);}

/* k32331 in a32328 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32333,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[448],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[662],lf[31],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5465,2,t0,t1);}
t2=C_mutate((C_word*)lf[32]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5467,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5758,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32323,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 340  ##sys#register-macro");
t5=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[813],t4);}

/* a32322 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32323(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_32323r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32323r(t0,t1,t2,t3);}}

static void C_ccall f_32323r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 341  expand-send");
t4=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[162],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5758,2,t0,t1);}
t2=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5760,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[46]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5771,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[49]+1,*((C_word*)lf[10]+1));
t5=C_mutate((C_word*)lf[50]+1,*((C_word*)lf[24]+1));
t6=C_mutate((C_word*)lf[51]+1,*((C_word*)lf[52]+1));
t7=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t8=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5804,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5814,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5824,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5834,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5844,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5858,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5878,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5901,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5949,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5989,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6047,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6133,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6174,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6201,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6235,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6286,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6310,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6317,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6355,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6366,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6373,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6384,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6394,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6407,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6426,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6508,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6514,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6520,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[84]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6539,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6599,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6605,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6611,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6706,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[96]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6712,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6771,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6777,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6865,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6871,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6929,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[108]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6952,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[109]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6958,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[110]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6964,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[111]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6970,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6976,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7020,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7039,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7079,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7085,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[120]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7104,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7123,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7129,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t59=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7137,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  make-hash-table");
t60=C_retrieve(lf[795]);
((C_proc3)C_retrieve_proc(t60))(3,t60,t59,*((C_word*)lf[812]+1));}

/* k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7137,2,t0,t1);}
t2=C_mutate(&lf[123],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7140,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32107,a[2]=t7,a[3]=t4,a[4]=((C_word)li515),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_32107(t9,t5,C_fix(0));}

/* do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_32107(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32107,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[798],C_fix(-1),lf[799],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32120,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t5=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[123],"*notes*"),lf[800],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32321,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t4=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32321,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[801],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32141,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t6=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32141,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[802]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[803]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32153,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6286(t4,((C_word*)t0)[4]);}

/* k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32157,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[811]);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6286(t2,t3);}

/* k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32161,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[810]);
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6286(t2,t3);}

/* k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32305,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 362  floor");
t4=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32305,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32167,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li514),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_32167(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_32167(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32167,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32177,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32187,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_32187(t21,(C_word)C_i_string_equal_p(t20,lf[809]));}
else{
t20=t19;
f_32187(t20,C_SCHEME_FALSE);}}}

/* k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_32187(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32187,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_32177(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32190,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[807]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_32190(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[808]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_32190(t7,t6);}
else{
t5=t2;
f_32190(t5,C_SCHEME_UNDEFINED);}}}}

/* k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_32190(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32190,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[804],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_32198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32198,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_32205,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t4=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_32208(2,t4,C_SCHEME_UNDEFINED);}}

/* k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[806],((C_word*)((C_word*)t0)[8])[1]);}

/* k32210 in k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32212,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32219,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k32217 in k32210 in k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t4=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_32222(2,t4,C_SCHEME_UNDEFINED);}}

/* k32220 in k32217 in k32210 in k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[805],((C_word*)((C_word*)t0)[6])[1]);}

/* k32224 in k32220 in k32217 in k32210 in k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32226,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32233,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t6=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[123],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k32231 in k32224 in k32220 in k32217 in k32210 in k32206 in k32203 in k32196 in k32188 in k32185 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[123],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_32177(2,t3,C_SCHEME_UNDEFINED);}}

/* k32175 in do399 in k32303 in k32159 in k32155 in k32151 in k32139 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_32167(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32128 in k32319 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32130,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_32107(t3,((C_word*)t0)[2],t2);}

/* k32118 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32123,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[123],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k32121 in k32118 in do393 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word ab[210],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7140,2,t0,t1);}
t2=C_mutate(&lf[124],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7142,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7240,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7293,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7390,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7512,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[142],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7628,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[144],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7640,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[146],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7649,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[147],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7667,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7685,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7712,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7721,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[151],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7739,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[152],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7784,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[154],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7799,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[155],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7808,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[156],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7817,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[157],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7835,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[158],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7844,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[159],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7853,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7871,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[161],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7880,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7889,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[163],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7898,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[164],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7907,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[165],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8024,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8033,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8088,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[171],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8098,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8278,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8297,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[183]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8316,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8439,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8740,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8749,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8795,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[190]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8910,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9165,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9237,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[197],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9246,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9326,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9796,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10011,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[204],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10258,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10294,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[206],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10557,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[208]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10633,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11107,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[211],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11329,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[213],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11338,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[214],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11347,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[215],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11365,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[216],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11383,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[217],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11401,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[218],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11410,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11419,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[220]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11502,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12269,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12381,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12814,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13301,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13641,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[242]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13704,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14222,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14316,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14337,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[252],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14355,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14373,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t70=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14383,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32093,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t72=C_retrieve(lf[786]);
((C_proc4)C_retrieve_proc(t72))(4,t72,t70,lf[250],t71);}

/* a32092 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32093,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32101,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14337(t4,t2);}

/* k32099 in a32092 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32105,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-string");
f_14355(t2,((C_word*)t0)[2]);}

/* k32103 in k32099 in a32092 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[783]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[797],((C_word*)t0)[2],t1);}

/* k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14383,2,t0,t1);}
t2=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14385,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[256],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14414,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14426,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14434,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-hash-table");
t6=C_retrieve(lf[795]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[796]+1));}

/* k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14434,2,t0,t1);}
t2=C_mutate(&lf[258],t1);
t3=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14436,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14457,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14539,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32083,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t7=C_retrieve(lf[786]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[260],t6);}

/* a32082 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32083,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32091,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  rule-name");
f_14457(t4,t2);}

/* k32089 in a32082 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[783]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[794],t1);}

/* k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14542,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31980,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-macro");
t4=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[793],t3);}

/* a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_31980r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_31980r(t0,t1,t2,t3,t4);}}

static void C_ccall f_31980r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31983,a[2]=t6,a[3]=((C_word)li510),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[790],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32043,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k32041 in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32047,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_31983(t3,t2,((C_word*)t0)[2]);}

/* k32045 in k32041 in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32047,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_32061(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_32061(t7,(C_word)C_i_nullp(t6));}}

/* k32059 in k32045 in k32041 in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_32061(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32061,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[791],((C_word*)t0)[6],lf[790],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[662],lf[792],lf[790],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[3],((C_word*)t0)[2],t4));}

/* ppat in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_31983(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_31983,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[788]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32003,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[789]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[448],t2):t2));}}}

/* k32001 in ppat in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32007,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_31983(t4,t2,t3);}

/* k32005 in k32001 in ppat in a31979 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_32007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32007,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[699],((C_word*)t0)[2],t1));}

/* k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14542,2,t0,t1);}
t2=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14544,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14565,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14568,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[265],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14580,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14586,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14596,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14654,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14686,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14707,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14725,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14735,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31966,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t14=C_retrieve(lf[786]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[270],t13);}

/* a31965 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31966,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31974,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-string");
f_14707(t4,t2);}

/* k31972 in a31965 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31978,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-position");
f_14725(t2,((C_word*)t0)[2]);}

/* k31976 in k31972 in a31965 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[783]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[787],((C_word*)t0)[2],t1);}

/* k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14735,2,t0,t1);}
t2=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14737,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14743,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14758,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14776,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14794,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14804,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31940,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  ##sys#register-record-printer");
t9=C_retrieve(lf[786]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[274],t8);}

/* a31939 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31940,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31944,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t4,t2);}

/* k31942 in a31939 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31950,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16016(t2,t1);}

/* k31948 in k31942 in a31939 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31950,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31961,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  get-rule");
f_14544(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[783]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[785],((C_word*)t0)[2]);}}

/* k31959 in k31948 in k31942 in a31939 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  rule-name");
f_14457(((C_word*)t0)[2],t1);}

/* k31955 in k31948 in k31942 in a31939 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  fprintf");
t2=C_retrieve(lf[783]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[784],t1);}

/* k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14804,2,t0,t1);}
t2=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14806,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14822,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14854,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14866,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14876,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14894,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14927,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15135,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15143,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t11=lf[302]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15247,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15866,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15914,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16016,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16028,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16049,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31918,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[292],t21);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t18,lf[782],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31916 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(25856),t1);}

/* k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16052,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31898,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[292],t5);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[781],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31896 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(26112),t1);}

/* k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16055,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31858,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[292],t10);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[780],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31856 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(26368),t1);}

/* k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16058,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31748,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[228],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[291],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31754,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31764,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[779],C_fix(26624),t9,t10,t11);}

/* a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31764,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31768,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t5,lf[773],t3);}

/* k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t2,((C_word*)t0)[2]);}

/* k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31771,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[498]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31789,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t3,lf[773],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k31787 in k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31792,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k31790 in k31787 in k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31792,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31795,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31823,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t5,lf[773],((C_word*)t0)[2]);}

/* k31821 in k31790 in k31787 in k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31823,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[774]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[778],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31795(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[448],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31795(t5,t4);}}

/* k31793 in k31790 in k31787 in k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_31795(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31795,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t2,lf[741],((C_word*)t0)[2]);}

/* k31799 in k31793 in k31790 in k31787 in k31769 in k31766 in a31763 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31801,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[498]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a31753 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31754,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k31746 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(26624),t1);}

/* k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16061,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31648,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[292],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[291],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31656,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t10,C_fix(27648));}

/* k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31658,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[3],lf[777],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31658,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31662,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31665,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,t3,C_fix(5376));}

/* k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t2,lf[773],((C_word*)t0)[4]);}

/* k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_31671(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31700,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[775]:lf[776]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31708,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t5,t6);}}

/* k31706 in k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31698 in k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31669 in k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k31672 in k31669 in k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31677,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  set-emit-info!");
f_14876(t2,lf[773],lf[774],((C_word*)t0)[2]);}

/* k31675 in k31672 in k31669 in k31666 in k31663 in k31660 in a31657 in k31654 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31677,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[771],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[772],((C_word*)t0)[2])));}

/* k31646 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(27648),t1);}

/* k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16064,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31620,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[292],t7);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[770],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k31618 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(26880),t1);}

/* k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16067,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31560,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[291],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31566,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31584,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[769],C_fix(27136),t8,t9,t10);}

/* a31583 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31584,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31592,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31596,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k31594 in a31583 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31590 in a31583 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31592,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[737],t1));}

/* a31565 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31566,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k31558 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(27136),t1);}

/* k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16070,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31437,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[306],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[291],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31443,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31474,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[768],C_fix(27392),t14,t15,t16);}

/* a31473 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31474,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31478,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k31476 in a31473 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31479 in k31476 in a31473 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31482 in k31479 in k31476 in a31473 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31484,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31497,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k31495 in k31482 in k31479 in k31476 in a31473 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31497,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[22],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a31442 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31443,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31447,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  sixth");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k31445 in a31442 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31447,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31462,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k31460 in k31445 in a31442 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31462,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k31435 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(27392),t1);}

/* k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16070,2,t0,t1);}
t2=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16072,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16126,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31317,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[307],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[292],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31323,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t4,lf[767],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a31322 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31323,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31339,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t4,t8,C_fix(256));}
else{
t7=t4;
f_31339(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_31339(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k31337 in a31322 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31339,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31350,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k31348 in k31337 in a31322 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31350,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k31315 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(28416),t1);}

/* k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16129,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31178,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[307],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[291],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[291],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[292],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31184,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[766],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a31183 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31184,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31204,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31207,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t7,t11,C_fix(256));}
else{
t10=t7;
f_31207(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_31207(2,t9,C_SCHEME_FALSE);}}

/* k31205 in a31183 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_31204(2,t2,C_SCHEME_END_OF_LIST);}}

/* k31202 in a31183 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31204,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k31176 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(28672),t1);}

/* k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16132,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31026,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[291],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[291],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[292],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31032,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[765],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a31031 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31032,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31050,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t10,t7,C_fix(768));}

/* k31048 in a31031 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31050,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,t3,C_fix(256));}}

/* k31057 in k31048 in a31031 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k31024 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(28160),t1);}

/* k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16135,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30955,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30961,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30979,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[764],C_fix(27904),t6,t7,t8);}

/* a30978 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30979,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30983,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k30981 in a30978 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30986,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30984 in k30981 in a30978 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31002,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31000 in k30984 in k30981 in a30978 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_31002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31002,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a30960 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30961,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k30953 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(27904),t1);}

/* k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16135,2,t0,t1);}
t2=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16137,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16158,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16274,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30879,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[292],t21);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t5,lf[763],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k30877 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(28928),t1);}

/* k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16277,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30799,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[291],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30805,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[762],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a30804 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30805,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30812,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16137(t4,t7);}
else{
t6=t4;
f_30812(2,t6,C_SCHEME_FALSE);}}

/* k30810 in a30804 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30812,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 364  inf->pre");
f_16158(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k30797 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(29184),t1);}

/* k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16280,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30663,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[291],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[291],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[292],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30669,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30695,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[761],C_fix(29440),t23,t24,t25);}

/* a30694 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30695(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30695,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30703,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k30701 in a30694 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30668 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30669,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30677,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30686,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t5,t6,C_fix(512));}
else{
t5=t4;
f_30677(t5,t2);}}

/* k30684 in a30668 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_30677(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k30675 in a30668 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_30677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k30661 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(29440),t1);}

/* k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16283,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30619,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[292],t11);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[760],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k30617 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(29696),t1);}

/* k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16286,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30509,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30515,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30537,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[759],C_fix(33536),t10,t11,t12);}

/* a30536 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30537,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[342]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30548,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t8,t2);}

/* k30546 in a30536 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30548,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li491),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_30550(t5,((C_word*)t0)[2],t1);}

/* do2505 in k30546 in a30536 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_30550(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30550,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30579,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k30577 in do2505 in k30546 in a30536 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30579,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_30550(t7,((C_word*)t0)[2],t6);}

/* a30514 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30515,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30531,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t5,t6,C_fix(256));}

/* k30529 in a30514 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30531,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k30507 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(33536),t1);}

/* k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16286,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16289,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30434,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30440,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30462,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[758],C_fix(34560),t10,t11,t12);}

/* a30461 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30462,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30466,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k30464 in a30461 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30473,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30471 in k30464 in a30461 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30473,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[628],t1));}

/* a30439 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30440,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30456,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t5,t6,C_fix(256));}

/* k30454 in a30439 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30456,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k30432 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(34560),t1);}

/* k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16292,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30235,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[292],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[292],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[306],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[291],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30241,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30302,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[757],C_fix(34304),t21,t22,t23);}

/* a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30302,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30306,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30342,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k30340 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30304 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30306,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30322,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li486),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  expand-send");
t6=C_retrieve(lf[32]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a30321 in k30304 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30322(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_30322r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_30322r(t0,t1,t2,t3);}}

static void C_ccall f_30322r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30330,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30334,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[33]),t2,t3);}

/* k30332 in a30321 in k30304 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30338,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t2,((C_word*)t0)[2]);}

/* k30336 in k30332 in a30321 in k30304 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30328 in a30321 in k30304 in a30301 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a30240 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30241,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30248,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30288,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 364  append");
t15=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_30248(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_30248(t10,t9);}}

/* k30286 in a30240 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30248(t3,t2);}

/* k30246 in a30240 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_30248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30248,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30259,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t4,t5);}

/* k30257 in k30246 in a30240 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k30233 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(34304),t1);}

/* k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16295,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30209,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30215,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[756],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a30214 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30215(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30215,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k30207 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(33792),t1);}

/* k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16298,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30181,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30189,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(35072));}

/* k30187 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30193,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15143(t2,lf[353]);}

/* k30191 in k30187 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[4],lf[755],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30179 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(35072),t1);}

/* k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16301,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30153,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30161,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(35584));}

/* k30159 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30165,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15143(t2,lf[352]);}

/* k30163 in k30159 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[4],lf[754],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30151 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(35584),t1);}

/* k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16304,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30125,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30133,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(35328));}

/* k30131 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30137,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15143(t2,lf[753]);}

/* k30135 in k30131 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[4],lf[752],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30123 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(35328),t1);}

/* k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16307,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30097,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30105,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(34816));}

/* k30103 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30109,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-emitter");
f_15143(t2,lf[363]);}

/* k30107 in k30103 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[4],lf[751],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30095 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_30097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(34816),t1);}

/* k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16310,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[292],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[291],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[292],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[228],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[291],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29966,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29996,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[750],C_fix(36096),t22,t23,t24);}

/* a29995 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29996,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[749]);}

/* a29965 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29966,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29990,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t6,t7,C_fix(256));}

/* k29988 in a29965 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29990,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k29958 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(36096),t1);}

/* k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16313,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29902,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29910,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(31744));}

/* k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29912,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[3],lf[748],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29912,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29916,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k29914 in a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29944,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t3,lf[726],((C_word*)t0)[3]);}

/* k29942 in k29914 in a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29944,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29919(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29932,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29936,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t3,t4);}}

/* k29934 in k29942 in k29914 in a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[2],lf[747],t1);}

/* k29930 in k29942 in k29914 in a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29917 in k29914 in a29911 in k29908 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29900 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(31744),t1);}

/* k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16316,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29841,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29849,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t7,C_fix(31488));}

/* k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29851,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[3],lf[746],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29851,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29855,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29886,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t3,lf[713],((C_word*)t0)[3]);}

/* k29884 in k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29886,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29858(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29874,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29878,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t3,t4);}}

/* k29876 in k29884 in k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[2],lf[745],t1);}

/* k29872 in k29884 in k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29856 in k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  set-emit-info!");
f_14876(t2,lf[713],lf[712],((C_word*)t0)[3]);}

/* k29859 in k29856 in k29853 in a29850 in k29847 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29839 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(31488),t1);}

/* k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16319,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29750,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[291],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[292],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29756,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29791,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[744],C_fix(30208),t10,t11,t12);}

/* a29790 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29791,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29797,a[2]=t4,a[3]=t3,a[4]=((C_word)li478),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29805,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k29803 in a29790 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a29796 in a29790 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29797,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a29755 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29756,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29789,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t4,C_fix(4608),lf[743],C_SCHEME_FALSE);}}

/* k29787 in a29755 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29789,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k29748 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(30208),t1);}

/* k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16322,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29648,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29654,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29697,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[742],C_fix(29952),t10,t11,t12);}

/* a29696 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29697,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29701,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t5,lf[741],C_SCHEME_TRUE,t3);}

/* k29699 in a29696 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29706,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li475),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29714,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t3,((C_word*)t0)[2]);}

/* k29712 in k29699 in a29696 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a29705 in k29699 in a29696 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29706,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a29653 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29654,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29687,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k29685 in a29653 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29687,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k29646 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(29952),t1);}

/* k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16325,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[292],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[292],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[291],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29568,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[740],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a29567 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29568,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k29560 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(30720),t1);}

/* k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16328,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29282,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29288,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29331,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[739],C_fix(30464),t10,t11,t12);}

/* a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29331,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29335,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29335,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[318]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li471),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_29343(t8,((C_word*)t0)[2],t1);}

/* do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29343(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29343,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t3,t4);}}

/* k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t2,t3);}

/* k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29375,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29375,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t5,((C_word*)t0)[2],C_fix(10756));}

/* k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29435,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_29378(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29442,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29452,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[228],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k29460 in k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29462,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[498],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_29378(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k29474 in k29460 in k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29476,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[699],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k29484 in k29474 in k29460 in k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29486,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k29494 in k29484 in k29474 in k29460 in k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29496,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[738],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_29378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k29504 in k29494 in k29484 in k29474 in k29460 in k29450 in k29440 in k29433 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29506,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[189],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29378(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_29378(t2,C_SCHEME_UNDEFINED);}}

/* k29376 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29378,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29402,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_29402(t5,(C_word)C_eqp(t4,lf[737]));}
else{
t4=t3;
f_29402(t4,C_SCHEME_FALSE);}}

/* k29400 in k29376 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[735],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[736],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29381(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29381(t4,t3);}}

/* k29379 in k29376 in k29373 in k29370 in k29367 in k29364 in do2584 in k29333 in a29330 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29381,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_29343(t7,((C_word*)t0)[2],t6);}

/* a29287 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29288,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29321,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k29319 in a29287 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29321,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k29280 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(30464),t1);}

/* k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16331,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29168,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[306],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[228],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[291],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29174,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29200,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[734],C_fix(32000),t12,t13,t14);}

/* a29199 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29200,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29204,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k29202 in a29199 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29204,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29208 in k29202 in a29199 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29210,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29230,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[318],t1));}}

/* k29228 in k29208 in k29202 in a29199 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29230,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[4],t2));}

/* a29173 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29174,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29184,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_29184(t12,t11);}
else{
t10=t8;
f_29184(t10,C_SCHEME_FALSE);}}

/* k29182 in a29173 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29184(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29184,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k29166 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(32000),t1);}

/* k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16334,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28971,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[306],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[306],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[291],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[291],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[291],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[292],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28977,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29045,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[733],C_fix(32256),t26,t27,t28);}

/* a29044 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29045,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29049,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t5,t2);}

/* k29047 in a29044 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28977,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28990,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28996,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t9,t4,C_fix(14336));}

/* k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28996,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29002,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_29002(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29031,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t11,C_fix(4608),lf[732],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28990(t5,t4);}}

/* k29029 in k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29002(t3,t2);}

/* k29000 in k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29002,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t3=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29004 in k29000 in k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29006,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_29009(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29020,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t5,C_fix(4608),lf[731],C_SCHEME_FALSE);}}

/* k29018 in k29004 in k29000 in k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_29020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29009(t3,t2);}

/* k29007 in k29004 in k29000 in k28994 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_29009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29009,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28990(t4,t3);}

/* k28988 in a28976 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k28969 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(32256),t1);}

/* k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16334,2,t0,t1);}
t2=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16336,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16857,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28699,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[291],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[306],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[291],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[291],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[292],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[306],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[306],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[291],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[292],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[306],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[291],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[292],t58);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t4,lf[730],C_fix(33024),t59,C_retrieve2(lf[314],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k28697 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(33024),t1);}

/* k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16860,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28643,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[291],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[292],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28651,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  simple-unit-parser");
f_15135(t13,C_fix(33280));}

/* k28649 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(((C_word*)t0)[3],lf[729],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k28641 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(33280),t1);}

/* k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17382,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28471,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[292],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[306],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[228],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[228],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[307],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[306],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[291],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28477,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28523,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[728],C_fix(32512),t25,t26,t27);}

/* a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28523,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16866,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t7,t2);}

/* k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16866,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16884,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17341,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t17,t18,C_fix(14864));}

/* k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17341,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17345,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t2,lf[725],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17348,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t3,lf[715],((C_word*)((C_word*)t0)[6])[1]);}}

/* k17373 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17375,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17348(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17363,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17367,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t3,t4);}}

/* k17365 in k17373 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[2],lf[727],t1);}

/* k17361 in k17373 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17346 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t2,lf[726],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k17350 in k17346 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_16884(t4,t3);}

/* k17343 in k17339 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16884(t3,t2);}

/* k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16884(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16884,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17330,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17334,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_16891(t5,C_SCHEME_UNDEFINED);}}

/* k17332 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k17328 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16891(t3,t2);}

/* k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16891,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16894,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17205,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li464),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_17205(t7,t2,t3);}

/* do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17205(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17205,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17215,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17226,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t4,t5);}}

/* k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17226,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17228,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li463),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17228(t5,((C_word*)t0)[2],t1);}

/* do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17228(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17228,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 364  append");
t9=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17242,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17295,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 364  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_17245(t4,C_SCHEME_UNDEFINED);}}

/* k17293 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17245(t3,t2);}

/* k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17245,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17280,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 364  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_17248(t3,C_SCHEME_UNDEFINED);}}

/* k17278 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17248(t3,t2);}

/* k17246 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17248,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17251,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17261,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17259 in k17246 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17261,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17273,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17251(t2,C_SCHEME_UNDEFINED);}}

/* k17271 in k17259 in k17246 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17273,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k17263 in k17259 in k17246 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17251(t3,t2);}

/* k17249 in k17246 in k17243 in k17240 in do2697 in k17224 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17228(t3,((C_word*)t0)[2],t2);}

/* k17213 in do2694 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17205(t3,((C_word*)t0)[2],t2);}

/* k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17169,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li462),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_17169(t7,t2,t3);}

/* do2708 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17169(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17169,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17180,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17195,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k17193 in do2708 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17195,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k17178 in do2708 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17169(t4,((C_word*)t0)[2],t3);}

/* k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16901,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16901,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li461),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17113(t8,t3,t4);}

/* do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17113(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17113,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t3,t4);}}

/* k17121 in do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17126,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17124 in k17121 in do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17126,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17129,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17147,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t5,t6,C_fix(20224));}

/* k17145 in k17124 in k17121 in do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17147,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[293],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17129(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17129(t2,C_SCHEME_UNDEFINED);}}

/* k17127 in k17124 in k17121 in do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17129,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 364  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k17131 in k17127 in k17124 in k17121 in do2713 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17113(t4,((C_word*)t0)[2],t3);}

/* k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_16907(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[292],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_16907(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_16907(t4,t3);}}

/* k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16910,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k17074 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17076,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17080,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_16910(t3,t2);}}

/* k17082 in k17074 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k17078 in k17074 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16910(t3,t2);}

/* k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16910,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[724]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[549],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[723]);}

/* k16939 in k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[722]);}

/* k16942 in k16939 in k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[721]);}

/* k16945 in k16942 in k16939 in k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[720]);}

/* k16948 in k16945 in k16942 in k16939 in k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16950,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[644],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[645],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[644],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[647],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[448],lf[607]);
t14=(C_word)C_a_i_list(&a,2,lf[448],lf[608]);
t15=(C_word)C_a_i_list(&a,3,lf[606],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[33],lf[719],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[332],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[644],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k17007 in k16948 in k16945 in k16942 in k16939 in k16936 in k16908 in k16905 in k16902 in k16899 in k16895 in k16892 in k16889 in k16882 in k16864 in a28522 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17009,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[643],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[644],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[609],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[644],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[610],t6);
t8=(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[644],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28477,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28493,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t11=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k28491 in a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28496,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  sixth");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k28494 in k28491 in a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28496,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28499,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_28499(t7,t6);}
else{
t5=t4;
f_28499(t5,C_SCHEME_UNDEFINED);}}

/* k28497 in k28494 in k28491 in a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28499,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28502,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_28502(t5,t4);}
else{
t3=t2;
f_28502(t3,C_SCHEME_UNDEFINED);}}

/* k28500 in k28497 in k28494 in k28491 in a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28502(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28502,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28513,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t3,((C_word*)t0)[8]);}

/* k28511 in k28500 in k28497 in k28494 in k28491 in a28476 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k28469 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(32512),t1);}

/* k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17385,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28326,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[291],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[228],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[291],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[292],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[291],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28332,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[718],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a28331 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28332,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28345,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_28345(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28371,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t12,t13,C_fix(256));}}

/* k28369 in a28331 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28371,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28345(t4,t3);}

/* k28343 in a28331 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28345,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k28324 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(37632),t1);}

/* k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17388,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27869,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[228],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[291],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[291],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[291],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[292],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[291],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27875,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27914,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[717],C_fix(36352),t23,t24,t25);}

/* a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27914,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27918,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27918,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[318]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27927,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27930,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t7,t2,C_fix(24576));}

/* k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27930,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27939,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li456),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27939(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t2,t3);}}

/* k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28206,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_28003(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28144,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 364  symbol->string");
t15=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k28142 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28144,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28153,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28178,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 364  substring");
t6=*((C_word*)lf[335]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_28153(t4,C_SCHEME_FALSE);}}

/* k28176 in k28142 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28153(t2,(C_word)C_i_string_equal_p(t1,lf[716]));}

/* k28151 in k28142 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28153(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28153,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28160,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28164,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 364  substring");
t5=*((C_word*)lf[335]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_28003(t2,C_SCHEME_UNDEFINED);}}

/* k28162 in k28151 in k28142 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k28158 in k28151 in k28142 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28003(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28006,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t3,((C_word*)t0)[2],C_fix(24064));}

/* k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28081,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t2,lf[713],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k28120 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28122,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t2,lf[715],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_28006(t2,C_SCHEME_UNDEFINED);}}

/* k28124 in k28120 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28126,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28130,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28128 in k28124 in k28120 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28130,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[706],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[714]);
t6=((C_word*)t0)[2];
f_28006(t6,t5);}

/* k28083 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28085,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28089,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k28087 in k28083 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28089,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28116,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  get-emit-info");
f_14854(t4,lf[713],((C_word*)((C_word*)t0)[2])[1]);}

/* k28114 in k28087 in k28083 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28116,2,t0,t1);}
t2=(C_word)C_eqp(lf[712],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[520]);
t4=(C_word)C_a_i_list(&a,3,lf[644],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[610],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28092(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_28092(t3,C_SCHEME_UNDEFINED);}}

/* k28090 in k28087 in k28083 in k28079 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28092,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[706],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[711]);
t5=((C_word*)t0)[2];
f_28006(t5,t4);}

/* k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28009,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28020,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28078,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k28076 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[710]);}

/* k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28020,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28022,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li457),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28022(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28022(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28022,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28037,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[708]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28041,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28070,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 364  symbol->string");
t8=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k28068 in do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28039 in do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28041,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28044,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_28044(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28058,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t6=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[709]);}}

/* k28056 in k28039 in do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28044(t3,t2);}

/* k28042 in k28039 in do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_28044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_28022(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28035 in do2795 in k28018 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28037,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[343],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k28007 in k28004 in k28001 in k28204 in k27992 in k27989 in k27986 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_28009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28009,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_27927(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2769 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27939(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27939,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27949,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k27947 in do2769 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27949,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  sprintf");
t4=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[707],t2);}

/* k27953 in k27947 in do2769 in k27928 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27955,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[706],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[342],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_27939(t9,((C_word*)t0)[2],t8);}

/* k27925 in k27916 in a27913 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a27874 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27875,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27886,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27892,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t9,t7,C_fix(24576));}

/* k27890 in a27874 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27892,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 364  remove-token-type");
f_16072(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_27886(t2,C_SCHEME_UNDEFINED);}}

/* k27906 in k27890 in a27874 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27908,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27886(t5,t4);}

/* k27884 in a27874 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k27867 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(36352),t1);}

/* k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17391,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[292],t19);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[705],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k27791 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(36608),t1);}

/* k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17394,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27749,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[307],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27755,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27769,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  make-rule");
f_14436(t3,lf[704],C_fix(36864),t5,t6,t7);}

/* a27768 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27769,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27777,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27781,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k27779 in a27768 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27775 in a27768 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27777,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[318],t1));}

/* a27754 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27755,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27763,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  parse-unit-position");
f_14794(t4,t5);}

/* k27761 in a27754 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k27747 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  hash-table-set!");
t2=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[258],"*rules*"),C_fix(36864),t1);}

/* k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17394,2,t0,t1);}
t2=lf[328]=C_SCHEME_FALSE;;
t3=lf[329]=C_SCHEME_FALSE;;
t4=lf[330]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[331]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17400,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[342]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17571,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[352]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17750,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[353]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17759,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[361]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17806,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[363]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17812,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17831,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27741,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro-2");
t13=C_retrieve(lf[695]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[702],t12);}

/* a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27741(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27741,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21184,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[703]);}

/* k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21187,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  parse-iteration");
f_21166(t2,lf[702],((C_word*)t0)[2],C_retrieve2(lf[558],"*loop-operators*"));}

/* k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21187,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[520],C_retrieve2(lf[558],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21194,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21339,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21353,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t11=C_retrieve2(lf[374],"loop-returning");
f_17938(3,t11,t10,t1);}

/* k21351 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21353,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_21339(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21349,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t3=C_retrieve2(lf[374],"loop-returning");
f_17938(3,t3,t2,((C_word*)t0)[2]);}}

/* k21347 in k21351 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_21339(t2,(C_word)C_i_car(t1));}

/* k21337 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21339(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21194,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-end-tests");
t4=C_retrieve2(lf[369],"loop-end-tests");
f_17890(3,t4,t3,((C_word*)t0)[2]);}

/* k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_21201(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[292],t1));
t6=(C_word)C_a_i_list(&a,4,lf[22],t5,lf[701],C_SCHEME_FALSE);
t7=t2;
f_21201(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21201,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21212,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-bindings");
t4=C_retrieve2(lf[366],"loop-bindings");
f_17854(3,t4,t3,((C_word*)t0)[2]);}

/* k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21216,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21220,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-initially");
t4=C_retrieve2(lf[368],"loop-initially");
f_17878(3,t4,t3,((C_word*)t0)[3]);}

/* k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21220,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[520]);
t3=(C_word)C_a_i_list(&a,1,lf[661]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21284,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21288,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t7=C_retrieve2(lf[370],"loop-looping");
f_17902(3,t7,t6,((C_word*)t0)[3]);}

/* k21290 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21296,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21300,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-stepping");
t4=C_retrieve2(lf[372],"loop-stepping");
f_17914(3,t4,t3,((C_word*)t0)[2]);}

/* k21298 in k21290 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21300,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k21294 in k21290 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21286 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21282 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21284,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[3],t3);
t5=(C_word)C_a_i_list(&a,3,lf[644],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[610],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21252,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21256,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-finally");
t9=C_retrieve2(lf[373],"loop-finally");
f_17926(3,t9,t8,((C_word*)t0)[2]);}

/* k21254 in k21282 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21256,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k21250 in k21282 in k21218 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21252,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[644],t3);
t5=(C_word)C_a_i_list(&a,2,lf[610],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 365  ##sys#append");
t7=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k21214 in k21210 in k21199 in k21196 in k21192 in k21185 in k21182 in a27740 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21216,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17834,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27727,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[700],t3);}

/* a27726 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27727,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[699],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[318],t5,t3));}

/* k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17837,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27698,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[698],t3);}

/* a27697 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27698(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27698,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27702,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[697]);}

/* k27700 in a27697 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27702,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[3],t4,t6,t1));}

/* k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17840,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27695,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro");
t4=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[696],t3);}

/* a27694 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27695(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27695,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17840,2,t0,t1);}
t2=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17848,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17854,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17866,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17878,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17890,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17902,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17908,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17914,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17926,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17938,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17950,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18101,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18172,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18178,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18184,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18190,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18350,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18432,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18814,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[440],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18861,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[459],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19212,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19354,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19547,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[484],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19614,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[487],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19652,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[490],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19811,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[519],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20357,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[521],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20363,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[527],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20429,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[533],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20520,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20621,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[542],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20752,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[548],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21166,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[468],C_retrieve2(lf[467],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[379],C_retrieve2(lf[487],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[556],C_retrieve2(lf[437],"parse-repeat"),lf[553]);
t38=(C_word)C_a_i_list(&a,2,lf[415],C_retrieve2(lf[407],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[411],C_retrieve2(lf[407],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[413],C_retrieve2(lf[407],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[422],C_retrieve2(lf[407],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[412],C_retrieve2(lf[407],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[414],C_retrieve2(lf[407],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[447],C_retrieve2(lf[440],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[456],C_retrieve2(lf[440],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[441],C_retrieve2(lf[440],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[460],C_retrieve2(lf[459],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[446],C_retrieve2(lf[440],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[408],C_retrieve2(lf[399],"parse-for"),lf[553],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[557],C_retrieve2(lf[399],"parse-for"),lf[553]);
t51=(C_word)C_a_i_list(&a,3,lf[549],C_retrieve2(lf[481],"parse-do"),lf[540]);
t52=(C_word)C_a_i_list(&a,3,lf[501],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t53=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t54=(C_word)C_a_i_list(&a,3,lf[506],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t55=(C_word)C_a_i_list(&a,3,lf[491],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t56=(C_word)C_a_i_list(&a,3,lf[492],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t57=(C_word)C_a_i_list(&a,3,lf[494],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t58=(C_word)C_a_i_list(&a,3,lf[495],C_retrieve2(lf[490],"parse-accumulation"),lf[540]);
t59=(C_word)C_a_i_list(&a,4,lf[528],C_retrieve2(lf[527],"parse-thereis"),lf[540],C_retrieve2(lf[519],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[529],C_retrieve2(lf[527],"parse-thereis"),lf[540],C_retrieve2(lf[519],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[530],C_retrieve2(lf[527],"parse-thereis"),lf[540],C_retrieve2(lf[519],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[520],C_retrieve2(lf[533],"parse-return"),lf[540],C_retrieve2(lf[519],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[524],C_retrieve2(lf[521],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[523],C_retrieve2(lf[521],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[13],C_retrieve2(lf[542],"parse-conditional"),lf[540]);
t66=(C_word)C_a_i_list(&a,3,lf[8],C_retrieve2(lf[542],"parse-conditional"),lf[540]);
t67=(C_word)C_a_i_list(&a,3,lf[22],C_retrieve2(lf[542],"parse-conditional"),lf[540]);
t68=(C_word)C_a_i_list(&a,3,lf[383],C_retrieve2(lf[484],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[558],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21360,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27553,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  ##sys#register-macro-2");
t73=C_retrieve(lf[695]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[553],t72);}

/* a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27553(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27553,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21366,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  parse-iteration");
f_21166(t3,lf[553],t2,C_retrieve2(lf[558],"*loop-operators*"));}

/* k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21369,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[520],C_retrieve2(lf[558],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21498,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-returning");
t6=C_retrieve2(lf[374],"loop-returning");
f_17938(3,t6,t5,t1);}

/* k21496 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21498,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21380,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-bindings");
t3=C_retrieve2(lf[366],"loop-bindings");
f_17854(3,t3,t2,((C_word*)t0)[2]);}

/* k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21384,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-initially");
t4=C_retrieve2(lf[368],"loop-initially");
f_17878(3,t4,t3,((C_word*)t0)[2]);}

/* k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21408,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-end-tests");
t4=C_retrieve2(lf[369],"loop-end-tests");
f_17890(3,t4,t3,((C_word*)t0)[2]);}

/* k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[292],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[661],lf[255]);
t6=(C_word)C_a_i_list(&a,3,lf[22],t4,t5);
t7=t2;
f_21415(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_21415(t3,C_SCHEME_END_OF_LIST);}}

/* k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21415,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21419,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[370],"loop-looping");
f_17902(3,t4,t3,((C_word*)t0)[2]);}

/* k21421 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21427,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-stepping");
t4=C_retrieve2(lf[372],"loop-stepping");
f_17914(3,t4,t3,((C_word*)t0)[2]);}

/* k21429 in k21421 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21431,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[661],lf[691]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21447,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21451,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  loop-finally");
t5=C_retrieve2(lf[373],"loop-finally");
f_17926(3,t5,t4,((C_word*)t0)[2]);}

/* k21449 in k21429 in k21421 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21451,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k21445 in k21429 in k21421 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21447,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[255],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k21425 in k21421 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21417 in k21413 in k21410 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21406 in k21386 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21408,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[691],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[692],t2);
t4=(C_word)C_a_i_list(&a,3,lf[693],lf[694],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k21382 in k21378 in k21367 in k21364 in a27552 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21384,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[3],t2));}

/* k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21360,2,t0,t1);}
t2=C_mutate((C_word*)lf[559]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21504,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22233,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[565]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22252,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[566]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22703,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[567]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22722,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[569]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23451,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[570]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23470,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[572]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24199,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[573]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24218,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24669,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[575]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24688,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[576]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25139,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25158,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25628,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25646,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[580]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25661,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25676,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25695,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25710,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25729,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25748,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25771,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25790,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25813,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25860,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25915,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25934,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25957,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25985,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26013,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26041,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26069,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26097,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26125,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26153,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26181,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26209,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26224,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26282,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t41=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[31]),lf[689],lf[690]);}

/* k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26285,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[687],lf[688]);}

/* k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26288,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[685],lf[686]);}

/* k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26291,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[683],lf[684]);}

/* k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26294,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[681],lf[682]);}

/* k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26297,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[679],lf[680]);}

/* k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26300,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[677],lf[678]);}

/* k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26303,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[675],lf[676]);}

/* k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26306,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[673],lf[674]);}

/* k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26309,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[671],lf[672]);}

/* k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26312,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[669],lf[670]);}

/* k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26312,2,t0,t1);}
t2=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26314,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26371,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[613]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26428,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26437,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[31]),lf[667],lf[668]);}

/* k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26440,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[665],lf[666]);}

/* k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26443,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[662]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[31]),lf[663],lf[664]);}

/* k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26443,2,t0,t1);}
t2=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26445,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[343]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26626,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[332]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26640,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[622]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26654,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[623]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26657,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[624],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26669,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[626],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26678,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[627],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26722,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[354]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26744,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26763,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[629]+1,C_retrieve(lf[623]));
t13=C_mutate((C_word*)lf[630]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26931,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[636]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26994,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[637]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27003,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[638]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27009,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[639]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27018,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[641]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27076,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27086,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27547,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 541  ##sys#register-macro");
t21=C_retrieve(lf[660]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[661],t20);}

/* a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_27547r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_27547r(t0,t1,t2,t3,t4);}}

static void C_ccall f_27547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27101,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_27101(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 550  error");
t14=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[659],t2);}}

/* k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 554  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[657]);}
else{
t3=t2;
f_27104(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 552  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[658],((C_word*)t0)[8]);}}

/* k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li446),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27382(t6,t2,((C_word*)t0)[2]);}

/* do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27382(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27382,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27392,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27402,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27490,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 558  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_27402(t6,C_SCHEME_FALSE);}}}

/* k27488 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_27402(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_27402(t2,C_SCHEME_FALSE);}}

/* k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27411,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_27411(t9,lf[655]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_27411(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 571  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[656],t2);}}

/* k27409 in k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27411,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 566  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k27413 in k27409 in k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 567  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k27417 in k27413 in k27409 in k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27419,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27423,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27427,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[655]);
if(C_truep(t5)){
t6=t4;
f_27427(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_27427(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k27425 in k27417 in k27413 in k27409 in k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 568  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k27421 in k27417 in k27413 in k27409 in k27400 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27392(2,t3,t2);}

/* k27390 in do5078 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27382(t3,((C_word*)t0)[2],t2);}

/* k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 573  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 574  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 575  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 576  gensym");
t3=C_retrieve(lf[28]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27119,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27275,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27376,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 582  caar");
t10=*((C_word*)lf[652]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_27275(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_27275(t8,C_SCHEME_FALSE);}}

/* k27374 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_27275(t2,(C_word)C_eqp(t1,lf[654]));}

/* k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27275,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 583  cdar");
t3=*((C_word*)lf[650]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_27122(2,t2,C_SCHEME_UNDEFINED);}}

/* k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27282,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27284,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li445),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_27284(t5,((C_word*)t0)[2],t1);}

/* do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27284(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27284,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27298,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27308,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27356,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 587  cdar");
t7=*((C_word*)lf[650]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_27308(t6,C_SCHEME_FALSE);}}}

/* k27354 in do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_27308(t2,(C_word)C_i_pairp(t1));}

/* k27306 in do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27308,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 588  caar");
t3=*((C_word*)lf[652]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 594  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[653],t2);}}

/* k27309 in k27306 in do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27311,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[649]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 590  cdar");
t4=*((C_word*)lf[650]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 593  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[651],t3);}}

/* k27330 in k27309 in k27306 in do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_27298(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_27298(2,t3,t2);}}

/* k27296 in do5094 in k27280 in k27273 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27284(t3,((C_word*)t0)[2],t2);}

/* k27120 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27122,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 545  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k27262 in k27120 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27264,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27248,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27252,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 545  ##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k27250 in k27262 in k27120 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 545  ##sys#append");
t2=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k27246 in k27262 in k27120 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27248,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[18],t1);
t3=(C_word)C_a_i_list(&a,3,lf[643],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27129,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[448],lf[607]);
t9=(C_word)C_a_i_list(&a,2,lf[448],lf[608]);
t10=(C_word)C_a_i_list(&a,3,lf[606],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[33],lf[648],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[332],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[644],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[644],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[609],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[644],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[610],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_27129(t21,t20);}
else{
t6=t5;
f_27129(t6,C_SCHEME_UNDEFINED);}}

/* k27127 in k27246 in k27262 in k27120 in k27117 in k27114 in k27111 in k27108 in k27105 in k27102 in k27099 in a27546 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27129,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[644],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[645],t4);
t6=(C_word)C_a_i_list(&a,1,lf[646]);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],lf[646]);
t8=(C_word)C_a_i_list(&a,3,lf[644],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[647],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[4],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[644],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[644],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k27084 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27545,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 639  return-to-host");
t3=C_retrieve(lf[642]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27543 in k27084 in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27080,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26739,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k26737 in hush in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26739,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5005,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27078 in hush in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 535  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27018(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_27018r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27018r(t0,t1,t2);}}

static void C_ccall f_27018r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27022,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 525  scheduler-stop");
f_26722(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27036,a[2]=t5,a[3]=((C_word)li441),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_27036(t7,t3,t2);}}

/* do5062 in stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_27036(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27036,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27046,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 529  scheduler-stop");
f_26722(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 530  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[640],t5);}}}

/* k27044 in do5062 in stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27036(t3,((C_word*)t0)[2],t2);}

/* k27020 in stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 531  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27013,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26717,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k26715 in cont in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26717,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4995,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k27011 in cont in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 521  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_27003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26699,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k26697 in paused? in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26699,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4987,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26998,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26708,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k26706 in pause in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26708,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4991,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k26996 in pause in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 514  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26931(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_26931r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_26931r(t0,t1,t2);}}

static void C_ccall f_26931r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26944,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26664,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[632]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26956,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_26956(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_26956(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[635])));}}}

/* k26954 in time-format in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[629]+1,C_retrieve(lf[623]));
C_trace("ChickenBridge.scm: 503  scheduler-set-time-milliseconds");
f_26669(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[633]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[629]+1,C_retrieve(lf[622]));
C_trace("ChickenBridge.scm: 507  scheduler-set-time-milliseconds");
f_26669(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 510  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[634],t4);}}}

/* k26662 in time-format in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26664,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4967,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k26942 in time-format in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[631]));}

/* sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26763(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_26763r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_26763r(t0,t1,t2,t3);}}

static void C_ccall f_26763r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26765,a[2]=t2,a[3]=((C_word)li429),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26877,a[2]=t4,a[3]=((C_word)li430),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26882,a[2]=t5,a[3]=((C_word)li431),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start50225043");
t7=t6;
f_26882(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id50235041");
t9=t5;
f_26877(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body50205025");
t11=t4;
f_26765(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[87]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-start5022 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26882,NULL,2,t0,t1);}
C_trace("def-id50235041");
t2=((C_word*)t0)[2];
f_26877(t2,t1,C_fix(0));}

/* def-id5023 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26877(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26877,NULL,3,t0,t1,t2);}
C_trace("body50205025");
t3=((C_word*)t0)[2];
f_26765(t3,t1,t2,C_fix(-1));}

/* body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26765(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26765,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26767,a[2]=t4,a[3]=((C_word)li426),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26795,a[2]=t5,a[3]=((C_word)li427),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26825,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26836,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li428),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_26836(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26868,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26872,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 487  nextstart");
t11=t6;
f_26767(t11,t10);}}

/* k26870 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26876,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 487  nextid");
t3=((C_word*)t0)[2];
f_26795(t3,t2);}

/* k26874 in k26870 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 487  scheduler-sprout");
f_26678(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26866 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_26825(2,t2,((C_word*)t0)[2]);}

/* do5034 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26836(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26836,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26846,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26861,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 485  nextstart");
t6=((C_word*)t0)[2];
f_26767(t6,t5);}}

/* k26859 in do5034 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26865,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 485  nextid");
t3=((C_word*)t0)[2];
f_26795(t3,t2);}

/* k26863 in k26859 in do5034 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 485  scheduler-sprout");
f_26678(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26844 in do5034 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26836(t3,((C_word*)t0)[2],t2);}

/* k26823 in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26795(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26795,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5020 in sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26767,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26744,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26749,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26749 in load-sal-file in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26749,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26754,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_26754(2,t4,C_SCHEME_FALSE);}}

/* k26752 */
static void C_ccall f_26754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5011(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26722(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26722,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26726,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k26724 in scheduler-stop in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26726,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5000,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26678(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26678,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26682,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k26680 in scheduler-sprout in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26682,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4980,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26669(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26669,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26673,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[625]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k26671 in scheduler-set-time-milliseconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26673,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub4972,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26657,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4964(t2));}

/* current-time-milliseconds in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26654,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4961(t2));}

/* print-error in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26640(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26640,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26645,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_26645(2,t4,C_SCHEME_FALSE);}}

/* k26643 in print-error in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub4956(C_SCHEME_UNDEFINED,t1));}

/* print-message in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26626(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26626,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26631,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_26631(2,t4,C_SCHEME_FALSE);}}

/* k26629 in print-message in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub4950(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26445,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26499,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26506,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 383  make-string");
t5=*((C_word*)lf[334]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26506,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26508,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li412),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_26508(t5,((C_word*)t0)[2],lf[621],t1,C_fix(0));}

/* do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26508(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26508,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26518,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26532,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26534,a[2]=t8,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,a[6]=((C_word)li411),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_26534(t10,t6,C_fix(0));}}

/* do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26534(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26534,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26554,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26492,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 375  floor");
t14=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 390  string-append");
t3=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[620]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26571,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26574,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 392  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k26572 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26574,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_26571(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26616,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 393  modulo");
t4=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k26614 in k26572 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26616,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_26571(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k26584 in k26614 in k26572 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26586,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_26571(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_26571(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k26569 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26571,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_26534(t4,((C_word*)t0)[2],t3);}

/* k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26492,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26457,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t5=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26457,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26484,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 377  floor");
t5=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k26482 in k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26484,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26465,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  modulo");
t5=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k26463 in k26482 in k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26465,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26470 in k26463 in k26482 in k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26476,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26474 in k26470 in k26463 in k26482 in k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26480,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26478 in k26474 in k26470 in k26463 in k26482 in k26455 in k26490 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[617],((C_word*)t0)[3],lf[618],((C_word*)t0)[2],lf[619],t1);}

/* k26552 in do4939 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 389  string-append");
t2=*((C_word*)lf[126]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[615],t1,lf[616]);}

/* k26530 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 386  printf");
t2=C_retrieve(lf[309]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26516 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26521,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 398  printf");
t3=C_retrieve(lf[309]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k26519 in k26516 in do4925 in k26504 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26521,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26508(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26497 in cm-logo in k26441 in k26438 in k26435 in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 399  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26433,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_26433 in cs:clear in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26433,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub4917(C_SCHEME_UNDEFINED));}

/* cs:f in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26371(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_26371r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26371r(t0,t1,t2);}}

static void C_ccall f_26371r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26375,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_26375(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26384,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26404,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_26404(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_26404(t8,C_SCHEME_FALSE);}}}

/* k26402 in cs:f in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26384(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_26384(t2,C_SCHEME_UNDEFINED);}}

/* k26382 in cs:f in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26384,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26392,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_26392 in k26382 in cs:f in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26392,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub4910(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k26373 in cs:f in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26314(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_26314r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26314r(t0,t1,t2);}}

static void C_ccall f_26314r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26318,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_26318(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26327,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26347,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_26347(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_26347(t8,C_SCHEME_FALSE);}}}

/* k26345 in cs:i in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26347(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26327(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_26327(t2,C_SCHEME_UNDEFINED);}}

/* k26325 in cs:i in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_26327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26327,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26335,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_26335 in k26325 in cs:i in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26335,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub4899(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k26316 in cs:i in k26310 in k26307 in k26304 in k26301 in k26298 in k26295 in k26292 in k26289 in k26286 in k26283 in k26280 in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26224(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26224,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26236,a[2]=t2,a[3]=((C_word)li401),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26273,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26278,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_26278 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26278(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26278,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4843(C_SCHEME_UNDEFINED,t2));}

/* f_26273 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26273(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26273,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub4834(C_SCHEME_UNDEFINED,t2));}

/* a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26236(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26236,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26242,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li400),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  call-with-current-continuation");
t4=*((C_word*)lf[610]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26242(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26242,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26248,a[2]=t2,a[3]=((C_word)li398),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li399),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  with-exception-handler");
t5=C_retrieve(lf[609]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a26267 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26272,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 366  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26270 in a26267 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a26247 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26248(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26248,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26252,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26259,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26263,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26266,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  condition-property-accessor");
t7=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[607],lf[608]);}

/* k26264 in a26247 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26261 in a26247 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[605],t1);}

/* k26257 in a26247 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  print-error");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26250 in a26247 in a26241 in a26235 in mp:inhook in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26209,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26214,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_26214 in mp:mm in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26214(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26214,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4827(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26181,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26186,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_26186 in mp:bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26186,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4818(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26153,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26158,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_26158 in mp:press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26158,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4803(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26125(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26125,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26130,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_26130 in mp:prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26130,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4788(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26097,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26102,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_26102 in mp:ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26102,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4773(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26069,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26074,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_26074 in mp:touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26074,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4757(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26041,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26046,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_26046 in mp:on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26046,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4741(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26013,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26018,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_26018 in mp:off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_26018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26018,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4725(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25985,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25990,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_25990 in mp:midi in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25990(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25990,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4710(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25957,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25962,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_25962 in mp:note in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25962,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4693(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25934,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25938,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25939,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_25939 in mm:num-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25939,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4675(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k25936 in mm:num-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25915(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25915,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25920,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_25920 in mm:num in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25920,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4664(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25860,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25864,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25867,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 366  mm:type?");
t6=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k25865 in mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_25870(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 366  mm:type?");
t3=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k25868 in k25865 in mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25870,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25874,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25894,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[591]));}}

/* f_25894 in k25868 in k25865 in mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25894,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4653(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_25874 in k25868 in k25865 in mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25874,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4643(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k25862 in mm:val-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25813(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25813,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25820,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 366  mm:type?");
t4=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k25818 in mm:val in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_25823(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 366  mm:type?");
t3=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k25821 in k25818 in mm:val in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25823,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25827,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25843,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_25843 in k25821 in k25818 in mm:val in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25843,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4630(C_SCHEME_UNDEFINED,t4,t5));}

/* f_25827 in k25821 in k25818 in mm:val in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25827,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4622(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25790,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25794,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25795,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_25795 in mm:vel-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25795,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4609(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k25792 in mm:vel-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25771(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25771,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25776,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_25776 in mm:vel in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25776,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4598(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25748,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25752,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25753,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_25753 in mm:key-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25753,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4587(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k25750 in mm:key-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25729,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25734,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_25734 in mm:key in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25734(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25734,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4576(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25710(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25710,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25714,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25715,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_25715 in mm:chan-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25715,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4566(C_SCHEME_UNDEFINED,t4,t5));}

/* k25712 in mm:chan-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25695(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25695,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25700,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_25700 in mm:chan in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25700(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25700,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4557(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25676(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25676,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25680,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25681,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_25681 in mm:time-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25681,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4548(C_SCHEME_UNDEFINED,t4,t5));}

/* k25678 in mm:time-set! in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25661(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25661,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25666,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_25666 in mm:time in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25666(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25666,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4538(t3,t4));}

/* mm:copy in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25646(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25646,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25651,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_25651 in mm:copy in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25651(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25651,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4530(t3,t4));}

/* mm:free in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25628(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25628,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25632,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25636,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_25636 in mm:free in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25636(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25636,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4522(C_SCHEME_UNDEFINED,t3));}

/* k25630 in mm:free in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 366  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25158(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25158r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25158r(t0,t1,t2);}}

static void C_ccall f_25158r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25162,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25162(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[560]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25487,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[560]);}
else{
t23=t22;
f_25487(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25522,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[568]);}
else{
t24=t23;
f_25522(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[563]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25557,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[563]);}
else{
t25=t24;
f_25557(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25586,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25586(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25584 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25586,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25601,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25599 in k25584 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25593(2,t2,C_SCHEME_UNDEFINED);}}

/* k25591 in k25584 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25162(t5,t4);}

/* k25555 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25561(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25559 in k25555 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25162(t7,t6);}

/* k25520 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25526(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25524 in k25520 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25162(t7,t6);}

/* k25485 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25491,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25491(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25489 in k25485 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25162(t7,t6);}

/* k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_25162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25162,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25165(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25352,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_25352(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25387,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_25387(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25422,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_25422(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25451,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25451(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25449 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25451,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25466,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25464 in k25449 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25458(2,t2,C_SCHEME_UNDEFINED);}}

/* k25456 in k25449 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25165(t5,t4);}

/* k25420 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25426(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25424 in k25420 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25165(t7,t6);}

/* k25385 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25389 in k25385 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25165(t7,t6);}

/* k25350 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25354 in k25350 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25165(t7,t6);}

/* k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_25165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25165,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25168,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25168(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25217,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_25217(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25252,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_25252(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25287,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_25287(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25316,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_25316(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25314 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25316,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25331,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25329 in k25314 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25323(2,t2,C_SCHEME_UNDEFINED);}}

/* k25321 in k25314 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25168(t5,t4);}

/* k25285 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25291(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25289 in k25285 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25168(t7,t6);}

/* k25250 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25254 in k25250 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25168(t7,t6);}

/* k25215 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25219 in k25215 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25168(t7,t6);}

/* k25166 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_25168(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25168,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25171,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25171(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k25169 in k25166 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25175,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25175 in k25169 in k25166 in k25163 in k25160 in mm:make-bend in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25175,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4499(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25139(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25139,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25144,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_25144 in mm:press? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25144,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4420(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24688(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_24688r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24688r(t0,t1,t2);}}

static void C_ccall f_24688r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24692,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_24692(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[560]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25017,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[560]);}
else{
t23=t22;
f_25017(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25052,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[568]);}
else{
t24=t23;
f_25052(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[563]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25087,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[563]);}
else{
t25=t24;
f_25087(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25116,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_25116(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k25114 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25116,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25131,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25129 in k25114 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25123(2,t2,C_SCHEME_UNDEFINED);}}

/* k25121 in k25114 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24692(t5,t4);}

/* k25085 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25091(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25089 in k25085 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k25050 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25056(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25054 in k25050 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k25015 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_25021(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25019 in k25015 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_25021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24692(t7,t6);}

/* k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24692,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24695(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24882,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_24882(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24917,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_24917(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24952,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_24952(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24981,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24981(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24979 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24981,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24996,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24994 in k24979 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24988(2,t2,C_SCHEME_UNDEFINED);}}

/* k24986 in k24979 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24695(t5,t4);}

/* k24950 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24956(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24954 in k24950 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24915 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24919 in k24915 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24880 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24884 in k24880 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24695(t7,t6);}

/* k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24698,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24698(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_24747(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24782,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_24782(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24817,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_24817(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24846,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24846(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24844 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24846,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24861,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24859 in k24844 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24853(2,t2,C_SCHEME_UNDEFINED);}}

/* k24851 in k24844 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24698(t5,t4);}

/* k24815 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24821(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24819 in k24815 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24780 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24784 in k24780 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24745 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24749 in k24745 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24698(t7,t6);}

/* k24696 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24701,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24701(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k24699 in k24696 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24705,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_24705 in k24699 in k24696 in k24693 in k24690 in mm:make-press in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24705,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4405(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24669,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24674,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_24674 in mm:prog? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24674(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24674,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4326(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24218(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_24218r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24218r(t0,t1,t2);}}

static void C_ccall f_24218r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24222,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_24222(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[560]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24547,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[560]);}
else{
t23=t22;
f_24547(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[568]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24582,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[568]);}
else{
t24=t23;
f_24582(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[563]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24617,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[563]);}
else{
t25=t24;
f_24617(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24646,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_24646(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k24644 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24646,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24661,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24659 in k24644 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24653(2,t2,C_SCHEME_UNDEFINED);}}

/* k24651 in k24644 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24222(t5,t4);}

/* k24615 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24619 in k24615 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24222(t7,t6);}

/* k24580 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24586(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24584 in k24580 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24222(t7,t6);}

/* k24545 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24549 in k24545 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24222(t7,t6);}

/* k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24222(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24222,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24225(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24412,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_24412(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24447,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_24447(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24482,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_24482(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24511,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24511(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24509 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24511,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24526,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24524 in k24509 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24518(2,t2,C_SCHEME_UNDEFINED);}}

/* k24516 in k24509 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24225(t5,t4);}

/* k24480 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24484 in k24480 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24225(t7,t6);}

/* k24445 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24449 in k24445 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24225(t7,t6);}

/* k24410 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24414 in k24410 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24225(t7,t6);}

/* k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24225,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24228,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_24228(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24277,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_24277(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24312,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[568]);}
else{
t7=t6;
f_24312(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24347,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_24347(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24376,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_24376(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24374 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24376,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24391,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24389 in k24374 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24383(2,t2,C_SCHEME_UNDEFINED);}}

/* k24381 in k24374 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24228(t5,t4);}

/* k24345 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24349 in k24345 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24228(t7,t6);}

/* k24310 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24316(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24314 in k24310 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24228(t7,t6);}

/* k24275 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24281(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24279 in k24275 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24228(t7,t6);}

/* k24226 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_24228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24228,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24231,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24231(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k24229 in k24226 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24235,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_24235 in k24229 in k24226 in k24223 in k24220 in mm:make-prog in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24235(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24235,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4311(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24199(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24199,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24204,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_24204 in mm:ctrl? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24204,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4232(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23470(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23470r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23470r(t0,t1,t2);}}

static void C_ccall f_23470r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23474,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23474(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[560]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24042,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[560]);}
else{
t27=t26;
f_24042(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[571]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24077,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[571]);}
else{
t28=t27;
f_24077(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[568]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24112,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[568]);}
else{
t29=t28;
f_24112(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[563]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24147,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[563]);}
else{
t30=t29;
f_24147(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24176,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_24176(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24174 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24176,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24191,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24189 in k24174 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24183(2,t2,C_SCHEME_UNDEFINED);}}

/* k24181 in k24174 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23474(t5,t4);}

/* k24145 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24149 in k24145 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23474(t7,t6);}

/* k24110 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24116(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24114 in k24110 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23474(t7,t6);}

/* k24075 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24081(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24079 in k24075 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23474(t7,t6);}

/* k24040 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_24046(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24044 in k24040 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23474(t7,t6);}

/* k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_23474(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23474,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23477(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23872,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_23872(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23907,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[571]);}
else{
t7=t6;
f_23907(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23942,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23942(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23977,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_23977(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24006,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_24006(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24004 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24006,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24021,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24019 in k24004 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24013(2,t2,C_SCHEME_UNDEFINED);}}

/* k24011 in k24004 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_24013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23477(t5,t4);}

/* k23975 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23981(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23979 in k23975 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23477(t7,t6);}

/* k23940 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23944 in k23940 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23477(t7,t6);}

/* k23905 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23911(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23909 in k23905 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23477(t7,t6);}

/* k23870 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23876(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23874 in k23870 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23477(t7,t6);}

/* k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_23477(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23477,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23480(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23702,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_23702(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23737,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[571]);}
else{
t7=t6;
f_23737(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23772,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23772(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23807,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_23807(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23836,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23836(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23834 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23836,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23851,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23849 in k23834 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23843(2,t2,C_SCHEME_UNDEFINED);}}

/* k23841 in k23834 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23480(t5,t4);}

/* k23805 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23809 in k23805 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23480(t7,t6);}

/* k23770 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23774 in k23770 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23480(t7,t6);}

/* k23735 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23739 in k23735 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23480(t7,t6);}

/* k23700 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23704 in k23700 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23480(t7,t6);}

/* k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_23480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23480,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23483,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23483(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23532,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_23532(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23567,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[571]);}
else{
t7=t6;
f_23567(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23602,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23602(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23637,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_23637(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23666,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23666(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23664 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23666,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23681,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23679 in k23664 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23673(2,t2,C_SCHEME_UNDEFINED);}}

/* k23671 in k23664 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23483(t5,t4);}

/* k23635 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23639 in k23635 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23483(t7,t6);}

/* k23600 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23604 in k23600 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23483(t7,t6);}

/* k23565 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23571(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23569 in k23565 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23483(t7,t6);}

/* k23530 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23534 in k23530 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23483(t7,t6);}

/* k23481 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_23483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23483,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23486,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23486(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k23484 in k23481 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23490,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23490 in k23484 in k23481 in k23478 in k23475 in k23472 in mm:make-ctrl in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23490,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4216(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23451(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23451,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23456,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_23456 in mm:touch? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23456(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23456,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4100(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22722(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_22722r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22722r(t0,t1,t2);}}

static void C_ccall f_22722r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22726,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_22726(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[560]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23294,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[560]);}
else{
t27=t26;
f_23294(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[561]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23329,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[561]);}
else{
t28=t27;
f_23329(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[568]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23364,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[568]);}
else{
t29=t28;
f_23364(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[563]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23399,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[563]);}
else{
t30=t29;
f_23399(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23428,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_23428(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23426 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23428,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23443,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23441 in k23426 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23435(2,t2,C_SCHEME_UNDEFINED);}}

/* k23433 in k23426 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22726(t5,t4);}

/* k23397 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23401 in k23397 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22726(t7,t6);}

/* k23362 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23366 in k23362 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22726(t7,t6);}

/* k23327 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23333(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23331 in k23327 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22726(t7,t6);}

/* k23292 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23298(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23296 in k23292 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22726(t7,t6);}

/* k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22726(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22726,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22729(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23124,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_23124(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23159,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_23159(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23194,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23194(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23229,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_23229(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23258,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23258(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23256 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23258,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23273,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23271 in k23256 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23265(2,t2,C_SCHEME_UNDEFINED);}}

/* k23263 in k23256 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22729(t5,t4);}

/* k23227 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23233,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23233(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23231 in k23227 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22729(t7,t6);}

/* k23192 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23198(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23196 in k23192 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22729(t7,t6);}

/* k23157 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23163(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23161 in k23157 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22729(t7,t6);}

/* k23122 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23128(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23126 in k23122 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22729(t7,t6);}

/* k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22729(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22729,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22732(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22954,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_22954(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22989,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_22989(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23024,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_23024(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23059,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_23059(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23088,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_23088(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23086 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23088,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23103,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23101 in k23086 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23095(2,t2,C_SCHEME_UNDEFINED);}}

/* k23093 in k23086 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22732(t5,t4);}

/* k23057 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23063(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23061 in k23057 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22732(t7,t6);}

/* k23022 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_23028(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23026 in k23022 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_23028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22732(t7,t6);}

/* k22987 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22993,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22993(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22991 in k22987 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22732(t7,t6);}

/* k22952 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22958(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22956 in k22952 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22732(t7,t6);}

/* k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22732(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22732,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22735,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22735(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22784,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_22784(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22819,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_22819(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[568]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22854,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[568]);}
else{
t8=t7;
f_22854(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22889,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_22889(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22918,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22918(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22916 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22918,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22933,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22931 in k22916 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22925(2,t2,C_SCHEME_UNDEFINED);}}

/* k22923 in k22916 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22735(t5,t4);}

/* k22887 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22893(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22891 in k22887 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22735(t7,t6);}

/* k22852 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22856 in k22852 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22735(t7,t6);}

/* k22817 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22821 in k22817 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22735(t7,t6);}

/* k22782 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22786 in k22782 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22735(t7,t6);}

/* k22733 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22735(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22735,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22738,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22738(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k22736 in k22733 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22742,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_22742 in k22736 in k22733 in k22730 in k22727 in k22724 in mm:make-touch in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22742,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4084(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22703(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22703,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22708,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_22708 in mm:off? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22708(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22708,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub3968(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22252(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_22252r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22252r(t0,t1,t2);}}

static void C_ccall f_22252r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22256,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_22256(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[560]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22581,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[560]);}
else{
t23=t22;
f_22581(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[561]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22616,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[561]);}
else{
t24=t23;
f_22616(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[563]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22651,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[21],lf[563]);}
else{
t25=t24;
f_22651(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22680,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[12],t2);}
else{
t25=t24;
f_22680(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k22678 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22680,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22695,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22693 in k22678 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22687(2,t2,C_SCHEME_UNDEFINED);}}

/* k22685 in k22678 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22256(t5,t4);}

/* k22649 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22653 in k22649 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22256(t7,t6);}

/* k22614 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22620(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22618 in k22614 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22256(t7,t6);}

/* k22579 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22585(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22583 in k22579 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22256(t7,t6);}

/* k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22256(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22256,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_22259(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22446,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_22446(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22481,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_22481(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22516,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_22516(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22545,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_22545(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k22543 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22545,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22560,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22558 in k22543 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22552(2,t2,C_SCHEME_UNDEFINED);}}

/* k22550 in k22543 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22259(t5,t4);}

/* k22514 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22520(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22518 in k22514 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22259(t7,t6);}

/* k22479 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22483 in k22479 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22259(t7,t6);}

/* k22444 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22448 in k22444 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22259(t7,t6);}

/* k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22259,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22262,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_22262(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22311,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_22311(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22346,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_22346(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22381,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[563]);}
else{
t8=t7;
f_22381(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22410,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_22410(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k22408 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22410,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22425,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22423 in k22408 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22417(2,t2,C_SCHEME_UNDEFINED);}}

/* k22415 in k22408 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22262(t5,t4);}

/* k22379 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22385(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22383 in k22379 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22262(t7,t6);}

/* k22344 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22348 in k22344 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22262(t7,t6);}

/* k22309 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22313 in k22309 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22262(t7,t6);}

/* k22260 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_22262(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22262,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22265,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22265(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k22263 in k22260 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22269,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_22269 in k22263 in k22260 in k22257 in k22254 in mm:make-off in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22269,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub3953(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22233(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22233,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22238,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_22238 in mm:on? in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22238,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub3874(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21504(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_21504r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21504r(t0,t1,t2);}}

static void C_ccall f_21504r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21508,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_21508(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[560]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22076,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[21],lf[560]);}
else{
t27=t26;
f_22076(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[561]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22111,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[21],lf[561]);}
else{
t28=t27;
f_22111(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[562]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22146,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[21],lf[562]);}
else{
t29=t28;
f_22146(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[563]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22181,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[21],lf[563]);}
else{
t30=t29;
f_22181(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22210,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[12],t2);}
else{
t30=t29;
f_22210(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k22208 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22210,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22225,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22223 in k22208 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22217(2,t2,C_SCHEME_UNDEFINED);}}

/* k22215 in k22208 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21508(t5,t4);}

/* k22179 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22185(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22183 in k22179 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21508(t7,t6);}

/* k22144 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22150(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22148 in k22144 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21508(t7,t6);}

/* k22109 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22115(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22113 in k22109 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21508(t7,t6);}

/* k22074 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22078 in k22074 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21508(t7,t6);}

/* k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21508,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21511(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21906,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_21906(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21941,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_21941(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[562]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21976,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[562]);}
else{
t8=t7;
f_21976(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22011,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_22011(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22040,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_22040(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k22038 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22040,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22055,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22053 in k22038 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22047(2,t2,C_SCHEME_UNDEFINED);}}

/* k22045 in k22038 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21511(t5,t4);}

/* k22009 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_22015(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22013 in k22009 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_22015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21511(t7,t6);}

/* k21974 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21980(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21978 in k21974 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21511(t7,t6);}

/* k21939 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21945(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21943 in k21939 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21511(t7,t6);}

/* k21904 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21908 in k21904 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21511(t7,t6);}

/* k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21511,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21514,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21514(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21736,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_21736(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21771,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_21771(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[562]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21806,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[562]);}
else{
t8=t7;
f_21806(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21841,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_21841(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21870,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_21870(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k21868 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21870,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21885,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21883 in k21868 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21877(2,t2,C_SCHEME_UNDEFINED);}}

/* k21875 in k21868 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21514(t5,t4);}

/* k21839 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21845(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21843 in k21839 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21514(t7,t6);}

/* k21804 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21808 in k21804 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21514(t7,t6);}

/* k21769 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21773 in k21769 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21514(t7,t6);}

/* k21734 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21740(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21738 in k21734 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21514(t7,t6);}

/* k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21514,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21517,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_21517(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[560]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21566,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[560]);}
else{
t6=t5;
f_21566(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[561]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21601,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[561]);}
else{
t7=t6;
f_21601(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[562]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21636,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[562]);}
else{
t8=t7;
f_21636(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[563]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21671,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[21],lf[563]);}
else{
t9=t8;
f_21671(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21700,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[12],((C_word*)t0)[7]);}
else{
t9=t8;
f_21700(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k21698 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21700,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21715,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21713 in k21698 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21707(2,t2,C_SCHEME_UNDEFINED);}}

/* k21705 in k21698 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21517(t5,t4);}

/* k21669 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21673 in k21669 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21517(t7,t6);}

/* k21634 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21638 in k21634 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21517(t7,t6);}

/* k21599 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21603 in k21599 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21517(t7,t6);}

/* k21564 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_21570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21568 in k21564 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21517(t7,t6);}

/* k21515 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21517,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21520,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21520(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k21518 in k21515 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21524,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_21524 in k21518 in k21515 in k21512 in k21509 in k21506 in mm:make-on in k21358 in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_21524,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub3858(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21166(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21166,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21174,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21006,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_21006(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_21006(t12,(C_word)C_i_not(t11));}}

/* k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21006,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21013,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(t2,(C_word)C_a_i_list(&a,4,lf[376],lf[549],lf[381],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21014,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21039,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21041,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li320),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_21041(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21041(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21041,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[291]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_21051(t16,t13);}
else{
t13=t10;
f_21051(t13,C_SCHEME_UNDEFINED);}}}

/* k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21051,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t2,t3,((C_word*)t0)[3]);}

/* k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21055,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_21058(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[554],t5,lf[555]));}}

/* k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li318),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21119,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li319),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a21118 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21119,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a21109 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21110,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21059 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21064,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  op-type?");
f_21014(t3,((C_word*)((C_word*)t0)[6])[1],lf[540]);}

/* k21078 in k21059 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21080,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_21064(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  op-type?");
f_21014(t2,((C_word*)((C_word*)t0)[6])[1],lf[553]);}}

/* k21085 in k21078 in k21059 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21087,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_21064(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[550],t2,lf[551],t3,lf[552]));}}
else{
t2=((C_word*)t0)[5];
f_21064(2,t2,C_SCHEME_UNDEFINED);}}

/* k21062 in k21059 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21064,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  append");
t6=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k21068 in k21062 in k21059 in k21056 in k21053 in k21049 in do3656 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_21041(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21037 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_21174(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21014(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21014,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k21011 in k21004 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_21013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21013,2,t0,t1);}
t2=((C_word*)t0)[2];
f_21174(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k21172 in parse-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_21174(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18101(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20752,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[543],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20774,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[546],t8,lf[547]));}
else{
t19=t17;
f_20774(2,t19,C_SCHEME_UNDEFINED);}}

/* k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20774,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20789,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[545]));}
else{
t9=t8;
f_20789(2,t9,C_SCHEME_UNDEFINED);}}

/* k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[8]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[293],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_20792(t6,t5);}
else{
t4=t2;
f_20792(t4,C_SCHEME_UNDEFINED);}}

/* k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20792,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20795,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20962,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li314),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20968,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li315),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a20967 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20968,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a20961 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20962,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  parse-then-else-dependents");
f_20621(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20798,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_20798(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20944,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18101(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k20942 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20798(t3,t2);}

/* k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20798(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20798,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  loop-operator-set!");
f_17848(t2,((C_word*)((C_word*)t0)[7])[1],lf[22]);}

/* k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20937,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[370],"loop-looping");
f_17902(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k20935 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20937,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[318],t1);
C_trace("ChickenBridge.scm: 365  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20925,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20808,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_20821(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_20821(t7,(C_word)C_eqp(t6,lf[18]));}}

/* k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20821,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[544]));}
else{
t5=t4;
f_20828(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_20808(t2,C_SCHEME_UNDEFINED);}}

/* k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20831,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li312),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20898,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li313),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a20897 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20898,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a20883 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20892,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k20890 in a20883 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  parse-then-else-dependents");
f_20621(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_20834(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20870,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18101(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20868 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20834(t3,t2);}

/* k20832 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20834,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping");
t4=C_retrieve2(lf[370],"loop-looping");
f_17902(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20861 in k20832 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20863,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[318],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_17908(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k20838 in k20861 in k20832 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_17908(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k20841 in k20838 in k20861 in k20832 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 365  gather-clauses");
f_18101(t2,lf[22],t3);}

/* k20845 in k20841 in k20838 in k20861 in k20832 in k20829 in k20826 in k20819 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20808(t3,t2);}

/* k20806 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20808(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20808,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_17908(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k20809 in k20806 in k20923 in k20799 in k20796 in k20793 in k20790 in k20787 in k20772 in parse-conditional in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20621(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20621,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20625,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20630,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li310),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_20630(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20630(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20630,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t12,t10,t11);}}

/* k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_20584(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[540]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[541]);
t8=t2;
f_20584(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_20584(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_20584(t3,C_SCHEME_FALSE);}}

/* k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20584,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_20647(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[538],t6,lf[539]));}}

/* k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20720,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li308),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20733,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li309),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a20732 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20733,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a20719 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20728,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20726 in a20719 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k20648 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k20652 in k20648 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20654,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20659,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_20659(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[291]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[537]));}
else{
t10=t5;
f_20659(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[18]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_20659(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20697,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t10,t11,((C_word*)t0)[3]);}}}}

/* k20695 in k20652 in k20648 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_20659(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_20659(2,t2,C_SCHEME_UNDEFINED);}}

/* k20657 in k20652 in k20648 in k20645 in k20582 in k20576 in do3589 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_20630(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20623 in parse-then-else-dependents in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20520,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20527,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[534],t13,lf[535]));}
else{
t13=t11;
f_20527(2,t13,C_SCHEME_UNDEFINED);}}

/* k20525 in parse-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20527,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20558,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20556 in k20525 in parse-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20558,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20554,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k20552 in k20556 in k20525 in parse-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20554,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[376],lf[520],lf[381],t2));}

/* k20544 in k20556 in k20525 in parse-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20429,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20436,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[531],t15,lf[532]));}
else{
t15=t13;
f_20436(2,t15,C_SCHEME_UNDEFINED);}}

/* k20434 in parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20436,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20502 in k20434 in parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20504,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20447,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[528]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_20447(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[529]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[293],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_20447(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[530]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_20447(t9,t8);}
else{
t8=t4;
f_20447(t8,C_SCHEME_UNDEFINED);}}}}

/* k20445 in k20502 in k20434 in parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20447,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20458,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20474,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k20472 in k20445 in k20502 in k20434 in parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20474,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[376],lf[528],lf[381],t3,lf[384],t4));}

/* k20456 in k20445 in k20502 in k20434 in parse-thereis in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20363(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20363,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20374,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[525],t7,lf[526]));}
else{
t13=t12;
f_20374(2,t13,C_SCHEME_UNDEFINED);}}

/* k20372 in parse-while-until in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[523]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_20377(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[524]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[293],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_20377(t10,t9);}
else{
t5=t2;
f_20377(t5,C_SCHEME_UNDEFINED);}}}

/* k20375 in k20372 in parse-while-until in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20384,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[3])[1],lf[522]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(t2,(C_word)C_a_i_list(&a,4,lf[376],((C_word*)t0)[2],lf[381],t4));}

/* k20382 in k20375 in k20372 in parse-while-until in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20357(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20357,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[520],t2));}

/* parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19811,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19820,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19825,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19830,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_19842,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[517],t7,lf[518]));}
else{
t30=t29;
f_19842(2,t30,C_SCHEME_UNDEFINED);}}

/* k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19842,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_19853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_19853(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[513]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20306,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[516]));}
else{
t11=t9;
f_20306(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_19853(2,t9,C_SCHEME_UNDEFINED);}}}

/* k20304 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18178(t2,t3);}

/* k20310 in k20304 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20312,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_19853(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[514],t2,lf[515]));}}

/* k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_19857,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19738,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li302),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_19738(t9,t2,C_SCHEME_FALSE);}

/* do3411 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19738(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19738,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19752,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19763,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  loop-collectors");
t9=C_retrieve2(lf[367],"loop-collectors");
f_17866(3,t9,t7,t8);}}

/* k19761 in do3411 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19763,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19698,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li301),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_19698(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3403 in k19761 in do3411 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19698(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19698,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19711,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_19711(t12,t11);}
else{
t10=t6;
f_19711(t10,C_SCHEME_UNDEFINED);}}}

/* k19709 in do3403 in k19761 in do3411 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19711(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_19698(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19750 in do3411 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19738(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19857,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_19860,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20290,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20294,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-type");
f_19825(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_19860(2,t6,t5);}}

/* k20292 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[510];
t3=lf[511];
t4=lf[512];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_20290(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_20290(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_20290(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_20290(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k20288 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20290(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20290,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_19860(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20286,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  collector-type");
f_19825(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20284 in k20288 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20286,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[507],t1,lf[508],((C_word*)t0)[2],lf[509]));}

/* k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19863,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[491]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[492]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19906,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19944,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_19944(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 365  gensym");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[493]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19973,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_19830(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[494]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[495]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[497]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[20]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_20080(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[501]);
t10=t8;
f_20080(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[506])));}}}}

/* k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20080(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20080,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20083,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20196,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20254,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t9,((C_word*)((C_word*)t0)[13])[1],lf[505]);}
else{
t9=t8;
f_20196(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20189,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_19830(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_19863(t2,C_SCHEME_UNDEFINED);}}

/* k20187 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20083(t6,t5);}

/* k20252 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20254,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20196(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20196,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[504]);}

/* k20198 in k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20200,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[503]);}

/* k20202 in k20198 in k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20204,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20246,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)((C_word*)t0)[11])[1],lf[502]);}

/* k20244 in k20202 in k20198 in k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20246,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k20240 in k20244 in k20202 in k20198 in k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20242,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20220,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_19820(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k20218 in k20240 in k20244 in k20202 in k20198 in k20194 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20220,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_20083(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_20083(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20081 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20083(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20083,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20086,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[20]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[498]);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[500],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20086(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[501]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[498],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_20086(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[500],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_20086(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k20084 in k20081 in k20078 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_20086(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20086,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19863(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_19863(t2,C_SCHEME_UNDEFINED);}}

/* k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19985,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[494]);
t3=(C_truep(t2)?lf[324]:lf[321]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19991,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20035,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_20035(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 365  gensym");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[496]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20068,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  collector-acc");
f_19830(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20066 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19991(t3,t2);}

/* k20033 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20035,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k20059 in k20033 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20061,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20043,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_19820(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k20041 in k20059 in k20033 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20043,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_19991(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[292],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_19991(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k19989 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19991,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k20029 in k19989 in k19983 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_20031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20031,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[293],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[292],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[22],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[318],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_19863(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k19971 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19906(t3,t2);}

/* k19942 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19944,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k19964 in k19942 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19966,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19952,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-collector");
f_19820(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k19950 in k19964 in k19942 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19952,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_19906(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_19906(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k19904 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19906,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[491]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19863(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_19863(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19863(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19863,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19870,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19872 in k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19876 in k19872 in k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19882,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19880 in k19876 in k19872 in k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19886,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19884 in k19880 in k19876 in k19872 in k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19886,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[376],((C_word*)t0)[5],lf[377],((C_word*)t0)[4],lf[379],((C_word*)t0)[3],lf[381],((C_word*)t0)[2],lf[384],t1,lf[378],t2,lf[380],C_SCHEME_END_OF_LIST));}

/* k19868 in k19861 in k19858 in k19855 in k19851 in k19840 in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19830(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19830,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19825(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19825,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19820(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19820,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19652(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19652,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19663,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[488],t6,lf[489]));}
else{
t12=t11;
f_19663(2,t12,C_SCHEME_UNDEFINED);}}

/* k19661 in parse-initially in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19663,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19678,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(t6,(C_word)C_a_i_list(&a,4,lf[376],((C_word*)t0)[2],lf[379],t7));}

/* k19676 in k19661 in parse-initially in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19614,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19625,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[485],t6,lf[486]));}
else{
t12=t11;
f_19625(2,t12,C_SCHEME_UNDEFINED);}}

/* k19623 in parse-finally in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19625,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19640,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(t6,(C_word)C_a_i_list(&a,4,lf[376],((C_word*)t0)[2],lf[383],t7));}

/* k19638 in k19623 in parse-finally in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19547,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19558,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19567,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li294),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_19567(t16,t12);}

/* do3360 in parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19567,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_19577(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t3,t4,((C_word*)t0)[5]);}}

/* k19575 in do3360 in parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19577,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[482],((C_word*)t0)[4],lf[483]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19590,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_19567(t7,((C_word*)t0)[7]);}}

/* k19588 in k19575 in do3360 in parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19556 in parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(t2,(C_word)C_a_i_list(&a,4,lf[376],((C_word*)t0)[3],lf[381],((C_word*)((C_word*)t0)[2])[1]));}

/* k19563 in k19556 in parse-do in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19354,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19361,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19414,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li292),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_19414(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19414(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19414,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_19424(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t7,t8,((C_word*)t0)[5]);}}

/* k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19424,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19435,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19538,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18178(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19538,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19444,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[472],((C_word*)((C_word*)t0)[10])[1],lf[473]));}
else{
t4=t3;
f_19444(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[291]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19466,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[474]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19495,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19503,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[475]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[460]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[476]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_19435(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[477],((C_word*)((C_word*)t0)[10])[1],lf[478]));}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[479],((C_word*)((C_word*)t0)[10])[1],lf[480]));}}}}}

/* k19501 in k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19503,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19466(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19493 in k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19495,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19466(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19464 in k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_19435(2,t6,t5);}

/* k19442 in k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19447,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[470],((C_word*)((C_word*)t0)[8])[1],lf[471]));}
else{
t3=t2;
f_19447(2,t3,C_SCHEME_UNDEFINED);}}

/* k19445 in k19442 in k19536 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_19435(2,t6,t5);}

/* k19433 in k19422 in do3316 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_19414(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19364,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[469]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19404,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19412,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_19364(2,t3,C_SCHEME_UNDEFINED);}}}

/* k19410 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19412,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19364(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19402 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19404,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19364(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19362 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19371,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19375,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19373 in k19362 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19379,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19377 in k19373 in k19362 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19379,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[376],lf[468],lf[377],((C_word*)t0)[2],lf[379],t1));}

/* k19369 in k19362 in k19359 in parse-with in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19212,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19222,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19260,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li290),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_19260(t22,t18,C_SCHEME_FALSE);}

/* do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19260(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19260,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_19270(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t5,t6,((C_word*)t0)[5]);}}

/* k19268 in do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19270,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[466]));}
else{
t7=t6;
f_19281(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19279 in k19268 in do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19281,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19284,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[460]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19293,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[461]));}
else{
t6=t5;
f_19293(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[462]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19318,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[463]));}
else{
t7=t6;
f_19318(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[464],((C_word*)((C_word*)t0)[12])[1],lf[465]));}}}

/* k19316 in k19279 in k19268 in do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19318,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_19284(2,t10,t9);}

/* k19291 in k19279 in k19268 in do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19293,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_19284(2,t8,t7);}

/* k19282 in k19279 in k19268 in do3278 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19260(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19220 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19229,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19258,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k19256 in k19220 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19258,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[376],lf[408],lf[377],t2,lf[379],t3,lf[381],t4,lf[382],t5));}

/* k19227 in k19220 in parse-general-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18861,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18868,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[458]);}

/* k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18868,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18874,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19102,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li288),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_19102(t25,t21,C_SCHEME_FALSE);}

/* do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19102(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19102,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19112(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t5,t6,((C_word*)t0)[4]);}}

/* k19110 in do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19112,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[457]));}
else{
t7=t6;
f_19123(2,t7,C_SCHEME_UNDEFINED);}}}

/* k19121 in k19110 in do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19123,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19126,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[447]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19135,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_19135(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[456]);
if(C_truep(t6)){
t7=t5;
f_19135(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[441]);
t8=t5;
f_19135(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[446])));}}}

/* k19133 in k19121 in k19110 in do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19135(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19135,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19138,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[449],((C_word*)((C_word*)t0)[9])[1],lf[450],((C_word*)((C_word*)t0)[10])[1],lf[451]));}
else{
t3=t2;
f_19138(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[432]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[452]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[441]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[453]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_19126(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[454],((C_word*)((C_word*)t0)[9])[1],lf[455]));}}}

/* k19136 in k19133 in k19121 in k19110 in do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_19126(2,t7,t6);}

/* k19124 in k19121 in k19110 in do3211 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19102(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19100,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_19096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19096,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18885,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[441]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18902,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[445]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[446]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18978,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[183],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_18978(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[183],((C_word*)t0)[4]);
t9=t7;
f_18978(t9,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19042,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_19042(t10,(C_word)C_eqp(t9,lf[448]));}
else{
t9=t8;
f_19042(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_19007(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k19040 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19042,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19007(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_19007(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19005 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19007(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19007,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19023,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[447]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)t0)[6]);
t5=t2;
f_19023(t5,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_19023(t4,(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k19021 in k19005 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_19023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19023,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18885(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k18976 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18978,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[181],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[318],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_18885(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k18900 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[444]);}

/* k18903 in k18900 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t2,((C_word*)t0)[7],C_fix(0));}

/* k18967 in k18903 in k18900 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18969,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k18963 in k18967 in k18903 in k18900 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18965,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[442],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[307],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[443],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[324],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[293],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_18885(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k18883 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18885(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18885,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18892,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18894 in k18883 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18896,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[376],lf[408],lf[377],t1,lf[380],((C_word*)((C_word*)t0)[5])[1],lf[379],((C_word*)((C_word*)t0)[4])[1],lf[381],((C_word*)((C_word*)t0)[3])[1],lf[382],((C_word*)((C_word*)t0)[2])[1]));}

/* k18890 in k18883 in k19094 in k19098 in k18872 in k18866 in parse-sequence-iteration in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18814,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[438]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18829,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li285),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18847,a[2]=t2,a[3]=((C_word)li286),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a18846 in parse-repeat in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18847,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,t1,t2,t4);}

/* a18828 in parse-repeat in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[439]);}

/* k18839 in a18828 in parse-repeat in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18841,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[408],t1,lf[413],t2);
C_trace("ChickenBridge.scm: 365  parse-numerical-for");
t4=C_retrieve2(lf[407],"parse-numerical-for");
f_18432(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18432,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18442,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18641,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li283),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_18641(t31,t27,C_SCHEME_FALSE);}

/* do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18641(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18641,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_18651(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t5,t6,((C_word*)t0)[6]);}}

/* k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18651,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[436]));}
else{
t7=t6;
f_18662(2,t7,C_SCHEME_UNDEFINED);}}}

/* k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18662,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18665,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[415]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[411]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18677,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[416],((C_word*)((C_word*)t0)[12])[1],lf[417],((C_word*)((C_word*)t0)[9])[1],lf[418]));}
else{
t7=t6;
f_18677(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[413]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18698,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[419],((C_word*)((C_word*)t0)[12])[1],lf[420],((C_word*)((C_word*)t0)[3])[1],lf[421]));}
else{
t8=t7;
f_18698(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[422]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18719,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[423],((C_word*)((C_word*)t0)[12])[1],lf[424],((C_word*)((C_word*)t0)[3])[1],lf[425]));}
else{
t9=t8;
f_18719(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[412]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18740,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[426],((C_word*)((C_word*)t0)[12])[1],lf[427],((C_word*)((C_word*)t0)[3])[1],lf[428]));}
else{
t10=t9;
f_18740(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[414]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18761,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[429],((C_word*)((C_word*)t0)[12])[1],lf[430],((C_word*)((C_word*)t0)[3])[1],lf[431]));}
else{
t11=t10;
f_18761(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[432]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18782,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[433]));}
else{
t12=t11;
f_18782(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[434],((C_word*)((C_word*)t0)[12])[1],lf[435]));}}}}}}}

/* k18780 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_18665(2,t6,t5);}

/* k18759 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_18665(2,t7,t6);}

/* k18738 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_18665(2,t7,t6);}

/* k18717 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_18665(2,t7,t6);}

/* k18696 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_18665(2,t7,t6);}

/* k18675 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_18665(2,t7,t6);}

/* k18663 in k18660 in k18649 in do3112 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18641(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_18445(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[415]);
t5=t2;
f_18445(t5,t4);}}

/* k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18448,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[411]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18608,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_18608(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[414]);
t6=t4;
f_18608(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[412])));}}

/* k18606 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18608(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[323]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[412]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[322]);
t5=((C_word*)t0)[2];
f_18448(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[324]);
t5=((C_word*)t0)[2];
f_18448(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[307]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[413]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[315]);
t5=((C_word*)t0)[2];
f_18448(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[321]);
t5=((C_word*)t0)[2];
f_18448(t5,t4);}}}

/* k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18579,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18599,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k18597 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18599,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18451(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k18577 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18579,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18451(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18451,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_18454(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18544,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[410]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_18454(t5,t4);}}

/* k18542 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t2,t1,C_SCHEME_FALSE);}

/* k18559 in k18542 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18561,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_18454(t8,t7);}

/* k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18454,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18493,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  gensym");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[409]);}
else{
t6=t5;
f_18461(t6,C_SCHEME_UNDEFINED);}}

/* k18491 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18511,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18527,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  make-binding");
f_18184(t3,t1,C_SCHEME_FALSE);}}

/* k18525 in k18491 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18527,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18496(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k18509 in k18491 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18511,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18496(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k18494 in k18491 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18496,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18461(t4,t3);}

/* k18459 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18461,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18468,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18472,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t4=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18470 in k18459 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18476,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k18474 in k18470 in k18459 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18476,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[376],lf[408],lf[377],((C_word*)t0)[2],lf[379],t1,lf[382],t2,lf[380],t4));}

/* k18466 in k18459 in k18452 in k18449 in k18446 in k18443 in k18440 in parse-numerical-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_18350,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18354,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t5,t6,t4);}

/* k18352 in parse-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18354,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[400]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18372,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  loop-variable?");
f_18178(t4,t3);}}

/* k18370 in k18352 in parse-for in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18372,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[401]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[402],t6,lf[403],lf[404]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 365  loop-error");
f_18190(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[405],t2,lf[406]));}}

/* loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18190(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18190,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18246,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18198,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li280),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18198(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3063 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18198(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18198,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18208,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_18208(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_18208(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  loop-op?");
f_18172(t6,t8,((C_word*)t0)[2]);}}}

/* k18206 in do3063 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18208,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 365  reverse");
t2=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_18198(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18249,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[391]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[398]);}

/* k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18327,a[2]=t4,a[3]=((C_word)li279),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_18327(t6,t2,((C_word*)t0)[2]);}

/* do3073 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18327(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18327,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18337,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 365  display");
t5=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k18335 in do3073 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18327(t3,((C_word*)t0)[2],t2);}

/* k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[391]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18261,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[397]);}

/* k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18264,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 365  display");
t3=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[393]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18281,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li278),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_18281(t6,t2,((C_word*)t0)[2]);}}

/* do3078 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18281(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18281,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18291,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 365  display");
t5=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[396]);}
else{
t5=t3;
f_18291(2,t5,C_SCHEME_UNDEFINED);}}}

/* k18289 in do3078 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 365  display");
t4=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k18292 in k18289 in do3078 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[394]:lf[395]);
C_trace("ChickenBridge.scm: 365  display");
t6=*((C_word*)lf[392]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k18295 in k18292 in k18289 in do3078 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18281(t3,((C_word*)t0)[2],t2);}

/* k18262 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18267,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 365  newline");
t3=*((C_word*)lf[391]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k18265 in k18262 in k18259 in k18256 in k18253 in k18250 in k18247 in k18244 in loop-error in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[390]);}

/* make-binding in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18184(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18184,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18178(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18178,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18172(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18172,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18101(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18101,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18103,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18142,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t5,t3,C_retrieve2(lf[366],"loop-bindings"));}

/* k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[367],"loop-collectors"));}

/* k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[368],"loop-initially"));}

/* k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[369],"loop-end-tests"));}

/* k18152 in k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18158,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[370],"loop-looping"));}

/* k18156 in k18152 in k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18162,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[372],"loop-stepping"));}

/* k18160 in k18156 in k18152 in k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[373],"loop-finally"));}

/* k18164 in k18160 in k18156 in k18152 in k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18170,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 365  gather-clause");
f_18103(t2,((C_word*)t0)[2],C_retrieve2(lf[374],"loop-returning"));}

/* k18168 in k18164 in k18160 in k18156 in k18152 in k18148 in k18144 in k18140 in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18170,2,t0,t1);}
C_trace("ChickenBridge.scm: 365  make-loop-clause");
f_17950(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[376],((C_word*)t0)[9],lf[377],((C_word*)t0)[8],lf[378],((C_word*)t0)[7],lf[379],((C_word*)t0)[6],lf[380],((C_word*)t0)[5],lf[381],((C_word*)t0)[4],lf[382],((C_word*)t0)[3],lf[383],((C_word*)t0)[2],lf[384],t1));}

/* gather-clause in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18103(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18103,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18109,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li272),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18109(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3046 in gather-clause in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_18109(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18109,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18120,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18131,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 365  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k18129 in do3046 in gather-clause in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 365  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18118 in do3046 in gather-clause in gather-clauses in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_18120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18109(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17950(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17950,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17965,a[2]=t5,a[3]=t3,a[4]=((C_word)li270),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_17965(t7,t1,t2);}}

/* do3034 in make-loop-clause in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17965(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17965,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17978,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 365  loop-operator-set!");
f_17848(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_17978(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_17978(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[379]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_17978(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[380]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_17978(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 365  loop-looping-set!");
f_17908(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_17978(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_17978(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_17978(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_17978(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k17976 in do3034 in make-loop-clause in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17965(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17938(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17938,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17926(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17926,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17914(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17914,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17908(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17908,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17902(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17902,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17890,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17878(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17878,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17866(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17866,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17854(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17854,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k17838 in k17835 in k17832 in k17829 in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17848,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17812(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17812,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[364]);}

/* sal:open in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17806(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17806,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[362]);}

/* sal:load in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17759(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17759,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17763,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  file-exists?");
t4=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k17761 in sal:load in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17766,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17788,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[356]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[357],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_17788(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17779,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[358],((C_word*)t0)[2],lf[359]);}}

/* k17777 in k17761 in sal:load in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17786 in k17761 in sal:load in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  load-sal-file");
t2=C_retrieve(lf[354]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  load");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k17764 in k17761 in sal:load in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17750(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17750,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17754,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  chdir");
t4=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k17752 in sal:chdir in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17571(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_17571r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_17571r(t0,t1,t2);}}

static void C_ccall f_17571r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17574,a[2]=t4,a[3]=((C_word)li253),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17719,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17724,a[2]=t4,a[3]=t8,a[4]=((C_word)li254),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_17724(t10,t6,t2);}

/* do2862 in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17724(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17724,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t3=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[351]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17737,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_17574(t5,t3,t4);}}

/* k17735 in do2862 in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17724(t3,((C_word*)t0)[2],t2);}

/* k17717 in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17574(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17574,NULL,3,t0,t1,t2);}
t3=t2;
if(C_truep(t3)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[344]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17602,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[347]);}
else{
t4=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[348]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_inexactp(t2))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17689,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17693,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  decimals");
t7=C_retrieve(lf[83]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,t2,C_fix(3));}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17700,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  number->string");
C_number_to_string(3,0,t5,t2);}}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 364  print-message");
t5=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t2);}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17716,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  sprintf");
t6=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[350]);}}

/* k17714 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17698 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17691 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  number->string");
C_number_to_string(3,0,((C_word*)t0)[2],t1);}

/* k17687 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17600 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17605,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17610,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li252),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_17610(t6,t2,((C_word*)t0)[2]);}

/* do2854 in k17600 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17610(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17610,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17620,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_17574(t5,t3,t4);}}

/* k17618 in do2854 in k17600 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_17623(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 364  print-message");
t4=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[346]);}}

/* k17621 in k17618 in do2854 in k17600 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17610(t3,((C_word*)t0)[2],t2);}

/* k17603 in k17600 in printer in sal:print in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-message");
t2=C_retrieve(lf[343]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[345]);}

/* sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_17400,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[328],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17406,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[254],"list->token"),t4);}

/* k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17406,2,t0,t1);}
t2=C_mutate(&lf[329],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_17409(t5,t4);}
else{
t4=t3;
f_17409(t4,C_SCHEME_FALSE);}}

/* k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17409,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[329],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15209,a[2]=t4,a[3]=t3,a[4]=((C_word)li250),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  call/cc");
t7=*((C_word*)lf[341]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a15208 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15209,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15215,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li248),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15222,a[2]=t2,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a15221 in a15208 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15222,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15229,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_15229(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_15229(t6,C_SCHEME_FALSE);}}

/* k15227 in a15221 in a15208 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15229(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15229,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  add-emit-info");
f_14866(t2,lf[338],lf[339],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  make-parse-error");
f_14686(((C_word*)t0)[4],lf[340],C_retrieve2(lf[302],"*maxtokpos*"));}}

/* k15234 in k15227 in a15221 in a15208 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a15214 in a15208 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15215,2,t0,t1);}
t2=lf[302]=C_fix(0);;
C_trace("ChickenBridge.scm: 364  parser");
f_15247(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17413,2,t0,t1);}
t2=C_mutate(&lf[330],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17416,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[330],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[270]))){
t5=C_retrieve2(lf[328],"*sal-string*");
t6=C_retrieve2(lf[330],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17447,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-position");
f_14725(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 364  pp");
t5=C_retrieve(lf[336]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[330],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 364  eval");
t5=C_retrieve(lf[337]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[330],"*sal-output*"));}}}

/* k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17447,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17540,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li247),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_17540(t11,t7,C_SCHEME_FALSE);}

/* do2828 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17540,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17550,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_17550(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_17550(t11,t10);}}}

/* k17548 in do2828 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17550(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_17540(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17453,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17510,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li246),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_17510(t9,t5,C_SCHEME_FALSE);}

/* do2835 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17510(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17510,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17520,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_17520(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_17520(t11,t10);}}}

/* k17518 in do2835 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_17520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_17510(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17464,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17471,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  parse-error-string");
f_14707(t4,((C_word*)t0)[2]);}

/* k17473 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  make-string");
t3=*((C_word*)lf[334]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k17477 in k17473 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17483,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  substring");
t3=*((C_word*)lf[335]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17481 in k17477 in k17473 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17487,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  make-string");
t3=*((C_word*)lf[334]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k17485 in k17481 in k17477 in k17473 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17487,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17494,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 364  make-string");
t5=*((C_word*)lf[334]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k17492 in k17485 in k17481 in k17477 in k17473 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17494,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 364  string-append");
t5=*((C_word*)lf[126]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[333],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17469 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  print-error");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17462 in k17459 in k17451 in k17445 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k17414 in k17411 in k17407 in k17404 in sal in k17392 in k17389 in k17386 in k17383 in k17380 in k16858 in k16855 in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_17416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16336,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16343,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_16349,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t33,t34,C_fix(23296));}

/* k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16349,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16353,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_16399,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,t3,C_fix(10756));}}

/* k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16399,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16403,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_16496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,t3,C_fix(22784));}}

/* k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16496,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16500,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16564,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16564,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16571,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16821,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_16571(t8,t7);}}

/* k16819 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16571(t3,t2);}

/* k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16571,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16574,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16809,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k16807 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16574(t3,t2);}

/* k16758 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16760,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k16764 in k16758 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16766,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t3=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_16574(t4,t3);}}

/* k16788 in k16764 in k16758 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16790,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16774,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16786,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t6=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k16784 in k16788 in k16764 in k16758 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k16772 in k16788 in k16764 in k16758 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16574(t3,t2);}

/* k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16574,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_16577(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16736,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[327]);}}

/* k16734 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16740,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k16738 in k16734 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_16577(t4,t3);}

/* k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16577(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16577,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16580,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16580(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16713,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[326]);}}

/* k16711 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16717,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k16715 in k16711 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_16580(t4,t3);}

/* k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16580(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16580,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_16583(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16690,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[325]);}}
else{
t3=t2;
f_16583(t3,C_SCHEME_UNDEFINED);}}

/* k16688 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16694,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k16692 in k16688 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_16583(t4,t3);}

/* k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16583(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16583,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16586,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16615,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_16586(t7,t6);}}

/* k16613 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16615,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[315],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_16586(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k16631 in k16613 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16633,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[321],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_16586(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k16649 in k16631 in k16613 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16651,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[322],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[323],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_16586(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k16667 in k16649 in k16631 in k16613 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16669,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[324],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[323],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16586(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_16586(t2,C_SCHEME_UNDEFINED);}}

/* k16584 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16586(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16586,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16590,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k16588 in k16584 in k16581 in k16578 in k16575 in k16572 in k16569 in k16562 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16343(t3,t2);}

/* k16498 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16500,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16504,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k16502 in k16498 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16504,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[320]);}

/* k16506 in k16502 in k16498 in k16494 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16508,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[10],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_16343(t12,t11);}

/* k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16403,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16407,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 364  fifth");
t4=C_retrieve(lf[55]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k16409 in k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16411,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16414,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16430,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_16414(t6,t5);}}

/* k16428 in k16409 in k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16430,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[319]);}

/* k16432 in k16428 in k16409 in k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16434,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[318],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[22],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_16414(t12,t11);}

/* k16412 in k16409 in k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16414(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16414,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16418,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 364  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k16416 in k16412 in k16409 in k16405 in k16401 in k16397 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16343(t3,t2);}

/* k16351 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16353,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[317]);}

/* k16355 in k16351 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16357,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  gensym");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[316]);}

/* k16359 in k16355 in k16351 in k16347 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16361,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[307],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[315],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_16343(t10,t9);}

/* k16341 in sal-parse-stepping in k16332 in k16329 in k16326 in k16323 in k16320 in k16317 in k16314 in k16311 in k16308 in k16305 in k16302 in k16299 in k16296 in k16293 in k16290 in k16287 in k16284 in k16281 in k16278 in k16275 in k16272 in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16158(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16158,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16170,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li243),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_16170(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16170,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16189,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16137(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16189,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16192,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16207,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li242),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_16207(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_16192(2,t5,t4);}}

/* do2467 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16207(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16207,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16221,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16235,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  reverse");
t12=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16239,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 364  is-op?");
f_16137(t10,t11);}}

/* k16237 in do2467 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16239,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16242,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_16242(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_16242(t10,t9);}}

/* k16240 in k16237 in do2467 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_16207(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16233 in do2467 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  inf->pre");
f_16158(((C_word*)t0)[2],t1);}

/* k16219 in do2467 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16221,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k16190 in k16187 in do2465 in inf->pre in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16170(t2,((C_word*)t0)[2]);}

/* is-op? in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16137(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16137,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16144,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_14806(t3,t2);}

/* k16142 in is-op? in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16144,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16145 in k16142 in is-op? in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16153,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  SalOpType?");
f_15914(t2,t1);}

/* k16151 in k16145 in k16142 in is-op? in k16133 in k16130 in k16127 in k16124 in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16153,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16072(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16072,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16081,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li239),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_16081(t10,t1,t2);}

/* do2431 in remove-token-type in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16081(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16081,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16094,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16104,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  token-unit-type=?");
f_14822(t4,t5,((C_word*)t0)[2]);}}

/* k16102 in do2431 in remove-token-type in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_16104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16104,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16094(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_16094(t7,t6);}}

/* k16092 in do2431 in remove-token-type in k16068 in k16065 in k16062 in k16059 in k16056 in k16053 in k16050 in k16047 in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16094(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16081(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16028(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16028,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_16016(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16016,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15914(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15914,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15866(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15866,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15247(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15247,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15251,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 364  printf");
t10=C_retrieve(lf[309]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[310],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_15251(2,t10,C_SCHEME_UNDEFINED);}}

/* k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15254,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14426(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_15257(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15672,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15676,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15680,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  first-token");
f_14414(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k15678 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  token-position");
f_14373(((C_word*)t0)[2],t1);}

/* k15674 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  max");
t2=*((C_word*)lf[189]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[302],"*maxtokpos*"),t1);}

/* k15670 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[302],t1);
t3=((C_word*)t0)[2];
f_15257(t3,t2);}

/* k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15257(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15257,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-value");
t4=C_retrieve2(lf[162],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15380,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t3,((C_word*)t0)[8]);}}

/* k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15380,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14613,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t4,t3);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[308],((C_word*)t0)[2]);}}

/* k14611 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15386(t3,(C_word)C_eqp(t2,lf[291]));}
else{
t2=((C_word*)t0)[2];
f_15386(t2,C_SCHEME_FALSE);}}

/* k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15386,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 364  pattern-nsubs");
f_14586(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14629,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t5,t4);}}

/* k14627 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15474(t3,(C_word)C_eqp(t2,lf[292]));}
else{
t2=((C_word*)t0)[2];
f_15474(t2,C_SCHEME_FALSE);}}

/* k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15474(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15474,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 364  pattern-nsubs");
f_14586(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  pattern-zero-or-more?");
f_14654(t2,((C_word*)t0)[2]);}}

/* k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_15547(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14645,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t4,t3);}}

/* k14643 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15547(t3,(C_word)C_eqp(t2,lf[307]));}
else{
t2=((C_word*)t0)[2];
f_15547(t2,C_SCHEME_FALSE);}}

/* k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15547(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15547,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15553,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_15576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li231),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_15576(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14677,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t4,t3);}}

/* k14675 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_15625(t3,(C_word)C_eqp(t2,lf[306]));}
else{
t2=((C_word*)t0)[2];
f_15625(t2,C_SCHEME_FALSE);}}

/* k15623 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15625(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15625,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15634,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li232),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15651,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li233),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[305],t3);}}

/* a15650 in k15623 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15651,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15644 in k15623 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15645,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  parser");
f_15247(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15632 in k15623 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15576,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_15586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_15586(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14426(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15586,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15589,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li229),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15612,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li230),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a15611 in k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15612,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15605 in k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15606,2,t0,t1);}
C_trace("ChickenBridge.scm: 364  parser");
f_15247(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15587 in k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15592,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15599,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  append");
t4=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_15592(t3,C_SCHEME_UNDEFINED);}}

/* k15597 in k15587 in k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15599,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_15592(t6,t5);}

/* k15590 in k15587 in k15584 in do2168 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_15576(t2,((C_word*)t0)[2]);}

/* k15551 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15556,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15562,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  pattern-zero-or-more?");
f_14654(t3,((C_word*)t0)[2]);}

/* k15560 in k15551 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_15556(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_15556(t5,t4);}}

/* k15554 in k15551 in k15545 in k15542 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15556(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15483,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15498,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li228),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_15498(t6,t2,C_fix(0));}

/* do2148 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15498(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15498,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15508,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15517,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li226),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li227),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a15530 in do2148 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15531,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15516 in do2148 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-sub");
f_14596(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15523 in a15516 in do2148 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15525,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15247(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15506 in do2148 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15508,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_15498(t3,((C_word*)t0)[2],t2);}

/* k15481 in k15478 in k15472 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15395,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15398,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_15417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li225),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_15417(t8,t4,C_fix(0));}

/* do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15417(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15417,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15430,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15450,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li223),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15464,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li224),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a15463 in do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15464,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a15449 in do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  pattern-sub");
f_14596(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15456 in a15449 in do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15458,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15247(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15428 in do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15433,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_15433(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_15433(t5,t4);}}

/* k15431 in k15428 in do2126 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15433(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15433,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_15417(t3,((C_word*)t0)[2],t2);}

/* k15396 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15401,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_15401(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15415,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  reverse");
t5=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k15413 in k15396 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15401(t3,t2);}

/* k15399 in k15396 in k15393 in k15384 in k15378 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15272,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  SalTokenType?");
f_15866(t2,t1);}

/* k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15272,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15278,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  null-tokens?");
f_14426(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15330,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16016(t2,((C_word*)t0)[5]);}}

/* k15328 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15330,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 364  get-rule");
f_14544(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[304],((C_word*)t0)[2]);}}

/* k15331 in k15328 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15333,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[260]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[260]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li221),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15354,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li222),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a15353 in k15331 in k15328 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15354,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15365,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 364  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_15365(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k15363 in a15353 in k15331 in k15328 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a15343 in k15331 in k15328 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15344,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 364  parser");
f_15247(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15278,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  first-token");
f_14414(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15294,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15324,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14337(t3,t1);}

/* k15322 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k15292 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15294,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15309,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  token-type");
f_14337(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k15307 in k15292 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15313,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-string");
f_14355(t2,((C_word*)t0)[2]);}

/* k15311 in k15307 in k15292 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15317,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-position");
f_14373(t2,((C_word*)t0)[2]);}

/* k15315 in k15311 in k15307 in k15292 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15299 in k15292 in k15286 in k15276 in k15270 in k15264 in k15255 in k15252 in k15249 in parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 364  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15143(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15143,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15145,a[2]=t2,a[3]=((C_word)li219),tmp=(C_word)a,a+=4,tmp));}

/* f_15145 in simple-unit-emitter in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15145(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15145,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15149,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15193,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t6,t2);}

/* k15191 */
static void C_ccall f_15193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  append");
t2=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k15147 */
static void C_ccall f_15149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15149,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15152,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_15152(t9,t8);}
else{
t6=t5;
f_15152(t6,C_SCHEME_UNDEFINED);}}

/* k15150 in k15147 */
static void C_fcall f_15152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15152,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15157,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li218),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15157(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2083 in k15150 in k15147 */
static void C_fcall f_15157(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15157,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15178,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k15176 in do2083 in k15150 in k15147 */
static void C_ccall f_15178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_15157(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_15135(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15135,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15137,a[2]=t2,a[3]=((C_word)li216),tmp=(C_word)a,a+=4,tmp));}

/* f_15137 in simple-unit-parser in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15137,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 364  make-parse-unit");
f_14737(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14927(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14927,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14944,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 364  emit");
f_14894(t5,t6,t3,t4);}}

/* k14942 in emit-list in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14948,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 364  emit-list");
f_14927(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k14946 in k14942 in emit-list in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14948,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14894(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14894,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14901,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_14806(t5,t2);}

/* k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14901,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14972,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14845,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit?");
f_14743(t4,t3);}}

/* k14843 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14845,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14852,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14910(2,t2,C_SCHEME_FALSE);}}

/* k14850 in k14843 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalRuleType?");
f_16016(((C_word*)t0)[2],t1);}

/* k14908 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14910,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15110,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15133,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 364  emit-list");
f_14927(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[298],((C_word*)t0)[4]);}}}

/* k15131 in k14908 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  get-rule");
f_14544(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k15108 in k14908 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15110,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[260]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 364  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t4,((C_word*)t0)[4]);}}

/* k15124 in k15108 in k14908 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  emit");
f_14894(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-parsed");
f_14776(t2,((C_word*)t0)[2]);}

/* k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14975,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 364  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t8=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalOpType?");
f_15914(t8,((C_word*)t0)[4]);}}}

/* k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14999,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15050,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15056,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k15060 in k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15062,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k15069 in k15060 in k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15071,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k15078 in k15069 in k15060 in k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15080,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k15087 in k15078 in k15069 in k15060 in k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15089,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[294],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15098,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k15096 in k15087 in k15078 in k15069 in k15060 in k15054 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 364  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[295],((C_word*)t0)[2]);}}

/* k15048 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15005,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[97]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15011,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k15009 in k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15011,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[289]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k15015 in k15009 in k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15017,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[290]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k15021 in k15015 in k15009 in k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15023,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[291]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k15027 in k15021 in k15015 in k15009 in k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15029,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[292]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k15033 in k15027 in k15021 in k15015 in k15009 in k15003 in k14997 in k14973 in k14970 in k14899 in emit in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_15035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[293]);}
else{
C_trace("ChickenBridge.scm: 364  string->symbol");
t2=*((C_word*)lf[288]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14876(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14876,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14883,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_14883(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 364  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[286],t2);}}

/* k14881 in set-emit-info! in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14866(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14866,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14854(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14854,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14822(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14822,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14829,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 364  token-unit?");
f_14806(t4,t2);}

/* k14827 in token-unit-type=? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14829,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k14834 in k14827 in token-unit-type=? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalType=?");
f_16028(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14806(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14806,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14813,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit?");
f_14743(t3,t2);}

/* k14811 in token-unit? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14813,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14820,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  parse-unit-type");
f_14758(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k14818 in k14811 in token-unit? in k14802 in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 364  SalTokenType?");
f_15866(((C_word*)t0)[2],t1);}

/* parse-unit-position in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14794(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14794,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14776(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14776,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14758(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14758,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14743(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14743,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[274]));}

/* make-parse-unit in k14733 in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14737(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14737,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[274],t2,t3,t4));}

/* parse-error-position in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14725(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14725,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14707(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14707,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14686(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14686,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[270],t2,t3));}

/* pattern-zero-or-more? in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14654(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14654,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14661,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-clause?");
f_14568(t3,t2);}

/* k14659 in pattern-zero-or-more? in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[228]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14596(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14596,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14604,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 364  pattern-subs");
f_14580(t4,t2);}

/* k14602 in pattern-sub in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14586(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14586,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14594,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 364  pattern-subs");
f_14580(t3,t2);}

/* k14592 in pattern-nsubs in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14580(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14580,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14568(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14568,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14565,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k14540 in k14537 in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14544(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14544,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 364  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[258],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 364  hash-table-ref/default");
t4=C_retrieve(lf[263]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[258],"*rules*"),t3);}}

/* rule-name in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14457(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14457,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[260]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k14432 in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14436(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14436,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[260],t2,t3,t4,t5,t6));}

/* null-tokens? in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14426(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14426,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14414(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14414,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k14381 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14385(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14385,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[255]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[249],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[249],"make-token"),t2);}}

/* token-position in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14373(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14373,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[250]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14355(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14355,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[250]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14337(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14337,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[250]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_14316,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[250],t2,t3,t4));}

/* next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14222(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14222,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14226,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t3,t2);}

/* k14224 in next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14226,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14255,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[241]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_13641(((C_word*)t0)[2],t6);}}

/* k14253 in k14224 in next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14255,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14260,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li183),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14260(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1844 in k14253 in k14224 in next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14260(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14260,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14270,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_14270(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[248],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14285,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[241]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_14285(t12,t11);}
else{
t10=t5;
f_14285(t10,C_SCHEME_UNDEFINED);}}}

/* k14283 in do1844 in k14253 in k14224 in next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_14285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14260(t3,((C_word*)t0)[2],t2);}

/* k14268 in do1844 in k14253 in k14224 in next-in-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_13641(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13704(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_13704r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13704r(t0,t1,t2,t3);}}

static void C_ccall f_13704r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13708,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13966,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13975,a[2]=t9,a[3]=((C_word)li181),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[247],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13975(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13975,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13979,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_13979(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[246],t2);}}

/* k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13984,a[2]=((C_word*)t0)[4],a[3]=((C_word)li180),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13984(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_13984r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13984r(t0,t1,t2,t3);}}

static void C_ccall f_13984r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13988,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_13988(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[244]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14126,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[21],lf[244]);}
else{
t20=t19;
f_14126(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[245]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14161,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[21],lf[245]);}
else{
t21=t20;
f_14161(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14190,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[12],t3);}
else{
t21=t20;
f_14190(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k14188 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14190,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14197,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14205,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14203 in k14188 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14197(2,t2,C_SCHEME_UNDEFINED);}}

/* k14195 in k14188 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13988(t5,t4);}

/* k14159 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14165(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14163 in k14159 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13988(t7,t6);}

/* k14124 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14130,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14130(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14128 in k14124 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13988(t7,t6);}

/* k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13988,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13991,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13991(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14026,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[244]);}
else{
t6=t5;
f_14026(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14061,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[245]);}
else{
t7=t6;
f_14061(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14090,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_14090(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14088 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14090,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14097,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14105,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14103 in k14088 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14097(2,t2,C_SCHEME_UNDEFINED);}}

/* k14095 in k14088 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13991(t5,t4);}

/* k14059 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14065,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14065(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14063 in k14059 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13991(t7,t6);}

/* k14024 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_14030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14028 in k14024 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_14030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13991(t7,t6);}

/* k13989 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13991,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13994(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k13992 in k13989 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_13997(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_13997(t4,t3);}}

/* k13995 in k13992 in k13989 in k13986 in a13983 in k13977 in parse-graph-item in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13997,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[241],t5,t6,t7));}

/* k13964 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13708(2,t3,t2);}

/* k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13708,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13711,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13711(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[193]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13871,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[193]);}
else{
t18=t17;
f_13871(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[194]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13906,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[194]);}
else{
t19=t18;
f_13906(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13935,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_13935(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13933 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13935,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13950,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13948 in k13933 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13942(2,t2,C_SCHEME_UNDEFINED);}}

/* k13940 in k13933 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13711(t5,t4);}

/* k13904 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13908 in k13904 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13711(t7,t6);}

/* k13869 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13875(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13873 in k13869 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13711(t7,t6);}

/* k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13711(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13711,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13714,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13714(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13771,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_13771(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13806,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_13806(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13835,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_13835(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13833 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13835,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13850,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13848 in k13833 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13842(2,t2,C_SCHEME_UNDEFINED);}}

/* k13840 in k13833 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13714(t5,t4);}

/* k13804 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13808 in k13804 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13714(t7,t6);}

/* k13769 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13773 in k13769 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13714(t7,t6);}

/* k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13714,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13717,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13717(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k13718 in k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13720,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13726,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13732,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[243],"next-in-graph"),t5);}

/* a13731 in k13718 in k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13732,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13738,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13750,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t5,t3);}

/* k13748 in a13731 in k13718 in k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a13737 in a13731 in k13718 in k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13738,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 363  graph-node-datum");
f_13641(t1,t2);}

/* k13724 in k13718 in k13715 in k13712 in k13709 in k13706 in make-graph in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13641(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13641,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[241]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13301,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13304,a[2]=t4,a[3]=((C_word)li172),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13483,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t6,t2);}

/* k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13487,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8033(t2,((C_word*)t0)[4]);}

/* k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13487,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13489,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li175),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13489(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13489(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13489,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_13499(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_13499(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13414,a[2]=t13,a[3]=((C_word)li174),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_13414(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1670 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13414(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13414,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13424,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_13424(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_13424(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k13422 in do1670 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13424(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13424,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[228]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13431,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_13431(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_13431(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_13431(t9,(C_word)C_eqp(t8,lf[228]));}}}}

/* k13429 in k13422 in do1670 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_13414(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13499,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13502,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[239],((C_word*)t0)[6]);}
else{
t3=t2;
f_13502(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13489(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k13500 in k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13506,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 363  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_13304(t7,t2,t4,t6);}

/* k13504 in k13500 in k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13506,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13509,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_13509(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_13509(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13526,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li173),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13526(t8,t3,((C_word*)t0)[3]);}}}

/* do1694 in k13504 in k13500 in k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13526(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13526,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13542,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k13540 in do1694 in k13504 in k13500 in k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k13507 in k13504 in k13500 in k13497 in do1685 in k13485 in k13481 in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13304(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13304,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13372,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random");
t6=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13316,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li171),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_13316(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1654 in select-output in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13316(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13316,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 363  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_13304(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13352,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_13352(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t9,t11);}}}

/* k13350 in do1654 in select-output in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13352,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_13316(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k13370 in select-output in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13372,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13377,a[2]=t3,a[3]=t1,a[4]=((C_word)li170),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_13377(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1664 in k13370 in select-output in next-in-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_13377(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13377,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12814(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_12814r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12814r(t0,t1,t2,t3);}}

static void C_ccall f_12814r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12818,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13295,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12741,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li168),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_12741(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[238],((C_word*)t4)[1]);}}

/* do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12741(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12741,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12586,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_12586(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t13=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[237],((C_word*)t11)[1]);}}}

/* k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12586,2,t0,t1);}
t2=(C_word)C_i_member(lf[232],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12592,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_12592(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[235],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_12592(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 363  error");
t5=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[236],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12592,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12604,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12677,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li167),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_12677(t17,t13);}

/* do1533 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_12677,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li166),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a12619 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12620(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12620,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12624,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_12624(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_12624(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_12624(t13,t12);}}

/* k12622 in a12619 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12624,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12627,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_12627(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_12627(t5,t4);}}

/* k12625 in k12622 in a12619 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12627(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12627,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k12605 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 363  reverse");
t3=*((C_word*)lf[234]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k12616 in k12605 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12618,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_12758(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t9=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[233],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12758(2,t10,t9);}}

/* k12756 in k12616 in k12605 in k12602 in k12590 in k12584 in do1555 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12758,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_12741(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k13293 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12818(2,t3,t2);}

/* k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12818,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12821,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12821(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[193]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13165,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[193]);}
else{
t22=t21;
f_13165(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[194]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13200,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[194]);}
else{
t23=t22;
f_13200(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[231]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13235,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[231]);}
else{
t24=t23;
f_13235(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13264,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_13264(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13262 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13264,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13279,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13277 in k13262 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13271(2,t2,C_SCHEME_UNDEFINED);}}

/* k13269 in k13262 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12821(t5,t4);}

/* k13233 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13237 in k13233 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12821(t7,t6);}

/* k13198 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13202 in k13198 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12821(t7,t6);}

/* k13163 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13167 in k13163 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12821(t7,t6);}

/* k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12821,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12824(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13030,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_13030(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13065,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_13065(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13100,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[231]);}
else{
t8=t7;
f_13100(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13129,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_13129(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13127 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13129,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13144,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13142 in k13127 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13136(2,t2,C_SCHEME_UNDEFINED);}}

/* k13134 in k13127 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12824(t5,t4);}

/* k13098 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13104(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13102 in k13098 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12824(t7,t6);}

/* k13063 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13069(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13067 in k13063 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12824(t7,t6);}

/* k13028 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_13034(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13032 in k13028 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12824(t7,t6);}

/* k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12824(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12824,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12827,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12827(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12895,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_12895(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12930,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_12930(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[231]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12965,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[231]);}
else{
t8=t7;
f_12965(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12994,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_12994(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12992 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12994,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13009,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13007 in k12992 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13001(2,t2,C_SCHEME_UNDEFINED);}}

/* k12999 in k12992 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_13001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12827(t5,t4);}

/* k12963 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12969(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12967 in k12963 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12827(t7,t6);}

/* k12928 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12934(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12932 in k12928 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12827(t7,t6);}

/* k12893 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_12899(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12897 in k12893 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12827(t7,t6);}

/* k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12827(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12827,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12830,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12830(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12833,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12839,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12866,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[230],"next-in-markov"),t4);}

/* a12865 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12866,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12874,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k12872 in a12865 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12842(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12852,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
t7=(C_word)C_a_i_list(&a,1,lf[228]);
if(C_truep((C_word)C_i_lessp(t6,C_fix(0)))){
C_trace("ChickenBridge.scm: 361  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t3,lf[229],t6);}
else{
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6011,a[2]=t9,a[3]=((C_word)li164),tmp=(C_word)a,a+=4,tmp));
t11=(C_word)C_i_nullp(t7);
t12=(C_truep(t11)?C_SCHEME_FALSE:(C_word)C_i_car(t7));
C_trace("ChickenBridge.scm: 361  mk");
t13=((C_word*)t9)[1];
f_6011(t13,t3,t6,t12);}}}

/* mk in k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6011(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6011,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6028,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 361  mk");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6026 in mk in k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6028,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k12850 in k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12842(t3,t2);}

/* k12840 in k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12843 in k12840 in k12837 in k12831 in k12828 in k12825 in k12822 in k12819 in k12816 in make-markov in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12381,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12385,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t3,t2);}

/* k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}

/* k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12391,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_7799(t2,((C_word*)t0)[2]);}

/* k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12391,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t4,t1,C_fix(4));}

/* k12558 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12560,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_12397(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_7649(t2,((C_word*)t0)[2]);}}

/* k12571 in k12558 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_7667(t2,((C_word*)t0)[2]);}

/* k12575 in k12571 in k12558 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 363  recalc-weightings");
f_12269(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_12397(2,t2,C_SCHEME_UNDEFINED);}}

/* k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_12403(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12534,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12553,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11419(t4,((C_word*)t0)[4]);}}

/* k12551 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12553,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 363  random-item-count-set!");
f_11410(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12532 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11419(t2,((C_word*)t0)[2]);}

/* k12539 in k12532 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12545,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-min");
f_11383(t2,((C_word*)t0)[2]);}

/* k12543 in k12539 in k12532 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12403(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12403,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11329(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12409,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8033(t2,((C_word*)t0)[2]);}}

/* k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12409,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12413,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12451,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12493,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  pick");
f_12413(t7,t2,t1);}

/* k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12493,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li162),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_12495(t5,((C_word*)t0)[2],t1);}

/* do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12495(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12495,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12514,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12517,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11401(t4,t2);}

/* k12515 in do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12517,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-count");
f_11419(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12514(t2,C_SCHEME_FALSE);}}

/* k12522 in k12515 in do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12528,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11401(t2,((C_word*)t0)[2]);}

/* k12526 in k12522 in k12515 in do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12514(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k12512 in do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12514,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12510,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pick");
f_12413(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12508 in k12512 in do1507 in k12491 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_12495(t2,((C_word*)t0)[2],t1);}

/* k12449 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12454,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_12454(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12468,a[2]=t5,a[3]=((C_word)li161),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_12468(t7,t2,((C_word*)t0)[2]);}}

/* do1511 in k12449 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12468(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12468,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12478,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-count-set!");
f_11410(t3,t4,C_fix(0));}}

/* k12476 in do1511 in k12449 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12468(t3,((C_word*)t0)[2],t2);}

/* k12452 in k12449 in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11329(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12413(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12413,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12421,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random");
t5=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}

/* k12419 in pick in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12421,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12423,a[2]=t3,a[3]=((C_word)li159),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_12423(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1502 in k12419 in pick in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12423(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12423,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12444,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-index");
f_11347(t4,t5);}

/* k12442 in do1502 in k12419 in pick in k12407 in k12401 in k12395 in k12389 in k12386 in k12383 in next-in-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_12423(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12269(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12269,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12379,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t2);}

/* k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12379,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[226];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12276,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12338,a[2]=t7,a[3]=t4,a[4]=((C_word)li157),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_12338(t9,t5,t2);}

/* do1474 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12338(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12338,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12367,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12371,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-weight");
f_11365(t4,t5);}}

/* k12369 in do1474 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(((C_word*)t0)[2],t1);}

/* k12365 in do1474 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12367,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  random-item-index-set!");
f_11338(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k12350 in k12365 in do1474 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12338(t3,((C_word*)t0)[2],t2);}

/* k12274 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12276,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12284,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li156),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12284(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1480 in k12274 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_12284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12284,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12317,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12329,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 363  random-item-index");
f_11347(t8,t9);}}

/* k12327 in do1480 in k12274 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12329,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 363  floor");
t4=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k12315 in do1480 in k12274 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12317,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  random-item-index-set!");
f_11338(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k12299 in k12315 in do1480 in k12274 in k12377 in recalc-weightings in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_12284(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11502(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11502r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11502r(t0,t1,t2,t3);}}

static void C_ccall f_11502r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11506,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11819,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11819(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11819,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11826,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_11826(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_11826(t9,t8);}}

/* k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11826,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11829,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11829(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[223]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12132,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[223]);}
else{
t22=t21;
f_12132(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[224]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12167,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[224]);}
else{
t23=t22;
f_12167(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[225]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12202,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[225]);}
else{
t24=t23;
f_12202(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12231,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_12231(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12229 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12231,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12238,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12246,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12244 in k12229 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12238(2,t2,C_SCHEME_UNDEFINED);}}

/* k12236 in k12229 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11829(t5,t4);}

/* k12200 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12206(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12204 in k12200 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11829(t7,t6);}

/* k12165 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12171(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12169 in k12165 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11829(t7,t6);}

/* k12130 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12134 in k12130 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11829(t7,t6);}

/* k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11829(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11829,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11832,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11832(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11997,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[223]);}
else{
t6=t5;
f_11997(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12032,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[224]);}
else{
t7=t6;
f_12032(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12067,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[225]);}
else{
t8=t7;
f_12067(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12096,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_12096(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12094 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12096,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12111,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12109 in k12094 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12103(2,t2,C_SCHEME_UNDEFINED);}}

/* k12101 in k12094 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11832(t5,t4);}

/* k12065 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12071(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12069 in k12065 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11832(t7,t6);}

/* k12030 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12036(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12034 in k12030 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11832(t7,t6);}

/* k11995 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_12001(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11999 in k11995 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_12001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11832(t7,t6);}

/* k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11832,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11835,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11835(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11862,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[223]);}
else{
t6=t5;
f_11862(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[224]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11897,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[224]);}
else{
t7=t6;
f_11897(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[225]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11932,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[225]);}
else{
t8=t7;
f_11932(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11961,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_11961(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11959 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11961,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11976,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11974 in k11959 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11968(2,t2,C_SCHEME_UNDEFINED);}}

/* k11966 in k11959 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11835(t5,t4);}

/* k11930 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_11936(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11934 in k11930 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11835(t7,t6);}

/* k11895 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11901,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_11901(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11899 in k11895 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11835(t7,t6);}

/* k11860 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_11866(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11864 in k11860 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11835(t7,t6);}

/* k11833 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11835(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11835,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11838,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11838(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)((C_word*)t0)[2])[1]);}}

/* k11836 in k11833 in k11830 in k11827 in k11824 in %make-random-item in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11838,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[212],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11509,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11515,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11783,a[2]=t8,a[3]=t6,a[4]=((C_word)li153),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11783(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11783,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11787,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-min");
f_11383(t3,t2);}

/* k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-max");
f_11401(t2,((C_word*)t0)[2]);}

/* k11788 in k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-weight");
f_11365(t2,((C_word*)t0)[2]);}

/* k11791 in k11788 in k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11329(t2,((C_word*)t0)[2]);}

/* k11794 in k11791 in k11788 in k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11809,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t1);}

/* k11807 in k11794 in k11791 in k11788 in k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11809,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11799(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_11799(t2,C_SCHEME_UNDEFINED);}}

/* k11797 in k11794 in k11791 in k11788 in k11785 in a11782 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11515,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11522,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_11522(t8,t7);}
else{
t6=t5;
f_11522(t6,C_SCHEME_UNDEFINED);}}

/* k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11522,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_11525,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11525(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[193]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11689,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[193]);}
else{
t18=t17;
f_11689(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[194]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11724,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[194]);}
else{
t19=t18;
f_11724(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11753,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[9]);}
else{
t19=t18;
f_11753(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11751 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11753,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11768,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11766 in k11751 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11760(2,t2,C_SCHEME_UNDEFINED);}}

/* k11758 in k11751 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11525(t5,t4);}

/* k11722 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11726 in k11722 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11525(t7,t6);}

/* k11687 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11691 in k11687 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11525(t7,t6);}

/* k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11525(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11525,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11528,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11528(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11589,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_11589(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11624,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_11624(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11653,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_11653(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11651 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11653,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11668,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11666 in k11651 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11660(2,t2,C_SCHEME_UNDEFINED);}}

/* k11658 in k11651 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11528(t5,t4);}

/* k11622 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11628(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11626 in k11622 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11528(t7,t6);}

/* k11587 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11591 in k11587 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11528(t7,t6);}

/* k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11528,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11531,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11531(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11534,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11546,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[222],"next-in-weighting"),t4);}

/* a11545 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11546,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11552,a[2]=t2,a[3]=((C_word)li151),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11568,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t5,t3);}

/* k11566 in a11545 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a11551 in a11545 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11552(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11552,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11560,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  random-item-datum");
f_11329(t3,t2);}

/* k11558 in a11551 in a11545 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k11532 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  recalc-weightings");
f_12269(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_11537(2,t3,C_SCHEME_UNDEFINED);}}

/* k11535 in k11532 in k11529 in k11526 in k11523 in k11520 in k11513 in k11507 in k11504 in make-weighting in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11419(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11419,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11410(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11410,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[212]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11401(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11401,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11383(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11383,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11365(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11365,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11347(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11347,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11338(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11338,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[212]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11329(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11329,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[212]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11107(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11107,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11110,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11157,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t2);}

/* k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11160,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11183,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11302,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8033(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_11160(t4,C_SCHEME_UNDEFINED);}}

/* k11300 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(((C_word*)t0)[2],t1);}

/* k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11190,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11237,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_7835(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11264,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_7835(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11283,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_7835(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11298,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_7835(t3,((C_word*)t0)[2]);}}

/* k11296 in k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11298,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[5];
f_11110(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k11281 in k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11283,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[5];
f_11110(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k11262 in k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11264,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  rotate-items");
t3=((C_word*)t0)[6];
f_11110(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k11235 in k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11237,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 363  rotate-items");
t4=((C_word*)t0)[7];
f_11110(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11188 in k11181 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11160(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k11158 in k11155 in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11110,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11116,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li140),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_11116(t10,t1,t3);}

/* do1242 in rotate-items in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_11116(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11116,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11132,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 363  list-set!");
f_5989(t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k11130 in do1242 in rotate-items in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11135,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 363  list-set!");
f_5989(t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k11133 in k11130 in do1242 in rotate-items in next-in-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11135,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_11116(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10633(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_10633r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10633r(t0,t1,t2,t3);}}

static void C_ccall f_10633r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10637,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11097,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10637(t8,t7);}}

/* k11095 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10637(t3,t2);}

/* k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10637(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10637,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10640,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_10640(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[193]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10970,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[193]);}
else{
t22=t21;
f_10970(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[194]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11005,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[194]);}
else{
t23=t22;
f_11005(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[210]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11040,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[210]);}
else{
t24=t23;
f_11040(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11069,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_11069(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11067 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11069,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11084,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11082 in k11067 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11076(2,t2,C_SCHEME_UNDEFINED);}}

/* k11074 in k11067 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10640(t5,t4);}

/* k11038 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11042 in k11038 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10640(t7,t6);}

/* k11003 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_11009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11007 in k11003 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_11009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10640(t7,t6);}

/* k10968 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10972 in k10968 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10640(t7,t6);}

/* k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10640(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10640,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10643,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10643(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10835,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_10835(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10870,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_10870(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10905,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[210]);}
else{
t8=t7;
f_10905(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10934,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_10934(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10932 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10934,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10949,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10947 in k10932 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10941(2,t2,C_SCHEME_UNDEFINED);}}

/* k10939 in k10932 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10643(t5,t4);}

/* k10903 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10907 in k10903 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10643(t7,t6);}

/* k10868 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10872 in k10868 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10643(t7,t6);}

/* k10833 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10839(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10837 in k10833 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10643(t7,t6);}

/* k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10643(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10643,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10646,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10646(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10700,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_10700(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10735,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_10735(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10770,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[210]);}
else{
t8=t7;
f_10770(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10799,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_10799(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10797 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10799,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10814,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10812 in k10797 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10806(2,t2,C_SCHEME_UNDEFINED);}}

/* k10804 in k10797 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10646(t5,t4);}

/* k10768 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10774,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10774(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10772 in k10768 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10646(t7,t6);}

/* k10733 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10739(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10737 in k10733 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10646(t7,t6);}

/* k10698 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10704(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10702 in k10698 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10646(t7,t6);}

/* k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10646(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10646,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10649,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10649(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k10650 in k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10652,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10658,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10667,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[209],"next-in-rotation"),t5);}

/* a10666 in k10650 in k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10667,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10679,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k10677 in a10666 in k10650 in k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10656 in k10650 in k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10659 in k10656 in k10650 in k10647 in k10644 in k10641 in k10638 in k10635 in make-rotation in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10557,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10561,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t3,t2);}

/* k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10564,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10580,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-length");
f_7835(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_10564(2,t4,C_SCHEME_UNDEFINED);}}

/* k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10580,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10590,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k10588 in k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10590,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10592,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li136),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_10592(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1142 in k10588 in k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10592,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10609,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 363  list-set!");
f_5989(t8,((C_word*)t0)[3],t2,t9);}}

/* k10607 in do1142 in k10588 in k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10612,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  list-set!");
f_5989(t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k10610 in k10607 in do1142 in k10588 in k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10612,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10623,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  random");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k10621 in k10610 in k10607 in do1142 in k10588 in k10578 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10592(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k10562 in k10559 in next-in-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10294(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_10294r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10294r(t0,t1,t2,t3);}}

static void C_ccall f_10294r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10298,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10547,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  append");
t7=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10298(t8,t7);}}

/* k10545 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10298(t3,t2);}

/* k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10298(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10298,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10301,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10301(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[193]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10455,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[193]);}
else{
t18=t17;
f_10455(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[194]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10490,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[194]);}
else{
t19=t18;
f_10490(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10519,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_10519(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10517 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10519,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10534,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10532 in k10517 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10526(2,t2,C_SCHEME_UNDEFINED);}}

/* k10524 in k10517 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10301(t5,t4);}

/* k10488 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10492 in k10488 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10301(t7,t6);}

/* k10453 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10457 in k10453 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10301(t7,t6);}

/* k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10301(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10301,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10304,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10304(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10355,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_10355(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10390,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_10390(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10419,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_10419(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10417 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10419,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10434,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10432 in k10417 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10426(2,t2,C_SCHEME_UNDEFINED);}}

/* k10424 in k10417 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10304(t5,t4);}

/* k10388 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10394(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10392 in k10388 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10304(t7,t6);}

/* k10353 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10357 in k10353 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10304(t7,t6);}

/* k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10304,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10307,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10307(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10305 in k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k10308 in k10305 in k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10310,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10316,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10322,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[206],"next-in-heap"),t5);}

/* a10321 in k10308 in k10305 in k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10322,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10334,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k10332 in a10321 in k10308 in k10305 in k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10314 in k10308 in k10305 in k10302 in k10299 in k10296 in make-heap in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10258(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10258,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10262,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t3,t2);}

/* k10260 in next-in-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10262,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10271,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10278,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10284,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 363  pattern-data-set!");
f_7808(t4,((C_word*)t0)[2],t5);}}

/* k10282 in k10260 in next-in-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k10276 in k10260 in next-in-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[2],t1,C_fix(1));}

/* k10269 in k10260 in next-in-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10011(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10011r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10011r(t0,t1,t2,t3);}}

static void C_ccall f_10011r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10015,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10015(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10015(t8,t7);}}

/* k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10015,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10018,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10018(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[193]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10164,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[193]);}
else{
t18=t17;
f_10164(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[194]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10199,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[194]);}
else{
t19=t18;
f_10199(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10228,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_10228(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10226 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10228,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10243,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10241 in k10226 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10235(2,t2,C_SCHEME_UNDEFINED);}}

/* k10233 in k10226 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10018(t5,t4);}

/* k10197 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10201 in k10197 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10018(t7,t6);}

/* k10162 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10166 in k10162 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10018(t7,t6);}

/* k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10018(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10018,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10021,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10021(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10064,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_10064(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10099,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_10099(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10128,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_10128(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10126 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10128,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10143,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10141 in k10126 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10135(2,t2,C_SCHEME_UNDEFINED);}}

/* k10133 in k10126 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10021(t5,t4);}

/* k10097 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10101 in k10097 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10021(t7,t6);}

/* k10062 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_10068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10066 in k10062 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10021(t7,t6);}

/* k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_10021(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10021,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10024,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10024(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k10022 in k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k10025 in k10022 in k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10027,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10033,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10035,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[204],"next-in-line"),t4);}

/* a10034 in k10025 in k10022 in k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10035(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10035,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10043,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k10041 in a10034 in k10025 in k10022 in k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10031 in k10025 in k10022 in k10019 in k10016 in k10013 in make-line in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9796(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9796,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9800,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-cache");
f_8033(t3,t2);}

/* k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9800,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[196]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9806,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9830,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[196]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10009,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  palin-len");
f_9237(t8,t1);}}

/* k10007 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_10009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10009,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  palin-inc-set!");
f_9246(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_9806(2,t2,C_SCHEME_UNDEFINED);}}

/* k9960 in k10007 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9962,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[196]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_9974(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_9974(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_9974(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_9974(t7,C_SCHEME_FALSE);}}}

/* k9972 in k9960 in k10007 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9974,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9806(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9806(2,t4,t3);}}

/* k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  palin-len");
f_9237(t2,((C_word*)t0)[2]);}

/* k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9833,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[196]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t7=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 363  palin-inc-set!");
f_9246(t2,((C_word*)t0)[2],C_fix(1));}

/* k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9930,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_9930(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_9930(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_9930(t5,C_SCHEME_FALSE);}}}

/* k9928 in k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_9845(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_9845(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_9845(t3,t2);}}

/* k9843 in k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9845,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9924,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_7799(t3,((C_word*)t0)[2]);}

/* k9922 in k9843 in k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(((C_word*)t0)[2],t1,C_fix(2));}

/* k9849 in k9843 in k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9851,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_9806(2,t2,C_SCHEME_UNDEFINED);}}

/* k9852 in k9849 in k9843 in k9840 in k9837 in k9831 in k9828 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9854,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[201]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[202]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],t1,t2);}}}}

/* k9804 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[196]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[196]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t9=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k9807 in k9804 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t2,((C_word*)t0)[2]);}

/* k9814 in k9807 in k9804 in k9798 in next-in-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9326(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_9326r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9326r(t0,t1,t2,t3);}}

static void C_ccall f_9326r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9330,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_9330(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_9330(t8,t7);}}

/* k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9330,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9333,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_9333(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[193]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9667,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t22=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[21],lf[193]);}
else{
t22=t21;
f_9667(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[194]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9702,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 363  error");
t23=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[21],lf[194]);}
else{
t23=t22;
f_9702(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[200]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9737,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[21],lf[200]);}
else{
t24=t23;
f_9737(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9766,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 363  error");
t24=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[12],((C_word*)t0)[4]);}
else{
t24=t23;
f_9766(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k9764 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9766,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9781,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9779 in k9764 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9773(2,t2,C_SCHEME_UNDEFINED);}}

/* k9771 in k9764 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9333(t5,t4);}

/* k9735 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9739 in k9735 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9333(t7,t6);}

/* k9700 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9704 in k9700 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9333(t7,t6);}

/* k9665 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9669 in k9665 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9333(t7,t6);}

/* k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9333,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_9336(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9532,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_9532(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9567,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_9567(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[200]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9602,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[200]);}
else{
t8=t7;
f_9602(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9631,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_9631(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k9629 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9631,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9646,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9644 in k9629 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9638(2,t2,C_SCHEME_UNDEFINED);}}

/* k9636 in k9629 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9336(t5,t4);}

/* k9600 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9604 in k9600 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9336(t7,t6);}

/* k9565 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9571(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9569 in k9565 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9336(t7,t6);}

/* k9530 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9534 in k9530 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9336(t7,t6);}

/* k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9336,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9339,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_9339(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9397,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_9397(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9432,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_9432(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[200]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9467,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[21],lf[200]);}
else{
t8=t7;
f_9467(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9496,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[12],((C_word*)t0)[6]);}
else{
t8=t7;
f_9496(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k9494 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9496,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9511,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9509 in k9494 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9503(2,t2,C_SCHEME_UNDEFINED);}}

/* k9501 in k9494 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9339(t5,t4);}

/* k9465 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9469 in k9465 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9339(t7,t6);}

/* k9430 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9436(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9434 in k9430 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9339(t7,t6);}

/* k9395 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9401(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9399 in k9395 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9339(t7,t6);}

/* k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9339(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9339,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9342,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9342(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k9343 in k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9345,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9351,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9368,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[199],"next-in-palindrome"),t5);}

/* a9367 in k9343 in k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9368(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9368,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9376,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k9374 in a9367 in k9343 in k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9349 in k9343 in k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9354,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[196],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 363  pattern-cache-set!");
f_8024(t2,((C_word*)t0)[4],t5);}

/* k9352 in k9349 in k9343 in k9340 in k9337 in k9334 in k9331 in k9328 in make-palindrome in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9246(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9246,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[196]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9237(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9237,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[196]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9165(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9165,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9169,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t3,t2);}

/* k9167 in next-in-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9172,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_9172(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_9172(t4,C_SCHEME_UNDEFINED);}}

/* k9170 in k9167 in next-in-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_9172(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8910(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_8910r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8910r(t0,t1,t2,t3);}}

static void C_ccall f_8910r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8914,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_8914(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_8914(t8,t7);}}

/* k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8914,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8917,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_8917(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[193]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9071,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 363  error");
t18=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[21],lf[193]);}
else{
t18=t17;
f_9071(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[194]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9106,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[21],lf[194]);}
else{
t19=t18;
f_9106(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9135,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 363  error");
t19=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[12],((C_word*)t0)[4]);}
else{
t19=t18;
f_9135(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k9133 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9135,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9150,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9148 in k9133 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9142(2,t2,C_SCHEME_UNDEFINED);}}

/* k9140 in k9133 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8917(t5,t4);}

/* k9104 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9110(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9108 in k9104 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8917(t7,t6);}

/* k9069 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9073 in k9069 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8917(t7,t6);}

/* k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8917,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8920,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8920(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[193]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8971,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 363  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[21],lf[193]);}
else{
t6=t5;
f_8971(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[194]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9006,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[21],lf[194]);}
else{
t7=t6;
f_9006(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9035,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 363  error");
t7=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[12],((C_word*)t0)[5]);}
else{
t7=t6;
f_9035(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9033 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9035,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9050,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9048 in k9033 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[16],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9042(2,t2,C_SCHEME_UNDEFINED);}}

/* k9040 in k9033 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8920(t5,t4);}

/* k9004 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_9010(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9008 in k9004 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_9010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8920(t7,t6);}

/* k8969 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 363  error");
t4=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[23],((C_word*)t0)[2]);}
else{
t4=t2;
f_8975(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8973 in k8969 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8920(t7,t6);}

/* k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8920(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8920,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8923,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8923(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 363  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[7],((C_word*)t0)[2]);}}

/* k8921 in k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  %alloc-pattern");
f_8088(t2);}

/* k8924 in k8921 in k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8926,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8932,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8938,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  initialize-pattern");
f_8098(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[192],"next-in-cycle"),t5);}

/* a8937 in k8924 in k8921 in k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8938,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8950,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data");
f_7817(t4,t3);}

/* k8948 in a8937 in k8924 in k8921 in k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[191]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8930 in k8924 in k8921 in k8918 in k8915 in k8912 in make-cycle in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8795(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8795,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8908,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t2);}

/* k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8908,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8805,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8808,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8893,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-stream");
f_7685(t7,t1);}

/* k8891 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8893,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8904,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  period-stream");
f_7685(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_8808(2,t2,C_SCHEME_UNDEFINED);}}

/* k8902 in k8891 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(((C_word*)t0)[2],t1);}

/* k8898 in k8891 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[143]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t4=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_7667(t2,((C_word*)t0)[3]);}

/* k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8890,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8816,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[143]);
t7=t4;
f_8816(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 363  period-length");
f_7667(t4,((C_word*)t0)[3]);}}

/* k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8816,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8819,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8825,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8880,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_7799(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_8825(2,t5,C_SCHEME_FALSE);}}

/* k8878 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(((C_word*)t0)[2],t1,C_fix(8));}

/* k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8825,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8844,a[2]=t3,a[3]=((C_word)li121),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  map-pattern-data");
f_8749(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_8819(t2,C_SCHEME_UNDEFINED);}}

/* a8843 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8844(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8844,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8873,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  reset-period");
f_8795(t3,t2);}

/* k8871 in a8843 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8873,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k8852 in k8871 in a8843 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8869,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_7721(t3,t1);}

/* k8867 in k8852 in k8871 in a8843 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8869,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-omit-set!");
f_7712(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8855 in k8852 in k8871 in a8843 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8857,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k8826 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8828,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8838,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 363  max");
t4=*((C_word*)lf[189]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_8819(t2,C_SCHEME_UNDEFINED);}}

/* k8836 in k8826 in k8823 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8819(t3,t2);}

/* k8817 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8819,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8822,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k8820 in k8817 in k8814 in k8888 in k8806 in k8803 in k8906 in reset-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8749(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8749,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[153]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8740(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8740,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[153]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8439(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8439,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8446,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t2);}

/* k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8446,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 363  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  promise?");
t3=C_retrieve(lf[188]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k8733 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  force");
t2=C_retrieve(lf[187]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8449,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8452,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8720,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_7649(t5,t1);}

/* k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8720,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8712,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-reps");
f_7739(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_8452(2,t2,C_SCHEME_UNDEFINED);}}

/* k8710 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8712,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8704,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_7880(t5,((C_word*)t0)[4],lf[182]);}
else{
t5=((C_word*)t0)[2];
f_8675(t5,C_SCHEME_UNDEFINED);}}

/* k8702 in k8710 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_7898(t2,((C_word*)t0)[2],lf[180]);}

/* k8705 in k8702 in k8710 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t3=((C_word*)t0)[2];
f_8675(t3,t2);}

/* k8673 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8675(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8675,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_8681(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8698,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  reset-period");
f_8795(t4,((C_word*)t0)[2]);}}

/* k8696 in k8673 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_8681(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k8679 in k8673 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8681,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[168]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_7880(t3,((C_word*)t0)[2],lf[168]);}
else{
t2=((C_word*)t0)[3];
f_8452(2,t2,C_SCHEME_UNDEFINED);}}

/* k8683 in k8679 in k8673 in k8718 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_7898(((C_word*)t0)[3],((C_word*)t0)[2],lf[180]);}

/* k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8452,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-flags");
f_7799(t2,((C_word*)t0)[3]);}}

/* k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8458,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8464,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8550,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t10,t1,C_fix(1));}

/* k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8550,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8553,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8566,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_8740(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8573,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8662,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t3,((C_word*)t0)[2],C_fix(8));}}

/* k8660 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8662,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8669,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  period-length");
f_7667(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_8573(t2,C_SCHEME_FALSE);}}

/* k8667 in k8660 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_8573(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8573,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li117),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_8575(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8575(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8575,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8624,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li116),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8624(t9,t5);}}

/* do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8624,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_7853(t2,((C_word*)t0)[3]);}

/* k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8659,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[168]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8634,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8641,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8648,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_8740(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 363  next-in-pattern");
f_8740(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8793,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t2,t1);}

/* k8791 in k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8793,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-period");
f_7871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_8641(2,t2,((C_word*)t0)[2]);}}

/* k8766 in k8791 in k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8789,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_7721(t2,t1);}

/* k8787 in k8766 in k8791 in k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8789,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8777,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8785,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-omit");
f_7721(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_8641(2,t2,((C_word*)t0)[2]);}}

/* k8783 in k8787 in k8766 in k8791 in k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8785,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-omit-set!");
f_7712(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8775 in k8787 in k8766 in k8791 in k8646 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_8641(2,t2,lf[168]);}

/* k8639 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_7844(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8632 in k8657 in do794 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_8624(t2,((C_word*)t0)[2]);}

/* k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8622,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_7853(t3,((C_word*)t0)[3]);}

/* k8620 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(((C_word*)t0)[2],t1);}

/* k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8586,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8605,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8618,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_7853(t5,((C_word*)t0)[3]);}

/* k8616 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(((C_word*)t0)[2],t1);}

/* k8603 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8605,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8613,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_7853(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[180]);
t3=((C_word*)t0)[3];
f_8589(t3,t2);}}

/* k8611 in k8603 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-state");
f_7907(((C_word*)t0)[2],t1);}

/* k8607 in k8603 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8589(t3,t2);}

/* k8587 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8589(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8589,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8592,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[168]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_7844(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_8592(2,t5,t4);}}

/* k8590 in k8587 in k8584 in k8580 in do790 in k8571 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_8575(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8564 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_7844(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8551 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum");
f_7853(t3,((C_word*)t0)[2]);}

/* k8560 in k8551 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(((C_word*)t0)[2],t1);}

/* k8555 in k8551 in k8548 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[180]);
t4=((C_word*)t0)[2];
f_8464(2,t4,t3);}

/* k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8467,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[180]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8509,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8521,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_7649(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8544,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t5,((C_word*)t0)[2],C_fix(64));}}

/* k8542 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_7844(((C_word*)t0)[3],((C_word*)t0)[2],lf[168]);}
else{
t2=((C_word*)t0)[3];
f_8524(2,t2,C_SCHEME_UNDEFINED);}}

/* k8522 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t2,((C_word*)t0)[2],C_fix(16));}

/* k8528 in k8522 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8530,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_7649(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_8467(2,t2,C_SCHEME_UNDEFINED);}}

/* k8539 in k8528 in k8522 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8541,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8519 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8521,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 363  period-count-set!");
f_7640(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k8507 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-datum-set!");
f_7844(t2,((C_word*)t0)[2],lf[168]);}

/* k8510 in k8507 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_8467(2,t3,t2);}

/* k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8503,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  period-count");
f_7649(t3,((C_word*)t0)[2]);}

/* k8501 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8503,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[180]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  period-reps");
f_7739(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_8470(2,t3,t2);}}

/* k8496 in k8501 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8498,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[143]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k8468 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8483,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_8473(t3,C_SCHEME_UNDEFINED);}}

/* k8481 in k8468 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8473(t3,t2);}

/* k8471 in k8468 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8473,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state-set!");
f_7898(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8474 in k8471 in k8468 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value-set!");
f_7880(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k8477 in k8474 in k8471 in k8468 in k8465 in k8462 in k8456 in k8450 in k8447 in k8444 in next-1 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8316(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_8316r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_8316r(t0,t1,t2,t3);}}

static void C_ccall f_8316r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8337,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li113),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_8337(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8375,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t1,t2);}}

/* k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8375,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k8383 in k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8385,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8387,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li114),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_8387(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do766 in k8383 in k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8387(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8387,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[182]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8406,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8416,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  eop?");
t13=C_retrieve(lf[179]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k8414 in do766 in k8383 in k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8416,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_8406(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8421,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t2,((C_word*)t0)[2]);}}

/* k8419 in k8414 in do766 in k8383 in k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8406(t3,t2);}

/* k8404 in do766 in k8383 in k8373 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8387(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do759 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8337(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8337,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8369,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 363  next-1");
f_8439(t4,((C_word*)t0)[2]);}}

/* k8367 in do759 in next in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8369,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_8337(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8297(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8297,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8304,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t2);}

/* k8302 in eod? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8304,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8311,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-value");
t3=C_retrieve2(lf[162],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[182]));}}

/* k8309 in k8302 in eod? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  eod?");
t2=C_retrieve(lf[181]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8278(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8278,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8285,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t2);}

/* k8283 in eop? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8285,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8292,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 363  pattern-state");
f_7907(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[180]));}}

/* k8290 in k8283 in eop? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  eop?");
t2=C_retrieve(lf[179]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8098(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8098,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8102,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 363  pattern-data-set!");
f_7808(t12,t2,t3);}

/* k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8105,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8108,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8111,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8114,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8268,a[2]=t3,a[3]=((C_word)li109),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  map-pattern-data");
f_8749(t4,t5,((C_word*)t0)[7]);}

/* a8267 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8268(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8268,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8275,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  pattern?");
f_7784(t3,t2);}

/* k8273 in a8267 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_8117(t5,t4);}
else{
t3=t2;
f_8117(t3,C_SCHEME_UNDEFINED);}}

/* k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8117,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[169]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8123(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[176]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8123(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[177],t4);}}}

/* k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8123,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[170]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_8129(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[174]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_8129(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 363  error");
t8=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[175],t4);}}}

/* k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8192,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k8190 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8192,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[172]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8132(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 363  bitwise-test");
f_6133(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k8204 in k8190 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8206,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[173]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8132(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8132(t4,t3);}}

/* k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8132,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8135,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t8=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k8133 in k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8135,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8141,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_8141(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_8141(t8,t7);}}

/* k8139 in k8133 in k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8141,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8144,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8154,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 363  make-period");
f_7628(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 363  make-period");
f_7628(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k8152 in k8139 in k8133 in k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t4=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k8142 in k8139 in k8133 in k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8147,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t6=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k8145 in k8142 in k8139 in k8133 in k8130 in k8127 in k8121 in k8115 in k8112 in k8109 in k8106 in k8103 in k8100 in initialize-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_8147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 363  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8088(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8088,NULL,1,t1);}
t2=lf[168];
t3=lf[168];
t4=lf[168];
t5=lf[169];
t6=lf[170];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[153],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8033(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8033,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_8024(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8024,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7907(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7907,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7898(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7898,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_7889 in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7889(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7889,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7880(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7880,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7871(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7871,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7853(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7853,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7844(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7844,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7835(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7835,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7817(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7817,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7808(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7808,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[153]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7799(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7799,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[153]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7784(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7784,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[153]));}

/* period-reps in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7739(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7739,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[143]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7721(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7721,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[143]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7712(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7712,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[143]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7685(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7685,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[143]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7667(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7667,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[143]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7649(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7649,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[143]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7640(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7640,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[143]);
C_trace("ChickenBridge.scm: 363  ##sys#block-set!");
t5=*((C_word*)lf[145]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7628(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7628,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[143],t2,t3,t4,t5,t6,t7));}

/* hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7512(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7512,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7527,a[2]=t5,a[3]=t3,a[4]=((C_word)li84),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7527(t7,t1,t2,lf[141],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 362  tb:keynum->hertz");
f_6286(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7626,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k7624 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do474 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7527(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7527,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7540,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7557,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_7557(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_7557(t14,(C_word)C_i_listp(t13));}}}

/* k7555 in do474 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7557,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  hz");
t4=C_retrieve(lf[140]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7576,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k7574 in k7555 in do474 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7576,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_7540(t9,t8);}

/* k7559 in k7555 in do474 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7561,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7540(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7538 in do474 in hz in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7527(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7390,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7405,a[2]=t5,a[3]=t3,a[4]=((C_word)li82),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7405(t7,t1,t2,lf[139],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub229(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7510,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k7508 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do458 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7405(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7405,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7418,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7435,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_7435(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_7435(t14,(C_word)C_i_numberp(t13));}}}

/* k7433 in do458 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7435,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7439,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  key");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7454,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k7452 in k7433 in do458 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7454,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_7418(t9,t8);}

/* k7437 in k7433 in do458 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7439,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7418(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7416 in do458 in key in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7405(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7293(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7293,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7308,a[2]=t5,a[3]=t3,a[4]=((C_word)li80),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7308(t7,t1,t2,lf[137],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7388,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k7386 in note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do444 in note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7308(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7308,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7321,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7339,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  note");
t13=C_retrieve(lf[136]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7354,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  note-aux");
f_7240(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k7352 in do444 in note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7354,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_7321(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k7337 in do444 in note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7339,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_7321(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k7319 in do444 in note in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7321(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_7308(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7240(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7240,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7194,a[2]=t6,a[3]=t7,a[4]=((C_word)li77),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t9=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[123],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7204,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  floor");
t9=*((C_word*)lf[134]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7263,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7142(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7278,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 362  keyword?");
t6=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k7276 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7278,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  keyword->string");
t3=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[135],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k7283 in k7276 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7142(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7261 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 362  string->note-entry");
f_7142(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7202 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7204,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,lf[131]))){
t4=t3;
f_7214(t4,t1);}
else{
t4=(C_word)C_i_lessp(t2,lf[132]);
t5=t3;
f_7214(t5,(C_truep(t4)?(C_word)C_a_i_plus(&a,2,t1,lf[133]):(C_word)C_a_i_plus(&a,2,t1,C_fix(1))));}}

/* k7212 in k7202 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7214(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7214,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li78),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[123],"*notes*"),t1,t2);}

/* a7215 in k7212 in k7202 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7216,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[130],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a7193 in note-aux in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7194,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[129],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_7142(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7142,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7146,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7179,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t7=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[123],"*notes*"),t2,t6);}

/* a7178 in string->note-entry in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7179,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k7144 in string->note-entry in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7146,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7162,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  string-append");
t4=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[127],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k7160 in k7144 in string->note-entry in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li74),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  hash-table-ref");
t3=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[123],"*notes*"),t1,t2);}

/* a7163 in k7160 in k7144 in string->note-entry in k7138 in k7135 in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7164,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 362  error");
t2=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[125],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* ranpink in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7129,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub299(t2));}

/* ranbrown in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7123,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub302(t2));}

/* rangamma in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7104(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7104r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7104r(t0,t1,t2);}}

static void C_ccall f_7104r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 362  tb:rangamma");
f_6384(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:rangamma");
f_6384(t1,t3);}}

/* ranpoisson in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7085(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7085r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7085r(t0,t1,t2);}}

static void C_ccall f_7085r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[119])))){
C_trace("ChickenBridge.scm: 362  tb:ranpoisson");
f_6394(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:ranpoisson");
f_6394(t1,t3);}}

/* rancauchy in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7079,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub292(t2));}

/* rangauss in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7039(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7039r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7039r(t0,t1,t2);}}

static void C_ccall f_7039r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6355(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6355(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 362  tb:rangauss");
f_6355(t1,t4,t5);}}}

/* ranexp in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_7020(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7020r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7020r(t0,t1,t2);}}

static void C_ccall f_7020r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 362  tb:ranexp");
f_6366(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:ranexp");
f_6366(t1,t3);}}

/* ranbeta in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6976r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6976r(t0,t1,t2);}}

static void C_ccall f_6976r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  tb:ranbeta");
f_6373(t1,lf[113],lf[114]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  tb:ranbeta");
f_6373(t1,t4,t5);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 362  tb:ranbeta");
f_6373(t1,t4,t5);}}}

/* ranmiddle in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6970,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub265(t2));}

/* ranhigh in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6964,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub262(t2));}

/* ranlow in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6958,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub259(t2));}

/* pick in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6952r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6952r(t0,t1,t2);}}

static void C_ccall f_6952r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 362  pickl");
t3=C_retrieve(lf[106]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,t2);}

/* pickl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6929,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  error");
t3=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[107],t2);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6946,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 362  tb:rani");
f_6310(t3,t4);}}

/* k6944 in pickl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* odds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6871(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_6871r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6871r(t0,t1,t2,t3);}}

static void C_ccall f_6871r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(14);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6888,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6317(t4,lf[103]);}
else{
t4=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6907,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6317(t5,lf[104]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6923,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6317(t5,lf[105]);}}}

/* k6921 in odds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):(C_word)C_i_cadr(((C_word*)t0)[2])));}

/* k6905 in odds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):C_SCHEME_FALSE));}

/* k6886 in odds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* between in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6865,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 362  ran");
t4=C_retrieve(lf[99]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* ran in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6777(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6777r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6777r(t0,t1,t2);}}

static void C_ccall f_6777r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6317(t1,lf[100]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  tb:rani");
f_6310(t1,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 362  tb:ranf");
f_6317(t1,t5);}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6823,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t5))){
t6=(C_word)C_i_cadr(t2);
t7=t4;
f_6823(t7,(C_word)C_fixnump(t6));}
else{
t6=t4;
f_6823(t6,C_SCHEME_FALSE);}}}}

/* k6821 in ran in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6823,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t4;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub248(C_SCHEME_UNDEFINED,t5,t6));}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub254(t5,t6,t7));}}

/* ran-set! in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6771(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6771,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub234(C_SCHEME_UNDEFINED,t2));}

/* steps in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6712(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6712r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6712r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6712r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(12);
t5=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t6=(C_word)C_block_size(t4);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6725,a[2]=t5,a[3]=t8,a[4]=t4,a[5]=t2,a[6]=((C_word)li55),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_6725(t10,t1,C_fix(0),t3,t6,t5);}

/* do367 in steps in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6725,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6761,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 362  modulo");
t13=*((C_word*)lf[97]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k6759 in do367 in steps in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6761,2,t0,t1);}
t2=(C_word)C_i_vector_ref(((C_word*)t0)[8],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_6725(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6706(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6706r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6706r(t0,t1,t2,t3);}}

static void C_ccall f_6706r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 362  interpl");
t4=C_retrieve(lf[90]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* interpl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6611(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_6611r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_6611r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6611r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6615,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 362  error");
t6=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[94],t3);}
else{
t6=t5;
f_6615(2,t6,(C_word)C_i_car(t3));}}

/* k6613 in interpl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6615,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 362  err");
t6=C_retrieve(lf[92]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[93],((C_word*)t0)[4]);}
else{
t6=t4;
f_6618(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k6616 in k6613 in interpl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6618,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6630,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li52),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_6630(t14,((C_word*)t0)[2],t10);}

/* do351 in k6616 in k6613 in interpl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6630(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6630,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6174(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6652,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 362  error");
t11=*((C_word*)lf[6]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[91],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_6652(2,t13,t12);}}}

/* k6650 in do351 in k6616 in k6613 in interpl in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6630(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6605,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub216(C_SCHEME_UNDEFINED,t3));}

/* cents->scaler in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6599(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6599,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub211(t3,t4));}

/* rhythm->seconds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6539(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_6539r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6539r(t0,t1,t2,t3);}}

static void C_ccall f_6539r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6541,a[2]=t2,a[3]=((C_word)li46),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6546,a[2]=t4,a[3]=((C_word)li47),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6551,a[2]=t5,a[3]=((C_word)li48),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-tempo327335");
t7=t6;
f_6551(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-beat328333");
t9=t5;
f_6546(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body325330");
t11=t4;
f_6541(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[87]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-tempo327 in rhythm->seconds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6551(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6551,NULL,2,t0,t1);}
C_trace("def-beat328333");
t2=((C_word*)t0)[2];
f_6546(t2,t1,lf[86]);}

/* def-beat328 in rhythm->seconds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6546(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6546,NULL,3,t0,t1,t2);}
C_trace("body325330");
t3=((C_word*)t0)[2];
f_6541(t3,t1,t2,lf[85]);}

/* body325 in rhythm->seconds in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6541(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6541,NULL,4,t0,t1,t2,t3);}
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub204(t5,t6,t7,t8));}

/* decimals in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6520(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6520r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6520r(t0,t1,t2,t3);}}

static void C_ccall f_6520r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 362  tb:decimals");
f_6235(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:decimals");
f_6235(t1,t2,t4);}}

/* quantize in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6514,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub196(t4,t5,t6));}

/* int in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6508(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6508,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub184(C_SCHEME_UNDEFINED,t3));}

/* discrete in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_6426r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6426r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6426r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6440,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6201(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6201(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6201(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6201(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 362  tb:discrete");
f_6201(t1,t2,t3,t4,t5,t8,t9);}}}

/* k6438 in discrete in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr7rv,(void*)f_6407r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest_vector(a,C_rest_count(0));
f_6407r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6407r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
if(C_truep((C_word)C_vemptyp(t7))){
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6174(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_vector_ref(t7,C_fix(0));
C_trace("ChickenBridge.scm: 362  tb:rescale");
f_6174(t1,t2,t3,t4,t5,t6,t8);}}

/* tb:ranpoisson in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6394(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6394,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub296(C_SCHEME_UNDEFINED,t3));}

/* tb:rangamma in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6384(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6384,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub288(t3,t4));}

/* tb:ranbeta in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6373(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6373,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub282(t4,t5,t6));}

/* tb:ranexp in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6366(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6366,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub276(t3,t4));}

/* tb:rangauss in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6355(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6355,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub270(t4,t5,t6));}

/* tb:ranf in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6317(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6317,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub242(t3,t4));}

/* tb:rani in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6310(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6310,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub238(C_SCHEME_UNDEFINED,t3));}

/* tb:keynum->hertz in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6286(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6286,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub220(t3,t4));}

/* tb:decimals in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6235(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6235,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub189(t4,t5,t6));}

/* tb:discrete in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6201(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6201,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub175(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6174(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6174,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub160(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6133(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6133,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6139,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li28),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6139(t9,t1,C_SCHEME_FALSE);}

/* do128 in bitwise-test in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6139(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6139,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6149,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6149(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6149(t7,t6);}}
else{
t5=t4;
f_6149(t5,C_SCHEME_UNDEFINED);}}}

/* k6147 in do128 in bitwise-test in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_6149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6149,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6139(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_6047(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6047r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6047r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6047r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[66],"list-prop"),t7,t3,t4);}}}

/* list-set! in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5989(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5989,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5949(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_5949r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_5949r(t0,t1,t2);}}

static void C_ccall f_5949r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 361  error");
t3=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[64]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5979,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[63]),t6);}}}

/* k5977 in list* in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5979,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5901(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5901,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5935,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 361  butlast");
t8=C_retrieve(lf[62]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k5933 in butlast in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5935,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5878(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5878,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 361  last");
t5=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* tenth in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5858(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5858,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5844(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5844,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5834(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5834,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5824(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5824,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5814(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5814,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5804(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5804,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5771(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5771r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5771r(t0,t1,t2);}}

static void C_ccall f_5771r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[47]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5780,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5780 in chdir in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5780(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5780,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5785,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5785(2,t4,C_SCHEME_FALSE);}}

/* k5783 */
static void C_ccall f_5785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5765,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5765 in cwd in k5756 in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5765,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[45]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5467,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5747,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5736,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5745,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5477,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 267  symbol->string");
t11=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5477(2,t11,t2);}}

/* k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5480,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5728,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 268  hash-table-ref");
t4=*((C_word*)lf[43]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[31]),t1,t3);}

/* a5727 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5728,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5483(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 269  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[42],((C_word*)t0)[3]);}}

/* k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5483,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5498,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5498(t10,(C_word)C_eqp(t9,lf[41]));}
else{
t9=t8;
f_5498(t9,C_SCHEME_FALSE);}}

/* k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5498,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5508,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 283  append");
t3=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5508,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5510(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5510(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5510,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5522,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5522(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5563,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5569(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 298  keyword?");
t13=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5569,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5563(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5623,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5696,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 319  keyword?");
t11=C_retrieve(lf[15]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5579,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 309  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[40],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5579(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5577 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5579,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5563(t9,t8);}

/* k5694 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5696,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5669,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 324  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5623(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5682,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5684,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 320  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[39],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5683 in k5694 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5684(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5684,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 328  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5680 in k5694 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 326  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[38],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5667 in k5694 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 323  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[37],((C_word*)t0)[2],t1);}

/* k5621 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5623,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5629,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5629(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5650,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 335  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5648 in k5621 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[36],((C_word*)t0)[2],t1);}

/* k5627 in k5621 in k5567 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5563(t6,t5);}

/* k5561 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5510(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5522(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5522,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5535,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5535(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5535(t5,C_SCHEME_UNDEFINED);}}}

/* k5533 in do69 in do63 in k5506 in k5496 in k5481 in k5478 in k5475 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_fcall f_5535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5522(t3,((C_word*)t0)[2],t2);}

/* f_5745 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5745(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5745,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5736 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5736(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5736,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5744,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  keyword->string");
t4=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5742 */
static void C_ccall f_5744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  sprintf");
t2=C_retrieve(lf[33]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[34],t1);}

/* f_5747 in expand-send in k5463 in k5460 in k5456 in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5747(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5747r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5747r(t0,t1,t2,t3);}}

static void C_ccall f_5747r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5755,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[33]),t2,t3);}

/* k5753 */
static void C_ccall f_5755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 261  error");
t2=*((C_word*)lf[6]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5169(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5169,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5330,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5422,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5421 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5422(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5422,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5436,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5440,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 213  symbol->string");
t6=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5451,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5455,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 214  symbol->string");
t5=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5453 in a5421 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 214  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5449 in a5421 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5451,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5438 in a5421 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 213  gensym");
t2=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5434 in a5421 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5436,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5333,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 216  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[30]);}

/* k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 217  gensym");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[29]);}

/* k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5339,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5416,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5415 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5416(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5416,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5182,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5241,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 177  symbol->string");
t10=*((C_word*)lf[27]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5239 in a5415 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 177  string->keyword");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5180 in a5415 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5182,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[21],t1);
t4=(C_word)C_a_i_list(&a,3,lf[22],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[17],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[5],t5);
t7=(C_word)C_a_i_list(&a,3,lf[6],lf[23],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[24],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[22],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[25],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[14],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5346,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[17]+1),((C_word*)t0)[2]);}

/* k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5392,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5406,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5405 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5406(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5406,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5390 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5392,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 223  append");
t5=*((C_word*)lf[20]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5356 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5362,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5366,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[19]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5383 in k5356 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5384(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5384,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[5],t4);
t8=(C_word)C_a_i_list(&a,2,lf[10],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5319,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[6],lf[12],t5);
t13=(C_word)C_a_i_list(&a,3,lf[13],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[10],t4);
t15=(C_word)C_a_i_list(&a,3,lf[14],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[15],t11);
t17=(C_word)C_a_i_list(&a,3,lf[6],lf[16],t11);
t18=(C_word)C_a_i_list(&a,3,lf[13],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[14],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[17],t4);
t21=(C_word)C_a_i_list(&a,3,lf[14],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[18],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5317 in a5383 in k5356 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5319,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[11],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[8],((C_word*)t0)[2],t3));}

/* k5364 in k5356 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5366,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[5],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[6],lf[7],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[8],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[9]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5360 in k5356 in k5344 in k5337 in k5334 in k5331 in k5328 in expand-optkeys in k5165 in k5162 in k5159 in k5156 */
static void C_ccall f_5362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5362,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[3],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[4],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2177] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5158ChickenBridge.scm",(void*)f_5158},
{"f_5161ChickenBridge.scm",(void*)f_5161},
{"f_5164ChickenBridge.scm",(void*)f_5164},
{"f_5167ChickenBridge.scm",(void*)f_5167},
{"f_32381ChickenBridge.scm",(void*)f_32381},
{"f_5458ChickenBridge.scm",(void*)f_5458},
{"f_5462ChickenBridge.scm",(void*)f_5462},
{"f_32329ChickenBridge.scm",(void*)f_32329},
{"f_32376ChickenBridge.scm",(void*)f_32376},
{"f_32366ChickenBridge.scm",(void*)f_32366},
{"f_32333ChickenBridge.scm",(void*)f_32333},
{"f_5465ChickenBridge.scm",(void*)f_5465},
{"f_32323ChickenBridge.scm",(void*)f_32323},
{"f_5758ChickenBridge.scm",(void*)f_5758},
{"f_7137ChickenBridge.scm",(void*)f_7137},
{"f_32107ChickenBridge.scm",(void*)f_32107},
{"f_32321ChickenBridge.scm",(void*)f_32321},
{"f_32141ChickenBridge.scm",(void*)f_32141},
{"f_32153ChickenBridge.scm",(void*)f_32153},
{"f_32157ChickenBridge.scm",(void*)f_32157},
{"f_32161ChickenBridge.scm",(void*)f_32161},
{"f_32305ChickenBridge.scm",(void*)f_32305},
{"f_32167ChickenBridge.scm",(void*)f_32167},
{"f_32187ChickenBridge.scm",(void*)f_32187},
{"f_32190ChickenBridge.scm",(void*)f_32190},
{"f_32198ChickenBridge.scm",(void*)f_32198},
{"f_32205ChickenBridge.scm",(void*)f_32205},
{"f_32208ChickenBridge.scm",(void*)f_32208},
{"f_32212ChickenBridge.scm",(void*)f_32212},
{"f_32219ChickenBridge.scm",(void*)f_32219},
{"f_32222ChickenBridge.scm",(void*)f_32222},
{"f_32226ChickenBridge.scm",(void*)f_32226},
{"f_32233ChickenBridge.scm",(void*)f_32233},
{"f_32177ChickenBridge.scm",(void*)f_32177},
{"f_32130ChickenBridge.scm",(void*)f_32130},
{"f_32120ChickenBridge.scm",(void*)f_32120},
{"f_32123ChickenBridge.scm",(void*)f_32123},
{"f_7140ChickenBridge.scm",(void*)f_7140},
{"f_32093ChickenBridge.scm",(void*)f_32093},
{"f_32101ChickenBridge.scm",(void*)f_32101},
{"f_32105ChickenBridge.scm",(void*)f_32105},
{"f_14383ChickenBridge.scm",(void*)f_14383},
{"f_14434ChickenBridge.scm",(void*)f_14434},
{"f_32083ChickenBridge.scm",(void*)f_32083},
{"f_32091ChickenBridge.scm",(void*)f_32091},
{"f_14539ChickenBridge.scm",(void*)f_14539},
{"f_31980ChickenBridge.scm",(void*)f_31980},
{"f_32043ChickenBridge.scm",(void*)f_32043},
{"f_32047ChickenBridge.scm",(void*)f_32047},
{"f_32061ChickenBridge.scm",(void*)f_32061},
{"f_31983ChickenBridge.scm",(void*)f_31983},
{"f_32003ChickenBridge.scm",(void*)f_32003},
{"f_32007ChickenBridge.scm",(void*)f_32007},
{"f_14542ChickenBridge.scm",(void*)f_14542},
{"f_31966ChickenBridge.scm",(void*)f_31966},
{"f_31974ChickenBridge.scm",(void*)f_31974},
{"f_31978ChickenBridge.scm",(void*)f_31978},
{"f_14735ChickenBridge.scm",(void*)f_14735},
{"f_31940ChickenBridge.scm",(void*)f_31940},
{"f_31944ChickenBridge.scm",(void*)f_31944},
{"f_31950ChickenBridge.scm",(void*)f_31950},
{"f_31961ChickenBridge.scm",(void*)f_31961},
{"f_31957ChickenBridge.scm",(void*)f_31957},
{"f_14804ChickenBridge.scm",(void*)f_14804},
{"f_31918ChickenBridge.scm",(void*)f_31918},
{"f_16049ChickenBridge.scm",(void*)f_16049},
{"f_31898ChickenBridge.scm",(void*)f_31898},
{"f_16052ChickenBridge.scm",(void*)f_16052},
{"f_31858ChickenBridge.scm",(void*)f_31858},
{"f_16055ChickenBridge.scm",(void*)f_16055},
{"f_31764ChickenBridge.scm",(void*)f_31764},
{"f_31768ChickenBridge.scm",(void*)f_31768},
{"f_31771ChickenBridge.scm",(void*)f_31771},
{"f_31789ChickenBridge.scm",(void*)f_31789},
{"f_31792ChickenBridge.scm",(void*)f_31792},
{"f_31823ChickenBridge.scm",(void*)f_31823},
{"f_31795ChickenBridge.scm",(void*)f_31795},
{"f_31801ChickenBridge.scm",(void*)f_31801},
{"f_31754ChickenBridge.scm",(void*)f_31754},
{"f_31748ChickenBridge.scm",(void*)f_31748},
{"f_16058ChickenBridge.scm",(void*)f_16058},
{"f_31656ChickenBridge.scm",(void*)f_31656},
{"f_31658ChickenBridge.scm",(void*)f_31658},
{"f_31662ChickenBridge.scm",(void*)f_31662},
{"f_31665ChickenBridge.scm",(void*)f_31665},
{"f_31668ChickenBridge.scm",(void*)f_31668},
{"f_31708ChickenBridge.scm",(void*)f_31708},
{"f_31700ChickenBridge.scm",(void*)f_31700},
{"f_31671ChickenBridge.scm",(void*)f_31671},
{"f_31674ChickenBridge.scm",(void*)f_31674},
{"f_31677ChickenBridge.scm",(void*)f_31677},
{"f_31648ChickenBridge.scm",(void*)f_31648},
{"f_16061ChickenBridge.scm",(void*)f_16061},
{"f_31620ChickenBridge.scm",(void*)f_31620},
{"f_16064ChickenBridge.scm",(void*)f_16064},
{"f_31584ChickenBridge.scm",(void*)f_31584},
{"f_31596ChickenBridge.scm",(void*)f_31596},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_31566ChickenBridge.scm",(void*)f_31566},
{"f_31560ChickenBridge.scm",(void*)f_31560},
{"f_16067ChickenBridge.scm",(void*)f_16067},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31478ChickenBridge.scm",(void*)f_31478},
{"f_31481ChickenBridge.scm",(void*)f_31481},
{"f_31484ChickenBridge.scm",(void*)f_31484},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31443ChickenBridge.scm",(void*)f_31443},
{"f_31447ChickenBridge.scm",(void*)f_31447},
{"f_31462ChickenBridge.scm",(void*)f_31462},
{"f_31437ChickenBridge.scm",(void*)f_31437},
{"f_16070ChickenBridge.scm",(void*)f_16070},
{"f_31323ChickenBridge.scm",(void*)f_31323},
{"f_31339ChickenBridge.scm",(void*)f_31339},
{"f_31350ChickenBridge.scm",(void*)f_31350},
{"f_31317ChickenBridge.scm",(void*)f_31317},
{"f_16126ChickenBridge.scm",(void*)f_16126},
{"f_31184ChickenBridge.scm",(void*)f_31184},
{"f_31207ChickenBridge.scm",(void*)f_31207},
{"f_31204ChickenBridge.scm",(void*)f_31204},
{"f_31178ChickenBridge.scm",(void*)f_31178},
{"f_16129ChickenBridge.scm",(void*)f_16129},
{"f_31032ChickenBridge.scm",(void*)f_31032},
{"f_31050ChickenBridge.scm",(void*)f_31050},
{"f_31059ChickenBridge.scm",(void*)f_31059},
{"f_31026ChickenBridge.scm",(void*)f_31026},
{"f_16132ChickenBridge.scm",(void*)f_16132},
{"f_30979ChickenBridge.scm",(void*)f_30979},
{"f_30983ChickenBridge.scm",(void*)f_30983},
{"f_30986ChickenBridge.scm",(void*)f_30986},
{"f_31002ChickenBridge.scm",(void*)f_31002},
{"f_30961ChickenBridge.scm",(void*)f_30961},
{"f_30955ChickenBridge.scm",(void*)f_30955},
{"f_16135ChickenBridge.scm",(void*)f_16135},
{"f_30879ChickenBridge.scm",(void*)f_30879},
{"f_16274ChickenBridge.scm",(void*)f_16274},
{"f_30805ChickenBridge.scm",(void*)f_30805},
{"f_30812ChickenBridge.scm",(void*)f_30812},
{"f_30799ChickenBridge.scm",(void*)f_30799},
{"f_16277ChickenBridge.scm",(void*)f_16277},
{"f_30695ChickenBridge.scm",(void*)f_30695},
{"f_30703ChickenBridge.scm",(void*)f_30703},
{"f_30669ChickenBridge.scm",(void*)f_30669},
{"f_30686ChickenBridge.scm",(void*)f_30686},
{"f_30677ChickenBridge.scm",(void*)f_30677},
{"f_30663ChickenBridge.scm",(void*)f_30663},
{"f_16280ChickenBridge.scm",(void*)f_16280},
{"f_30619ChickenBridge.scm",(void*)f_30619},
{"f_16283ChickenBridge.scm",(void*)f_16283},
{"f_30537ChickenBridge.scm",(void*)f_30537},
{"f_30548ChickenBridge.scm",(void*)f_30548},
{"f_30550ChickenBridge.scm",(void*)f_30550},
{"f_30579ChickenBridge.scm",(void*)f_30579},
{"f_30515ChickenBridge.scm",(void*)f_30515},
{"f_30531ChickenBridge.scm",(void*)f_30531},
{"f_30509ChickenBridge.scm",(void*)f_30509},
{"f_16286ChickenBridge.scm",(void*)f_16286},
{"f_30462ChickenBridge.scm",(void*)f_30462},
{"f_30466ChickenBridge.scm",(void*)f_30466},
{"f_30473ChickenBridge.scm",(void*)f_30473},
{"f_30440ChickenBridge.scm",(void*)f_30440},
{"f_30456ChickenBridge.scm",(void*)f_30456},
{"f_30434ChickenBridge.scm",(void*)f_30434},
{"f_16289ChickenBridge.scm",(void*)f_16289},
{"f_30302ChickenBridge.scm",(void*)f_30302},
{"f_30342ChickenBridge.scm",(void*)f_30342},
{"f_30306ChickenBridge.scm",(void*)f_30306},
{"f_30322ChickenBridge.scm",(void*)f_30322},
{"f_30334ChickenBridge.scm",(void*)f_30334},
{"f_30338ChickenBridge.scm",(void*)f_30338},
{"f_30330ChickenBridge.scm",(void*)f_30330},
{"f_30241ChickenBridge.scm",(void*)f_30241},
{"f_30288ChickenBridge.scm",(void*)f_30288},
{"f_30248ChickenBridge.scm",(void*)f_30248},
{"f_30259ChickenBridge.scm",(void*)f_30259},
{"f_30235ChickenBridge.scm",(void*)f_30235},
{"f_16292ChickenBridge.scm",(void*)f_16292},
{"f_30215ChickenBridge.scm",(void*)f_30215},
{"f_30209ChickenBridge.scm",(void*)f_30209},
{"f_16295ChickenBridge.scm",(void*)f_16295},
{"f_30189ChickenBridge.scm",(void*)f_30189},
{"f_30193ChickenBridge.scm",(void*)f_30193},
{"f_30181ChickenBridge.scm",(void*)f_30181},
{"f_16298ChickenBridge.scm",(void*)f_16298},
{"f_30161ChickenBridge.scm",(void*)f_30161},
{"f_30165ChickenBridge.scm",(void*)f_30165},
{"f_30153ChickenBridge.scm",(void*)f_30153},
{"f_16301ChickenBridge.scm",(void*)f_16301},
{"f_30133ChickenBridge.scm",(void*)f_30133},
{"f_30137ChickenBridge.scm",(void*)f_30137},
{"f_30125ChickenBridge.scm",(void*)f_30125},
{"f_16304ChickenBridge.scm",(void*)f_16304},
{"f_30105ChickenBridge.scm",(void*)f_30105},
{"f_30109ChickenBridge.scm",(void*)f_30109},
{"f_30097ChickenBridge.scm",(void*)f_30097},
{"f_16307ChickenBridge.scm",(void*)f_16307},
{"f_29996ChickenBridge.scm",(void*)f_29996},
{"f_29966ChickenBridge.scm",(void*)f_29966},
{"f_29990ChickenBridge.scm",(void*)f_29990},
{"f_29960ChickenBridge.scm",(void*)f_29960},
{"f_16310ChickenBridge.scm",(void*)f_16310},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29912ChickenBridge.scm",(void*)f_29912},
{"f_29916ChickenBridge.scm",(void*)f_29916},
{"f_29944ChickenBridge.scm",(void*)f_29944},
{"f_29936ChickenBridge.scm",(void*)f_29936},
{"f_29932ChickenBridge.scm",(void*)f_29932},
{"f_29919ChickenBridge.scm",(void*)f_29919},
{"f_29902ChickenBridge.scm",(void*)f_29902},
{"f_16313ChickenBridge.scm",(void*)f_16313},
{"f_29849ChickenBridge.scm",(void*)f_29849},
{"f_29851ChickenBridge.scm",(void*)f_29851},
{"f_29855ChickenBridge.scm",(void*)f_29855},
{"f_29886ChickenBridge.scm",(void*)f_29886},
{"f_29878ChickenBridge.scm",(void*)f_29878},
{"f_29874ChickenBridge.scm",(void*)f_29874},
{"f_29858ChickenBridge.scm",(void*)f_29858},
{"f_29861ChickenBridge.scm",(void*)f_29861},
{"f_29841ChickenBridge.scm",(void*)f_29841},
{"f_16316ChickenBridge.scm",(void*)f_16316},
{"f_29791ChickenBridge.scm",(void*)f_29791},
{"f_29805ChickenBridge.scm",(void*)f_29805},
{"f_29797ChickenBridge.scm",(void*)f_29797},
{"f_29756ChickenBridge.scm",(void*)f_29756},
{"f_29789ChickenBridge.scm",(void*)f_29789},
{"f_29750ChickenBridge.scm",(void*)f_29750},
{"f_16319ChickenBridge.scm",(void*)f_16319},
{"f_29697ChickenBridge.scm",(void*)f_29697},
{"f_29701ChickenBridge.scm",(void*)f_29701},
{"f_29714ChickenBridge.scm",(void*)f_29714},
{"f_29706ChickenBridge.scm",(void*)f_29706},
{"f_29654ChickenBridge.scm",(void*)f_29654},
{"f_29687ChickenBridge.scm",(void*)f_29687},
{"f_29648ChickenBridge.scm",(void*)f_29648},
{"f_16322ChickenBridge.scm",(void*)f_16322},
{"f_29568ChickenBridge.scm",(void*)f_29568},
{"f_29562ChickenBridge.scm",(void*)f_29562},
{"f_16325ChickenBridge.scm",(void*)f_16325},
{"f_29331ChickenBridge.scm",(void*)f_29331},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_29343ChickenBridge.scm",(void*)f_29343},
{"f_29366ChickenBridge.scm",(void*)f_29366},
{"f_29369ChickenBridge.scm",(void*)f_29369},
{"f_29372ChickenBridge.scm",(void*)f_29372},
{"f_29375ChickenBridge.scm",(void*)f_29375},
{"f_29435ChickenBridge.scm",(void*)f_29435},
{"f_29442ChickenBridge.scm",(void*)f_29442},
{"f_29452ChickenBridge.scm",(void*)f_29452},
{"f_29462ChickenBridge.scm",(void*)f_29462},
{"f_29476ChickenBridge.scm",(void*)f_29476},
{"f_29486ChickenBridge.scm",(void*)f_29486},
{"f_29496ChickenBridge.scm",(void*)f_29496},
{"f_29506ChickenBridge.scm",(void*)f_29506},
{"f_29378ChickenBridge.scm",(void*)f_29378},
{"f_29402ChickenBridge.scm",(void*)f_29402},
{"f_29381ChickenBridge.scm",(void*)f_29381},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29321ChickenBridge.scm",(void*)f_29321},
{"f_29282ChickenBridge.scm",(void*)f_29282},
{"f_16328ChickenBridge.scm",(void*)f_16328},
{"f_29200ChickenBridge.scm",(void*)f_29200},
{"f_29204ChickenBridge.scm",(void*)f_29204},
{"f_29210ChickenBridge.scm",(void*)f_29210},
{"f_29230ChickenBridge.scm",(void*)f_29230},
{"f_29174ChickenBridge.scm",(void*)f_29174},
{"f_29184ChickenBridge.scm",(void*)f_29184},
{"f_29168ChickenBridge.scm",(void*)f_29168},
{"f_16331ChickenBridge.scm",(void*)f_16331},
{"f_29045ChickenBridge.scm",(void*)f_29045},
{"f_29049ChickenBridge.scm",(void*)f_29049},
{"f_28977ChickenBridge.scm",(void*)f_28977},
{"f_28996ChickenBridge.scm",(void*)f_28996},
{"f_29031ChickenBridge.scm",(void*)f_29031},
{"f_29002ChickenBridge.scm",(void*)f_29002},
{"f_29006ChickenBridge.scm",(void*)f_29006},
{"f_29020ChickenBridge.scm",(void*)f_29020},
{"f_29009ChickenBridge.scm",(void*)f_29009},
{"f_28990ChickenBridge.scm",(void*)f_28990},
{"f_28971ChickenBridge.scm",(void*)f_28971},
{"f_16334ChickenBridge.scm",(void*)f_16334},
{"f_28699ChickenBridge.scm",(void*)f_28699},
{"f_16857ChickenBridge.scm",(void*)f_16857},
{"f_28651ChickenBridge.scm",(void*)f_28651},
{"f_28643ChickenBridge.scm",(void*)f_28643},
{"f_16860ChickenBridge.scm",(void*)f_16860},
{"f_28523ChickenBridge.scm",(void*)f_28523},
{"f_16866ChickenBridge.scm",(void*)f_16866},
{"f_17341ChickenBridge.scm",(void*)f_17341},
{"f_17375ChickenBridge.scm",(void*)f_17375},
{"f_17367ChickenBridge.scm",(void*)f_17367},
{"f_17363ChickenBridge.scm",(void*)f_17363},
{"f_17348ChickenBridge.scm",(void*)f_17348},
{"f_17352ChickenBridge.scm",(void*)f_17352},
{"f_17345ChickenBridge.scm",(void*)f_17345},
{"f_16884ChickenBridge.scm",(void*)f_16884},
{"f_17334ChickenBridge.scm",(void*)f_17334},
{"f_17330ChickenBridge.scm",(void*)f_17330},
{"f_16891ChickenBridge.scm",(void*)f_16891},
{"f_17205ChickenBridge.scm",(void*)f_17205},
{"f_17226ChickenBridge.scm",(void*)f_17226},
{"f_17228ChickenBridge.scm",(void*)f_17228},
{"f_17242ChickenBridge.scm",(void*)f_17242},
{"f_17295ChickenBridge.scm",(void*)f_17295},
{"f_17245ChickenBridge.scm",(void*)f_17245},
{"f_17280ChickenBridge.scm",(void*)f_17280},
{"f_17248ChickenBridge.scm",(void*)f_17248},
{"f_17261ChickenBridge.scm",(void*)f_17261},
{"f_17273ChickenBridge.scm",(void*)f_17273},
{"f_17265ChickenBridge.scm",(void*)f_17265},
{"f_17251ChickenBridge.scm",(void*)f_17251},
{"f_17215ChickenBridge.scm",(void*)f_17215},
{"f_16894ChickenBridge.scm",(void*)f_16894},
{"f_17169ChickenBridge.scm",(void*)f_17169},
{"f_17195ChickenBridge.scm",(void*)f_17195},
{"f_17180ChickenBridge.scm",(void*)f_17180},
{"f_16897ChickenBridge.scm",(void*)f_16897},
{"f_16901ChickenBridge.scm",(void*)f_16901},
{"f_17113ChickenBridge.scm",(void*)f_17113},
{"f_17123ChickenBridge.scm",(void*)f_17123},
{"f_17126ChickenBridge.scm",(void*)f_17126},
{"f_17147ChickenBridge.scm",(void*)f_17147},
{"f_17129ChickenBridge.scm",(void*)f_17129},
{"f_17133ChickenBridge.scm",(void*)f_17133},
{"f_16904ChickenBridge.scm",(void*)f_16904},
{"f_16907ChickenBridge.scm",(void*)f_16907},
{"f_17076ChickenBridge.scm",(void*)f_17076},
{"f_17084ChickenBridge.scm",(void*)f_17084},
{"f_17080ChickenBridge.scm",(void*)f_17080},
{"f_16910ChickenBridge.scm",(void*)f_16910},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_16941ChickenBridge.scm",(void*)f_16941},
{"f_16944ChickenBridge.scm",(void*)f_16944},
{"f_16947ChickenBridge.scm",(void*)f_16947},
{"f_16950ChickenBridge.scm",(void*)f_16950},
{"f_17009ChickenBridge.scm",(void*)f_17009},
{"f_28477ChickenBridge.scm",(void*)f_28477},
{"f_28493ChickenBridge.scm",(void*)f_28493},
{"f_28496ChickenBridge.scm",(void*)f_28496},
{"f_28499ChickenBridge.scm",(void*)f_28499},
{"f_28502ChickenBridge.scm",(void*)f_28502},
{"f_28513ChickenBridge.scm",(void*)f_28513},
{"f_28471ChickenBridge.scm",(void*)f_28471},
{"f_17382ChickenBridge.scm",(void*)f_17382},
{"f_28332ChickenBridge.scm",(void*)f_28332},
{"f_28371ChickenBridge.scm",(void*)f_28371},
{"f_28345ChickenBridge.scm",(void*)f_28345},
{"f_28326ChickenBridge.scm",(void*)f_28326},
{"f_17385ChickenBridge.scm",(void*)f_17385},
{"f_27914ChickenBridge.scm",(void*)f_27914},
{"f_27918ChickenBridge.scm",(void*)f_27918},
{"f_27930ChickenBridge.scm",(void*)f_27930},
{"f_27988ChickenBridge.scm",(void*)f_27988},
{"f_27991ChickenBridge.scm",(void*)f_27991},
{"f_27994ChickenBridge.scm",(void*)f_27994},
{"f_28206ChickenBridge.scm",(void*)f_28206},
{"f_28144ChickenBridge.scm",(void*)f_28144},
{"f_28178ChickenBridge.scm",(void*)f_28178},
{"f_28153ChickenBridge.scm",(void*)f_28153},
{"f_28164ChickenBridge.scm",(void*)f_28164},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_28003ChickenBridge.scm",(void*)f_28003},
{"f_28081ChickenBridge.scm",(void*)f_28081},
{"f_28122ChickenBridge.scm",(void*)f_28122},
{"f_28126ChickenBridge.scm",(void*)f_28126},
{"f_28130ChickenBridge.scm",(void*)f_28130},
{"f_28085ChickenBridge.scm",(void*)f_28085},
{"f_28089ChickenBridge.scm",(void*)f_28089},
{"f_28116ChickenBridge.scm",(void*)f_28116},
{"f_28092ChickenBridge.scm",(void*)f_28092},
{"f_28006ChickenBridge.scm",(void*)f_28006},
{"f_28078ChickenBridge.scm",(void*)f_28078},
{"f_28020ChickenBridge.scm",(void*)f_28020},
{"f_28022ChickenBridge.scm",(void*)f_28022},
{"f_28070ChickenBridge.scm",(void*)f_28070},
{"f_28041ChickenBridge.scm",(void*)f_28041},
{"f_28058ChickenBridge.scm",(void*)f_28058},
{"f_28044ChickenBridge.scm",(void*)f_28044},
{"f_28037ChickenBridge.scm",(void*)f_28037},
{"f_28009ChickenBridge.scm",(void*)f_28009},
{"f_27939ChickenBridge.scm",(void*)f_27939},
{"f_27949ChickenBridge.scm",(void*)f_27949},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27927ChickenBridge.scm",(void*)f_27927},
{"f_27875ChickenBridge.scm",(void*)f_27875},
{"f_27892ChickenBridge.scm",(void*)f_27892},
{"f_27908ChickenBridge.scm",(void*)f_27908},
{"f_27886ChickenBridge.scm",(void*)f_27886},
{"f_27869ChickenBridge.scm",(void*)f_27869},
{"f_17388ChickenBridge.scm",(void*)f_17388},
{"f_27793ChickenBridge.scm",(void*)f_27793},
{"f_17391ChickenBridge.scm",(void*)f_17391},
{"f_27769ChickenBridge.scm",(void*)f_27769},
{"f_27781ChickenBridge.scm",(void*)f_27781},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27755ChickenBridge.scm",(void*)f_27755},
{"f_27763ChickenBridge.scm",(void*)f_27763},
{"f_27749ChickenBridge.scm",(void*)f_27749},
{"f_17394ChickenBridge.scm",(void*)f_17394},
{"f_27741ChickenBridge.scm",(void*)f_27741},
{"f_21184ChickenBridge.scm",(void*)f_21184},
{"f_21187ChickenBridge.scm",(void*)f_21187},
{"f_21353ChickenBridge.scm",(void*)f_21353},
{"f_21349ChickenBridge.scm",(void*)f_21349},
{"f_21339ChickenBridge.scm",(void*)f_21339},
{"f_21194ChickenBridge.scm",(void*)f_21194},
{"f_21198ChickenBridge.scm",(void*)f_21198},
{"f_21201ChickenBridge.scm",(void*)f_21201},
{"f_21212ChickenBridge.scm",(void*)f_21212},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21292ChickenBridge.scm",(void*)f_21292},
{"f_21300ChickenBridge.scm",(void*)f_21300},
{"f_21296ChickenBridge.scm",(void*)f_21296},
{"f_21288ChickenBridge.scm",(void*)f_21288},
{"f_21284ChickenBridge.scm",(void*)f_21284},
{"f_21256ChickenBridge.scm",(void*)f_21256},
{"f_21252ChickenBridge.scm",(void*)f_21252},
{"f_21216ChickenBridge.scm",(void*)f_21216},
{"f_17831ChickenBridge.scm",(void*)f_17831},
{"f_27727ChickenBridge.scm",(void*)f_27727},
{"f_17834ChickenBridge.scm",(void*)f_17834},
{"f_27698ChickenBridge.scm",(void*)f_27698},
{"f_27702ChickenBridge.scm",(void*)f_27702},
{"f_17837ChickenBridge.scm",(void*)f_17837},
{"f_27695ChickenBridge.scm",(void*)f_27695},
{"f_17840ChickenBridge.scm",(void*)f_17840},
{"f_27553ChickenBridge.scm",(void*)f_27553},
{"f_21366ChickenBridge.scm",(void*)f_21366},
{"f_21498ChickenBridge.scm",(void*)f_21498},
{"f_21369ChickenBridge.scm",(void*)f_21369},
{"f_21380ChickenBridge.scm",(void*)f_21380},
{"f_21388ChickenBridge.scm",(void*)f_21388},
{"f_21412ChickenBridge.scm",(void*)f_21412},
{"f_21415ChickenBridge.scm",(void*)f_21415},
{"f_21423ChickenBridge.scm",(void*)f_21423},
{"f_21431ChickenBridge.scm",(void*)f_21431},
{"f_21451ChickenBridge.scm",(void*)f_21451},
{"f_21447ChickenBridge.scm",(void*)f_21447},
{"f_21427ChickenBridge.scm",(void*)f_21427},
{"f_21419ChickenBridge.scm",(void*)f_21419},
{"f_21408ChickenBridge.scm",(void*)f_21408},
{"f_21384ChickenBridge.scm",(void*)f_21384},
{"f_21360ChickenBridge.scm",(void*)f_21360},
{"f_26282ChickenBridge.scm",(void*)f_26282},
{"f_26285ChickenBridge.scm",(void*)f_26285},
{"f_26288ChickenBridge.scm",(void*)f_26288},
{"f_26291ChickenBridge.scm",(void*)f_26291},
{"f_26294ChickenBridge.scm",(void*)f_26294},
{"f_26297ChickenBridge.scm",(void*)f_26297},
{"f_26300ChickenBridge.scm",(void*)f_26300},
{"f_26303ChickenBridge.scm",(void*)f_26303},
{"f_26306ChickenBridge.scm",(void*)f_26306},
{"f_26309ChickenBridge.scm",(void*)f_26309},
{"f_26312ChickenBridge.scm",(void*)f_26312},
{"f_26437ChickenBridge.scm",(void*)f_26437},
{"f_26440ChickenBridge.scm",(void*)f_26440},
{"f_26443ChickenBridge.scm",(void*)f_26443},
{"f_27547ChickenBridge.scm",(void*)f_27547},
{"f_27101ChickenBridge.scm",(void*)f_27101},
{"f_27104ChickenBridge.scm",(void*)f_27104},
{"f_27382ChickenBridge.scm",(void*)f_27382},
{"f_27490ChickenBridge.scm",(void*)f_27490},
{"f_27402ChickenBridge.scm",(void*)f_27402},
{"f_27411ChickenBridge.scm",(void*)f_27411},
{"f_27415ChickenBridge.scm",(void*)f_27415},
{"f_27419ChickenBridge.scm",(void*)f_27419},
{"f_27427ChickenBridge.scm",(void*)f_27427},
{"f_27423ChickenBridge.scm",(void*)f_27423},
{"f_27392ChickenBridge.scm",(void*)f_27392},
{"f_27107ChickenBridge.scm",(void*)f_27107},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27113ChickenBridge.scm",(void*)f_27113},
{"f_27116ChickenBridge.scm",(void*)f_27116},
{"f_27119ChickenBridge.scm",(void*)f_27119},
{"f_27376ChickenBridge.scm",(void*)f_27376},
{"f_27275ChickenBridge.scm",(void*)f_27275},
{"f_27282ChickenBridge.scm",(void*)f_27282},
{"f_27284ChickenBridge.scm",(void*)f_27284},
{"f_27356ChickenBridge.scm",(void*)f_27356},
{"f_27308ChickenBridge.scm",(void*)f_27308},
{"f_27311ChickenBridge.scm",(void*)f_27311},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27298ChickenBridge.scm",(void*)f_27298},
{"f_27122ChickenBridge.scm",(void*)f_27122},
{"f_27264ChickenBridge.scm",(void*)f_27264},
{"f_27252ChickenBridge.scm",(void*)f_27252},
{"f_27248ChickenBridge.scm",(void*)f_27248},
{"f_27129ChickenBridge.scm",(void*)f_27129},
{"f_27086ChickenBridge.scm",(void*)f_27086},
{"f_27545ChickenBridge.scm",(void*)f_27545},
{"f_27076ChickenBridge.scm",(void*)f_27076},
{"f_26739ChickenBridge.scm",(void*)f_26739},
{"f_27080ChickenBridge.scm",(void*)f_27080},
{"f_27018ChickenBridge.scm",(void*)f_27018},
{"f_27036ChickenBridge.scm",(void*)f_27036},
{"f_27046ChickenBridge.scm",(void*)f_27046},
{"f_27022ChickenBridge.scm",(void*)f_27022},
{"f_27009ChickenBridge.scm",(void*)f_27009},
{"f_26717ChickenBridge.scm",(void*)f_26717},
{"f_27013ChickenBridge.scm",(void*)f_27013},
{"f_27003ChickenBridge.scm",(void*)f_27003},
{"f_26699ChickenBridge.scm",(void*)f_26699},
{"f_26994ChickenBridge.scm",(void*)f_26994},
{"f_26708ChickenBridge.scm",(void*)f_26708},
{"f_26998ChickenBridge.scm",(void*)f_26998},
{"f_26931ChickenBridge.scm",(void*)f_26931},
{"f_26956ChickenBridge.scm",(void*)f_26956},
{"f_26664ChickenBridge.scm",(void*)f_26664},
{"f_26944ChickenBridge.scm",(void*)f_26944},
{"f_26763ChickenBridge.scm",(void*)f_26763},
{"f_26882ChickenBridge.scm",(void*)f_26882},
{"f_26877ChickenBridge.scm",(void*)f_26877},
{"f_26765ChickenBridge.scm",(void*)f_26765},
{"f_26872ChickenBridge.scm",(void*)f_26872},
{"f_26876ChickenBridge.scm",(void*)f_26876},
{"f_26868ChickenBridge.scm",(void*)f_26868},
{"f_26836ChickenBridge.scm",(void*)f_26836},
{"f_26861ChickenBridge.scm",(void*)f_26861},
{"f_26865ChickenBridge.scm",(void*)f_26865},
{"f_26846ChickenBridge.scm",(void*)f_26846},
{"f_26825ChickenBridge.scm",(void*)f_26825},
{"f_26795ChickenBridge.scm",(void*)f_26795},
{"f_26767ChickenBridge.scm",(void*)f_26767},
{"f_26744ChickenBridge.scm",(void*)f_26744},
{"f_26749ChickenBridge.scm",(void*)f_26749},
{"f_26754ChickenBridge.scm",(void*)f_26754},
{"f_26722ChickenBridge.scm",(void*)f_26722},
{"f_26726ChickenBridge.scm",(void*)f_26726},
{"f_26678ChickenBridge.scm",(void*)f_26678},
{"f_26682ChickenBridge.scm",(void*)f_26682},
{"f_26669ChickenBridge.scm",(void*)f_26669},
{"f_26673ChickenBridge.scm",(void*)f_26673},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26654ChickenBridge.scm",(void*)f_26654},
{"f_26640ChickenBridge.scm",(void*)f_26640},
{"f_26645ChickenBridge.scm",(void*)f_26645},
{"f_26626ChickenBridge.scm",(void*)f_26626},
{"f_26631ChickenBridge.scm",(void*)f_26631},
{"f_26445ChickenBridge.scm",(void*)f_26445},
{"f_26506ChickenBridge.scm",(void*)f_26506},
{"f_26508ChickenBridge.scm",(void*)f_26508},
{"f_26534ChickenBridge.scm",(void*)f_26534},
{"f_26574ChickenBridge.scm",(void*)f_26574},
{"f_26616ChickenBridge.scm",(void*)f_26616},
{"f_26586ChickenBridge.scm",(void*)f_26586},
{"f_26571ChickenBridge.scm",(void*)f_26571},
{"f_26492ChickenBridge.scm",(void*)f_26492},
{"f_26457ChickenBridge.scm",(void*)f_26457},
{"f_26484ChickenBridge.scm",(void*)f_26484},
{"f_26465ChickenBridge.scm",(void*)f_26465},
{"f_26472ChickenBridge.scm",(void*)f_26472},
{"f_26476ChickenBridge.scm",(void*)f_26476},
{"f_26480ChickenBridge.scm",(void*)f_26480},
{"f_26554ChickenBridge.scm",(void*)f_26554},
{"f_26532ChickenBridge.scm",(void*)f_26532},
{"f_26518ChickenBridge.scm",(void*)f_26518},
{"f_26521ChickenBridge.scm",(void*)f_26521},
{"f_26499ChickenBridge.scm",(void*)f_26499},
{"f_26428ChickenBridge.scm",(void*)f_26428},
{"f_26433ChickenBridge.scm",(void*)f_26433},
{"f_26371ChickenBridge.scm",(void*)f_26371},
{"f_26404ChickenBridge.scm",(void*)f_26404},
{"f_26384ChickenBridge.scm",(void*)f_26384},
{"f_26392ChickenBridge.scm",(void*)f_26392},
{"f_26375ChickenBridge.scm",(void*)f_26375},
{"f_26314ChickenBridge.scm",(void*)f_26314},
{"f_26347ChickenBridge.scm",(void*)f_26347},
{"f_26327ChickenBridge.scm",(void*)f_26327},
{"f_26335ChickenBridge.scm",(void*)f_26335},
{"f_26318ChickenBridge.scm",(void*)f_26318},
{"f_26224ChickenBridge.scm",(void*)f_26224},
{"f_26278ChickenBridge.scm",(void*)f_26278},
{"f_26273ChickenBridge.scm",(void*)f_26273},
{"f_26236ChickenBridge.scm",(void*)f_26236},
{"f_26242ChickenBridge.scm",(void*)f_26242},
{"f_26268ChickenBridge.scm",(void*)f_26268},
{"f_26272ChickenBridge.scm",(void*)f_26272},
{"f_26248ChickenBridge.scm",(void*)f_26248},
{"f_26266ChickenBridge.scm",(void*)f_26266},
{"f_26263ChickenBridge.scm",(void*)f_26263},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26252ChickenBridge.scm",(void*)f_26252},
{"f_26209ChickenBridge.scm",(void*)f_26209},
{"f_26214ChickenBridge.scm",(void*)f_26214},
{"f_26181ChickenBridge.scm",(void*)f_26181},
{"f_26186ChickenBridge.scm",(void*)f_26186},
{"f_26153ChickenBridge.scm",(void*)f_26153},
{"f_26158ChickenBridge.scm",(void*)f_26158},
{"f_26125ChickenBridge.scm",(void*)f_26125},
{"f_26130ChickenBridge.scm",(void*)f_26130},
{"f_26097ChickenBridge.scm",(void*)f_26097},
{"f_26102ChickenBridge.scm",(void*)f_26102},
{"f_26069ChickenBridge.scm",(void*)f_26069},
{"f_26074ChickenBridge.scm",(void*)f_26074},
{"f_26041ChickenBridge.scm",(void*)f_26041},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26013ChickenBridge.scm",(void*)f_26013},
{"f_26018ChickenBridge.scm",(void*)f_26018},
{"f_25985ChickenBridge.scm",(void*)f_25985},
{"f_25990ChickenBridge.scm",(void*)f_25990},
{"f_25957ChickenBridge.scm",(void*)f_25957},
{"f_25962ChickenBridge.scm",(void*)f_25962},
{"f_25934ChickenBridge.scm",(void*)f_25934},
{"f_25939ChickenBridge.scm",(void*)f_25939},
{"f_25938ChickenBridge.scm",(void*)f_25938},
{"f_25915ChickenBridge.scm",(void*)f_25915},
{"f_25920ChickenBridge.scm",(void*)f_25920},
{"f_25860ChickenBridge.scm",(void*)f_25860},
{"f_25867ChickenBridge.scm",(void*)f_25867},
{"f_25870ChickenBridge.scm",(void*)f_25870},
{"f_25894ChickenBridge.scm",(void*)f_25894},
{"f_25874ChickenBridge.scm",(void*)f_25874},
{"f_25864ChickenBridge.scm",(void*)f_25864},
{"f_25813ChickenBridge.scm",(void*)f_25813},
{"f_25820ChickenBridge.scm",(void*)f_25820},
{"f_25823ChickenBridge.scm",(void*)f_25823},
{"f_25843ChickenBridge.scm",(void*)f_25843},
{"f_25827ChickenBridge.scm",(void*)f_25827},
{"f_25790ChickenBridge.scm",(void*)f_25790},
{"f_25795ChickenBridge.scm",(void*)f_25795},
{"f_25794ChickenBridge.scm",(void*)f_25794},
{"f_25771ChickenBridge.scm",(void*)f_25771},
{"f_25776ChickenBridge.scm",(void*)f_25776},
{"f_25748ChickenBridge.scm",(void*)f_25748},
{"f_25753ChickenBridge.scm",(void*)f_25753},
{"f_25752ChickenBridge.scm",(void*)f_25752},
{"f_25729ChickenBridge.scm",(void*)f_25729},
{"f_25734ChickenBridge.scm",(void*)f_25734},
{"f_25710ChickenBridge.scm",(void*)f_25710},
{"f_25715ChickenBridge.scm",(void*)f_25715},
{"f_25714ChickenBridge.scm",(void*)f_25714},
{"f_25695ChickenBridge.scm",(void*)f_25695},
{"f_25700ChickenBridge.scm",(void*)f_25700},
{"f_25676ChickenBridge.scm",(void*)f_25676},
{"f_25681ChickenBridge.scm",(void*)f_25681},
{"f_25680ChickenBridge.scm",(void*)f_25680},
{"f_25661ChickenBridge.scm",(void*)f_25661},
{"f_25666ChickenBridge.scm",(void*)f_25666},
{"f_25646ChickenBridge.scm",(void*)f_25646},
{"f_25651ChickenBridge.scm",(void*)f_25651},
{"f_25628ChickenBridge.scm",(void*)f_25628},
{"f_25636ChickenBridge.scm",(void*)f_25636},
{"f_25632ChickenBridge.scm",(void*)f_25632},
{"f_25158ChickenBridge.scm",(void*)f_25158},
{"f_25586ChickenBridge.scm",(void*)f_25586},
{"f_25601ChickenBridge.scm",(void*)f_25601},
{"f_25593ChickenBridge.scm",(void*)f_25593},
{"f_25557ChickenBridge.scm",(void*)f_25557},
{"f_25561ChickenBridge.scm",(void*)f_25561},
{"f_25522ChickenBridge.scm",(void*)f_25522},
{"f_25526ChickenBridge.scm",(void*)f_25526},
{"f_25487ChickenBridge.scm",(void*)f_25487},
{"f_25491ChickenBridge.scm",(void*)f_25491},
{"f_25162ChickenBridge.scm",(void*)f_25162},
{"f_25451ChickenBridge.scm",(void*)f_25451},
{"f_25466ChickenBridge.scm",(void*)f_25466},
{"f_25458ChickenBridge.scm",(void*)f_25458},
{"f_25422ChickenBridge.scm",(void*)f_25422},
{"f_25426ChickenBridge.scm",(void*)f_25426},
{"f_25387ChickenBridge.scm",(void*)f_25387},
{"f_25391ChickenBridge.scm",(void*)f_25391},
{"f_25352ChickenBridge.scm",(void*)f_25352},
{"f_25356ChickenBridge.scm",(void*)f_25356},
{"f_25165ChickenBridge.scm",(void*)f_25165},
{"f_25316ChickenBridge.scm",(void*)f_25316},
{"f_25331ChickenBridge.scm",(void*)f_25331},
{"f_25323ChickenBridge.scm",(void*)f_25323},
{"f_25287ChickenBridge.scm",(void*)f_25287},
{"f_25291ChickenBridge.scm",(void*)f_25291},
{"f_25252ChickenBridge.scm",(void*)f_25252},
{"f_25256ChickenBridge.scm",(void*)f_25256},
{"f_25217ChickenBridge.scm",(void*)f_25217},
{"f_25221ChickenBridge.scm",(void*)f_25221},
{"f_25168ChickenBridge.scm",(void*)f_25168},
{"f_25171ChickenBridge.scm",(void*)f_25171},
{"f_25175ChickenBridge.scm",(void*)f_25175},
{"f_25139ChickenBridge.scm",(void*)f_25139},
{"f_25144ChickenBridge.scm",(void*)f_25144},
{"f_24688ChickenBridge.scm",(void*)f_24688},
{"f_25116ChickenBridge.scm",(void*)f_25116},
{"f_25131ChickenBridge.scm",(void*)f_25131},
{"f_25123ChickenBridge.scm",(void*)f_25123},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_25052ChickenBridge.scm",(void*)f_25052},
{"f_25056ChickenBridge.scm",(void*)f_25056},
{"f_25017ChickenBridge.scm",(void*)f_25017},
{"f_25021ChickenBridge.scm",(void*)f_25021},
{"f_24692ChickenBridge.scm",(void*)f_24692},
{"f_24981ChickenBridge.scm",(void*)f_24981},
{"f_24996ChickenBridge.scm",(void*)f_24996},
{"f_24988ChickenBridge.scm",(void*)f_24988},
{"f_24952ChickenBridge.scm",(void*)f_24952},
{"f_24956ChickenBridge.scm",(void*)f_24956},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_24921ChickenBridge.scm",(void*)f_24921},
{"f_24882ChickenBridge.scm",(void*)f_24882},
{"f_24886ChickenBridge.scm",(void*)f_24886},
{"f_24695ChickenBridge.scm",(void*)f_24695},
{"f_24846ChickenBridge.scm",(void*)f_24846},
{"f_24861ChickenBridge.scm",(void*)f_24861},
{"f_24853ChickenBridge.scm",(void*)f_24853},
{"f_24817ChickenBridge.scm",(void*)f_24817},
{"f_24821ChickenBridge.scm",(void*)f_24821},
{"f_24782ChickenBridge.scm",(void*)f_24782},
{"f_24786ChickenBridge.scm",(void*)f_24786},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_24751ChickenBridge.scm",(void*)f_24751},
{"f_24698ChickenBridge.scm",(void*)f_24698},
{"f_24701ChickenBridge.scm",(void*)f_24701},
{"f_24705ChickenBridge.scm",(void*)f_24705},
{"f_24669ChickenBridge.scm",(void*)f_24669},
{"f_24674ChickenBridge.scm",(void*)f_24674},
{"f_24218ChickenBridge.scm",(void*)f_24218},
{"f_24646ChickenBridge.scm",(void*)f_24646},
{"f_24661ChickenBridge.scm",(void*)f_24661},
{"f_24653ChickenBridge.scm",(void*)f_24653},
{"f_24617ChickenBridge.scm",(void*)f_24617},
{"f_24621ChickenBridge.scm",(void*)f_24621},
{"f_24582ChickenBridge.scm",(void*)f_24582},
{"f_24586ChickenBridge.scm",(void*)f_24586},
{"f_24547ChickenBridge.scm",(void*)f_24547},
{"f_24551ChickenBridge.scm",(void*)f_24551},
{"f_24222ChickenBridge.scm",(void*)f_24222},
{"f_24511ChickenBridge.scm",(void*)f_24511},
{"f_24526ChickenBridge.scm",(void*)f_24526},
{"f_24518ChickenBridge.scm",(void*)f_24518},
{"f_24482ChickenBridge.scm",(void*)f_24482},
{"f_24486ChickenBridge.scm",(void*)f_24486},
{"f_24447ChickenBridge.scm",(void*)f_24447},
{"f_24451ChickenBridge.scm",(void*)f_24451},
{"f_24412ChickenBridge.scm",(void*)f_24412},
{"f_24416ChickenBridge.scm",(void*)f_24416},
{"f_24225ChickenBridge.scm",(void*)f_24225},
{"f_24376ChickenBridge.scm",(void*)f_24376},
{"f_24391ChickenBridge.scm",(void*)f_24391},
{"f_24383ChickenBridge.scm",(void*)f_24383},
{"f_24347ChickenBridge.scm",(void*)f_24347},
{"f_24351ChickenBridge.scm",(void*)f_24351},
{"f_24312ChickenBridge.scm",(void*)f_24312},
{"f_24316ChickenBridge.scm",(void*)f_24316},
{"f_24277ChickenBridge.scm",(void*)f_24277},
{"f_24281ChickenBridge.scm",(void*)f_24281},
{"f_24228ChickenBridge.scm",(void*)f_24228},
{"f_24231ChickenBridge.scm",(void*)f_24231},
{"f_24235ChickenBridge.scm",(void*)f_24235},
{"f_24199ChickenBridge.scm",(void*)f_24199},
{"f_24204ChickenBridge.scm",(void*)f_24204},
{"f_23470ChickenBridge.scm",(void*)f_23470},
{"f_24176ChickenBridge.scm",(void*)f_24176},
{"f_24191ChickenBridge.scm",(void*)f_24191},
{"f_24183ChickenBridge.scm",(void*)f_24183},
{"f_24147ChickenBridge.scm",(void*)f_24147},
{"f_24151ChickenBridge.scm",(void*)f_24151},
{"f_24112ChickenBridge.scm",(void*)f_24112},
{"f_24116ChickenBridge.scm",(void*)f_24116},
{"f_24077ChickenBridge.scm",(void*)f_24077},
{"f_24081ChickenBridge.scm",(void*)f_24081},
{"f_24042ChickenBridge.scm",(void*)f_24042},
{"f_24046ChickenBridge.scm",(void*)f_24046},
{"f_23474ChickenBridge.scm",(void*)f_23474},
{"f_24006ChickenBridge.scm",(void*)f_24006},
{"f_24021ChickenBridge.scm",(void*)f_24021},
{"f_24013ChickenBridge.scm",(void*)f_24013},
{"f_23977ChickenBridge.scm",(void*)f_23977},
{"f_23981ChickenBridge.scm",(void*)f_23981},
{"f_23942ChickenBridge.scm",(void*)f_23942},
{"f_23946ChickenBridge.scm",(void*)f_23946},
{"f_23907ChickenBridge.scm",(void*)f_23907},
{"f_23911ChickenBridge.scm",(void*)f_23911},
{"f_23872ChickenBridge.scm",(void*)f_23872},
{"f_23876ChickenBridge.scm",(void*)f_23876},
{"f_23477ChickenBridge.scm",(void*)f_23477},
{"f_23836ChickenBridge.scm",(void*)f_23836},
{"f_23851ChickenBridge.scm",(void*)f_23851},
{"f_23843ChickenBridge.scm",(void*)f_23843},
{"f_23807ChickenBridge.scm",(void*)f_23807},
{"f_23811ChickenBridge.scm",(void*)f_23811},
{"f_23772ChickenBridge.scm",(void*)f_23772},
{"f_23776ChickenBridge.scm",(void*)f_23776},
{"f_23737ChickenBridge.scm",(void*)f_23737},
{"f_23741ChickenBridge.scm",(void*)f_23741},
{"f_23702ChickenBridge.scm",(void*)f_23702},
{"f_23706ChickenBridge.scm",(void*)f_23706},
{"f_23480ChickenBridge.scm",(void*)f_23480},
{"f_23666ChickenBridge.scm",(void*)f_23666},
{"f_23681ChickenBridge.scm",(void*)f_23681},
{"f_23673ChickenBridge.scm",(void*)f_23673},
{"f_23637ChickenBridge.scm",(void*)f_23637},
{"f_23641ChickenBridge.scm",(void*)f_23641},
{"f_23602ChickenBridge.scm",(void*)f_23602},
{"f_23606ChickenBridge.scm",(void*)f_23606},
{"f_23567ChickenBridge.scm",(void*)f_23567},
{"f_23571ChickenBridge.scm",(void*)f_23571},
{"f_23532ChickenBridge.scm",(void*)f_23532},
{"f_23536ChickenBridge.scm",(void*)f_23536},
{"f_23483ChickenBridge.scm",(void*)f_23483},
{"f_23486ChickenBridge.scm",(void*)f_23486},
{"f_23490ChickenBridge.scm",(void*)f_23490},
{"f_23451ChickenBridge.scm",(void*)f_23451},
{"f_23456ChickenBridge.scm",(void*)f_23456},
{"f_22722ChickenBridge.scm",(void*)f_22722},
{"f_23428ChickenBridge.scm",(void*)f_23428},
{"f_23443ChickenBridge.scm",(void*)f_23443},
{"f_23435ChickenBridge.scm",(void*)f_23435},
{"f_23399ChickenBridge.scm",(void*)f_23399},
{"f_23403ChickenBridge.scm",(void*)f_23403},
{"f_23364ChickenBridge.scm",(void*)f_23364},
{"f_23368ChickenBridge.scm",(void*)f_23368},
{"f_23329ChickenBridge.scm",(void*)f_23329},
{"f_23333ChickenBridge.scm",(void*)f_23333},
{"f_23294ChickenBridge.scm",(void*)f_23294},
{"f_23298ChickenBridge.scm",(void*)f_23298},
{"f_22726ChickenBridge.scm",(void*)f_22726},
{"f_23258ChickenBridge.scm",(void*)f_23258},
{"f_23273ChickenBridge.scm",(void*)f_23273},
{"f_23265ChickenBridge.scm",(void*)f_23265},
{"f_23229ChickenBridge.scm",(void*)f_23229},
{"f_23233ChickenBridge.scm",(void*)f_23233},
{"f_23194ChickenBridge.scm",(void*)f_23194},
{"f_23198ChickenBridge.scm",(void*)f_23198},
{"f_23159ChickenBridge.scm",(void*)f_23159},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_23124ChickenBridge.scm",(void*)f_23124},
{"f_23128ChickenBridge.scm",(void*)f_23128},
{"f_22729ChickenBridge.scm",(void*)f_22729},
{"f_23088ChickenBridge.scm",(void*)f_23088},
{"f_23103ChickenBridge.scm",(void*)f_23103},
{"f_23095ChickenBridge.scm",(void*)f_23095},
{"f_23059ChickenBridge.scm",(void*)f_23059},
{"f_23063ChickenBridge.scm",(void*)f_23063},
{"f_23024ChickenBridge.scm",(void*)f_23024},
{"f_23028ChickenBridge.scm",(void*)f_23028},
{"f_22989ChickenBridge.scm",(void*)f_22989},
{"f_22993ChickenBridge.scm",(void*)f_22993},
{"f_22954ChickenBridge.scm",(void*)f_22954},
{"f_22958ChickenBridge.scm",(void*)f_22958},
{"f_22732ChickenBridge.scm",(void*)f_22732},
{"f_22918ChickenBridge.scm",(void*)f_22918},
{"f_22933ChickenBridge.scm",(void*)f_22933},
{"f_22925ChickenBridge.scm",(void*)f_22925},
{"f_22889ChickenBridge.scm",(void*)f_22889},
{"f_22893ChickenBridge.scm",(void*)f_22893},
{"f_22854ChickenBridge.scm",(void*)f_22854},
{"f_22858ChickenBridge.scm",(void*)f_22858},
{"f_22819ChickenBridge.scm",(void*)f_22819},
{"f_22823ChickenBridge.scm",(void*)f_22823},
{"f_22784ChickenBridge.scm",(void*)f_22784},
{"f_22788ChickenBridge.scm",(void*)f_22788},
{"f_22735ChickenBridge.scm",(void*)f_22735},
{"f_22738ChickenBridge.scm",(void*)f_22738},
{"f_22742ChickenBridge.scm",(void*)f_22742},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_22708ChickenBridge.scm",(void*)f_22708},
{"f_22252ChickenBridge.scm",(void*)f_22252},
{"f_22680ChickenBridge.scm",(void*)f_22680},
{"f_22695ChickenBridge.scm",(void*)f_22695},
{"f_22687ChickenBridge.scm",(void*)f_22687},
{"f_22651ChickenBridge.scm",(void*)f_22651},
{"f_22655ChickenBridge.scm",(void*)f_22655},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22581ChickenBridge.scm",(void*)f_22581},
{"f_22585ChickenBridge.scm",(void*)f_22585},
{"f_22256ChickenBridge.scm",(void*)f_22256},
{"f_22545ChickenBridge.scm",(void*)f_22545},
{"f_22560ChickenBridge.scm",(void*)f_22560},
{"f_22552ChickenBridge.scm",(void*)f_22552},
{"f_22516ChickenBridge.scm",(void*)f_22516},
{"f_22520ChickenBridge.scm",(void*)f_22520},
{"f_22481ChickenBridge.scm",(void*)f_22481},
{"f_22485ChickenBridge.scm",(void*)f_22485},
{"f_22446ChickenBridge.scm",(void*)f_22446},
{"f_22450ChickenBridge.scm",(void*)f_22450},
{"f_22259ChickenBridge.scm",(void*)f_22259},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22425ChickenBridge.scm",(void*)f_22425},
{"f_22417ChickenBridge.scm",(void*)f_22417},
{"f_22381ChickenBridge.scm",(void*)f_22381},
{"f_22385ChickenBridge.scm",(void*)f_22385},
{"f_22346ChickenBridge.scm",(void*)f_22346},
{"f_22350ChickenBridge.scm",(void*)f_22350},
{"f_22311ChickenBridge.scm",(void*)f_22311},
{"f_22315ChickenBridge.scm",(void*)f_22315},
{"f_22262ChickenBridge.scm",(void*)f_22262},
{"f_22265ChickenBridge.scm",(void*)f_22265},
{"f_22269ChickenBridge.scm",(void*)f_22269},
{"f_22233ChickenBridge.scm",(void*)f_22233},
{"f_22238ChickenBridge.scm",(void*)f_22238},
{"f_21504ChickenBridge.scm",(void*)f_21504},
{"f_22210ChickenBridge.scm",(void*)f_22210},
{"f_22225ChickenBridge.scm",(void*)f_22225},
{"f_22217ChickenBridge.scm",(void*)f_22217},
{"f_22181ChickenBridge.scm",(void*)f_22181},
{"f_22185ChickenBridge.scm",(void*)f_22185},
{"f_22146ChickenBridge.scm",(void*)f_22146},
{"f_22150ChickenBridge.scm",(void*)f_22150},
{"f_22111ChickenBridge.scm",(void*)f_22111},
{"f_22115ChickenBridge.scm",(void*)f_22115},
{"f_22076ChickenBridge.scm",(void*)f_22076},
{"f_22080ChickenBridge.scm",(void*)f_22080},
{"f_21508ChickenBridge.scm",(void*)f_21508},
{"f_22040ChickenBridge.scm",(void*)f_22040},
{"f_22055ChickenBridge.scm",(void*)f_22055},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22011ChickenBridge.scm",(void*)f_22011},
{"f_22015ChickenBridge.scm",(void*)f_22015},
{"f_21976ChickenBridge.scm",(void*)f_21976},
{"f_21980ChickenBridge.scm",(void*)f_21980},
{"f_21941ChickenBridge.scm",(void*)f_21941},
{"f_21945ChickenBridge.scm",(void*)f_21945},
{"f_21906ChickenBridge.scm",(void*)f_21906},
{"f_21910ChickenBridge.scm",(void*)f_21910},
{"f_21511ChickenBridge.scm",(void*)f_21511},
{"f_21870ChickenBridge.scm",(void*)f_21870},
{"f_21885ChickenBridge.scm",(void*)f_21885},
{"f_21877ChickenBridge.scm",(void*)f_21877},
{"f_21841ChickenBridge.scm",(void*)f_21841},
{"f_21845ChickenBridge.scm",(void*)f_21845},
{"f_21806ChickenBridge.scm",(void*)f_21806},
{"f_21810ChickenBridge.scm",(void*)f_21810},
{"f_21771ChickenBridge.scm",(void*)f_21771},
{"f_21775ChickenBridge.scm",(void*)f_21775},
{"f_21736ChickenBridge.scm",(void*)f_21736},
{"f_21740ChickenBridge.scm",(void*)f_21740},
{"f_21514ChickenBridge.scm",(void*)f_21514},
{"f_21700ChickenBridge.scm",(void*)f_21700},
{"f_21715ChickenBridge.scm",(void*)f_21715},
{"f_21707ChickenBridge.scm",(void*)f_21707},
{"f_21671ChickenBridge.scm",(void*)f_21671},
{"f_21675ChickenBridge.scm",(void*)f_21675},
{"f_21636ChickenBridge.scm",(void*)f_21636},
{"f_21640ChickenBridge.scm",(void*)f_21640},
{"f_21601ChickenBridge.scm",(void*)f_21601},
{"f_21605ChickenBridge.scm",(void*)f_21605},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_21570ChickenBridge.scm",(void*)f_21570},
{"f_21517ChickenBridge.scm",(void*)f_21517},
{"f_21520ChickenBridge.scm",(void*)f_21520},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21166ChickenBridge.scm",(void*)f_21166},
{"f_21006ChickenBridge.scm",(void*)f_21006},
{"f_21041ChickenBridge.scm",(void*)f_21041},
{"f_21051ChickenBridge.scm",(void*)f_21051},
{"f_21055ChickenBridge.scm",(void*)f_21055},
{"f_21058ChickenBridge.scm",(void*)f_21058},
{"f_21119ChickenBridge.scm",(void*)f_21119},
{"f_21110ChickenBridge.scm",(void*)f_21110},
{"f_21061ChickenBridge.scm",(void*)f_21061},
{"f_21080ChickenBridge.scm",(void*)f_21080},
{"f_21087ChickenBridge.scm",(void*)f_21087},
{"f_21064ChickenBridge.scm",(void*)f_21064},
{"f_21070ChickenBridge.scm",(void*)f_21070},
{"f_21039ChickenBridge.scm",(void*)f_21039},
{"f_21014ChickenBridge.scm",(void*)f_21014},
{"f_21013ChickenBridge.scm",(void*)f_21013},
{"f_21174ChickenBridge.scm",(void*)f_21174},
{"f_20752ChickenBridge.scm",(void*)f_20752},
{"f_20774ChickenBridge.scm",(void*)f_20774},
{"f_20789ChickenBridge.scm",(void*)f_20789},
{"f_20792ChickenBridge.scm",(void*)f_20792},
{"f_20968ChickenBridge.scm",(void*)f_20968},
{"f_20962ChickenBridge.scm",(void*)f_20962},
{"f_20795ChickenBridge.scm",(void*)f_20795},
{"f_20944ChickenBridge.scm",(void*)f_20944},
{"f_20798ChickenBridge.scm",(void*)f_20798},
{"f_20801ChickenBridge.scm",(void*)f_20801},
{"f_20937ChickenBridge.scm",(void*)f_20937},
{"f_20925ChickenBridge.scm",(void*)f_20925},
{"f_20821ChickenBridge.scm",(void*)f_20821},
{"f_20828ChickenBridge.scm",(void*)f_20828},
{"f_20898ChickenBridge.scm",(void*)f_20898},
{"f_20884ChickenBridge.scm",(void*)f_20884},
{"f_20892ChickenBridge.scm",(void*)f_20892},
{"f_20831ChickenBridge.scm",(void*)f_20831},
{"f_20870ChickenBridge.scm",(void*)f_20870},
{"f_20834ChickenBridge.scm",(void*)f_20834},
{"f_20863ChickenBridge.scm",(void*)f_20863},
{"f_20840ChickenBridge.scm",(void*)f_20840},
{"f_20843ChickenBridge.scm",(void*)f_20843},
{"f_20847ChickenBridge.scm",(void*)f_20847},
{"f_20808ChickenBridge.scm",(void*)f_20808},
{"f_20811ChickenBridge.scm",(void*)f_20811},
{"f_20621ChickenBridge.scm",(void*)f_20621},
{"f_20630ChickenBridge.scm",(void*)f_20630},
{"f_20578ChickenBridge.scm",(void*)f_20578},
{"f_20584ChickenBridge.scm",(void*)f_20584},
{"f_20647ChickenBridge.scm",(void*)f_20647},
{"f_20733ChickenBridge.scm",(void*)f_20733},
{"f_20720ChickenBridge.scm",(void*)f_20720},
{"f_20728ChickenBridge.scm",(void*)f_20728},
{"f_20650ChickenBridge.scm",(void*)f_20650},
{"f_20654ChickenBridge.scm",(void*)f_20654},
{"f_20697ChickenBridge.scm",(void*)f_20697},
{"f_20659ChickenBridge.scm",(void*)f_20659},
{"f_20625ChickenBridge.scm",(void*)f_20625},
{"f_20520ChickenBridge.scm",(void*)f_20520},
{"f_20527ChickenBridge.scm",(void*)f_20527},
{"f_20558ChickenBridge.scm",(void*)f_20558},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20546ChickenBridge.scm",(void*)f_20546},
{"f_20429ChickenBridge.scm",(void*)f_20429},
{"f_20436ChickenBridge.scm",(void*)f_20436},
{"f_20504ChickenBridge.scm",(void*)f_20504},
{"f_20447ChickenBridge.scm",(void*)f_20447},
{"f_20474ChickenBridge.scm",(void*)f_20474},
{"f_20458ChickenBridge.scm",(void*)f_20458},
{"f_20363ChickenBridge.scm",(void*)f_20363},
{"f_20374ChickenBridge.scm",(void*)f_20374},
{"f_20377ChickenBridge.scm",(void*)f_20377},
{"f_20384ChickenBridge.scm",(void*)f_20384},
{"f_20357ChickenBridge.scm",(void*)f_20357},
{"f_19811ChickenBridge.scm",(void*)f_19811},
{"f_19842ChickenBridge.scm",(void*)f_19842},
{"f_20306ChickenBridge.scm",(void*)f_20306},
{"f_20312ChickenBridge.scm",(void*)f_20312},
{"f_19853ChickenBridge.scm",(void*)f_19853},
{"f_19738ChickenBridge.scm",(void*)f_19738},
{"f_19763ChickenBridge.scm",(void*)f_19763},
{"f_19698ChickenBridge.scm",(void*)f_19698},
{"f_19711ChickenBridge.scm",(void*)f_19711},
{"f_19752ChickenBridge.scm",(void*)f_19752},
{"f_19857ChickenBridge.scm",(void*)f_19857},
{"f_20294ChickenBridge.scm",(void*)f_20294},
{"f_20290ChickenBridge.scm",(void*)f_20290},
{"f_20286ChickenBridge.scm",(void*)f_20286},
{"f_19860ChickenBridge.scm",(void*)f_19860},
{"f_20080ChickenBridge.scm",(void*)f_20080},
{"f_20189ChickenBridge.scm",(void*)f_20189},
{"f_20254ChickenBridge.scm",(void*)f_20254},
{"f_20196ChickenBridge.scm",(void*)f_20196},
{"f_20200ChickenBridge.scm",(void*)f_20200},
{"f_20204ChickenBridge.scm",(void*)f_20204},
{"f_20246ChickenBridge.scm",(void*)f_20246},
{"f_20242ChickenBridge.scm",(void*)f_20242},
{"f_20220ChickenBridge.scm",(void*)f_20220},
{"f_20083ChickenBridge.scm",(void*)f_20083},
{"f_20086ChickenBridge.scm",(void*)f_20086},
{"f_19985ChickenBridge.scm",(void*)f_19985},
{"f_20068ChickenBridge.scm",(void*)f_20068},
{"f_20035ChickenBridge.scm",(void*)f_20035},
{"f_20061ChickenBridge.scm",(void*)f_20061},
{"f_20043ChickenBridge.scm",(void*)f_20043},
{"f_19991ChickenBridge.scm",(void*)f_19991},
{"f_20031ChickenBridge.scm",(void*)f_20031},
{"f_19973ChickenBridge.scm",(void*)f_19973},
{"f_19944ChickenBridge.scm",(void*)f_19944},
{"f_19966ChickenBridge.scm",(void*)f_19966},
{"f_19952ChickenBridge.scm",(void*)f_19952},
{"f_19906ChickenBridge.scm",(void*)f_19906},
{"f_19863ChickenBridge.scm",(void*)f_19863},
{"f_19874ChickenBridge.scm",(void*)f_19874},
{"f_19878ChickenBridge.scm",(void*)f_19878},
{"f_19882ChickenBridge.scm",(void*)f_19882},
{"f_19886ChickenBridge.scm",(void*)f_19886},
{"f_19870ChickenBridge.scm",(void*)f_19870},
{"f_19830ChickenBridge.scm",(void*)f_19830},
{"f_19825ChickenBridge.scm",(void*)f_19825},
{"f_19820ChickenBridge.scm",(void*)f_19820},
{"f_19652ChickenBridge.scm",(void*)f_19652},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19678ChickenBridge.scm",(void*)f_19678},
{"f_19614ChickenBridge.scm",(void*)f_19614},
{"f_19625ChickenBridge.scm",(void*)f_19625},
{"f_19640ChickenBridge.scm",(void*)f_19640},
{"f_19547ChickenBridge.scm",(void*)f_19547},
{"f_19567ChickenBridge.scm",(void*)f_19567},
{"f_19577ChickenBridge.scm",(void*)f_19577},
{"f_19590ChickenBridge.scm",(void*)f_19590},
{"f_19558ChickenBridge.scm",(void*)f_19558},
{"f_19565ChickenBridge.scm",(void*)f_19565},
{"f_19354ChickenBridge.scm",(void*)f_19354},
{"f_19414ChickenBridge.scm",(void*)f_19414},
{"f_19424ChickenBridge.scm",(void*)f_19424},
{"f_19538ChickenBridge.scm",(void*)f_19538},
{"f_19503ChickenBridge.scm",(void*)f_19503},
{"f_19495ChickenBridge.scm",(void*)f_19495},
{"f_19466ChickenBridge.scm",(void*)f_19466},
{"f_19444ChickenBridge.scm",(void*)f_19444},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19435ChickenBridge.scm",(void*)f_19435},
{"f_19361ChickenBridge.scm",(void*)f_19361},
{"f_19412ChickenBridge.scm",(void*)f_19412},
{"f_19404ChickenBridge.scm",(void*)f_19404},
{"f_19364ChickenBridge.scm",(void*)f_19364},
{"f_19375ChickenBridge.scm",(void*)f_19375},
{"f_19379ChickenBridge.scm",(void*)f_19379},
{"f_19371ChickenBridge.scm",(void*)f_19371},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19260ChickenBridge.scm",(void*)f_19260},
{"f_19270ChickenBridge.scm",(void*)f_19270},
{"f_19281ChickenBridge.scm",(void*)f_19281},
{"f_19318ChickenBridge.scm",(void*)f_19318},
{"f_19293ChickenBridge.scm",(void*)f_19293},
{"f_19284ChickenBridge.scm",(void*)f_19284},
{"f_19222ChickenBridge.scm",(void*)f_19222},
{"f_19258ChickenBridge.scm",(void*)f_19258},
{"f_19229ChickenBridge.scm",(void*)f_19229},
{"f_18861ChickenBridge.scm",(void*)f_18861},
{"f_18868ChickenBridge.scm",(void*)f_18868},
{"f_19102ChickenBridge.scm",(void*)f_19102},
{"f_19112ChickenBridge.scm",(void*)f_19112},
{"f_19123ChickenBridge.scm",(void*)f_19123},
{"f_19135ChickenBridge.scm",(void*)f_19135},
{"f_19138ChickenBridge.scm",(void*)f_19138},
{"f_19126ChickenBridge.scm",(void*)f_19126},
{"f_18874ChickenBridge.scm",(void*)f_18874},
{"f_19100ChickenBridge.scm",(void*)f_19100},
{"f_19096ChickenBridge.scm",(void*)f_19096},
{"f_19042ChickenBridge.scm",(void*)f_19042},
{"f_19007ChickenBridge.scm",(void*)f_19007},
{"f_19023ChickenBridge.scm",(void*)f_19023},
{"f_18978ChickenBridge.scm",(void*)f_18978},
{"f_18902ChickenBridge.scm",(void*)f_18902},
{"f_18905ChickenBridge.scm",(void*)f_18905},
{"f_18969ChickenBridge.scm",(void*)f_18969},
{"f_18965ChickenBridge.scm",(void*)f_18965},
{"f_18885ChickenBridge.scm",(void*)f_18885},
{"f_18896ChickenBridge.scm",(void*)f_18896},
{"f_18892ChickenBridge.scm",(void*)f_18892},
{"f_18814ChickenBridge.scm",(void*)f_18814},
{"f_18847ChickenBridge.scm",(void*)f_18847},
{"f_18829ChickenBridge.scm",(void*)f_18829},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_18432ChickenBridge.scm",(void*)f_18432},
{"f_18641ChickenBridge.scm",(void*)f_18641},
{"f_18651ChickenBridge.scm",(void*)f_18651},
{"f_18662ChickenBridge.scm",(void*)f_18662},
{"f_18782ChickenBridge.scm",(void*)f_18782},
{"f_18761ChickenBridge.scm",(void*)f_18761},
{"f_18740ChickenBridge.scm",(void*)f_18740},
{"f_18719ChickenBridge.scm",(void*)f_18719},
{"f_18698ChickenBridge.scm",(void*)f_18698},
{"f_18677ChickenBridge.scm",(void*)f_18677},
{"f_18665ChickenBridge.scm",(void*)f_18665},
{"f_18442ChickenBridge.scm",(void*)f_18442},
{"f_18445ChickenBridge.scm",(void*)f_18445},
{"f_18608ChickenBridge.scm",(void*)f_18608},
{"f_18448ChickenBridge.scm",(void*)f_18448},
{"f_18599ChickenBridge.scm",(void*)f_18599},
{"f_18579ChickenBridge.scm",(void*)f_18579},
{"f_18451ChickenBridge.scm",(void*)f_18451},
{"f_18544ChickenBridge.scm",(void*)f_18544},
{"f_18561ChickenBridge.scm",(void*)f_18561},
{"f_18454ChickenBridge.scm",(void*)f_18454},
{"f_18493ChickenBridge.scm",(void*)f_18493},
{"f_18527ChickenBridge.scm",(void*)f_18527},
{"f_18511ChickenBridge.scm",(void*)f_18511},
{"f_18496ChickenBridge.scm",(void*)f_18496},
{"f_18461ChickenBridge.scm",(void*)f_18461},
{"f_18472ChickenBridge.scm",(void*)f_18472},
{"f_18476ChickenBridge.scm",(void*)f_18476},
{"f_18468ChickenBridge.scm",(void*)f_18468},
{"f_18350ChickenBridge.scm",(void*)f_18350},
{"f_18354ChickenBridge.scm",(void*)f_18354},
{"f_18372ChickenBridge.scm",(void*)f_18372},
{"f_18190ChickenBridge.scm",(void*)f_18190},
{"f_18198ChickenBridge.scm",(void*)f_18198},
{"f_18208ChickenBridge.scm",(void*)f_18208},
{"f_18246ChickenBridge.scm",(void*)f_18246},
{"f_18249ChickenBridge.scm",(void*)f_18249},
{"f_18252ChickenBridge.scm",(void*)f_18252},
{"f_18327ChickenBridge.scm",(void*)f_18327},
{"f_18337ChickenBridge.scm",(void*)f_18337},
{"f_18255ChickenBridge.scm",(void*)f_18255},
{"f_18258ChickenBridge.scm",(void*)f_18258},
{"f_18261ChickenBridge.scm",(void*)f_18261},
{"f_18281ChickenBridge.scm",(void*)f_18281},
{"f_18291ChickenBridge.scm",(void*)f_18291},
{"f_18294ChickenBridge.scm",(void*)f_18294},
{"f_18297ChickenBridge.scm",(void*)f_18297},
{"f_18264ChickenBridge.scm",(void*)f_18264},
{"f_18267ChickenBridge.scm",(void*)f_18267},
{"f_18184ChickenBridge.scm",(void*)f_18184},
{"f_18178ChickenBridge.scm",(void*)f_18178},
{"f_18172ChickenBridge.scm",(void*)f_18172},
{"f_18101ChickenBridge.scm",(void*)f_18101},
{"f_18142ChickenBridge.scm",(void*)f_18142},
{"f_18146ChickenBridge.scm",(void*)f_18146},
{"f_18150ChickenBridge.scm",(void*)f_18150},
{"f_18154ChickenBridge.scm",(void*)f_18154},
{"f_18158ChickenBridge.scm",(void*)f_18158},
{"f_18162ChickenBridge.scm",(void*)f_18162},
{"f_18166ChickenBridge.scm",(void*)f_18166},
{"f_18170ChickenBridge.scm",(void*)f_18170},
{"f_18103ChickenBridge.scm",(void*)f_18103},
{"f_18109ChickenBridge.scm",(void*)f_18109},
{"f_18131ChickenBridge.scm",(void*)f_18131},
{"f_18120ChickenBridge.scm",(void*)f_18120},
{"f_17950ChickenBridge.scm",(void*)f_17950},
{"f_17965ChickenBridge.scm",(void*)f_17965},
{"f_17978ChickenBridge.scm",(void*)f_17978},
{"f_17938ChickenBridge.scm",(void*)f_17938},
{"f_17926ChickenBridge.scm",(void*)f_17926},
{"f_17914ChickenBridge.scm",(void*)f_17914},
{"f_17908ChickenBridge.scm",(void*)f_17908},
{"f_17902ChickenBridge.scm",(void*)f_17902},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_17878ChickenBridge.scm",(void*)f_17878},
{"f_17866ChickenBridge.scm",(void*)f_17866},
{"f_17854ChickenBridge.scm",(void*)f_17854},
{"f_17848ChickenBridge.scm",(void*)f_17848},
{"f_17812ChickenBridge.scm",(void*)f_17812},
{"f_17806ChickenBridge.scm",(void*)f_17806},
{"f_17759ChickenBridge.scm",(void*)f_17759},
{"f_17763ChickenBridge.scm",(void*)f_17763},
{"f_17779ChickenBridge.scm",(void*)f_17779},
{"f_17788ChickenBridge.scm",(void*)f_17788},
{"f_17766ChickenBridge.scm",(void*)f_17766},
{"f_17750ChickenBridge.scm",(void*)f_17750},
{"f_17754ChickenBridge.scm",(void*)f_17754},
{"f_17571ChickenBridge.scm",(void*)f_17571},
{"f_17724ChickenBridge.scm",(void*)f_17724},
{"f_17737ChickenBridge.scm",(void*)f_17737},
{"f_17719ChickenBridge.scm",(void*)f_17719},
{"f_17574ChickenBridge.scm",(void*)f_17574},
{"f_17716ChickenBridge.scm",(void*)f_17716},
{"f_17700ChickenBridge.scm",(void*)f_17700},
{"f_17693ChickenBridge.scm",(void*)f_17693},
{"f_17689ChickenBridge.scm",(void*)f_17689},
{"f_17602ChickenBridge.scm",(void*)f_17602},
{"f_17610ChickenBridge.scm",(void*)f_17610},
{"f_17620ChickenBridge.scm",(void*)f_17620},
{"f_17623ChickenBridge.scm",(void*)f_17623},
{"f_17605ChickenBridge.scm",(void*)f_17605},
{"f_17400ChickenBridge.scm",(void*)f_17400},
{"f_17406ChickenBridge.scm",(void*)f_17406},
{"f_17409ChickenBridge.scm",(void*)f_17409},
{"f_15209ChickenBridge.scm",(void*)f_15209},
{"f_15222ChickenBridge.scm",(void*)f_15222},
{"f_15229ChickenBridge.scm",(void*)f_15229},
{"f_15236ChickenBridge.scm",(void*)f_15236},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_17413ChickenBridge.scm",(void*)f_17413},
{"f_17447ChickenBridge.scm",(void*)f_17447},
{"f_17540ChickenBridge.scm",(void*)f_17540},
{"f_17550ChickenBridge.scm",(void*)f_17550},
{"f_17453ChickenBridge.scm",(void*)f_17453},
{"f_17510ChickenBridge.scm",(void*)f_17510},
{"f_17520ChickenBridge.scm",(void*)f_17520},
{"f_17461ChickenBridge.scm",(void*)f_17461},
{"f_17475ChickenBridge.scm",(void*)f_17475},
{"f_17479ChickenBridge.scm",(void*)f_17479},
{"f_17483ChickenBridge.scm",(void*)f_17483},
{"f_17487ChickenBridge.scm",(void*)f_17487},
{"f_17494ChickenBridge.scm",(void*)f_17494},
{"f_17471ChickenBridge.scm",(void*)f_17471},
{"f_17464ChickenBridge.scm",(void*)f_17464},
{"f_17416ChickenBridge.scm",(void*)f_17416},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16349ChickenBridge.scm",(void*)f_16349},
{"f_16399ChickenBridge.scm",(void*)f_16399},
{"f_16496ChickenBridge.scm",(void*)f_16496},
{"f_16564ChickenBridge.scm",(void*)f_16564},
{"f_16821ChickenBridge.scm",(void*)f_16821},
{"f_16571ChickenBridge.scm",(void*)f_16571},
{"f_16809ChickenBridge.scm",(void*)f_16809},
{"f_16760ChickenBridge.scm",(void*)f_16760},
{"f_16766ChickenBridge.scm",(void*)f_16766},
{"f_16790ChickenBridge.scm",(void*)f_16790},
{"f_16786ChickenBridge.scm",(void*)f_16786},
{"f_16774ChickenBridge.scm",(void*)f_16774},
{"f_16574ChickenBridge.scm",(void*)f_16574},
{"f_16736ChickenBridge.scm",(void*)f_16736},
{"f_16740ChickenBridge.scm",(void*)f_16740},
{"f_16577ChickenBridge.scm",(void*)f_16577},
{"f_16713ChickenBridge.scm",(void*)f_16713},
{"f_16717ChickenBridge.scm",(void*)f_16717},
{"f_16580ChickenBridge.scm",(void*)f_16580},
{"f_16690ChickenBridge.scm",(void*)f_16690},
{"f_16694ChickenBridge.scm",(void*)f_16694},
{"f_16583ChickenBridge.scm",(void*)f_16583},
{"f_16615ChickenBridge.scm",(void*)f_16615},
{"f_16633ChickenBridge.scm",(void*)f_16633},
{"f_16651ChickenBridge.scm",(void*)f_16651},
{"f_16669ChickenBridge.scm",(void*)f_16669},
{"f_16586ChickenBridge.scm",(void*)f_16586},
{"f_16590ChickenBridge.scm",(void*)f_16590},
{"f_16500ChickenBridge.scm",(void*)f_16500},
{"f_16504ChickenBridge.scm",(void*)f_16504},
{"f_16508ChickenBridge.scm",(void*)f_16508},
{"f_16403ChickenBridge.scm",(void*)f_16403},
{"f_16407ChickenBridge.scm",(void*)f_16407},
{"f_16411ChickenBridge.scm",(void*)f_16411},
{"f_16430ChickenBridge.scm",(void*)f_16430},
{"f_16434ChickenBridge.scm",(void*)f_16434},
{"f_16414ChickenBridge.scm",(void*)f_16414},
{"f_16418ChickenBridge.scm",(void*)f_16418},
{"f_16353ChickenBridge.scm",(void*)f_16353},
{"f_16357ChickenBridge.scm",(void*)f_16357},
{"f_16361ChickenBridge.scm",(void*)f_16361},
{"f_16343ChickenBridge.scm",(void*)f_16343},
{"f_16158ChickenBridge.scm",(void*)f_16158},
{"f_16170ChickenBridge.scm",(void*)f_16170},
{"f_16189ChickenBridge.scm",(void*)f_16189},
{"f_16207ChickenBridge.scm",(void*)f_16207},
{"f_16239ChickenBridge.scm",(void*)f_16239},
{"f_16242ChickenBridge.scm",(void*)f_16242},
{"f_16235ChickenBridge.scm",(void*)f_16235},
{"f_16221ChickenBridge.scm",(void*)f_16221},
{"f_16192ChickenBridge.scm",(void*)f_16192},
{"f_16137ChickenBridge.scm",(void*)f_16137},
{"f_16144ChickenBridge.scm",(void*)f_16144},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16153ChickenBridge.scm",(void*)f_16153},
{"f_16072ChickenBridge.scm",(void*)f_16072},
{"f_16081ChickenBridge.scm",(void*)f_16081},
{"f_16104ChickenBridge.scm",(void*)f_16104},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_16028ChickenBridge.scm",(void*)f_16028},
{"f_16016ChickenBridge.scm",(void*)f_16016},
{"f_15914ChickenBridge.scm",(void*)f_15914},
{"f_15866ChickenBridge.scm",(void*)f_15866},
{"f_15247ChickenBridge.scm",(void*)f_15247},
{"f_15251ChickenBridge.scm",(void*)f_15251},
{"f_15254ChickenBridge.scm",(void*)f_15254},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15676ChickenBridge.scm",(void*)f_15676},
{"f_15672ChickenBridge.scm",(void*)f_15672},
{"f_15257ChickenBridge.scm",(void*)f_15257},
{"f_15380ChickenBridge.scm",(void*)f_15380},
{"f_14613ChickenBridge.scm",(void*)f_14613},
{"f_15386ChickenBridge.scm",(void*)f_15386},
{"f_14629ChickenBridge.scm",(void*)f_14629},
{"f_15474ChickenBridge.scm",(void*)f_15474},
{"f_15544ChickenBridge.scm",(void*)f_15544},
{"f_14645ChickenBridge.scm",(void*)f_14645},
{"f_15547ChickenBridge.scm",(void*)f_15547},
{"f_14677ChickenBridge.scm",(void*)f_14677},
{"f_15625ChickenBridge.scm",(void*)f_15625},
{"f_15651ChickenBridge.scm",(void*)f_15651},
{"f_15645ChickenBridge.scm",(void*)f_15645},
{"f_15634ChickenBridge.scm",(void*)f_15634},
{"f_15576ChickenBridge.scm",(void*)f_15576},
{"f_15586ChickenBridge.scm",(void*)f_15586},
{"f_15612ChickenBridge.scm",(void*)f_15612},
{"f_15606ChickenBridge.scm",(void*)f_15606},
{"f_15589ChickenBridge.scm",(void*)f_15589},
{"f_15599ChickenBridge.scm",(void*)f_15599},
{"f_15592ChickenBridge.scm",(void*)f_15592},
{"f_15553ChickenBridge.scm",(void*)f_15553},
{"f_15562ChickenBridge.scm",(void*)f_15562},
{"f_15556ChickenBridge.scm",(void*)f_15556},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15498ChickenBridge.scm",(void*)f_15498},
{"f_15531ChickenBridge.scm",(void*)f_15531},
{"f_15517ChickenBridge.scm",(void*)f_15517},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15508ChickenBridge.scm",(void*)f_15508},
{"f_15483ChickenBridge.scm",(void*)f_15483},
{"f_15395ChickenBridge.scm",(void*)f_15395},
{"f_15417ChickenBridge.scm",(void*)f_15417},
{"f_15464ChickenBridge.scm",(void*)f_15464},
{"f_15450ChickenBridge.scm",(void*)f_15450},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15430ChickenBridge.scm",(void*)f_15430},
{"f_15433ChickenBridge.scm",(void*)f_15433},
{"f_15398ChickenBridge.scm",(void*)f_15398},
{"f_15415ChickenBridge.scm",(void*)f_15415},
{"f_15401ChickenBridge.scm",(void*)f_15401},
{"f_15266ChickenBridge.scm",(void*)f_15266},
{"f_15272ChickenBridge.scm",(void*)f_15272},
{"f_15330ChickenBridge.scm",(void*)f_15330},
{"f_15333ChickenBridge.scm",(void*)f_15333},
{"f_15354ChickenBridge.scm",(void*)f_15354},
{"f_15365ChickenBridge.scm",(void*)f_15365},
{"f_15344ChickenBridge.scm",(void*)f_15344},
{"f_15278ChickenBridge.scm",(void*)f_15278},
{"f_15288ChickenBridge.scm",(void*)f_15288},
{"f_15324ChickenBridge.scm",(void*)f_15324},
{"f_15294ChickenBridge.scm",(void*)f_15294},
{"f_15309ChickenBridge.scm",(void*)f_15309},
{"f_15313ChickenBridge.scm",(void*)f_15313},
{"f_15317ChickenBridge.scm",(void*)f_15317},
{"f_15301ChickenBridge.scm",(void*)f_15301},
{"f_15143ChickenBridge.scm",(void*)f_15143},
{"f_15145ChickenBridge.scm",(void*)f_15145},
{"f_15193ChickenBridge.scm",(void*)f_15193},
{"f_15149ChickenBridge.scm",(void*)f_15149},
{"f_15152ChickenBridge.scm",(void*)f_15152},
{"f_15157ChickenBridge.scm",(void*)f_15157},
{"f_15178ChickenBridge.scm",(void*)f_15178},
{"f_15135ChickenBridge.scm",(void*)f_15135},
{"f_15137ChickenBridge.scm",(void*)f_15137},
{"f_14927ChickenBridge.scm",(void*)f_14927},
{"f_14944ChickenBridge.scm",(void*)f_14944},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14894ChickenBridge.scm",(void*)f_14894},
{"f_14901ChickenBridge.scm",(void*)f_14901},
{"f_14845ChickenBridge.scm",(void*)f_14845},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_14910ChickenBridge.scm",(void*)f_14910},
{"f_15133ChickenBridge.scm",(void*)f_15133},
{"f_15110ChickenBridge.scm",(void*)f_15110},
{"f_15126ChickenBridge.scm",(void*)f_15126},
{"f_14972ChickenBridge.scm",(void*)f_14972},
{"f_14975ChickenBridge.scm",(void*)f_14975},
{"f_14999ChickenBridge.scm",(void*)f_14999},
{"f_15056ChickenBridge.scm",(void*)f_15056},
{"f_15062ChickenBridge.scm",(void*)f_15062},
{"f_15071ChickenBridge.scm",(void*)f_15071},
{"f_15080ChickenBridge.scm",(void*)f_15080},
{"f_15089ChickenBridge.scm",(void*)f_15089},
{"f_15098ChickenBridge.scm",(void*)f_15098},
{"f_15050ChickenBridge.scm",(void*)f_15050},
{"f_15005ChickenBridge.scm",(void*)f_15005},
{"f_15011ChickenBridge.scm",(void*)f_15011},
{"f_15017ChickenBridge.scm",(void*)f_15017},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_15029ChickenBridge.scm",(void*)f_15029},
{"f_15035ChickenBridge.scm",(void*)f_15035},
{"f_14876ChickenBridge.scm",(void*)f_14876},
{"f_14883ChickenBridge.scm",(void*)f_14883},
{"f_14866ChickenBridge.scm",(void*)f_14866},
{"f_14854ChickenBridge.scm",(void*)f_14854},
{"f_14822ChickenBridge.scm",(void*)f_14822},
{"f_14829ChickenBridge.scm",(void*)f_14829},
{"f_14836ChickenBridge.scm",(void*)f_14836},
{"f_14806ChickenBridge.scm",(void*)f_14806},
{"f_14813ChickenBridge.scm",(void*)f_14813},
{"f_14820ChickenBridge.scm",(void*)f_14820},
{"f_14794ChickenBridge.scm",(void*)f_14794},
{"f_14776ChickenBridge.scm",(void*)f_14776},
{"f_14758ChickenBridge.scm",(void*)f_14758},
{"f_14743ChickenBridge.scm",(void*)f_14743},
{"f_14737ChickenBridge.scm",(void*)f_14737},
{"f_14725ChickenBridge.scm",(void*)f_14725},
{"f_14707ChickenBridge.scm",(void*)f_14707},
{"f_14686ChickenBridge.scm",(void*)f_14686},
{"f_14654ChickenBridge.scm",(void*)f_14654},
{"f_14661ChickenBridge.scm",(void*)f_14661},
{"f_14596ChickenBridge.scm",(void*)f_14596},
{"f_14604ChickenBridge.scm",(void*)f_14604},
{"f_14586ChickenBridge.scm",(void*)f_14586},
{"f_14594ChickenBridge.scm",(void*)f_14594},
{"f_14580ChickenBridge.scm",(void*)f_14580},
{"f_14568ChickenBridge.scm",(void*)f_14568},
{"f_14565ChickenBridge.scm",(void*)f_14565},
{"f_14544ChickenBridge.scm",(void*)f_14544},
{"f_14457ChickenBridge.scm",(void*)f_14457},
{"f_14436ChickenBridge.scm",(void*)f_14436},
{"f_14426ChickenBridge.scm",(void*)f_14426},
{"f_14414ChickenBridge.scm",(void*)f_14414},
{"f_14385ChickenBridge.scm",(void*)f_14385},
{"f_14373ChickenBridge.scm",(void*)f_14373},
{"f_14355ChickenBridge.scm",(void*)f_14355},
{"f_14337ChickenBridge.scm",(void*)f_14337},
{"f_14316ChickenBridge.scm",(void*)f_14316},
{"f_14222ChickenBridge.scm",(void*)f_14222},
{"f_14226ChickenBridge.scm",(void*)f_14226},
{"f_14255ChickenBridge.scm",(void*)f_14255},
{"f_14260ChickenBridge.scm",(void*)f_14260},
{"f_14285ChickenBridge.scm",(void*)f_14285},
{"f_14270ChickenBridge.scm",(void*)f_14270},
{"f_13704ChickenBridge.scm",(void*)f_13704},
{"f_13975ChickenBridge.scm",(void*)f_13975},
{"f_13979ChickenBridge.scm",(void*)f_13979},
{"f_13984ChickenBridge.scm",(void*)f_13984},
{"f_14190ChickenBridge.scm",(void*)f_14190},
{"f_14205ChickenBridge.scm",(void*)f_14205},
{"f_14197ChickenBridge.scm",(void*)f_14197},
{"f_14161ChickenBridge.scm",(void*)f_14161},
{"f_14165ChickenBridge.scm",(void*)f_14165},
{"f_14126ChickenBridge.scm",(void*)f_14126},
{"f_14130ChickenBridge.scm",(void*)f_14130},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_14090ChickenBridge.scm",(void*)f_14090},
{"f_14105ChickenBridge.scm",(void*)f_14105},
{"f_14097ChickenBridge.scm",(void*)f_14097},
{"f_14061ChickenBridge.scm",(void*)f_14061},
{"f_14065ChickenBridge.scm",(void*)f_14065},
{"f_14026ChickenBridge.scm",(void*)f_14026},
{"f_14030ChickenBridge.scm",(void*)f_14030},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_13997ChickenBridge.scm",(void*)f_13997},
{"f_13966ChickenBridge.scm",(void*)f_13966},
{"f_13708ChickenBridge.scm",(void*)f_13708},
{"f_13935ChickenBridge.scm",(void*)f_13935},
{"f_13950ChickenBridge.scm",(void*)f_13950},
{"f_13942ChickenBridge.scm",(void*)f_13942},
{"f_13906ChickenBridge.scm",(void*)f_13906},
{"f_13910ChickenBridge.scm",(void*)f_13910},
{"f_13871ChickenBridge.scm",(void*)f_13871},
{"f_13875ChickenBridge.scm",(void*)f_13875},
{"f_13711ChickenBridge.scm",(void*)f_13711},
{"f_13835ChickenBridge.scm",(void*)f_13835},
{"f_13850ChickenBridge.scm",(void*)f_13850},
{"f_13842ChickenBridge.scm",(void*)f_13842},
{"f_13806ChickenBridge.scm",(void*)f_13806},
{"f_13810ChickenBridge.scm",(void*)f_13810},
{"f_13771ChickenBridge.scm",(void*)f_13771},
{"f_13775ChickenBridge.scm",(void*)f_13775},
{"f_13714ChickenBridge.scm",(void*)f_13714},
{"f_13717ChickenBridge.scm",(void*)f_13717},
{"f_13720ChickenBridge.scm",(void*)f_13720},
{"f_13732ChickenBridge.scm",(void*)f_13732},
{"f_13750ChickenBridge.scm",(void*)f_13750},
{"f_13738ChickenBridge.scm",(void*)f_13738},
{"f_13726ChickenBridge.scm",(void*)f_13726},
{"f_13641ChickenBridge.scm",(void*)f_13641},
{"f_13301ChickenBridge.scm",(void*)f_13301},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13487ChickenBridge.scm",(void*)f_13487},
{"f_13489ChickenBridge.scm",(void*)f_13489},
{"f_13414ChickenBridge.scm",(void*)f_13414},
{"f_13424ChickenBridge.scm",(void*)f_13424},
{"f_13431ChickenBridge.scm",(void*)f_13431},
{"f_13499ChickenBridge.scm",(void*)f_13499},
{"f_13502ChickenBridge.scm",(void*)f_13502},
{"f_13506ChickenBridge.scm",(void*)f_13506},
{"f_13526ChickenBridge.scm",(void*)f_13526},
{"f_13542ChickenBridge.scm",(void*)f_13542},
{"f_13509ChickenBridge.scm",(void*)f_13509},
{"f_13304ChickenBridge.scm",(void*)f_13304},
{"f_13316ChickenBridge.scm",(void*)f_13316},
{"f_13352ChickenBridge.scm",(void*)f_13352},
{"f_13372ChickenBridge.scm",(void*)f_13372},
{"f_13377ChickenBridge.scm",(void*)f_13377},
{"f_12814ChickenBridge.scm",(void*)f_12814},
{"f_12741ChickenBridge.scm",(void*)f_12741},
{"f_12586ChickenBridge.scm",(void*)f_12586},
{"f_12592ChickenBridge.scm",(void*)f_12592},
{"f_12677ChickenBridge.scm",(void*)f_12677},
{"f_12604ChickenBridge.scm",(void*)f_12604},
{"f_12620ChickenBridge.scm",(void*)f_12620},
{"f_12624ChickenBridge.scm",(void*)f_12624},
{"f_12627ChickenBridge.scm",(void*)f_12627},
{"f_12607ChickenBridge.scm",(void*)f_12607},
{"f_12618ChickenBridge.scm",(void*)f_12618},
{"f_12758ChickenBridge.scm",(void*)f_12758},
{"f_13295ChickenBridge.scm",(void*)f_13295},
{"f_12818ChickenBridge.scm",(void*)f_12818},
{"f_13264ChickenBridge.scm",(void*)f_13264},
{"f_13279ChickenBridge.scm",(void*)f_13279},
{"f_13271ChickenBridge.scm",(void*)f_13271},
{"f_13235ChickenBridge.scm",(void*)f_13235},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_13200ChickenBridge.scm",(void*)f_13200},
{"f_13204ChickenBridge.scm",(void*)f_13204},
{"f_13165ChickenBridge.scm",(void*)f_13165},
{"f_13169ChickenBridge.scm",(void*)f_13169},
{"f_12821ChickenBridge.scm",(void*)f_12821},
{"f_13129ChickenBridge.scm",(void*)f_13129},
{"f_13144ChickenBridge.scm",(void*)f_13144},
{"f_13136ChickenBridge.scm",(void*)f_13136},
{"f_13100ChickenBridge.scm",(void*)f_13100},
{"f_13104ChickenBridge.scm",(void*)f_13104},
{"f_13065ChickenBridge.scm",(void*)f_13065},
{"f_13069ChickenBridge.scm",(void*)f_13069},
{"f_13030ChickenBridge.scm",(void*)f_13030},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_12824ChickenBridge.scm",(void*)f_12824},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_13009ChickenBridge.scm",(void*)f_13009},
{"f_13001ChickenBridge.scm",(void*)f_13001},
{"f_12965ChickenBridge.scm",(void*)f_12965},
{"f_12969ChickenBridge.scm",(void*)f_12969},
{"f_12930ChickenBridge.scm",(void*)f_12930},
{"f_12934ChickenBridge.scm",(void*)f_12934},
{"f_12895ChickenBridge.scm",(void*)f_12895},
{"f_12899ChickenBridge.scm",(void*)f_12899},
{"f_12827ChickenBridge.scm",(void*)f_12827},
{"f_12830ChickenBridge.scm",(void*)f_12830},
{"f_12833ChickenBridge.scm",(void*)f_12833},
{"f_12866ChickenBridge.scm",(void*)f_12866},
{"f_12874ChickenBridge.scm",(void*)f_12874},
{"f_12839ChickenBridge.scm",(void*)f_12839},
{"f_6011ChickenBridge.scm",(void*)f_6011},
{"f_6028ChickenBridge.scm",(void*)f_6028},
{"f_12852ChickenBridge.scm",(void*)f_12852},
{"f_12842ChickenBridge.scm",(void*)f_12842},
{"f_12845ChickenBridge.scm",(void*)f_12845},
{"f_12381ChickenBridge.scm",(void*)f_12381},
{"f_12385ChickenBridge.scm",(void*)f_12385},
{"f_12388ChickenBridge.scm",(void*)f_12388},
{"f_12391ChickenBridge.scm",(void*)f_12391},
{"f_12560ChickenBridge.scm",(void*)f_12560},
{"f_12573ChickenBridge.scm",(void*)f_12573},
{"f_12577ChickenBridge.scm",(void*)f_12577},
{"f_12397ChickenBridge.scm",(void*)f_12397},
{"f_12553ChickenBridge.scm",(void*)f_12553},
{"f_12534ChickenBridge.scm",(void*)f_12534},
{"f_12541ChickenBridge.scm",(void*)f_12541},
{"f_12545ChickenBridge.scm",(void*)f_12545},
{"f_12403ChickenBridge.scm",(void*)f_12403},
{"f_12409ChickenBridge.scm",(void*)f_12409},
{"f_12493ChickenBridge.scm",(void*)f_12493},
{"f_12495ChickenBridge.scm",(void*)f_12495},
{"f_12517ChickenBridge.scm",(void*)f_12517},
{"f_12524ChickenBridge.scm",(void*)f_12524},
{"f_12528ChickenBridge.scm",(void*)f_12528},
{"f_12514ChickenBridge.scm",(void*)f_12514},
{"f_12510ChickenBridge.scm",(void*)f_12510},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12468ChickenBridge.scm",(void*)f_12468},
{"f_12478ChickenBridge.scm",(void*)f_12478},
{"f_12454ChickenBridge.scm",(void*)f_12454},
{"f_12413ChickenBridge.scm",(void*)f_12413},
{"f_12421ChickenBridge.scm",(void*)f_12421},
{"f_12423ChickenBridge.scm",(void*)f_12423},
{"f_12444ChickenBridge.scm",(void*)f_12444},
{"f_12269ChickenBridge.scm",(void*)f_12269},
{"f_12379ChickenBridge.scm",(void*)f_12379},
{"f_12338ChickenBridge.scm",(void*)f_12338},
{"f_12371ChickenBridge.scm",(void*)f_12371},
{"f_12367ChickenBridge.scm",(void*)f_12367},
{"f_12352ChickenBridge.scm",(void*)f_12352},
{"f_12276ChickenBridge.scm",(void*)f_12276},
{"f_12284ChickenBridge.scm",(void*)f_12284},
{"f_12329ChickenBridge.scm",(void*)f_12329},
{"f_12317ChickenBridge.scm",(void*)f_12317},
{"f_12301ChickenBridge.scm",(void*)f_12301},
{"f_11502ChickenBridge.scm",(void*)f_11502},
{"f_11819ChickenBridge.scm",(void*)f_11819},
{"f_11826ChickenBridge.scm",(void*)f_11826},
{"f_12231ChickenBridge.scm",(void*)f_12231},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12238ChickenBridge.scm",(void*)f_12238},
{"f_12202ChickenBridge.scm",(void*)f_12202},
{"f_12206ChickenBridge.scm",(void*)f_12206},
{"f_12167ChickenBridge.scm",(void*)f_12167},
{"f_12171ChickenBridge.scm",(void*)f_12171},
{"f_12132ChickenBridge.scm",(void*)f_12132},
{"f_12136ChickenBridge.scm",(void*)f_12136},
{"f_11829ChickenBridge.scm",(void*)f_11829},
{"f_12096ChickenBridge.scm",(void*)f_12096},
{"f_12111ChickenBridge.scm",(void*)f_12111},
{"f_12103ChickenBridge.scm",(void*)f_12103},
{"f_12067ChickenBridge.scm",(void*)f_12067},
{"f_12071ChickenBridge.scm",(void*)f_12071},
{"f_12032ChickenBridge.scm",(void*)f_12032},
{"f_12036ChickenBridge.scm",(void*)f_12036},
{"f_11997ChickenBridge.scm",(void*)f_11997},
{"f_12001ChickenBridge.scm",(void*)f_12001},
{"f_11832ChickenBridge.scm",(void*)f_11832},
{"f_11961ChickenBridge.scm",(void*)f_11961},
{"f_11976ChickenBridge.scm",(void*)f_11976},
{"f_11968ChickenBridge.scm",(void*)f_11968},
{"f_11932ChickenBridge.scm",(void*)f_11932},
{"f_11936ChickenBridge.scm",(void*)f_11936},
{"f_11897ChickenBridge.scm",(void*)f_11897},
{"f_11901ChickenBridge.scm",(void*)f_11901},
{"f_11862ChickenBridge.scm",(void*)f_11862},
{"f_11866ChickenBridge.scm",(void*)f_11866},
{"f_11835ChickenBridge.scm",(void*)f_11835},
{"f_11838ChickenBridge.scm",(void*)f_11838},
{"f_11506ChickenBridge.scm",(void*)f_11506},
{"f_11509ChickenBridge.scm",(void*)f_11509},
{"f_11783ChickenBridge.scm",(void*)f_11783},
{"f_11787ChickenBridge.scm",(void*)f_11787},
{"f_11790ChickenBridge.scm",(void*)f_11790},
{"f_11793ChickenBridge.scm",(void*)f_11793},
{"f_11796ChickenBridge.scm",(void*)f_11796},
{"f_11809ChickenBridge.scm",(void*)f_11809},
{"f_11799ChickenBridge.scm",(void*)f_11799},
{"f_11515ChickenBridge.scm",(void*)f_11515},
{"f_11522ChickenBridge.scm",(void*)f_11522},
{"f_11753ChickenBridge.scm",(void*)f_11753},
{"f_11768ChickenBridge.scm",(void*)f_11768},
{"f_11760ChickenBridge.scm",(void*)f_11760},
{"f_11724ChickenBridge.scm",(void*)f_11724},
{"f_11728ChickenBridge.scm",(void*)f_11728},
{"f_11689ChickenBridge.scm",(void*)f_11689},
{"f_11693ChickenBridge.scm",(void*)f_11693},
{"f_11525ChickenBridge.scm",(void*)f_11525},
{"f_11653ChickenBridge.scm",(void*)f_11653},
{"f_11668ChickenBridge.scm",(void*)f_11668},
{"f_11660ChickenBridge.scm",(void*)f_11660},
{"f_11624ChickenBridge.scm",(void*)f_11624},
{"f_11628ChickenBridge.scm",(void*)f_11628},
{"f_11589ChickenBridge.scm",(void*)f_11589},
{"f_11593ChickenBridge.scm",(void*)f_11593},
{"f_11528ChickenBridge.scm",(void*)f_11528},
{"f_11531ChickenBridge.scm",(void*)f_11531},
{"f_11546ChickenBridge.scm",(void*)f_11546},
{"f_11568ChickenBridge.scm",(void*)f_11568},
{"f_11552ChickenBridge.scm",(void*)f_11552},
{"f_11560ChickenBridge.scm",(void*)f_11560},
{"f_11534ChickenBridge.scm",(void*)f_11534},
{"f_11537ChickenBridge.scm",(void*)f_11537},
{"f_11419ChickenBridge.scm",(void*)f_11419},
{"f_11410ChickenBridge.scm",(void*)f_11410},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_11383ChickenBridge.scm",(void*)f_11383},
{"f_11365ChickenBridge.scm",(void*)f_11365},
{"f_11347ChickenBridge.scm",(void*)f_11347},
{"f_11338ChickenBridge.scm",(void*)f_11338},
{"f_11329ChickenBridge.scm",(void*)f_11329},
{"f_11107ChickenBridge.scm",(void*)f_11107},
{"f_11157ChickenBridge.scm",(void*)f_11157},
{"f_11302ChickenBridge.scm",(void*)f_11302},
{"f_11183ChickenBridge.scm",(void*)f_11183},
{"f_11298ChickenBridge.scm",(void*)f_11298},
{"f_11283ChickenBridge.scm",(void*)f_11283},
{"f_11264ChickenBridge.scm",(void*)f_11264},
{"f_11237ChickenBridge.scm",(void*)f_11237},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11160ChickenBridge.scm",(void*)f_11160},
{"f_11110ChickenBridge.scm",(void*)f_11110},
{"f_11116ChickenBridge.scm",(void*)f_11116},
{"f_11132ChickenBridge.scm",(void*)f_11132},
{"f_11135ChickenBridge.scm",(void*)f_11135},
{"f_10633ChickenBridge.scm",(void*)f_10633},
{"f_11097ChickenBridge.scm",(void*)f_11097},
{"f_10637ChickenBridge.scm",(void*)f_10637},
{"f_11069ChickenBridge.scm",(void*)f_11069},
{"f_11084ChickenBridge.scm",(void*)f_11084},
{"f_11076ChickenBridge.scm",(void*)f_11076},
{"f_11040ChickenBridge.scm",(void*)f_11040},
{"f_11044ChickenBridge.scm",(void*)f_11044},
{"f_11005ChickenBridge.scm",(void*)f_11005},
{"f_11009ChickenBridge.scm",(void*)f_11009},
{"f_10970ChickenBridge.scm",(void*)f_10970},
{"f_10974ChickenBridge.scm",(void*)f_10974},
{"f_10640ChickenBridge.scm",(void*)f_10640},
{"f_10934ChickenBridge.scm",(void*)f_10934},
{"f_10949ChickenBridge.scm",(void*)f_10949},
{"f_10941ChickenBridge.scm",(void*)f_10941},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_10909ChickenBridge.scm",(void*)f_10909},
{"f_10870ChickenBridge.scm",(void*)f_10870},
{"f_10874ChickenBridge.scm",(void*)f_10874},
{"f_10835ChickenBridge.scm",(void*)f_10835},
{"f_10839ChickenBridge.scm",(void*)f_10839},
{"f_10643ChickenBridge.scm",(void*)f_10643},
{"f_10799ChickenBridge.scm",(void*)f_10799},
{"f_10814ChickenBridge.scm",(void*)f_10814},
{"f_10806ChickenBridge.scm",(void*)f_10806},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10774ChickenBridge.scm",(void*)f_10774},
{"f_10735ChickenBridge.scm",(void*)f_10735},
{"f_10739ChickenBridge.scm",(void*)f_10739},
{"f_10700ChickenBridge.scm",(void*)f_10700},
{"f_10704ChickenBridge.scm",(void*)f_10704},
{"f_10646ChickenBridge.scm",(void*)f_10646},
{"f_10649ChickenBridge.scm",(void*)f_10649},
{"f_10652ChickenBridge.scm",(void*)f_10652},
{"f_10667ChickenBridge.scm",(void*)f_10667},
{"f_10679ChickenBridge.scm",(void*)f_10679},
{"f_10658ChickenBridge.scm",(void*)f_10658},
{"f_10661ChickenBridge.scm",(void*)f_10661},
{"f_10557ChickenBridge.scm",(void*)f_10557},
{"f_10561ChickenBridge.scm",(void*)f_10561},
{"f_10580ChickenBridge.scm",(void*)f_10580},
{"f_10590ChickenBridge.scm",(void*)f_10590},
{"f_10592ChickenBridge.scm",(void*)f_10592},
{"f_10609ChickenBridge.scm",(void*)f_10609},
{"f_10612ChickenBridge.scm",(void*)f_10612},
{"f_10623ChickenBridge.scm",(void*)f_10623},
{"f_10564ChickenBridge.scm",(void*)f_10564},
{"f_10294ChickenBridge.scm",(void*)f_10294},
{"f_10547ChickenBridge.scm",(void*)f_10547},
{"f_10298ChickenBridge.scm",(void*)f_10298},
{"f_10519ChickenBridge.scm",(void*)f_10519},
{"f_10534ChickenBridge.scm",(void*)f_10534},
{"f_10526ChickenBridge.scm",(void*)f_10526},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10494ChickenBridge.scm",(void*)f_10494},
{"f_10455ChickenBridge.scm",(void*)f_10455},
{"f_10459ChickenBridge.scm",(void*)f_10459},
{"f_10301ChickenBridge.scm",(void*)f_10301},
{"f_10419ChickenBridge.scm",(void*)f_10419},
{"f_10434ChickenBridge.scm",(void*)f_10434},
{"f_10426ChickenBridge.scm",(void*)f_10426},
{"f_10390ChickenBridge.scm",(void*)f_10390},
{"f_10394ChickenBridge.scm",(void*)f_10394},
{"f_10355ChickenBridge.scm",(void*)f_10355},
{"f_10359ChickenBridge.scm",(void*)f_10359},
{"f_10304ChickenBridge.scm",(void*)f_10304},
{"f_10307ChickenBridge.scm",(void*)f_10307},
{"f_10310ChickenBridge.scm",(void*)f_10310},
{"f_10322ChickenBridge.scm",(void*)f_10322},
{"f_10334ChickenBridge.scm",(void*)f_10334},
{"f_10316ChickenBridge.scm",(void*)f_10316},
{"f_10258ChickenBridge.scm",(void*)f_10258},
{"f_10262ChickenBridge.scm",(void*)f_10262},
{"f_10284ChickenBridge.scm",(void*)f_10284},
{"f_10278ChickenBridge.scm",(void*)f_10278},
{"f_10271ChickenBridge.scm",(void*)f_10271},
{"f_10011ChickenBridge.scm",(void*)f_10011},
{"f_10015ChickenBridge.scm",(void*)f_10015},
{"f_10228ChickenBridge.scm",(void*)f_10228},
{"f_10243ChickenBridge.scm",(void*)f_10243},
{"f_10235ChickenBridge.scm",(void*)f_10235},
{"f_10199ChickenBridge.scm",(void*)f_10199},
{"f_10203ChickenBridge.scm",(void*)f_10203},
{"f_10164ChickenBridge.scm",(void*)f_10164},
{"f_10168ChickenBridge.scm",(void*)f_10168},
{"f_10018ChickenBridge.scm",(void*)f_10018},
{"f_10128ChickenBridge.scm",(void*)f_10128},
{"f_10143ChickenBridge.scm",(void*)f_10143},
{"f_10135ChickenBridge.scm",(void*)f_10135},
{"f_10099ChickenBridge.scm",(void*)f_10099},
{"f_10103ChickenBridge.scm",(void*)f_10103},
{"f_10064ChickenBridge.scm",(void*)f_10064},
{"f_10068ChickenBridge.scm",(void*)f_10068},
{"f_10021ChickenBridge.scm",(void*)f_10021},
{"f_10024ChickenBridge.scm",(void*)f_10024},
{"f_10027ChickenBridge.scm",(void*)f_10027},
{"f_10035ChickenBridge.scm",(void*)f_10035},
{"f_10043ChickenBridge.scm",(void*)f_10043},
{"f_10033ChickenBridge.scm",(void*)f_10033},
{"f_9796ChickenBridge.scm",(void*)f_9796},
{"f_9800ChickenBridge.scm",(void*)f_9800},
{"f_10009ChickenBridge.scm",(void*)f_10009},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9974ChickenBridge.scm",(void*)f_9974},
{"f_9830ChickenBridge.scm",(void*)f_9830},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9839ChickenBridge.scm",(void*)f_9839},
{"f_9842ChickenBridge.scm",(void*)f_9842},
{"f_9930ChickenBridge.scm",(void*)f_9930},
{"f_9845ChickenBridge.scm",(void*)f_9845},
{"f_9924ChickenBridge.scm",(void*)f_9924},
{"f_9851ChickenBridge.scm",(void*)f_9851},
{"f_9854ChickenBridge.scm",(void*)f_9854},
{"f_9806ChickenBridge.scm",(void*)f_9806},
{"f_9809ChickenBridge.scm",(void*)f_9809},
{"f_9816ChickenBridge.scm",(void*)f_9816},
{"f_9326ChickenBridge.scm",(void*)f_9326},
{"f_9330ChickenBridge.scm",(void*)f_9330},
{"f_9766ChickenBridge.scm",(void*)f_9766},
{"f_9781ChickenBridge.scm",(void*)f_9781},
{"f_9773ChickenBridge.scm",(void*)f_9773},
{"f_9737ChickenBridge.scm",(void*)f_9737},
{"f_9741ChickenBridge.scm",(void*)f_9741},
{"f_9702ChickenBridge.scm",(void*)f_9702},
{"f_9706ChickenBridge.scm",(void*)f_9706},
{"f_9667ChickenBridge.scm",(void*)f_9667},
{"f_9671ChickenBridge.scm",(void*)f_9671},
{"f_9333ChickenBridge.scm",(void*)f_9333},
{"f_9631ChickenBridge.scm",(void*)f_9631},
{"f_9646ChickenBridge.scm",(void*)f_9646},
{"f_9638ChickenBridge.scm",(void*)f_9638},
{"f_9602ChickenBridge.scm",(void*)f_9602},
{"f_9606ChickenBridge.scm",(void*)f_9606},
{"f_9567ChickenBridge.scm",(void*)f_9567},
{"f_9571ChickenBridge.scm",(void*)f_9571},
{"f_9532ChickenBridge.scm",(void*)f_9532},
{"f_9536ChickenBridge.scm",(void*)f_9536},
{"f_9336ChickenBridge.scm",(void*)f_9336},
{"f_9496ChickenBridge.scm",(void*)f_9496},
{"f_9511ChickenBridge.scm",(void*)f_9511},
{"f_9503ChickenBridge.scm",(void*)f_9503},
{"f_9467ChickenBridge.scm",(void*)f_9467},
{"f_9471ChickenBridge.scm",(void*)f_9471},
{"f_9432ChickenBridge.scm",(void*)f_9432},
{"f_9436ChickenBridge.scm",(void*)f_9436},
{"f_9397ChickenBridge.scm",(void*)f_9397},
{"f_9401ChickenBridge.scm",(void*)f_9401},
{"f_9339ChickenBridge.scm",(void*)f_9339},
{"f_9342ChickenBridge.scm",(void*)f_9342},
{"f_9345ChickenBridge.scm",(void*)f_9345},
{"f_9368ChickenBridge.scm",(void*)f_9368},
{"f_9376ChickenBridge.scm",(void*)f_9376},
{"f_9351ChickenBridge.scm",(void*)f_9351},
{"f_9354ChickenBridge.scm",(void*)f_9354},
{"f_9246ChickenBridge.scm",(void*)f_9246},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9165ChickenBridge.scm",(void*)f_9165},
{"f_9169ChickenBridge.scm",(void*)f_9169},
{"f_9172ChickenBridge.scm",(void*)f_9172},
{"f_8910ChickenBridge.scm",(void*)f_8910},
{"f_8914ChickenBridge.scm",(void*)f_8914},
{"f_9135ChickenBridge.scm",(void*)f_9135},
{"f_9150ChickenBridge.scm",(void*)f_9150},
{"f_9142ChickenBridge.scm",(void*)f_9142},
{"f_9106ChickenBridge.scm",(void*)f_9106},
{"f_9110ChickenBridge.scm",(void*)f_9110},
{"f_9071ChickenBridge.scm",(void*)f_9071},
{"f_9075ChickenBridge.scm",(void*)f_9075},
{"f_8917ChickenBridge.scm",(void*)f_8917},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9050ChickenBridge.scm",(void*)f_9050},
{"f_9042ChickenBridge.scm",(void*)f_9042},
{"f_9006ChickenBridge.scm",(void*)f_9006},
{"f_9010ChickenBridge.scm",(void*)f_9010},
{"f_8971ChickenBridge.scm",(void*)f_8971},
{"f_8975ChickenBridge.scm",(void*)f_8975},
{"f_8920ChickenBridge.scm",(void*)f_8920},
{"f_8923ChickenBridge.scm",(void*)f_8923},
{"f_8926ChickenBridge.scm",(void*)f_8926},
{"f_8938ChickenBridge.scm",(void*)f_8938},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_8932ChickenBridge.scm",(void*)f_8932},
{"f_8795ChickenBridge.scm",(void*)f_8795},
{"f_8908ChickenBridge.scm",(void*)f_8908},
{"f_8805ChickenBridge.scm",(void*)f_8805},
{"f_8893ChickenBridge.scm",(void*)f_8893},
{"f_8904ChickenBridge.scm",(void*)f_8904},
{"f_8900ChickenBridge.scm",(void*)f_8900},
{"f_8808ChickenBridge.scm",(void*)f_8808},
{"f_8890ChickenBridge.scm",(void*)f_8890},
{"f_8816ChickenBridge.scm",(void*)f_8816},
{"f_8880ChickenBridge.scm",(void*)f_8880},
{"f_8825ChickenBridge.scm",(void*)f_8825},
{"f_8844ChickenBridge.scm",(void*)f_8844},
{"f_8873ChickenBridge.scm",(void*)f_8873},
{"f_8854ChickenBridge.scm",(void*)f_8854},
{"f_8869ChickenBridge.scm",(void*)f_8869},
{"f_8857ChickenBridge.scm",(void*)f_8857},
{"f_8828ChickenBridge.scm",(void*)f_8828},
{"f_8838ChickenBridge.scm",(void*)f_8838},
{"f_8819ChickenBridge.scm",(void*)f_8819},
{"f_8822ChickenBridge.scm",(void*)f_8822},
{"f_8749ChickenBridge.scm",(void*)f_8749},
{"f_8740ChickenBridge.scm",(void*)f_8740},
{"f_8439ChickenBridge.scm",(void*)f_8439},
{"f_8446ChickenBridge.scm",(void*)f_8446},
{"f_8735ChickenBridge.scm",(void*)f_8735},
{"f_8449ChickenBridge.scm",(void*)f_8449},
{"f_8720ChickenBridge.scm",(void*)f_8720},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8704ChickenBridge.scm",(void*)f_8704},
{"f_8707ChickenBridge.scm",(void*)f_8707},
{"f_8675ChickenBridge.scm",(void*)f_8675},
{"f_8698ChickenBridge.scm",(void*)f_8698},
{"f_8681ChickenBridge.scm",(void*)f_8681},
{"f_8685ChickenBridge.scm",(void*)f_8685},
{"f_8452ChickenBridge.scm",(void*)f_8452},
{"f_8458ChickenBridge.scm",(void*)f_8458},
{"f_8550ChickenBridge.scm",(void*)f_8550},
{"f_8662ChickenBridge.scm",(void*)f_8662},
{"f_8669ChickenBridge.scm",(void*)f_8669},
{"f_8573ChickenBridge.scm",(void*)f_8573},
{"f_8575ChickenBridge.scm",(void*)f_8575},
{"f_8624ChickenBridge.scm",(void*)f_8624},
{"f_8659ChickenBridge.scm",(void*)f_8659},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8793ChickenBridge.scm",(void*)f_8793},
{"f_8768ChickenBridge.scm",(void*)f_8768},
{"f_8789ChickenBridge.scm",(void*)f_8789},
{"f_8785ChickenBridge.scm",(void*)f_8785},
{"f_8777ChickenBridge.scm",(void*)f_8777},
{"f_8641ChickenBridge.scm",(void*)f_8641},
{"f_8634ChickenBridge.scm",(void*)f_8634},
{"f_8582ChickenBridge.scm",(void*)f_8582},
{"f_8622ChickenBridge.scm",(void*)f_8622},
{"f_8586ChickenBridge.scm",(void*)f_8586},
{"f_8618ChickenBridge.scm",(void*)f_8618},
{"f_8605ChickenBridge.scm",(void*)f_8605},
{"f_8613ChickenBridge.scm",(void*)f_8613},
{"f_8609ChickenBridge.scm",(void*)f_8609},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8592ChickenBridge.scm",(void*)f_8592},
{"f_8566ChickenBridge.scm",(void*)f_8566},
{"f_8553ChickenBridge.scm",(void*)f_8553},
{"f_8562ChickenBridge.scm",(void*)f_8562},
{"f_8557ChickenBridge.scm",(void*)f_8557},
{"f_8464ChickenBridge.scm",(void*)f_8464},
{"f_8544ChickenBridge.scm",(void*)f_8544},
{"f_8524ChickenBridge.scm",(void*)f_8524},
{"f_8530ChickenBridge.scm",(void*)f_8530},
{"f_8541ChickenBridge.scm",(void*)f_8541},
{"f_8521ChickenBridge.scm",(void*)f_8521},
{"f_8509ChickenBridge.scm",(void*)f_8509},
{"f_8512ChickenBridge.scm",(void*)f_8512},
{"f_8467ChickenBridge.scm",(void*)f_8467},
{"f_8503ChickenBridge.scm",(void*)f_8503},
{"f_8498ChickenBridge.scm",(void*)f_8498},
{"f_8470ChickenBridge.scm",(void*)f_8470},
{"f_8483ChickenBridge.scm",(void*)f_8483},
{"f_8473ChickenBridge.scm",(void*)f_8473},
{"f_8476ChickenBridge.scm",(void*)f_8476},
{"f_8479ChickenBridge.scm",(void*)f_8479},
{"f_8316ChickenBridge.scm",(void*)f_8316},
{"f_8375ChickenBridge.scm",(void*)f_8375},
{"f_8385ChickenBridge.scm",(void*)f_8385},
{"f_8387ChickenBridge.scm",(void*)f_8387},
{"f_8416ChickenBridge.scm",(void*)f_8416},
{"f_8421ChickenBridge.scm",(void*)f_8421},
{"f_8406ChickenBridge.scm",(void*)f_8406},
{"f_8337ChickenBridge.scm",(void*)f_8337},
{"f_8369ChickenBridge.scm",(void*)f_8369},
{"f_8297ChickenBridge.scm",(void*)f_8297},
{"f_8304ChickenBridge.scm",(void*)f_8304},
{"f_8311ChickenBridge.scm",(void*)f_8311},
{"f_8278ChickenBridge.scm",(void*)f_8278},
{"f_8285ChickenBridge.scm",(void*)f_8285},
{"f_8292ChickenBridge.scm",(void*)f_8292},
{"f_8098ChickenBridge.scm",(void*)f_8098},
{"f_8102ChickenBridge.scm",(void*)f_8102},
{"f_8105ChickenBridge.scm",(void*)f_8105},
{"f_8108ChickenBridge.scm",(void*)f_8108},
{"f_8111ChickenBridge.scm",(void*)f_8111},
{"f_8268ChickenBridge.scm",(void*)f_8268},
{"f_8275ChickenBridge.scm",(void*)f_8275},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8117ChickenBridge.scm",(void*)f_8117},
{"f_8123ChickenBridge.scm",(void*)f_8123},
{"f_8129ChickenBridge.scm",(void*)f_8129},
{"f_8192ChickenBridge.scm",(void*)f_8192},
{"f_8206ChickenBridge.scm",(void*)f_8206},
{"f_8132ChickenBridge.scm",(void*)f_8132},
{"f_8135ChickenBridge.scm",(void*)f_8135},
{"f_8141ChickenBridge.scm",(void*)f_8141},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_8144ChickenBridge.scm",(void*)f_8144},
{"f_8147ChickenBridge.scm",(void*)f_8147},
{"f_8088ChickenBridge.scm",(void*)f_8088},
{"f_8033ChickenBridge.scm",(void*)f_8033},
{"f_8024ChickenBridge.scm",(void*)f_8024},
{"f_7907ChickenBridge.scm",(void*)f_7907},
{"f_7898ChickenBridge.scm",(void*)f_7898},
{"f_7889ChickenBridge.scm",(void*)f_7889},
{"f_7880ChickenBridge.scm",(void*)f_7880},
{"f_7871ChickenBridge.scm",(void*)f_7871},
{"f_7853ChickenBridge.scm",(void*)f_7853},
{"f_7844ChickenBridge.scm",(void*)f_7844},
{"f_7835ChickenBridge.scm",(void*)f_7835},
{"f_7817ChickenBridge.scm",(void*)f_7817},
{"f_7808ChickenBridge.scm",(void*)f_7808},
{"f_7799ChickenBridge.scm",(void*)f_7799},
{"f_7784ChickenBridge.scm",(void*)f_7784},
{"f_7739ChickenBridge.scm",(void*)f_7739},
{"f_7721ChickenBridge.scm",(void*)f_7721},
{"f_7712ChickenBridge.scm",(void*)f_7712},
{"f_7685ChickenBridge.scm",(void*)f_7685},
{"f_7667ChickenBridge.scm",(void*)f_7667},
{"f_7649ChickenBridge.scm",(void*)f_7649},
{"f_7640ChickenBridge.scm",(void*)f_7640},
{"f_7628ChickenBridge.scm",(void*)f_7628},
{"f_7512ChickenBridge.scm",(void*)f_7512},
{"f_7626ChickenBridge.scm",(void*)f_7626},
{"f_7527ChickenBridge.scm",(void*)f_7527},
{"f_7557ChickenBridge.scm",(void*)f_7557},
{"f_7576ChickenBridge.scm",(void*)f_7576},
{"f_7561ChickenBridge.scm",(void*)f_7561},
{"f_7540ChickenBridge.scm",(void*)f_7540},
{"f_7390ChickenBridge.scm",(void*)f_7390},
{"f_7510ChickenBridge.scm",(void*)f_7510},
{"f_7405ChickenBridge.scm",(void*)f_7405},
{"f_7435ChickenBridge.scm",(void*)f_7435},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_7439ChickenBridge.scm",(void*)f_7439},
{"f_7418ChickenBridge.scm",(void*)f_7418},
{"f_7293ChickenBridge.scm",(void*)f_7293},
{"f_7388ChickenBridge.scm",(void*)f_7388},
{"f_7308ChickenBridge.scm",(void*)f_7308},
{"f_7354ChickenBridge.scm",(void*)f_7354},
{"f_7339ChickenBridge.scm",(void*)f_7339},
{"f_7321ChickenBridge.scm",(void*)f_7321},
{"f_7240ChickenBridge.scm",(void*)f_7240},
{"f_7278ChickenBridge.scm",(void*)f_7278},
{"f_7285ChickenBridge.scm",(void*)f_7285},
{"f_7263ChickenBridge.scm",(void*)f_7263},
{"f_7204ChickenBridge.scm",(void*)f_7204},
{"f_7214ChickenBridge.scm",(void*)f_7214},
{"f_7216ChickenBridge.scm",(void*)f_7216},
{"f_7194ChickenBridge.scm",(void*)f_7194},
{"f_7142ChickenBridge.scm",(void*)f_7142},
{"f_7179ChickenBridge.scm",(void*)f_7179},
{"f_7146ChickenBridge.scm",(void*)f_7146},
{"f_7162ChickenBridge.scm",(void*)f_7162},
{"f_7164ChickenBridge.scm",(void*)f_7164},
{"f_7129ChickenBridge.scm",(void*)f_7129},
{"f_7123ChickenBridge.scm",(void*)f_7123},
{"f_7104ChickenBridge.scm",(void*)f_7104},
{"f_7085ChickenBridge.scm",(void*)f_7085},
{"f_7079ChickenBridge.scm",(void*)f_7079},
{"f_7039ChickenBridge.scm",(void*)f_7039},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_6976ChickenBridge.scm",(void*)f_6976},
{"f_6970ChickenBridge.scm",(void*)f_6970},
{"f_6964ChickenBridge.scm",(void*)f_6964},
{"f_6958ChickenBridge.scm",(void*)f_6958},
{"f_6952ChickenBridge.scm",(void*)f_6952},
{"f_6929ChickenBridge.scm",(void*)f_6929},
{"f_6946ChickenBridge.scm",(void*)f_6946},
{"f_6871ChickenBridge.scm",(void*)f_6871},
{"f_6923ChickenBridge.scm",(void*)f_6923},
{"f_6907ChickenBridge.scm",(void*)f_6907},
{"f_6888ChickenBridge.scm",(void*)f_6888},
{"f_6865ChickenBridge.scm",(void*)f_6865},
{"f_6777ChickenBridge.scm",(void*)f_6777},
{"f_6823ChickenBridge.scm",(void*)f_6823},
{"f_6771ChickenBridge.scm",(void*)f_6771},
{"f_6712ChickenBridge.scm",(void*)f_6712},
{"f_6725ChickenBridge.scm",(void*)f_6725},
{"f_6761ChickenBridge.scm",(void*)f_6761},
{"f_6706ChickenBridge.scm",(void*)f_6706},
{"f_6611ChickenBridge.scm",(void*)f_6611},
{"f_6615ChickenBridge.scm",(void*)f_6615},
{"f_6618ChickenBridge.scm",(void*)f_6618},
{"f_6630ChickenBridge.scm",(void*)f_6630},
{"f_6652ChickenBridge.scm",(void*)f_6652},
{"f_6605ChickenBridge.scm",(void*)f_6605},
{"f_6599ChickenBridge.scm",(void*)f_6599},
{"f_6539ChickenBridge.scm",(void*)f_6539},
{"f_6551ChickenBridge.scm",(void*)f_6551},
{"f_6546ChickenBridge.scm",(void*)f_6546},
{"f_6541ChickenBridge.scm",(void*)f_6541},
{"f_6520ChickenBridge.scm",(void*)f_6520},
{"f_6514ChickenBridge.scm",(void*)f_6514},
{"f_6508ChickenBridge.scm",(void*)f_6508},
{"f_6426ChickenBridge.scm",(void*)f_6426},
{"f_6440ChickenBridge.scm",(void*)f_6440},
{"f_6407ChickenBridge.scm",(void*)f_6407},
{"f_6394ChickenBridge.scm",(void*)f_6394},
{"f_6384ChickenBridge.scm",(void*)f_6384},
{"f_6373ChickenBridge.scm",(void*)f_6373},
{"f_6366ChickenBridge.scm",(void*)f_6366},
{"f_6355ChickenBridge.scm",(void*)f_6355},
{"f_6317ChickenBridge.scm",(void*)f_6317},
{"f_6310ChickenBridge.scm",(void*)f_6310},
{"f_6286ChickenBridge.scm",(void*)f_6286},
{"f_6235ChickenBridge.scm",(void*)f_6235},
{"f_6201ChickenBridge.scm",(void*)f_6201},
{"f_6174ChickenBridge.scm",(void*)f_6174},
{"f_6133ChickenBridge.scm",(void*)f_6133},
{"f_6139ChickenBridge.scm",(void*)f_6139},
{"f_6149ChickenBridge.scm",(void*)f_6149},
{"f_6047ChickenBridge.scm",(void*)f_6047},
{"f_5989ChickenBridge.scm",(void*)f_5989},
{"f_5949ChickenBridge.scm",(void*)f_5949},
{"f_5979ChickenBridge.scm",(void*)f_5979},
{"f_5901ChickenBridge.scm",(void*)f_5901},
{"f_5935ChickenBridge.scm",(void*)f_5935},
{"f_5878ChickenBridge.scm",(void*)f_5878},
{"f_5858ChickenBridge.scm",(void*)f_5858},
{"f_5844ChickenBridge.scm",(void*)f_5844},
{"f_5834ChickenBridge.scm",(void*)f_5834},
{"f_5824ChickenBridge.scm",(void*)f_5824},
{"f_5814ChickenBridge.scm",(void*)f_5814},
{"f_5804ChickenBridge.scm",(void*)f_5804},
{"f_5771ChickenBridge.scm",(void*)f_5771},
{"f_5780ChickenBridge.scm",(void*)f_5780},
{"f_5785ChickenBridge.scm",(void*)f_5785},
{"f_5760ChickenBridge.scm",(void*)f_5760},
{"f_5765ChickenBridge.scm",(void*)f_5765},
{"f_5467ChickenBridge.scm",(void*)f_5467},
{"f_5477ChickenBridge.scm",(void*)f_5477},
{"f_5728ChickenBridge.scm",(void*)f_5728},
{"f_5480ChickenBridge.scm",(void*)f_5480},
{"f_5483ChickenBridge.scm",(void*)f_5483},
{"f_5498ChickenBridge.scm",(void*)f_5498},
{"f_5508ChickenBridge.scm",(void*)f_5508},
{"f_5510ChickenBridge.scm",(void*)f_5510},
{"f_5569ChickenBridge.scm",(void*)f_5569},
{"f_5579ChickenBridge.scm",(void*)f_5579},
{"f_5696ChickenBridge.scm",(void*)f_5696},
{"f_5684ChickenBridge.scm",(void*)f_5684},
{"f_5682ChickenBridge.scm",(void*)f_5682},
{"f_5669ChickenBridge.scm",(void*)f_5669},
{"f_5623ChickenBridge.scm",(void*)f_5623},
{"f_5650ChickenBridge.scm",(void*)f_5650},
{"f_5629ChickenBridge.scm",(void*)f_5629},
{"f_5563ChickenBridge.scm",(void*)f_5563},
{"f_5522ChickenBridge.scm",(void*)f_5522},
{"f_5535ChickenBridge.scm",(void*)f_5535},
{"f_5745ChickenBridge.scm",(void*)f_5745},
{"f_5736ChickenBridge.scm",(void*)f_5736},
{"f_5744ChickenBridge.scm",(void*)f_5744},
{"f_5747ChickenBridge.scm",(void*)f_5747},
{"f_5755ChickenBridge.scm",(void*)f_5755},
{"f_5169ChickenBridge.scm",(void*)f_5169},
{"f_5422ChickenBridge.scm",(void*)f_5422},
{"f_5455ChickenBridge.scm",(void*)f_5455},
{"f_5451ChickenBridge.scm",(void*)f_5451},
{"f_5440ChickenBridge.scm",(void*)f_5440},
{"f_5436ChickenBridge.scm",(void*)f_5436},
{"f_5330ChickenBridge.scm",(void*)f_5330},
{"f_5333ChickenBridge.scm",(void*)f_5333},
{"f_5336ChickenBridge.scm",(void*)f_5336},
{"f_5416ChickenBridge.scm",(void*)f_5416},
{"f_5241ChickenBridge.scm",(void*)f_5241},
{"f_5182ChickenBridge.scm",(void*)f_5182},
{"f_5339ChickenBridge.scm",(void*)f_5339},
{"f_5346ChickenBridge.scm",(void*)f_5346},
{"f_5406ChickenBridge.scm",(void*)f_5406},
{"f_5392ChickenBridge.scm",(void*)f_5392},
{"f_5358ChickenBridge.scm",(void*)f_5358},
{"f_5384ChickenBridge.scm",(void*)f_5384},
{"f_5319ChickenBridge.scm",(void*)f_5319},
{"f_5366ChickenBridge.scm",(void*)f_5366},
{"f_5362ChickenBridge.scm",(void*)f_5362},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
