/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-30 11:20
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[847];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,54,49,51,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,54,51,53,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,54,52,53,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,54,53,49,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,57,55,55,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,54,54,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,55,53,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,57,49,51,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,57,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,57,57,53,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,48,49,48,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,50,56,32,98,49,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,51,48,32,98,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,50,52,32,46,32,111,98,106,49,50,53,41,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,51,53,32,112,114,111,112,49,51,54,32,46,32,100,101,102,49,51,55,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,51,32,102,49,52,53,41,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,52,49,32,98,49,52,50,41};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,55,51,49,55,54,32,97,49,55,50,49,55,55,32,97,49,55,49,49,55,56,32,97,49,55,48,49,55,57,32,97,49,54,57,49,56,48,32,97,49,54,56,49,56,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,32,97,49,56,54,49,57,51,32,97,49,56,53,49,57,52,32,97,49,56,52,49,57,53,32,97,49,56,51,49,57,54,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,49,57,55,50,48,48,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,50,48,50,50,48,53,32,97,50,48,49,50,48,54,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,48,57,50,49,50,32,97,50,48,56,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,49,55,50,50,48,32,97,50,49,54,50,50,49,32,97,50,49,53,50,50,50,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,50,52,50,50,55,41,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,50,57,50,51,50,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,51,51,50,51,54,41,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,52,55,50,53,48,41,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,53,49,50,53,52,41,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,53,53,50,53,56,41,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,56,51,50,56,54,32,97,50,56,50,50,56,55,41,0,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,56,57,50,57,50,41,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,48,49,51,48,52,41,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,48,57,51,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,12),40,97,54,55,56,54,32,122,51,50,53,41,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,49,57,32,120,49,51,50,48,32,120,50,51,50,49,32,121,49,51,50,50,32,121,50,51,50,51,32,46,32,98,51,50,52,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,12),40,97,54,56,50,54,32,122,51,51,55,41,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,97,54,56,53,50,32,122,51,51,56,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,50,54,32,120,49,51,50,55,32,120,50,51,50,56,32,105,49,51,50,57,32,46,32,97,114,103,115,51,51,48,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,52,48,41,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,52,49,41};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,52,50,32,46,32,97,114,103,115,51,52,51,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,97,55,48,49,52,32,110,51,52,54,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,52,52,32,115,116,101,112,115,51,52,53,41,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,52,55,32,46,32,100,105,103,105,116,115,51,52,56,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,48,54,51,32,120,51,56,57,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,52,57,32,46,32,97,114,103,115,51,53,48,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,57,52,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,15),40,100,111,52,48,51,32,116,97,105,108,52,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,57,53,32,99,111,111,114,100,115,51,57,54,32,46,32,98,97,115,101,51,57,55,41,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,49,51,32,46,32,97,114,103,115,52,49,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,52,50,50,32,108,98,52,50,51,32,117,98,52,50,52,32,109,111,100,101,52,50,53,41,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,12),40,97,55,53,52,49,32,110,52,51,48,41,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,49,53,32,108,98,52,49,54,32,117,98,52,49,55,32,46,32,109,111,100,101,52,49,56,41,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,27),40,100,111,52,52,50,32,105,52,52,52,32,107,52,52,53,32,108,52,52,54,32,116,52,52,55,41,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,51,52,32,107,101,121,110,117,109,52,51,53,32,46,32,97,114,103,115,52,51,54,41,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,52,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,52,53,54,32,98,52,53,55,41,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,52,53,56,41};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,52,53,57,32,46,32,97,114,103,115,52,54,48,41,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,53,48,50,41,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,53,52,53,41,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,53,52,54,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,53,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,53,52,56,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,7),40,97,56,51,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,7),40,97,56,51,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,57,48,32,111,99,116,53,57,49,32,101,114,114,53,57,50,41,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,7),40,97,56,51,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,7),40,97,56,52,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,57,56,32,100,111,99,116,53,57,57,32,101,114,114,63,54,48,48,41,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,39),40,100,111,54,48,51,32,116,97,105,108,54,48,53,32,100,101,102,111,54,48,54,32,116,104,105,115,54,48,55,32,114,101,115,108,54,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,54,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,39),40,100,111,54,49,55,32,116,97,105,108,54,49,57,32,100,101,102,111,54,50,48,32,116,104,105,115,54,50,49,32,114,101,115,108,54,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,54,49,53,41,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,39),40,100,111,54,51,51,32,116,97,105,108,54,51,53,32,100,101,102,111,54,51,54,32,116,104,105,115,54,51,55,32,114,101,115,108,54,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,54,51,49,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,54,52,55,41,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,23),40,100,111,54,53,51,32,116,97,105,108,54,53,53,32,108,97,115,116,54,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,54,53,48,41,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,12),40,97,56,57,55,49,32,122,54,54,48,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,54,52,56,41,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,23),40,100,111,54,54,56,32,116,97,105,108,54,55,48,32,108,97,115,116,54,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,54,54,53,32,111,114,105,103,54,54,54,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,12),40,97,57,49,50,52,32,122,54,55,53,41,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,54,54,49,32,121,54,54,50,41,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,55,53,52,32,108,101,110,103,116,104,55,53,53,32,115,116,114,101,97,109,55,53,54,32,100,101,102,97,117,108,116,55,53,55,32,111,109,105,116,55,53,56,32,114,101,112,115,55,53,57,41,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,55,54,49,32,118,97,108,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,55,54,52,41,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,55,55,48,41,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,55,55,54,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,55,56,53,32,118,97,108,55,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,55,56,56,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,55,57,52,41,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,56,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,56,50,52,41,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,56,50,55,32,118,97,108,56,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,56,51,48,41,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,56,51,54,41,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,56,51,57,32,118,97,108,56,52,48,41};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,56,52,50,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,56,52,56,41,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,56,53,49,32,118,97,108,56,53,50,41};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,13),40,102,95,57,53,55,54,32,120,56,53,52,41,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,56,53,55,32,118,97,108,56,53,56,41};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,56,54,48,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,56,57,57,32,118,97,108,57,48,48,41};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,57,48,50,41,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,12),40,97,57,57,53,52,32,120,57,51,50,41,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,57,50,50,32,100,97,116,97,57,50,51,32,102,111,114,57,50,52,32,114,101,112,57,50,53,32,102,108,97,103,115,57,50,54,32,108,101,110,57,50,55,32,100,112,101,114,57,50,56,32,103,101,116,114,57,50,57,32,109,97,112,114,57,51,48,41,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,57,53,55,41,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,57,53,56,41,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,17),40,100,111,57,54,51,32,105,57,54,53,32,101,57,54,54,41,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,22),40,100,111,57,55,48,32,110,57,55,50,32,101,57,55,51,32,102,57,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,57,53,57,32,46,32,97,114,103,115,57,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,23),40,100,111,57,57,52,32,100,121,110,63,57,57,54,32,115,116,111,112,57,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,57,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,48,49,56,41,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,48,49,57,32,111,98,106,49,48,50,48,41,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,14),40,97,49,48,53,51,48,32,120,49,48,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,48,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,23),40,97,49,48,54,50,52,32,102,110,49,48,56,49,32,111,98,106,49,48,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,48,51,56,32,46,32,97,114,103,115,49,48,51,57,41};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,48,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,49,48,56,41,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,49,49,49,32,118,97,108,49,49,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,23),40,97,49,49,48,53,52,32,102,110,49,50,48,57,32,111,98,106,49,50,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,49,51,55,32,46,32,97,114,103,115,49,49,51,56,41,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,50,49,56,41,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,23),40,97,49,49,55,50,49,32,102,110,49,50,56,48,32,111,98,106,49,50,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,50,51,55,32,46,32,97,114,103,115,49,50,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,50,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,23),40,97,49,50,48,48,56,32,102,110,49,51,51,53,32,111,98,106,49,51,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,50,57,50,32,46,32,97,114,103,115,49,50,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,52,54,32,105,49,51,52,56,32,106,49,51,52,57,32,118,49,51,53,48,41,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,51,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,23),40,97,49,50,51,53,51,32,102,110,49,52,51,48,32,111,98,106,49,52,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,51,53,56,32,46,32,97,114,103,115,49,51,53,57,41,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,14),40,100,111,49,52,52,54,32,105,49,52,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,52,52,49,32,115,116,97,114,116,49,52,52,50,32,115,116,101,112,49,52,52,51,32,119,105,100,116,104,49,52,52,52,32,101,110,100,49,52,52,53,41,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,52,51,57,41,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,52,55,51,41,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,52,55,54,32,118,97,108,49,52,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,52,55,57,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,52,56,53,41,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,52,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,52,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,48,48,32,118,97,108,49,53,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,53,48,51,41,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,14),40,97,49,51,50,51,56,32,105,49,53,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,23),40,97,49,51,50,51,50,32,102,110,49,53,56,52,32,111,98,106,49,53,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,17),40,97,49,51,52,54,57,32,105,116,101,109,49,53,51,57,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,53,57,55,41,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,53,50,57,32,46,32,97,114,103,115,49,53,51,48,41,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,37),40,100,111,49,54,56,52,32,116,97,105,108,49,54,56,54,32,105,110,100,101,120,49,54,56,55,32,116,111,116,97,108,49,54,56,56,41,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,55,56,32,116,97,105,108,49,54,56,48,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,54,55,52,32,102,105,120,63,49,54,55,53,41,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,27),40,100,111,49,55,48,54,32,116,97,105,108,49,55,48,56,32,105,110,100,101,120,49,55,48,57,41,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,55,48,52,32,114,49,55,48,53,41,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,49,53,32,116,97,105,108,49,55,49,55,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,49,49,32,105,116,101,109,49,55,49,51,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,54,57,52,41,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,23),40,97,49,52,53,53,50,32,102,110,49,56,52,51,32,111,98,106,49,56,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,14),40,97,49,52,51,48,54,32,115,49,55,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,51,55,41};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,41),40,100,111,49,55,53,57,32,116,97,105,108,49,55,54,49,32,111,114,100,101,114,49,55,54,50,32,108,105,115,49,55,54,51,32,112,49,55,54,52,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,55,55,49,32,46,32,97,114,103,115,49,55,55,50,41,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,54,56,32,116,97,105,108,49,56,55,48,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,33),40,100,111,49,56,53,56,32,116,97,105,108,49,56,54,48,32,111,117,116,49,56,54,49,32,115,117,109,49,56,54,50,41,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,56,53,54,32,111,117,116,112,117,116,115,49,56,53,55,41,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,57,56,32,108,97,115,116,49,57,48,48,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,55,52,32,105,49,56,55,54,32,106,49,56,55,55,32,102,49,56,55,56,41,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,35),40,100,111,49,56,56,57,32,116,97,105,108,49,56,57,49,32,112,97,115,116,49,56,57,50,32,105,116,101,109,49,56,57,51,41,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,56,53,51,41};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,57,49,56,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,14),40,97,49,53,52,50,52,32,110,49,57,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,23),40,97,49,53,52,49,56,32,102,110,49,57,56,50,32,111,98,106,49,57,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,28),40,97,49,53,54,55,48,32,105,116,101,109,49,57,57,52,32,46,32,97,114,103,115,49,57,57,53,41,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,57,57,51,41,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,57,51,57,32,46,32,97,114,103,115,49,57,52,48,41};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,17),40,100,111,50,48,52,56,32,116,97,105,108,50,48,53,48,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,48,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,48,57,53,32,115,116,114,105,110,103,50,48,57,54,32,112,111,115,105,116,105,111,110,50,48,57,55,41,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,49,48,50,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,49,48,56,41,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,49,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,49,50,51,41,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,49,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,49,50,56,32,116,121,112,101,50,49,50,57,32,112,97,116,116,101,114,110,50,49,51,48,32,112,97,114,115,101,114,50,49,51,49,32,101,109,105,116,101,114,50,49,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,49,51,55,41,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,49,56,49,32,100,101,102,50,49,56,50,41,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,49,56,52,41,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,49,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,49,56,55,41,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,49,56,56,41,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,49,56,57,32,105,50,49,57,48,41,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,49,57,52,41,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,49,57,54,32,112,111,115,105,116,105,111,110,50,49,57,55,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,50,48,50,41,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,50,48,56,41,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,50,49,54,32,112,97,114,115,101,100,50,50,49,55,32,112,111,115,105,116,105,111,110,50,50,49,56,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,50,49,57,41,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,50,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,50,50,57,41,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,50,51,53,41,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,50,52,53,41,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,50,52,54,32,116,121,112,50,50,52,55,41,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,52,57,32,105,110,102,111,50,50,53,48,41,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,53,50,32,100,97,116,97,50,50,53,51,32,105,110,102,111,50,50,53,52,41,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,50,53,53,32,100,97,116,97,50,50,53,54,32,105,110,102,111,50,50,53,55,41,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,50,54,48,32,105,110,102,111,50,50,54,49,32,101,114,114,102,50,50,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,50,54,51,32,105,110,102,111,50,50,54,52,32,101,114,114,102,50,50,54,53,41,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,27),40,102,95,49,54,56,50,52,32,97,114,103,115,50,50,55,56,32,101,114,114,102,50,50,55,57,41,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,50,55,55,41,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,56,55,32,116,97,105,108,50,50,56,57,41,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,36),40,102,95,49,54,56,51,50,32,117,110,105,116,50,50,56,49,32,105,110,102,111,50,50,56,50,32,101,114,114,102,50,50,56,51,41,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,50,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,8),40,97,49,55,48,51,48,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,26),40,97,49,55,48,52,48,32,97,50,51,49,57,32,98,50,51,50,48,32,99,50,51,50,49,41,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,8),40,97,49,55,49,51,54,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,26),40,97,49,55,49,53,48,32,97,50,51,51,53,32,98,50,51,51,54,32,99,50,51,51,55,41,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,51,48,32,105,50,51,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,8),40,97,49,55,50,48,51,41};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,26),40,97,49,55,50,49,55,32,97,50,51,53,55,32,98,50,51,53,56,32,99,50,51,53,57,41,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,53,50,32,105,50,51,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,8),40,97,49,55,50,57,50,41};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,26),40,97,49,55,50,57,56,32,97,50,51,55,54,32,98,50,51,55,55,32,99,50,51,55,56,41,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,8),40,100,111,50,51,55,50,41};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,8),40,97,49,55,51,51,49,41};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,26),40,97,49,55,51,51,55,32,97,50,51,57,52,32,98,50,51,57,53,32,99,50,51,57,54,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,51,48,54,32,116,111,107,101,110,115,50,51,48,55,32,102,111,114,99,101,45,97,110,100,50,51,48,56,32,108,101,118,101,108,50,51,48,57,32,116,114,97,99,101,50,51,49,48,32,101,114,114,102,50,51,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,53,55,49,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,53,55,53,41,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,53,56,52,41,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,53,56,53,32,116,121,112,50,50,53,56,54,41,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,51,53,32,116,111,107,115,50,54,51,55,41,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,54,51,49,32,116,121,112,50,54,51,50,41,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,29),40,100,111,50,54,55,49,32,119,50,50,54,55,51,32,111,107,50,54,55,52,32,108,105,50,54,55,53,41,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,54,57,41};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,54,54,52,41,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,56,51,48,32,101,114,114,102,50,56,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,52,48,32,102,51,48,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,51,51,32,102,51,48,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,8),40,97,49,54,57,48,49,41};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,44),40,97,49,54,57,48,56,32,115,117,99,99,101,115,115,50,51,48,49,32,114,101,115,117,108,116,115,50,51,48,50,32,114,101,109,97,105,110,115,50,51,48,51,41,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,17),40,97,49,54,56,57,53,32,101,114,114,102,50,50,57,57,41,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,48,49,55,32,114,117,108,101,51,48,49,56,32,116,111,107,101,110,115,51,48,49,57,32,116,114,97,99,101,63,51,48,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,54,48,32,116,97,105,108,51,48,54,50,41,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,48,53,56,32,108,101,118,51,48,53,57,41,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,54,56,32,116,97,105,108,51,48,55,48,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,48,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,48,55,53,41,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,48,55,55,41,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,48,56,49,41,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,48,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,50,49,51,32,120,51,50,49,52,41};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,50,49,53,41,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,50,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,50,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,50,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,50,50,55,41,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,50,50,56,32,120,51,50,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,50,51,48,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,50,51,51,41,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,52,49,32,97,51,50,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,50,51,57,41,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,53,51,32,108,51,50,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,50,53,49,32,97,99,99,101,115,115,111,114,51,50,53,50,41};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,50,52,56,32,99,108,97,117,115,101,115,51,50,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,50,53,57,32,111,112,115,51,50,54,48,41};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,50,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,50,54,50,32,118,97,108,51,50,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,56,53,32,116,97,105,108,51,50,56,55,41,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,56,48,32,116,97,105,108,51,50,56,50,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,20),40,100,111,51,50,55,48,32,104,51,50,55,50,32,108,51,50,55,51,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,50,54,52,32,102,111,114,109,115,51,50,54,53,32,97,114,103,115,51,50,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,50,57,57,32,99,108,97,117,115,101,115,51,51,48,48,32,111,112,115,51,51,48,49,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,49,57,32,110,101,120,116,51,51,50,49,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,51,48,53,32,99,108,97,117,115,101,115,51,51,48,54,32,111,112,115,51,51,48,55,41,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,8),40,97,50,48,52,56,48,41};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,30),40,97,50,48,52,57,56,32,99,108,97,117,115,101,51,52,48,48,32,105,103,110,111,114,101,51,52,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,51,57,55,32,99,108,97,117,115,101,115,51,51,57,56,32,111,112,115,51,51,57,57,41,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,49,56,32,110,101,120,116,51,52,50,48,41,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,52,48,51,32,99,108,97,117,115,101,115,51,52,48,52,32,111,112,115,51,52,48,53,41};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,56,53,32,110,101,120,116,51,52,56,55,41,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,52,55,53,32,99,108,97,117,115,101,115,51,52,55,54,32,111,112,115,51,52,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,50,51,32,110,101,101,100,51,53,50,53,32,110,101,120,116,51,53,50,54,41,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,53,49,51,32,99,108,97,117,115,101,115,51,53,49,52,32,111,112,115,51,53,49,53,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,8),40,100,111,51,53,54,55,41};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,53,53,56,32,99,108,97,117,115,101,115,51,53,53,57,32,111,112,115,51,53,54,48,41};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,53,55,55,32,99,108,97,117,115,101,115,51,53,55,56,32,111,112,115,51,53,55,57,41,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,53,57,49,32,99,108,97,117,115,101,115,51,53,57,50,32,111,112,115,51,53,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,54,53,56,32,116,121,112,101,51,54,53,57,32,97,99,99,51,54,54,48,32,104,101,97,100,51,54,54,49,41,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,54,54,50,41};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,54,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,49,48,32,97,51,54,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,49,56,32,99,51,54,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,54,51,55,32,99,108,97,117,115,101,115,51,54,51,56,32,111,112,115,51,54,51,57,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,55,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,55,51,57,32,99,108,97,117,115,101,115,51,55,52,48,32,111,112,115,51,55,52,49,41,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,55,54,48,32,99,108,97,117,115,101,115,51,55,54,49,32,111,112,115,51,55,54,50,41,0,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,55,55,54,32,99,108,97,117,115,101,115,51,55,55,55,32,111,112,115,51,55,55,56,41,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,8),40,97,50,50,51,55,49,41};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,20),40,97,50,50,51,56,52,32,97,51,56,48,51,32,98,51,56,48,52,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,38),40,100,111,51,55,57,54,32,111,112,51,55,57,56,32,99,108,97,117,115,101,51,55,57,57,32,114,101,109,97,105,110,115,51,56,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,55,57,48,32,99,108,97,117,115,101,115,51,55,57,49,32,111,112,115,51,55,57,50,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,8),40,97,50,50,53,51,53,41};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,20),40,97,50,50,53,52,57,32,97,51,56,51,50,32,98,51,56,51,51,41,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,8),40,97,50,50,54,49,51,41};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,20),40,97,50,50,54,49,57,32,97,51,56,50,57,32,98,51,56,51,48,41,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,56,49,54,32,99,108,97,117,115,101,115,51,56,49,55,32,111,112,115,51,56,49,56,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,56,53,57,32,116,121,112,101,51,56,54,48,41,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,8),40,97,50,50,55,54,49,41};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,20),40,97,50,50,55,55,48,32,97,51,56,55,50,32,98,51,56,55,51,41,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,47),40,100,111,51,56,54,51,32,111,112,51,56,54,53,32,99,108,97,117,115,101,51,56,54,54,32,114,101,109,97,105,110,115,51,56,54,55,32,98,111,100,121,51,56,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,56,56,53,32,102,111,114,109,115,51,56,56,54,32,111,112,115,51,56,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,49,55,54,32,97,52,48,54,52,52,48,54,55,32,97,52,48,54,51,52,48,54,56,32,97,52,48,54,50,52,48,54,57,32,97,52,48,54,49,52,48,55,48,32,97,52,48,54,48,52,48,55,49,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,57,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,56,57,48,32,97,52,48,56,48,52,48,56,52,32,97,52,48,55,57,52,48,56,53,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,48,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,57,50,49,32,97,52,49,53,57,52,49,54,50,32,97,52,49,53,56,52,49,54,51,32,97,52,49,53,55,52,49,54,52,32,97,52,49,53,54,52,49,54,53,32,97,52,49,53,53,52,49,54,54,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,48,56,55,41};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,51,54,48,32,97,52,49,55,52,52,49,55,56,32,97,52,49,55,51,52,49,55,57,41,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,49,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,51,57,52,32,97,52,50,57,48,52,50,57,51,32,97,52,50,56,57,52,50,57,52,32,97,52,50,56,56,52,50,57,53,32,97,52,50,56,55,52,50,57,54,32,97,52,50,56,54,52,50,57,55,41,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,49,56,49,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,49,48,56,32,97,52,51,48,54,52,51,49,48,32,97,52,51,48,53,52,51,49,49,41,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,51,48,52,41,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,49,52,50,32,97,52,52,50,50,52,52,50,53,32,97,52,52,50,49,52,52,50,54,32,97,52,52,50,48,52,52,50,55,32,97,52,52,49,57,52,52,50,56,32,97,52,52,49,56,52,52,50,57,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,51,49,51,41,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,56,53,54,32,97,52,52,51,56,52,52,52,50,32,97,52,52,51,55,52,52,52,51,41,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,52,51,54,41};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,56,56,55,32,97,52,53,49,55,52,53,50,48,32,97,52,53,49,54,52,53,50,49,32,97,52,53,49,53,52,53,50,50,32,97,52,53,49,52,52,53,50,51,32,97,52,53,49,51,52,53,50,52,41,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,52,52,53,41,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,51,50,54,32,97,52,53,51,50,52,53,51,54,32,97,52,53,51,49,52,53,51,55,41,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,53,51,48,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,51,53,55,32,97,52,54,49,49,52,54,49,52,32,97,52,54,49,48,52,54,49,53,32,97,52,54,48,57,52,54,49,54,32,97,52,54,48,56,52,54,49,55,32,97,52,54,48,55,52,54,49,56,41,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,53,51,57,41,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,55,57,54,32,97,52,54,50,54,52,54,51,48,32,97,52,54,50,53,52,54,51,49,41,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,54,50,52,41,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,56,50,55,32,97,52,55,48,53,52,55,48,56,32,97,52,55,48,52,52,55,48,57,32,97,52,55,48,51,52,55,49,48,32,97,52,55,48,50,52,55,49,49,32,97,52,55,48,49,52,55,49,50,41,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,54,51,51,41,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,50,56,56,32,97,52,55,50,56,52,55,51,50,41,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,55,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,48,51,32,97,52,55,51,54,52,55,52,48,41,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,55,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,49,56,32,97,52,55,52,52,52,55,52,56,41,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,55,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,51,51,32,97,52,55,53,52,52,55,53,56,32,97,52,55,53,51,52,55,53,57,41,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,55,53,49,32,116,52,55,53,50,41,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,51,53,50,32,97,52,55,54,51,52,55,54,55,41,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,54,55,32,97,52,55,55,50,52,55,55,54,32,97,52,55,55,49,52,55,55,55,41,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,55,54,57,32,99,52,55,55,48,41,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,56,54,32,97,52,55,56,50,52,55,56,54,32,97,52,55,56,49,52,55,56,55,41,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,55,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,52,48,53,32,97,52,55,57,51,52,55,57,55,32,97,52,55,57,50,52,55,57,56,32,97,52,55,57,49,52,55,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,55,56,57,32,107,52,55,57,48,41,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,52,50,56,32,97,52,56,48,52,52,56,48,56,32,97,52,56,48,51,52,56,48,57,41,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,56,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,52,52,55,32,97,52,56,49,53,52,56,49,57,32,97,52,56,49,52,52,56,50,48,32,97,52,56,49,51,52,56,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,56,49,49,32,118,52,56,49,50,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,52,55,57,32,97,52,56,50,56,52,56,51,50,32,97,52,56,50,55,52,56,51,51,41,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,52,57,53,32,97,52,56,51,54,52,56,52,48,32,97,52,56,51,53,52,56,52,49,41,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,56,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,53,50,54,32,97,52,56,52,57,52,56,53,51,32,97,52,56,52,56,52,56,53,52,32,97,52,56,52,55,52,56,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,53,52,54,32,97,52,56,53,57,52,56,54,51,32,97,52,56,53,56,52,56,54,52,32,97,52,56,53,55,52,56,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,56,52,51,32,118,52,56,52,52,41,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,53,55,50,32,97,52,56,55,48,52,56,55,52,32,97,52,56,54,57,52,56,55,53,41,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,56,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,53,57,49,32,97,52,56,56,49,52,56,56,53,32,97,52,56,56,48,52,56,56,54,32,97,52,56,55,57,52,56,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,56,55,55,32,118,52,56,55,56,41,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,49,52,32,97,52,56,57,57,52,57,48,50,32,97,52,56,57,56,52,57,48,51,32,97,52,56,57,55,52,57,48,52,32,97,52,56,57,54,52,57,48,53,32,97,52,56,57,53,52,57,48,54,41,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,56,57,48,32,100,117,114,52,56,57,49,32,107,101,121,52,56,57,50,32,97,109,112,52,56,57,51,32,99,104,97,110,52,56,57,52,41,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,52,50,32,97,52,57,49,54,52,57,49,57,32,97,52,57,49,53,52,57,50,48,32,97,52,57,49,52,52,57,50,49,32,97,52,57,49,51,52,57,50,50,32,97,52,57,49,50,52,57,50,51,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,57,48,55,32,100,117,114,52,57,48,56,32,107,101,121,52,57,48,57,32,97,109,112,52,57,49,48,32,99,104,97,110,52,57,49,49,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,55,48,32,97,52,57,51,49,52,57,51,52,32,97,52,57,51,48,52,57,51,53,32,97,52,57,50,57,52,57,51,54,32,97,52,57,50,56,52,57,51,55,32,97,52,57,50,55,52,57,51,56,41,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,57,50,52,32,107,101,121,52,57,50,53,32,99,104,97,110,52,57,50,54,41,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,57,56,32,97,52,57,52,55,52,57,53,48,32,97,52,57,52,54,52,57,53,49,32,97,52,57,52,53,52,57,53,50,32,97,52,57,52,52,52,57,53,51,32,97,52,57,52,51,52,57,53,52,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,57,51,57,32,107,101,121,52,57,52,48,32,118,101,108,52,57,52,49,32,99,104,97,110,52,57,52,50,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,55,50,54,32,97,52,57,54,51,52,57,54,54,32,97,52,57,54,50,52,57,54,55,32,97,52,57,54,49,52,57,54,56,32,97,52,57,54,48,52,57,54,57,32,97,52,57,53,57,52,57,55,48,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,57,53,53,32,107,101,121,52,57,53,54,32,118,97,108,52,57,53,55,32,99,104,97,110,52,57,53,56,41,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,55,53,52,32,97,52,57,55,57,52,57,56,50,32,97,52,57,55,56,52,57,56,51,32,97,52,57,55,55,52,57,56,52,32,97,52,57,55,54,52,57,56,53,32,97,52,57,55,53,52,57,56,54,41,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,57,55,49,32,110,117,109,52,57,55,50,32,118,97,108,52,57,55,51,32,99,104,97,110,52,57,55,52,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,55,56,50,32,97,52,57,57,52,52,57,57,55,32,97,52,57,57,51,52,57,57,56,32,97,52,57,57,50,52,57,57,57,32,97,52,57,57,49,53,48,48,48,32,97,52,57,57,48,53,48,48,49,41,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,57,56,55,32,118,97,108,52,57,56,56,32,99,104,97,110,52,57,56,57,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,56,49,48,32,97,53,48,48,57,53,48,49,50,32,97,53,48,48,56,53,48,49,51,32,97,53,48,48,55,53,48,49,52,32,97,53,48,48,54,53,48,49,53,32,97,53,48,48,53,53,48,49,54,41,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,48,48,50,32,118,97,108,53,48,48,51,32,99,104,97,110,53,48,48,52,41,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,56,51,56,32,97,53,48,50,52,53,48,50,55,32,97,53,48,50,51,53,48,50,56,32,97,53,48,50,50,53,48,50,57,32,97,53,48,50,49,53,48,51,48,32,97,53,48,50,48,53,48,51,49,41,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,48,49,55,32,118,97,108,53,48,49,56,32,99,104,97,110,53,48,49,57,41,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,56,54,54,32,97,53,48,51,51,53,48,51,55,41,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,48,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,17),40,97,50,55,56,57,57,32,37,101,114,114,53,48,52,54,41,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,8),40,97,50,55,57,49,57,41};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,18),40,97,50,55,56,57,51,32,37,99,111,110,116,53,48,52,53,41,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,17),40,97,50,55,56,56,55,32,37,109,115,103,53,48,52,52,41,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,57,50,53,32,97,53,48,52,48,53,48,52,51,41,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,57,51,48,32,97,53,48,52,57,53,48,53,50,41,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,48,51,57,41,0,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,57,56,55,32,97,53,49,48,53,53,49,48,56,32,97,53,49,48,52,53,49,48,57,32,97,53,49,48,51,53,49,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,49,48,50,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,39),40,102,95,50,56,48,52,52,32,97,53,49,49,54,53,49,49,57,32,97,53,49,49,53,53,49,50,48,32,97,53,49,49,52,53,49,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,49,49,51,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,9),40,102,95,50,56,48,56,53,41,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,52,54,32,120,53,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,100,111,53,49,51,50,32,101,53,49,52,51,32,118,53,49,52,52,32,121,53,49,52,53,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,49,51,49,41,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,49,53,55,53,49,54,49,41,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,49,54,51,53,49,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,49,55,57,53,49,56,50,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,49,56,55,53,49,57,48,32,97,53,49,56,54,53,49,57,49,32,97,53,49,56,53,53,49,57,50,41};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,50,48,55,53,50,49,48,41,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,52,49,48,32,97,53,50,49,56,53,50,50,50,41,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,50,49,55,41};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,14),40,100,111,53,50,52,50,32,112,53,50,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,50,50,56,32,115,116,97,114,116,53,50,51,52,32,105,100,53,50,51,53,41,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,50,51,49,32,37,115,116,97,114,116,53,50,50,54,53,50,53,48,41,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,50,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,50,50,52,32,46,32,97,114,103,115,53,50,50,53,41,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,50,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,55,49,32,116,97,105,108,53,50,55,51,41,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,50,55,48,41,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,53,50,55,56,32,99,108,97,117,115,101,115,53,50,55,57,32,111,112,115,53,50,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,53,51,48,56,32,115,116,111,112,53,51,48,57,41,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,31),40,97,50,57,49,49,53,32,102,111,114,109,97,108,115,53,51,50,57,32,46,32,98,111,100,121,53,51,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,17),40,97,50,57,49,52,52,32,97,114,103,115,53,51,50,56,41,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,16),40,100,111,53,51,48,49,32,111,112,115,53,51,48,51,41};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,17),40,97,50,57,50,49,51,32,97,114,103,115,51,56,57,56,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,16),40,97,50,57,51,53,53,32,115,121,109,51,50,49,49,41};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,16),40,97,50,57,51,53,56,32,115,121,109,51,50,48,57,41};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,24),40,97,50,57,51,56,55,32,118,97,108,51,50,48,55,32,115,121,109,51,50,48,56,41};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,17),40,97,50,57,52,48,49,32,97,114,103,115,51,50,48,54,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,26),40,97,50,57,52,49,53,32,97,114,103,115,51,48,49,50,32,101,114,114,102,51,48,49,51,41,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,35),40,97,50,57,52,50,57,32,117,110,105,116,51,48,49,52,32,105,110,102,111,51,48,49,53,32,101,114,114,102,51,48,49,54,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,26),40,97,50,57,53,51,53,32,97,114,103,115,50,57,54,49,32,101,114,114,102,50,57,54,50,41,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,55,51,32,114,101,115,116,50,57,55,53,41,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,26),40,100,111,50,57,57,57,32,97,114,103,115,51,48,48,49,32,116,97,105,108,51,48,48,50,41,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,35),40,97,50,57,53,55,52,32,117,110,105,116,50,57,54,54,32,105,110,102,111,50,57,54,55,32,101,114,114,102,50,57,54,56,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,26),40,97,50,57,57,57,50,32,97,114,103,115,50,57,53,52,32,101,114,114,102,50,57,53,53,41,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,51,55,32,97,114,103,115,50,57,52,48,32,101,114,114,102,50,57,52,49,41,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,49,55,32,116,97,105,108,50,57,49,57,41,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,49,50,32,116,97,105,108,50,57,49,52,41,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,48,49,32,99,108,97,117,115,101,115,50,57,48,51,41,0,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,57,56,32,116,97,105,108,50,57,48,48,41,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,35),40,97,51,48,49,56,51,32,117,110,105,116,50,57,53,48,32,105,110,102,111,50,57,53,49,32,101,114,114,102,50,57,53,50,41,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,51,55,32,97,114,103,115,50,56,49,52,32,101,114,114,102,50,56,49,53,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,48,53,32,117,110,105,116,50,56,50,54,32,105,110,102,111,50,56,50,55,32,101,114,114,102,50,56,50,56,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,26),40,97,51,48,56,51,52,32,97,114,103,115,50,56,48,50,32,101,114,114,102,50,56,48,51,41,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,35),40,97,51,48,56,54,48,32,117,110,105,116,50,56,48,55,32,105,110,102,111,50,56,48,56,32,101,114,114,102,50,56,48,57,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,52,56,32,97,114,103,115,50,55,56,48,32,101,114,114,102,50,55,56,49,41,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,56,56,32,105,116,101,114,50,55,57,48,41,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,35),40,97,51,48,57,57,49,32,117,110,105,116,50,55,56,50,32,105,110,102,111,50,55,56,51,32,101,114,114,102,50,55,56,52,41,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,26),40,97,51,49,50,50,56,32,97,114,103,115,50,55,55,55,32,101,114,114,102,50,55,55,56,41,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,49,52,32,97,114,103,115,50,55,54,57,32,101,114,114,102,50,55,55,48,41,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,14),40,97,51,49,51,54,54,32,101,50,55,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,35),40,97,51,49,51,53,55,32,117,110,105,116,50,55,55,49,32,105,110,102,111,50,55,55,50,32,101,114,114,102,50,55,55,51,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,97,51,49,52,49,54,32,97,114,103,115,50,55,54,50,32,101,114,114,102,50,55,54,51,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,14),40,97,51,49,52,53,55,32,101,50,55,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,53,49,32,117,110,105,116,50,55,54,52,32,105,110,102,111,50,55,54,53,32,101,114,114,102,50,55,54,54,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,35),40,97,51,49,53,49,49,32,117,110,105,116,50,55,53,53,32,105,110,102,111,50,55,53,54,32,101,114,114,102,50,55,53,55,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,35),40,97,51,49,53,55,50,32,117,110,105,116,50,55,52,57,32,105,110,102,111,50,55,53,48,32,101,114,114,102,50,55,53,49,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,50,54,32,97,114,103,115,50,55,52,51,32,101,114,114,102,50,55,52,52,41,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,35),40,97,51,49,54,53,54,32,117,110,105,116,50,55,52,53,32,105,110,102,111,50,55,52,54,32,101,114,114,102,50,55,52,55,41,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,26),40,97,51,49,56,55,53,32,97,114,103,115,50,55,51,54,32,101,114,114,102,50,55,51,55,41,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,26),40,97,51,49,57,48,49,32,97,114,103,115,50,55,50,51,32,101,114,114,102,50,55,50,52,41,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,27),40,97,51,49,57,57,54,32,115,116,114,50,55,51,51,32,46,32,97,114,103,115,50,55,51,52,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,55,54,32,117,110,105,116,50,55,50,56,32,105,110,102,111,50,55,50,57,32,101,114,114,102,50,55,51,48,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,49,52,32,97,114,103,115,50,55,49,54,32,101,114,114,102,50,55,49,55,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,35),40,97,51,50,49,51,54,32,117,110,105,116,50,55,49,56,32,105,110,102,111,50,55,49,57,32,101,114,114,102,50,55,50,48,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,97,51,50,49,56,57,32,97,114,103,115,50,55,48,50,32,101,114,114,102,50,55,48,51,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,48,57,32,97,114,103,115,50,55,49,49,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,35),40,97,51,50,50,49,49,32,117,110,105,116,50,55,48,52,32,105,110,102,111,50,55,48,53,32,101,114,114,102,50,55,48,54,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,50,51,52,51,32,97,114,103,115,50,54,57,53,32,101,114,114,102,50,54,57,54,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,35),40,97,51,50,51,54,57,32,117,110,105,116,50,54,57,55,32,105,110,102,111,50,54,57,56,32,101,114,114,102,50,54,57,57,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,55,57,32,97,114,103,115,50,54,57,49,32,101,114,114,102,50,54,57,50,41,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,26),40,97,51,50,54,51,53,32,97,114,103,115,50,54,53,52,32,101,114,114,102,50,54,53,53,41,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,35),40,97,51,50,54,53,51,32,117,110,105,116,50,54,53,54,32,105,110,102,111,50,54,53,55,32,101,114,114,102,50,54,53,56,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,26),40,97,51,50,55,48,54,32,97,114,103,115,50,54,52,56,32,101,114,114,102,50,54,52,57,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,26),40,97,51,50,56,53,56,32,97,114,103,115,50,54,52,53,32,101,114,114,102,50,54,52,54,41,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,26),40,97,51,50,57,57,55,32,97,114,103,115,50,54,52,50,32,101,114,114,102,50,54,52,51,41,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,26),40,97,51,51,49,49,55,32,97,114,103,115,50,54,50,49,32,101,114,114,102,50,54,50,50,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,52,56,32,117,110,105,116,50,54,50,52,32,105,110,102,111,50,54,50,53,32,101,114,114,102,50,54,50,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,26),40,97,51,51,50,52,48,32,97,114,103,115,50,54,49,53,32,101,114,114,102,50,54,49,54,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,35),40,97,51,51,50,53,56,32,117,110,105,116,50,54,49,55,32,105,110,102,111,50,54,49,56,32,101,114,114,102,50,54,49,57,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,35),40,97,51,51,51,51,50,32,117,110,105,116,50,54,48,52,32,105,110,102,111,50,54,48,53,32,101,114,114,102,50,54,48,54,41,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,26),40,97,51,51,52,50,56,32,97,114,103,115,50,53,57,50,32,101,114,114,102,50,53,57,51,41,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,35),40,97,51,51,52,51,56,32,117,110,105,116,50,53,57,52,32,105,110,102,111,50,53,57,53,32,101,114,114,102,50,53,57,54,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,20),40,97,51,51,54,49,52,32,117,50,50,52,50,32,112,50,50,52,51,41,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,20),40,97,51,51,54,52,48,32,101,50,50,49,52,32,112,50,50,49,53,41,0,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,49,55,55,41,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,35),40,97,51,51,54,53,52,32,116,121,112,50,49,55,51,32,112,97,116,50,49,55,52,32,46,32,97,114,103,115,50,49,55,53,41,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,20),40,97,51,51,55,53,55,32,114,50,49,55,48,32,112,50,49,55,49,41,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,20),40,97,51,51,55,54,55,32,116,50,49,50,49,32,112,50,49,50,50,41,0,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,71),40,100,111,53,53,56,32,100,53,54,48,32,107,53,54,49,32,112,53,54,50,32,107,60,53,54,51,32,107,62,53,54,52,32,102,53,54,53,32,102,62,53,54,54,32,102,60,53,54,55,32,111,53,54,56,32,120,53,54,57,32,110,53,55,48,32,101,53,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,50,32,107,101,121,53,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,24),40,97,51,51,57,57,55,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,22),40,97,51,52,48,48,51,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,24),40,97,51,52,48,53,53,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k28413 */
static C_word C_fcall stub5219(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5219(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k28398 in hush in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5213)
static void C_ccall stub5213(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5213(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28392 */
C_noret_decl(stub5208)
static void C_ccall stub5208(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5208(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28376 in cont in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5203)
static void C_ccall stub5203(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5203(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28367 in pause in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5199)
static void C_ccall stub5199(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5199(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28358 in paused? in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5195)
static void C_ccall stub5195(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5195(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28352 */
C_noret_decl(stub5188)
static void C_ccall stub5188(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5188(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28332 in scheduler-set-time-milliseconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5180)
static void C_ccall stub5180(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5180(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28323 in time-format in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
C_noret_decl(stub5175)
static void C_ccall stub5175(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5175(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5172(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5172(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5169(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5169(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k28304 in print-error in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub5164(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5164(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k28290 in print-message in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub5158(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5158(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_28085 in cs:clear in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub5124(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5124(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k28051 */
static C_word C_fcall stub5117(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5117(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k27994 */
static C_word C_fcall stub5106(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5106(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_27930 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub5050(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5050(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_27925 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub5041(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5041(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k27869 */
static C_word C_fcall stub5034(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5034(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k27857 */
static C_word C_fcall stub5025(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5025(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27829 */
static C_word C_fcall stub5010(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5010(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27801 */
static C_word C_fcall stub4995(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4995(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27773 */
static C_word C_fcall stub4980(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4980(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27745 */
static C_word C_fcall stub4964(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4964(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27717 */
static C_word C_fcall stub4948(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4948(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27689 */
static C_word C_fcall stub4932(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4932(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27661 */
static C_word C_fcall stub4917(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4917(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27633 */
static C_word C_fcall stub4900(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4900(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27602 */
static C_word C_fcall stub4882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4882(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27579 */
static C_word C_fcall stub4871(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4871(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27557 */
static C_word C_fcall stub4860(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4860(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27537 */
static C_word C_fcall stub4850(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4850(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27502 */
static C_word C_fcall stub4837(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4837(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27486 */
static C_word C_fcall stub4829(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4829(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27458 */
static C_word C_fcall stub4816(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4816(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27435 */
static C_word C_fcall stub4805(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4805(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27416 */
static C_word C_fcall stub4794(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4794(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27393 */
static C_word C_fcall stub4783(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4783(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27374 */
static C_word C_fcall stub4773(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4773(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k27355 */
static C_word C_fcall stub4764(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4764(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k27340 */
static C_word C_fcall stub4755(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4755(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k27321 */
static C_word C_fcall stub4745(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4745(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k27306 */
static C_word C_fcall stub4737(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4737(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k27291 */
static C_word C_fcall stub4729(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4729(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k27273 */
static C_word C_fcall stub4721(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4721(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26846 */
static C_word C_fcall stub4706(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4706(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26803 */
static C_word C_fcall stub4627(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4627(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26376 */
static C_word C_fcall stub4612(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4612(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26333 */
static C_word C_fcall stub4533(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4533(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25906 */
static C_word C_fcall stub4518(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4518(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25863 */
static C_word C_fcall stub4439(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4439(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25161 */
static C_word C_fcall stub4423(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4423(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25115 */
static C_word C_fcall stub4307(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4307(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24413 */
static C_word C_fcall stub4291(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4291(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24367 */
static C_word C_fcall stub4175(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4175(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23940 */
static C_word C_fcall stub4160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4160(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23897 */
static C_word C_fcall stub4081(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4081(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23195 */
static C_word C_fcall stub4065(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4065(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub316(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub316(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub313(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub313(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6765 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub306(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6755 */
static C_word C_fcall stub302(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6748 */
static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6737 */
static C_word C_fcall stub290(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6730 */
static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub279(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub279(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub276(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub276(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub273(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6710 */
static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6699 */
static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6688 */
static C_word C_fcall stub256(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6681 */
static C_word C_fcall stub252(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6671 */
static C_word C_fcall stub243(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub243(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6664 */
static C_word C_fcall stub239(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub239(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6657 */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6650 */
static C_word C_fcall stub230(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub230(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6643 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6636 */
static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6621 */
static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6610 */
static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6599 */
static C_word C_fcall stub198(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub198(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6592 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6565 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6013 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5995 in cwd in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5388)
static void C_ccall f_5388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5391)
static void C_ccall f_5391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5394)
static void C_ccall f_5394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5397)
static void C_ccall f_5397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34056)
static void C_ccall f_34056(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_34056)
static void C_ccall f_34056r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5688)
static void C_ccall f_5688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5692)
static void C_ccall f_5692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34004)
static void C_ccall f_34004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34051)
static void C_ccall f_34051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34041)
static void C_ccall f_34041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34008)
static void C_ccall f_34008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5695)
static void C_ccall f_5695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33998)
static void C_ccall f_33998(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33998)
static void C_ccall f_33998r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5988)
static void C_ccall f_5988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8332)
static void C_ccall f_8332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33782)
static void C_fcall f_33782(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33996)
static void C_ccall f_33996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33816)
static void C_ccall f_33816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33828)
static void C_ccall f_33828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33832)
static void C_ccall f_33832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33836)
static void C_ccall f_33836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33980)
static void C_ccall f_33980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33842)
static void C_fcall f_33842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_33862)
static void C_fcall f_33862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33865)
static void C_fcall f_33865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33873)
static void C_ccall f_33873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33880)
static void C_ccall f_33880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33883)
static void C_ccall f_33883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33887)
static void C_ccall f_33887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33894)
static void C_ccall f_33894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33897)
static void C_ccall f_33897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33901)
static void C_ccall f_33901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33908)
static void C_ccall f_33908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33852)
static void C_ccall f_33852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33805)
static void C_ccall f_33805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33795)
static void C_ccall f_33795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33798)
static void C_ccall f_33798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8335)
static void C_ccall f_8335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33776)
static void C_ccall f_33776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33780)
static void C_ccall f_33780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16070)
static void C_ccall f_16070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16121)
static void C_ccall f_16121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33758)
static void C_ccall f_33758(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33766)
static void C_ccall f_33766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_33718)
static void C_ccall f_33718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33722)
static void C_ccall f_33722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33736)
static void C_fcall f_33736(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33658)
static void C_fcall f_33658(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33678)
static void C_ccall f_33678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33682)
static void C_ccall f_33682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16229)
static void C_ccall f_16229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33641)
static void C_ccall f_33641(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33649)
static void C_ccall f_33649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33653)
static void C_ccall f_33653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16422)
static void C_ccall f_16422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33615)
static void C_ccall f_33615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33619)
static void C_ccall f_33619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33625)
static void C_ccall f_33625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33636)
static void C_ccall f_33636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33632)
static void C_ccall f_33632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16491)
static void C_ccall f_16491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33593)
static void C_ccall f_33593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17736)
static void C_ccall f_17736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33573)
static void C_ccall f_33573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17739)
static void C_ccall f_17739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33533)
static void C_ccall f_33533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33439)
static void C_ccall f_33439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33443)
static void C_ccall f_33443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33446)
static void C_ccall f_33446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33464)
static void C_ccall f_33464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33467)
static void C_ccall f_33467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33498)
static void C_ccall f_33498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33470)
static void C_fcall f_33470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33476)
static void C_ccall f_33476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33429)
static void C_ccall f_33429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33423)
static void C_ccall f_33423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17745)
static void C_ccall f_17745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33331)
static void C_ccall f_33331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33333)
static void C_ccall f_33333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33337)
static void C_ccall f_33337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33340)
static void C_ccall f_33340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33343)
static void C_ccall f_33343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33383)
static void C_ccall f_33383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33375)
static void C_ccall f_33375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33346)
static void C_ccall f_33346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33349)
static void C_ccall f_33349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33352)
static void C_ccall f_33352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33323)
static void C_ccall f_33323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17748)
static void C_ccall f_17748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33295)
static void C_ccall f_33295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17751)
static void C_ccall f_17751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33259)
static void C_ccall f_33259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33271)
static void C_ccall f_33271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33267)
static void C_ccall f_33267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33241)
static void C_ccall f_33241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33235)
static void C_ccall f_33235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17754)
static void C_ccall f_17754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33149)
static void C_ccall f_33149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33153)
static void C_ccall f_33153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33156)
static void C_ccall f_33156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33159)
static void C_ccall f_33159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33172)
static void C_ccall f_33172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33118)
static void C_ccall f_33118(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33122)
static void C_ccall f_33122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33137)
static void C_ccall f_33137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33112)
static void C_ccall f_33112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17757)
static void C_ccall f_17757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32998)
static void C_ccall f_32998(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33014)
static void C_ccall f_33014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33025)
static void C_ccall f_33025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32992)
static void C_ccall f_32992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17813)
static void C_ccall f_17813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32859)
static void C_ccall f_32859(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32882)
static void C_ccall f_32882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32879)
static void C_ccall f_32879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32853)
static void C_ccall f_32853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17816)
static void C_ccall f_17816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32707)
static void C_ccall f_32707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32725)
static void C_ccall f_32725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32734)
static void C_ccall f_32734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32701)
static void C_ccall f_32701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17819)
static void C_ccall f_17819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32654)
static void C_ccall f_32654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32658)
static void C_ccall f_32658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32661)
static void C_ccall f_32661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_ccall f_32677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32636)
static void C_ccall f_32636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32630)
static void C_ccall f_32630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17822)
static void C_ccall f_17822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32554)
static void C_ccall f_32554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17961)
static void C_ccall f_17961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32480)
static void C_ccall f_32480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32487)
static void C_ccall f_32487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32474)
static void C_ccall f_32474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17964)
static void C_ccall f_17964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32370)
static void C_ccall f_32370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32378)
static void C_ccall f_32378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32344)
static void C_ccall f_32344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32361)
static void C_ccall f_32361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32352)
static void C_fcall f_32352(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32338)
static void C_ccall f_32338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17967)
static void C_ccall f_17967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32294)
static void C_ccall f_32294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17970)
static void C_ccall f_17970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32212)
static void C_ccall f_32212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32223)
static void C_ccall f_32223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32225)
static void C_fcall f_32225(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32254)
static void C_ccall f_32254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32190)
static void C_ccall f_32190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32206)
static void C_ccall f_32206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32184)
static void C_ccall f_32184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17973)
static void C_ccall f_17973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32137)
static void C_ccall f_32137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32141)
static void C_ccall f_32141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32148)
static void C_ccall f_32148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32115)
static void C_ccall f_32115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32131)
static void C_ccall f_32131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32109)
static void C_ccall f_32109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17976)
static void C_ccall f_17976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31977)
static void C_ccall f_31977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32017)
static void C_ccall f_32017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31981)
static void C_ccall f_31981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31997)
static void C_ccall f_31997(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31997)
static void C_ccall f_31997r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32009)
static void C_ccall f_32009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32013)
static void C_ccall f_32013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32005)
static void C_ccall f_32005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31902)
static void C_ccall f_31902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31945)
static void C_ccall f_31945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31949)
static void C_ccall f_31949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31909)
static void C_fcall f_31909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31920)
static void C_ccall f_31920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31896)
static void C_ccall f_31896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17979)
static void C_ccall f_17979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31876)
static void C_ccall f_31876(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31870)
static void C_ccall f_31870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17982)
static void C_ccall f_17982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31850)
static void C_ccall f_31850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31854)
static void C_ccall f_31854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31842)
static void C_ccall f_31842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17985)
static void C_ccall f_17985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31822)
static void C_ccall f_31822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31826)
static void C_ccall f_31826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31814)
static void C_ccall f_31814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17988)
static void C_ccall f_17988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31794)
static void C_ccall f_31794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31798)
static void C_ccall f_31798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31786)
static void C_ccall f_31786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17991)
static void C_ccall f_17991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31766)
static void C_ccall f_31766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31770)
static void C_ccall f_31770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31758)
static void C_ccall f_31758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17994)
static void C_ccall f_17994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31657)
static void C_ccall f_31657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31627)
static void C_ccall f_31627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31651)
static void C_ccall f_31651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31621)
static void C_ccall f_31621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17997)
static void C_ccall f_17997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31571)
static void C_ccall f_31571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31573)
static void C_ccall f_31573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31577)
static void C_ccall f_31577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31605)
static void C_ccall f_31605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31597)
static void C_ccall f_31597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31593)
static void C_ccall f_31593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31580)
static void C_ccall f_31580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31563)
static void C_ccall f_31563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18000)
static void C_ccall f_18000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31510)
static void C_ccall f_31510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31512)
static void C_ccall f_31512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31516)
static void C_ccall f_31516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31547)
static void C_ccall f_31547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31539)
static void C_ccall f_31539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31535)
static void C_ccall f_31535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31519)
static void C_ccall f_31519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31522)
static void C_ccall f_31522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31502)
static void C_ccall f_31502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18003)
static void C_ccall f_18003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31452)
static void C_ccall f_31452(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31466)
static void C_ccall f_31466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31458)
static void C_ccall f_31458(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31417)
static void C_ccall f_31417(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31450)
static void C_ccall f_31450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31411)
static void C_ccall f_31411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18006)
static void C_ccall f_18006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31358)
static void C_ccall f_31358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31362)
static void C_ccall f_31362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31375)
static void C_ccall f_31375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31367)
static void C_ccall f_31367(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31315)
static void C_ccall f_31315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31348)
static void C_ccall f_31348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31309)
static void C_ccall f_31309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_ccall f_18009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31229)
static void C_ccall f_31229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31223)
static void C_ccall f_31223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18012)
static void C_ccall f_18012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30992)
static void C_ccall f_30992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30996)
static void C_ccall f_30996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31004)
static void C_fcall f_31004(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31027)
static void C_ccall f_31027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31030)
static void C_ccall f_31030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31033)
static void C_ccall f_31033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31036)
static void C_ccall f_31036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31096)
static void C_ccall f_31096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31103)
static void C_ccall f_31103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31113)
static void C_ccall f_31113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31123)
static void C_ccall f_31123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31137)
static void C_ccall f_31137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31147)
static void C_ccall f_31147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31157)
static void C_ccall f_31157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31167)
static void C_ccall f_31167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31039)
static void C_fcall f_31039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31063)
static void C_fcall f_31063(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31042)
static void C_fcall f_31042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30949)
static void C_ccall f_30949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30982)
static void C_ccall f_30982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30943)
static void C_ccall f_30943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18015)
static void C_ccall f_18015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30861)
static void C_ccall f_30861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30865)
static void C_ccall f_30865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30871)
static void C_ccall f_30871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30891)
static void C_ccall f_30891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30835)
static void C_ccall f_30835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30845)
static void C_fcall f_30845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30829)
static void C_ccall f_30829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18018)
static void C_ccall f_18018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30706)
static void C_ccall f_30706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30710)
static void C_ccall f_30710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30638)
static void C_ccall f_30638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30657)
static void C_ccall f_30657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30692)
static void C_ccall f_30692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30663)
static void C_fcall f_30663(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30667)
static void C_ccall f_30667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30681)
static void C_ccall f_30681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30670)
static void C_fcall f_30670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30651)
static void C_fcall f_30651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30632)
static void C_ccall f_30632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18021)
static void C_ccall f_18021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30360)
static void C_ccall f_30360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18544)
static void C_ccall f_18544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30312)
static void C_ccall f_30312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30304)
static void C_ccall f_30304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18547)
static void C_ccall f_18547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30184)
static void C_ccall f_30184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18553)
static void C_ccall f_18553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19012)
static void C_ccall f_19012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19046)
static void C_ccall f_19046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19038)
static void C_ccall f_19038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19034)
static void C_ccall f_19034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19019)
static void C_ccall f_19019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19023)
static void C_ccall f_19023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19016)
static void C_ccall f_19016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18571)
static void C_fcall f_18571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19005)
static void C_ccall f_19005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19001)
static void C_ccall f_19001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18578)
static void C_fcall f_18578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18876)
static void C_fcall f_18876(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18897)
static void C_ccall f_18897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18899)
static void C_fcall f_18899(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18913)
static void C_ccall f_18913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18966)
static void C_ccall f_18966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18916)
static void C_fcall f_18916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18951)
static void C_ccall f_18951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18919)
static void C_fcall f_18919(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18932)
static void C_ccall f_18932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18944)
static void C_ccall f_18944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18936)
static void C_ccall f_18936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18922)
static void C_fcall f_18922(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18886)
static void C_ccall f_18886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18581)
static void C_ccall f_18581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18840)
static void C_fcall f_18840(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18866)
static void C_ccall f_18866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18851)
static void C_ccall f_18851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18584)
static void C_ccall f_18584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18588)
static void C_ccall f_18588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18784)
static void C_fcall f_18784(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18794)
static void C_ccall f_18794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18797)
static void C_ccall f_18797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18818)
static void C_ccall f_18818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18800)
static void C_fcall f_18800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18804)
static void C_ccall f_18804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18591)
static void C_ccall f_18591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18594)
static void C_fcall f_18594(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18755)
static void C_ccall f_18755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18751)
static void C_ccall f_18751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18597)
static void C_fcall f_18597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18625)
static void C_ccall f_18625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18628)
static void C_ccall f_18628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18631)
static void C_ccall f_18631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18634)
static void C_ccall f_18634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18637)
static void C_ccall f_18637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18696)
static void C_ccall f_18696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30138)
static void C_ccall f_30138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30154)
static void C_ccall f_30154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30157)
static void C_ccall f_30157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30160)
static void C_fcall f_30160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30163)
static void C_fcall f_30163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30174)
static void C_ccall f_30174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30132)
static void C_ccall f_30132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19053)
static void C_ccall f_19053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29993)
static void C_ccall f_29993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30032)
static void C_ccall f_30032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30006)
static void C_fcall f_30006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29987)
static void C_ccall f_29987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19056)
static void C_ccall f_19056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29575)
static void C_ccall f_29575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29591)
static void C_ccall f_29591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29649)
static void C_ccall f_29649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29652)
static void C_ccall f_29652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29655)
static void C_ccall f_29655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29867)
static void C_ccall f_29867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29805)
static void C_ccall f_29805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29839)
static void C_ccall f_29839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29814)
static void C_fcall f_29814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29825)
static void C_ccall f_29825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29821)
static void C_ccall f_29821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29664)
static void C_fcall f_29664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29742)
static void C_ccall f_29742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29783)
static void C_ccall f_29783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29787)
static void C_ccall f_29787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29791)
static void C_ccall f_29791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29746)
static void C_ccall f_29746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29750)
static void C_ccall f_29750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29777)
static void C_ccall f_29777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29753)
static void C_fcall f_29753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29667)
static void C_fcall f_29667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29739)
static void C_ccall f_29739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29681)
static void C_ccall f_29681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29683)
static void C_fcall f_29683(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29731)
static void C_ccall f_29731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29702)
static void C_ccall f_29702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29719)
static void C_ccall f_29719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29705)
static void C_fcall f_29705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29698)
static void C_ccall f_29698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29670)
static void C_ccall f_29670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29600)
static void C_fcall f_29600(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29610)
static void C_ccall f_29610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29616)
static void C_ccall f_29616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29588)
static void C_ccall f_29588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29536)
static void C_ccall f_29536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29553)
static void C_ccall f_29553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29569)
static void C_ccall f_29569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29547)
static void C_fcall f_29547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29530)
static void C_ccall f_29530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19059)
static void C_ccall f_19059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29454)
static void C_ccall f_29454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19062)
static void C_ccall f_19062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29430)
static void C_ccall f_29430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29442)
static void C_ccall f_29442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29438)
static void C_ccall f_29438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29416)
static void C_ccall f_29416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29424)
static void C_ccall f_29424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29410)
static void C_ccall f_29410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19065)
static void C_ccall f_19065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29402)
static void C_ccall f_29402(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22836)
static void C_ccall f_22836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22839)
static void C_ccall f_22839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23005)
static void C_ccall f_23005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23001)
static void C_ccall f_23001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22991)
static void C_fcall f_22991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22846)
static void C_ccall f_22846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22853)
static void C_fcall f_22853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22864)
static void C_ccall f_22864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22872)
static void C_ccall f_22872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22944)
static void C_ccall f_22944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22952)
static void C_ccall f_22952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22948)
static void C_ccall f_22948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22940)
static void C_ccall f_22940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22936)
static void C_ccall f_22936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22908)
static void C_ccall f_22908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22904)
static void C_ccall f_22904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22868)
static void C_ccall f_22868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19483)
static void C_ccall f_19483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29388)
static void C_ccall f_29388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19486)
static void C_ccall f_19486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29359)
static void C_ccall f_29359(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29363)
static void C_ccall f_29363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19489)
static void C_ccall f_19489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29356)
static void C_ccall f_29356(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19492)
static void C_ccall f_19492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29214)
static void C_ccall f_29214(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23018)
static void C_ccall f_23018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23150)
static void C_ccall f_23150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23021)
static void C_ccall f_23021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23032)
static void C_ccall f_23032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23064)
static void C_ccall f_23064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23067)
static void C_fcall f_23067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23075)
static void C_ccall f_23075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23083)
static void C_ccall f_23083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23103)
static void C_ccall f_23103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23099)
static void C_ccall f_23099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23079)
static void C_ccall f_23079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23071)
static void C_ccall f_23071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23060)
static void C_ccall f_23060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23036)
static void C_ccall f_23036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23012)
static void C_ccall f_23012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27934)
static void C_ccall f_27934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27937)
static void C_ccall f_27937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27940)
static void C_ccall f_27940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27943)
static void C_ccall f_27943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27946)
static void C_ccall f_27946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27949)
static void C_ccall f_27949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27952)
static void C_ccall f_27952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27955)
static void C_ccall f_27955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27958)
static void C_ccall f_27958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27961)
static void C_ccall f_27961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27964)
static void C_ccall f_27964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28089)
static void C_ccall f_28089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28092)
static void C_ccall f_28092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28095)
static void C_ccall f_28095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29151)
static void C_fcall f_29151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29179)
static void C_fcall f_29179(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28818)
static void C_ccall f_28818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29145)
static void C_ccall f_29145(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28863)
static void C_ccall f_28863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28869)
static void C_ccall f_28869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28872)
static void C_ccall f_28872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28875)
static void C_ccall f_28875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28879)
static void C_ccall f_28879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29089)
static void C_ccall f_29089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29101)
static void C_ccall f_29101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29097)
static void C_ccall f_29097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28882)
static void C_fcall f_28882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29046)
static void C_fcall f_29046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29082)
static void C_ccall f_29082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29075)
static void C_ccall f_29075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28885)
static void C_ccall f_28885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28984)
static void C_ccall f_28984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28992)
static void C_ccall f_28992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28988)
static void C_ccall f_28988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28980)
static void C_ccall f_28980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28976)
static void C_ccall f_28976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28932)
static void C_ccall f_28932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28928)
static void C_ccall f_28928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28895)
static void C_fcall f_28895(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28906)
static void C_ccall f_28906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28914)
static void C_ccall f_28914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28910)
static void C_ccall f_28910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29108)
static void C_ccall f_29108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29116)
static void C_ccall f_29116(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_29116)
static void C_ccall f_29116r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_29130)
static void C_fcall f_29130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29120)
static void C_ccall f_29120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29111)
static void C_ccall f_29111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29114)
static void C_ccall f_29114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28820)
static void C_fcall f_28820(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28836)
static void C_ccall f_28836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28747)
static void C_ccall f_28747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28758)
static void C_ccall f_28758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28761)
static void C_fcall f_28761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28768)
static void C_ccall f_28768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28737)
static void C_ccall f_28737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28400)
static void C_ccall f_28400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28741)
static void C_ccall f_28741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28679)
static void C_ccall f_28679(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28679)
static void C_ccall f_28679r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28697)
static void C_fcall f_28697(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28707)
static void C_ccall f_28707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28683)
static void C_ccall f_28683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28670)
static void C_ccall f_28670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28378)
static void C_ccall f_28378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28674)
static void C_ccall f_28674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28664)
static void C_ccall f_28664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28360)
static void C_ccall f_28360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28655)
static void C_ccall f_28655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28369)
static void C_ccall f_28369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28659)
static void C_ccall f_28659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28592)
static void C_ccall f_28592(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28592)
static void C_ccall f_28592r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28617)
static void C_fcall f_28617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28325)
static void C_ccall f_28325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28605)
static void C_ccall f_28605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28424)
static void C_ccall f_28424(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_28424)
static void C_ccall f_28424r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_28543)
static void C_fcall f_28543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28538)
static void C_fcall f_28538(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28426)
static void C_fcall f_28426(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28533)
static void C_ccall f_28533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28529)
static void C_ccall f_28529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28497)
static void C_fcall f_28497(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28522)
static void C_ccall f_28522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28526)
static void C_ccall f_28526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28507)
static void C_ccall f_28507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28486)
static void C_ccall f_28486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28456)
static void C_fcall f_28456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28428)
static void C_fcall f_28428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28405)
static void C_ccall f_28405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28410)
static void C_ccall f_28410(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28415)
static void C_ccall f_28415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28383)
static void C_fcall f_28383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28387)
static void C_ccall f_28387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28339)
static void C_fcall f_28339(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28343)
static void C_ccall f_28343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28330)
static void C_fcall f_28330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28334)
static void C_ccall f_28334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28318)
static void C_ccall f_28318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28315)
static void C_ccall f_28315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28301)
static void C_ccall f_28301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28306)
static void C_ccall f_28306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28287)
static void C_ccall f_28287(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28292)
static void C_ccall f_28292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28097)
static void C_ccall f_28097(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28158)
static void C_ccall f_28158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_fcall f_28160(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28170)
static void C_ccall f_28170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28189)
static void C_fcall f_28189(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28229)
static void C_ccall f_28229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28271)
static void C_ccall f_28271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28241)
static void C_ccall f_28241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28226)
static void C_fcall f_28226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28144)
static void C_ccall f_28144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28109)
static void C_ccall f_28109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28136)
static void C_ccall f_28136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_ccall f_28117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28124)
static void C_ccall f_28124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28128)
static void C_ccall f_28128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28132)
static void C_ccall f_28132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28209)
static void C_ccall f_28209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28187)
static void C_ccall f_28187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28173)
static void C_ccall f_28173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28176)
static void C_ccall f_28176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28151)
static void C_ccall f_28151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28080)
static void C_ccall f_28080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28085)
static void C_ccall f_28085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28023)
static void C_ccall f_28023(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28023)
static void C_ccall f_28023r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28056)
static void C_fcall f_28056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28036)
static void C_fcall f_28036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28044)
static void C_ccall f_28044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28027)
static void C_ccall f_28027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27966)
static void C_ccall f_27966(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27966)
static void C_ccall f_27966r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27999)
static void C_fcall f_27999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27979)
static void C_fcall f_27979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27987)
static void C_ccall f_27987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27970)
static void C_ccall f_27970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27876)
static void C_ccall f_27876(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27930)
static void C_ccall f_27930(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27925)
static void C_ccall f_27925(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27888)
static void C_ccall f_27888(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27894)
static void C_ccall f_27894(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27920)
static void C_ccall f_27920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27924)
static void C_ccall f_27924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27900)
static void C_ccall f_27900(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27918)
static void C_ccall f_27918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27915)
static void C_ccall f_27915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27911)
static void C_ccall f_27911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27904)
static void C_ccall f_27904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27861)
static void C_ccall f_27861(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27866)
static void C_ccall f_27866(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27833)
static void C_ccall f_27833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27838)
static void C_ccall f_27838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27805)
static void C_ccall f_27805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27810)
static void C_ccall f_27810(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27777)
static void C_ccall f_27777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27782)
static void C_ccall f_27782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27749)
static void C_ccall f_27749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27754)
static void C_ccall f_27754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27721)
static void C_ccall f_27721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27726)
static void C_ccall f_27726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27693)
static void C_ccall f_27693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27698)
static void C_ccall f_27698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27665)
static void C_ccall f_27665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27670)
static void C_ccall f_27670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27637)
static void C_ccall f_27637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27642)
static void C_ccall f_27642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27609)
static void C_ccall f_27609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27614)
static void C_ccall f_27614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27586)
static void C_ccall f_27586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27591)
static void C_ccall f_27591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27590)
static void C_ccall f_27590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27572)
static void C_ccall f_27572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27512)
static void C_ccall f_27512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27519)
static void C_ccall f_27519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27522)
static void C_ccall f_27522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27546)
static void C_ccall f_27546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27526)
static void C_ccall f_27526(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27516)
static void C_ccall f_27516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27465)
static void C_ccall f_27465(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27472)
static void C_ccall f_27472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27475)
static void C_ccall f_27475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27495)
static void C_ccall f_27495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27479)
static void C_ccall f_27479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27442)
static void C_ccall f_27442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27447)
static void C_ccall f_27447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27446)
static void C_ccall f_27446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27423)
static void C_ccall f_27423(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27428)
static void C_ccall f_27428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27400)
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27405)
static void C_ccall f_27405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27404)
static void C_ccall f_27404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27381)
static void C_ccall f_27381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27386)
static void C_ccall f_27386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27362)
static void C_ccall f_27362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27367)
static void C_ccall f_27367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27366)
static void C_ccall f_27366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27347)
static void C_ccall f_27347(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27328)
static void C_ccall f_27328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27333)
static void C_ccall f_27333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27313)
static void C_ccall f_27313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27318)
static void C_ccall f_27318(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27298)
static void C_ccall f_27298(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27303)
static void C_ccall f_27303(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27280)
static void C_ccall f_27280(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27288)
static void C_ccall f_27288(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27284)
static void C_ccall f_27284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26810)
static void C_ccall f_26810(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26810)
static void C_ccall f_26810r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27238)
static void C_ccall f_27238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27253)
static void C_ccall f_27253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27245)
static void C_ccall f_27245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27209)
static void C_ccall f_27209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27213)
static void C_ccall f_27213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27174)
static void C_ccall f_27174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27178)
static void C_ccall f_27178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27139)
static void C_ccall f_27139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27143)
static void C_ccall f_27143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26814)
static void C_fcall f_26814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27103)
static void C_ccall f_27103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27118)
static void C_ccall f_27118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27110)
static void C_ccall f_27110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27074)
static void C_ccall f_27074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27078)
static void C_ccall f_27078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27039)
static void C_ccall f_27039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27043)
static void C_ccall f_27043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27004)
static void C_ccall f_27004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27008)
static void C_ccall f_27008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26817)
static void C_fcall f_26817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26968)
static void C_ccall f_26968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26983)
static void C_ccall f_26983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26975)
static void C_ccall f_26975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26939)
static void C_ccall f_26939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26943)
static void C_ccall f_26943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26904)
static void C_ccall f_26904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26908)
static void C_ccall f_26908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26869)
static void C_ccall f_26869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26873)
static void C_ccall f_26873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26820)
static void C_fcall f_26820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26823)
static void C_ccall f_26823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26827)
static void C_ccall f_26827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26791)
static void C_ccall f_26791(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26340)
static void C_ccall f_26340(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26340)
static void C_ccall f_26340r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26768)
static void C_ccall f_26768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26783)
static void C_ccall f_26783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26775)
static void C_ccall f_26775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26739)
static void C_ccall f_26739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26743)
static void C_ccall f_26743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26704)
static void C_ccall f_26704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26708)
static void C_ccall f_26708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26669)
static void C_ccall f_26669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26673)
static void C_ccall f_26673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26344)
static void C_fcall f_26344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26633)
static void C_ccall f_26633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26648)
static void C_ccall f_26648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26640)
static void C_ccall f_26640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26604)
static void C_ccall f_26604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26608)
static void C_ccall f_26608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26569)
static void C_ccall f_26569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26573)
static void C_ccall f_26573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26534)
static void C_ccall f_26534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26538)
static void C_ccall f_26538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26347)
static void C_fcall f_26347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26513)
static void C_ccall f_26513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26505)
static void C_ccall f_26505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26469)
static void C_ccall f_26469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26473)
static void C_ccall f_26473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26434)
static void C_ccall f_26434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26438)
static void C_ccall f_26438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26399)
static void C_ccall f_26399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26403)
static void C_ccall f_26403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26350)
static void C_fcall f_26350(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26353)
static void C_ccall f_26353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26357)
static void C_ccall f_26357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26321)
static void C_ccall f_26321(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26326)
static void C_ccall f_26326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25870)
static void C_ccall f_25870(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25870)
static void C_ccall f_25870r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26298)
static void C_ccall f_26298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26313)
static void C_ccall f_26313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26305)
static void C_ccall f_26305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26269)
static void C_ccall f_26269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26273)
static void C_ccall f_26273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26234)
static void C_ccall f_26234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26238)
static void C_ccall f_26238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26199)
static void C_ccall f_26199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26203)
static void C_ccall f_26203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25874)
static void C_fcall f_25874(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26163)
static void C_ccall f_26163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26178)
static void C_ccall f_26178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26170)
static void C_ccall f_26170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26134)
static void C_ccall f_26134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26138)
static void C_ccall f_26138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26099)
static void C_ccall f_26099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26103)
static void C_ccall f_26103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26064)
static void C_ccall f_26064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26068)
static void C_ccall f_26068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25877)
static void C_fcall f_25877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26028)
static void C_ccall f_26028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26043)
static void C_ccall f_26043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26035)
static void C_ccall f_26035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25999)
static void C_ccall f_25999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26003)
static void C_ccall f_26003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25964)
static void C_ccall f_25964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25968)
static void C_ccall f_25968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25929)
static void C_ccall f_25929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25933)
static void C_ccall f_25933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25880)
static void C_fcall f_25880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25883)
static void C_ccall f_25883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25887)
static void C_ccall f_25887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25851)
static void C_ccall f_25851(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25856)
static void C_ccall f_25856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25122)
static void C_ccall f_25122(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25122)
static void C_ccall f_25122r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25828)
static void C_ccall f_25828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25843)
static void C_ccall f_25843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25835)
static void C_ccall f_25835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25799)
static void C_ccall f_25799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25803)
static void C_ccall f_25803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25764)
static void C_ccall f_25764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25768)
static void C_ccall f_25768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25729)
static void C_ccall f_25729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25733)
static void C_ccall f_25733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25694)
static void C_ccall f_25694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25698)
static void C_ccall f_25698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_fcall f_25126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25658)
static void C_ccall f_25658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25673)
static void C_ccall f_25673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25665)
static void C_ccall f_25665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25629)
static void C_ccall f_25629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25633)
static void C_ccall f_25633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25594)
static void C_ccall f_25594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25598)
static void C_ccall f_25598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25559)
static void C_ccall f_25559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25563)
static void C_ccall f_25563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25524)
static void C_ccall f_25524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25528)
static void C_ccall f_25528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25129)
static void C_fcall f_25129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25488)
static void C_ccall f_25488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25503)
static void C_ccall f_25503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25495)
static void C_ccall f_25495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25459)
static void C_ccall f_25459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25463)
static void C_ccall f_25463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25424)
static void C_ccall f_25424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25428)
static void C_ccall f_25428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25389)
static void C_ccall f_25389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25393)
static void C_ccall f_25393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25354)
static void C_ccall f_25354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25358)
static void C_ccall f_25358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25132)
static void C_fcall f_25132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25318)
static void C_ccall f_25318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25333)
static void C_ccall f_25333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25325)
static void C_ccall f_25325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25289)
static void C_ccall f_25289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25293)
static void C_ccall f_25293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25254)
static void C_ccall f_25254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25258)
static void C_ccall f_25258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25219)
static void C_ccall f_25219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25223)
static void C_ccall f_25223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25184)
static void C_ccall f_25184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25188)
static void C_ccall f_25188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25135)
static void C_fcall f_25135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25138)
static void C_ccall f_25138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25142)
static void C_ccall f_25142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25103)
static void C_ccall f_25103(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25108)
static void C_ccall f_25108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24374)
static void C_ccall f_24374(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24374)
static void C_ccall f_24374r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25080)
static void C_ccall f_25080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25095)
static void C_ccall f_25095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25087)
static void C_ccall f_25087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25051)
static void C_ccall f_25051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25055)
static void C_ccall f_25055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25016)
static void C_ccall f_25016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25020)
static void C_ccall f_25020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24981)
static void C_ccall f_24981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24985)
static void C_ccall f_24985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24946)
static void C_ccall f_24946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24950)
static void C_ccall f_24950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24378)
static void C_fcall f_24378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24910)
static void C_ccall f_24910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24925)
static void C_ccall f_24925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24917)
static void C_ccall f_24917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24881)
static void C_ccall f_24881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24885)
static void C_ccall f_24885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24846)
static void C_ccall f_24846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24850)
static void C_ccall f_24850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24811)
static void C_ccall f_24811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24815)
static void C_ccall f_24815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24776)
static void C_ccall f_24776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24780)
static void C_ccall f_24780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24381)
static void C_fcall f_24381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24740)
static void C_ccall f_24740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24755)
static void C_ccall f_24755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24711)
static void C_ccall f_24711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24715)
static void C_ccall f_24715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24676)
static void C_ccall f_24676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24680)
static void C_ccall f_24680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24641)
static void C_ccall f_24641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24645)
static void C_ccall f_24645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24606)
static void C_ccall f_24606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24610)
static void C_ccall f_24610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24384)
static void C_fcall f_24384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24570)
static void C_ccall f_24570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24585)
static void C_ccall f_24585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24577)
static void C_ccall f_24577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24541)
static void C_ccall f_24541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24545)
static void C_ccall f_24545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24506)
static void C_ccall f_24506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24510)
static void C_ccall f_24510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24471)
static void C_ccall f_24471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24475)
static void C_ccall f_24475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24436)
static void C_ccall f_24436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24440)
static void C_ccall f_24440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24387)
static void C_fcall f_24387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24390)
static void C_ccall f_24390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24394)
static void C_ccall f_24394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24355)
static void C_ccall f_24355(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24360)
static void C_ccall f_24360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24332)
static void C_ccall f_24332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24347)
static void C_ccall f_24347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24339)
static void C_ccall f_24339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24303)
static void C_ccall f_24303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24307)
static void C_ccall f_24307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24268)
static void C_ccall f_24268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24272)
static void C_ccall f_24272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24233)
static void C_ccall f_24233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24237)
static void C_ccall f_24237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23908)
static void C_fcall f_23908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24197)
static void C_ccall f_24197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24212)
static void C_ccall f_24212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24204)
static void C_ccall f_24204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24168)
static void C_ccall f_24168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24172)
static void C_ccall f_24172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24133)
static void C_ccall f_24133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24137)
static void C_ccall f_24137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24098)
static void C_ccall f_24098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24102)
static void C_ccall f_24102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23911)
static void C_fcall f_23911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24062)
static void C_ccall f_24062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24077)
static void C_ccall f_24077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24069)
static void C_ccall f_24069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24033)
static void C_ccall f_24033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24037)
static void C_ccall f_24037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23998)
static void C_ccall f_23998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24002)
static void C_ccall f_24002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23963)
static void C_ccall f_23963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23967)
static void C_ccall f_23967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23914)
static void C_fcall f_23914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23917)
static void C_ccall f_23917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23921)
static void C_ccall f_23921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23885)
static void C_ccall f_23885(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23890)
static void C_ccall f_23890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23156)
static void C_ccall f_23156(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23156)
static void C_ccall f_23156r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23862)
static void C_ccall f_23862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23877)
static void C_ccall f_23877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23869)
static void C_ccall f_23869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23833)
static void C_ccall f_23833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23837)
static void C_ccall f_23837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23798)
static void C_ccall f_23798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23802)
static void C_ccall f_23802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23763)
static void C_ccall f_23763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23728)
static void C_ccall f_23728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23732)
static void C_ccall f_23732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23160)
static void C_fcall f_23160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23692)
static void C_ccall f_23692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23707)
static void C_ccall f_23707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23699)
static void C_ccall f_23699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23663)
static void C_ccall f_23663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23667)
static void C_ccall f_23667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23628)
static void C_ccall f_23628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23632)
static void C_ccall f_23632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23593)
static void C_ccall f_23593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23597)
static void C_ccall f_23597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23558)
static void C_ccall f_23558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23562)
static void C_ccall f_23562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23163)
static void C_fcall f_23163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23522)
static void C_ccall f_23522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23537)
static void C_ccall f_23537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23529)
static void C_ccall f_23529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23493)
static void C_ccall f_23493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23497)
static void C_ccall f_23497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23458)
static void C_ccall f_23458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23462)
static void C_ccall f_23462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23423)
static void C_ccall f_23423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23427)
static void C_ccall f_23427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23388)
static void C_ccall f_23388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23392)
static void C_ccall f_23392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23166)
static void C_fcall f_23166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23352)
static void C_ccall f_23352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23367)
static void C_ccall f_23367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23359)
static void C_ccall f_23359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23323)
static void C_ccall f_23323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23327)
static void C_ccall f_23327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23288)
static void C_ccall f_23288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23292)
static void C_ccall f_23292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23253)
static void C_ccall f_23253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23257)
static void C_ccall f_23257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23218)
static void C_ccall f_23218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23222)
static void C_ccall f_23222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23169)
static void C_fcall f_23169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23172)
static void C_ccall f_23172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23176)
static void C_ccall f_23176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22818)
static void C_fcall f_22818(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22658)
static void C_fcall f_22658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22693)
static void C_fcall f_22693(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22703)
static void C_fcall f_22703(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22710)
static void C_ccall f_22710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22771)
static void C_ccall f_22771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22762)
static void C_ccall f_22762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22713)
static void C_ccall f_22713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22732)
static void C_ccall f_22732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22739)
static void C_ccall f_22739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22716)
static void C_ccall f_22716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22722)
static void C_ccall f_22722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22691)
static void C_ccall f_22691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22666)
static void C_fcall f_22666(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22665)
static void C_ccall f_22665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22826)
static void C_fcall f_22826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22404)
static void C_ccall f_22404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22426)
static void C_ccall f_22426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22441)
static void C_ccall f_22441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22444)
static void C_fcall f_22444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_ccall f_22620(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22614)
static void C_ccall f_22614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22447)
static void C_ccall f_22447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22596)
static void C_ccall f_22596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22450)
static void C_fcall f_22450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22453)
static void C_ccall f_22453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22589)
static void C_ccall f_22589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22577)
static void C_ccall f_22577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22473)
static void C_fcall f_22473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22480)
static void C_ccall f_22480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22550)
static void C_ccall f_22550(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22536)
static void C_ccall f_22536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22544)
static void C_ccall f_22544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22483)
static void C_ccall f_22483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22522)
static void C_ccall f_22522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22486)
static void C_fcall f_22486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22515)
static void C_ccall f_22515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22492)
static void C_ccall f_22492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22495)
static void C_ccall f_22495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22499)
static void C_ccall f_22499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22460)
static void C_fcall f_22460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22463)
static void C_ccall f_22463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22273)
static void C_fcall f_22273(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22282)
static void C_fcall f_22282(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22230)
static void C_ccall f_22230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22236)
static void C_fcall f_22236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22299)
static void C_ccall f_22299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22385)
static void C_ccall f_22385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22372)
static void C_ccall f_22372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22380)
static void C_ccall f_22380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22302)
static void C_ccall f_22302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22306)
static void C_ccall f_22306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22349)
static void C_ccall f_22349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22311)
static void C_ccall f_22311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22277)
static void C_ccall f_22277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22172)
static void C_ccall f_22172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22179)
static void C_ccall f_22179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22210)
static void C_ccall f_22210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22206)
static void C_ccall f_22206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22198)
static void C_ccall f_22198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22081)
static void C_ccall f_22081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22088)
static void C_ccall f_22088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22156)
static void C_ccall f_22156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22099)
static void C_fcall f_22099(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22126)
static void C_ccall f_22126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22110)
static void C_ccall f_22110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22015)
static void C_ccall f_22015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22026)
static void C_ccall f_22026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22029)
static void C_fcall f_22029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22036)
static void C_ccall f_22036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22009)
static void C_ccall f_22009(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21463)
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21494)
static void C_ccall f_21494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21964)
static void C_ccall f_21964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21505)
static void C_ccall f_21505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21390)
static void C_fcall f_21390(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21415)
static void C_ccall f_21415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21350)
static void C_fcall f_21350(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21363)
static void C_fcall f_21363(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21404)
static void C_ccall f_21404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21509)
static void C_ccall f_21509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21946)
static void C_ccall f_21946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21942)
static void C_fcall f_21942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21938)
static void C_ccall f_21938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21512)
static void C_ccall f_21512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21732)
static void C_fcall f_21732(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21841)
static void C_ccall f_21841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21906)
static void C_ccall f_21906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21848)
static void C_fcall f_21848(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21852)
static void C_ccall f_21852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21856)
static void C_ccall f_21856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21898)
static void C_ccall f_21898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21894)
static void C_ccall f_21894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21872)
static void C_ccall f_21872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21735)
static void C_fcall f_21735(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21738)
static void C_fcall f_21738(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21637)
static void C_ccall f_21637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21720)
static void C_ccall f_21720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21687)
static void C_ccall f_21687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21713)
static void C_ccall f_21713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21695)
static void C_ccall f_21695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21643)
static void C_fcall f_21643(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21683)
static void C_ccall f_21683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21625)
static void C_ccall f_21625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21596)
static void C_ccall f_21596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21618)
static void C_ccall f_21618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21604)
static void C_ccall f_21604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21558)
static void C_fcall f_21558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21515)
static void C_fcall f_21515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21526)
static void C_ccall f_21526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21530)
static void C_ccall f_21530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21534)
static void C_ccall f_21534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21538)
static void C_ccall f_21538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21522)
static void C_ccall f_21522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21482)
static void C_fcall f_21482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21477)
static void C_fcall f_21477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21472)
static void C_fcall f_21472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21304)
static void C_ccall f_21304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21315)
static void C_ccall f_21315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21330)
static void C_ccall f_21330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21266)
static void C_ccall f_21266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21277)
static void C_ccall f_21277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21292)
static void C_ccall f_21292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21199)
static void C_ccall f_21199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21219)
static void C_fcall f_21219(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21229)
static void C_ccall f_21229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21242)
static void C_ccall f_21242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21210)
static void C_ccall f_21210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21217)
static void C_ccall f_21217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21006)
static void C_ccall f_21006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21066)
static void C_fcall f_21066(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21076)
static void C_ccall f_21076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21190)
static void C_ccall f_21190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21155)
static void C_ccall f_21155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21147)
static void C_ccall f_21147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21118)
static void C_ccall f_21118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21096)
static void C_ccall f_21096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21099)
static void C_ccall f_21099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21087)
static void C_ccall f_21087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21013)
static void C_ccall f_21013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21064)
static void C_ccall f_21064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21056)
static void C_ccall f_21056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21016)
static void C_ccall f_21016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21027)
static void C_ccall f_21027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21031)
static void C_ccall f_21031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21023)
static void C_ccall f_21023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20864)
static void C_ccall f_20864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20912)
static void C_fcall f_20912(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20922)
static void C_ccall f_20922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20933)
static void C_ccall f_20933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20970)
static void C_ccall f_20970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20945)
static void C_ccall f_20945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20936)
static void C_ccall f_20936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20874)
static void C_ccall f_20874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20910)
static void C_ccall f_20910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20881)
static void C_ccall f_20881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20513)
static void C_ccall f_20513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20520)
static void C_ccall f_20520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20754)
static void C_fcall f_20754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20764)
static void C_ccall f_20764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20775)
static void C_ccall f_20775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20787)
static void C_fcall f_20787(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20790)
static void C_ccall f_20790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20778)
static void C_ccall f_20778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20526)
static void C_ccall f_20526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20752)
static void C_ccall f_20752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20748)
static void C_ccall f_20748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20694)
static void C_fcall f_20694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20659)
static void C_fcall f_20659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20675)
static void C_fcall f_20675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20630)
static void C_fcall f_20630(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20554)
static void C_ccall f_20554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20557)
static void C_ccall f_20557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20621)
static void C_ccall f_20621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20617)
static void C_ccall f_20617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20537)
static void C_fcall f_20537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20548)
static void C_ccall f_20548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20544)
static void C_ccall f_20544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20466)
static void C_ccall f_20466(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20499)
static void C_ccall f_20499(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20481)
static void C_ccall f_20481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20493)
static void C_ccall f_20493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20084)
static void C_ccall f_20084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20293)
static void C_fcall f_20293(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20303)
static void C_ccall f_20303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20314)
static void C_ccall f_20314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20434)
static void C_ccall f_20434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20413)
static void C_ccall f_20413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20392)
static void C_ccall f_20392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20371)
static void C_ccall f_20371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20350)
static void C_ccall f_20350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_ccall f_20329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20317)
static void C_ccall f_20317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20094)
static void C_ccall f_20094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20097)
static void C_fcall f_20097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20260)
static void C_fcall f_20260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20100)
static void C_fcall f_20100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20251)
static void C_ccall f_20251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20231)
static void C_ccall f_20231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20103)
static void C_fcall f_20103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20196)
static void C_ccall f_20196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20213)
static void C_ccall f_20213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20106)
static void C_fcall f_20106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20145)
static void C_ccall f_20145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20179)
static void C_ccall f_20179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20163)
static void C_ccall f_20163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20148)
static void C_fcall f_20148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20113)
static void C_fcall f_20113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20124)
static void C_ccall f_20124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20128)
static void C_ccall f_20128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20120)
static void C_ccall f_20120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20002)
static void C_ccall f_20002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20006)
static void C_ccall f_20006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20024)
static void C_ccall f_20024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19842)
static void C_fcall f_19842(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19850)
static void C_fcall f_19850(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19860)
static void C_ccall f_19860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19898)
static void C_ccall f_19898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19901)
static void C_ccall f_19901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19904)
static void C_ccall f_19904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19979)
static void C_fcall f_19979(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19989)
static void C_ccall f_19989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19907)
static void C_ccall f_19907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19910)
static void C_ccall f_19910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19913)
static void C_ccall f_19913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19933)
static void C_fcall f_19933(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19943)
static void C_ccall f_19943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19946)
static void C_ccall f_19946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19949)
static void C_ccall f_19949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19916)
static void C_ccall f_19916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19919)
static void C_ccall f_19919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19836)
static void C_fcall f_19836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19830)
static void C_fcall f_19830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19824)
static void C_fcall f_19824(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19753)
static void C_fcall f_19753(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19794)
static void C_ccall f_19794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19798)
static void C_ccall f_19798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19802)
static void C_ccall f_19802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19806)
static void C_ccall f_19806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19810)
static void C_ccall f_19810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19814)
static void C_ccall f_19814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19818)
static void C_ccall f_19818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19822)
static void C_ccall f_19822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19755)
static void C_fcall f_19755(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19761)
static void C_fcall f_19761(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19783)
static void C_ccall f_19783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19772)
static void C_ccall f_19772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19602)
static void C_fcall f_19602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19617)
static void C_fcall f_19617(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19630)
static void C_ccall f_19630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19590)
static void C_ccall f_19590(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19578)
static void C_ccall f_19578(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19566)
static void C_ccall f_19566(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19560)
static void C_fcall f_19560(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19554)
static void C_ccall f_19554(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19542)
static void C_ccall f_19542(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19530)
static void C_ccall f_19530(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19518)
static void C_ccall f_19518(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19506)
static void C_ccall f_19506(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19500)
static void C_fcall f_19500(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19464)
static void C_ccall f_19464(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19458)
static void C_ccall f_19458(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19411)
static void C_ccall f_19411(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19415)
static void C_ccall f_19415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_ccall f_19431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19440)
static void C_ccall f_19440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19418)
static void C_ccall f_19418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19402)
static void C_ccall f_19402(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19406)
static void C_ccall f_19406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19249)
static void C_ccall f_19249(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19249)
static void C_ccall f_19249r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_19376)
static void C_fcall f_19376(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19389)
static void C_ccall f_19389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19371)
static void C_ccall f_19371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19252)
static void C_fcall f_19252(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19368)
static void C_ccall f_19368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19352)
static void C_ccall f_19352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_ccall f_19280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19288)
static void C_fcall f_19288(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19298)
static void C_ccall f_19298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19301)
static void C_ccall f_19301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19283)
static void C_ccall f_19283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19072)
static void C_ccall f_19072(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19076)
static void C_ccall f_19076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19081)
static void C_ccall f_19081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19084)
static void C_fcall f_19084(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16896)
static void C_ccall f_16896(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16909)
static void C_ccall f_16909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16916)
static void C_fcall f_16916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16923)
static void C_ccall f_16923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16902)
static void C_ccall f_16902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19088)
static void C_ccall f_19088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19125)
static void C_ccall f_19125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19218)
static void C_fcall f_19218(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19228)
static void C_fcall f_19228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19131)
static void C_ccall f_19131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19188)
static void C_fcall f_19188(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19198)
static void C_fcall f_19198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19139)
static void C_ccall f_19139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19153)
static void C_ccall f_19153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19157)
static void C_ccall f_19157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19161)
static void C_ccall f_19161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19165)
static void C_ccall f_19165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19172)
static void C_ccall f_19172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19149)
static void C_ccall f_19149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19142)
static void C_ccall f_19142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19091)
static void C_ccall f_19091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18023)
static void C_ccall f_18023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18036)
static void C_ccall f_18036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18086)
static void C_ccall f_18086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18183)
static void C_ccall f_18183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18251)
static void C_ccall f_18251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18508)
static void C_ccall f_18508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18258)
static void C_fcall f_18258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18496)
static void C_ccall f_18496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18447)
static void C_ccall f_18447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18453)
static void C_ccall f_18453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18477)
static void C_ccall f_18477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18473)
static void C_ccall f_18473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18461)
static void C_ccall f_18461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18261)
static void C_fcall f_18261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18423)
static void C_ccall f_18423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18427)
static void C_ccall f_18427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18264)
static void C_fcall f_18264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18400)
static void C_ccall f_18400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18404)
static void C_ccall f_18404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18267)
static void C_fcall f_18267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18377)
static void C_ccall f_18377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18381)
static void C_ccall f_18381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18270)
static void C_fcall f_18270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18302)
static void C_ccall f_18302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18320)
static void C_ccall f_18320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18338)
static void C_ccall f_18338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18356)
static void C_ccall f_18356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18273)
static void C_fcall f_18273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18277)
static void C_ccall f_18277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18187)
static void C_ccall f_18187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18191)
static void C_ccall f_18191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18195)
static void C_ccall f_18195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_ccall f_18090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18094)
static void C_ccall f_18094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18098)
static void C_ccall f_18098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18117)
static void C_ccall f_18117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18121)
static void C_ccall f_18121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18101)
static void C_fcall f_18101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18105)
static void C_ccall f_18105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18040)
static void C_ccall f_18040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18044)
static void C_ccall f_18044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18048)
static void C_ccall f_18048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18030)
static void C_fcall f_18030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17845)
static void C_fcall f_17845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17857)
static void C_fcall f_17857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17876)
static void C_ccall f_17876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17894)
static void C_fcall f_17894(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17926)
static void C_ccall f_17926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17929)
static void C_fcall f_17929(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17922)
static void C_ccall f_17922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17908)
static void C_ccall f_17908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17879)
static void C_ccall f_17879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17824)
static void C_fcall f_17824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17831)
static void C_ccall f_17831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17834)
static void C_ccall f_17834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17840)
static void C_ccall f_17840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17759)
static void C_fcall f_17759(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17768)
static void C_fcall f_17768(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17791)
static void C_ccall f_17791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17781)
static void C_fcall f_17781(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17715)
static void C_fcall f_17715(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17703)
static void C_fcall f_17703(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17601)
static void C_fcall f_17601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17553)
static void C_fcall f_17553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_fcall f_16934(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16938)
static void C_ccall f_16938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16941)
static void C_ccall f_16941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17367)
static void C_ccall f_17367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17363)
static void C_ccall f_17363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17359)
static void C_ccall f_17359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16944)
static void C_fcall f_16944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17067)
static void C_ccall f_17067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16300)
static void C_ccall f_16300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17073)
static void C_fcall f_17073(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16316)
static void C_ccall f_16316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17161)
static void C_fcall f_17161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17231)
static void C_ccall f_17231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16332)
static void C_ccall f_16332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17234)
static void C_fcall f_17234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16364)
static void C_ccall f_16364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17312)
static void C_fcall f_17312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17338)
static void C_ccall f_17338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17332)
static void C_ccall f_17332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17321)
static void C_ccall f_17321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17263)
static void C_fcall f_17263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17273)
static void C_ccall f_17273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17299)
static void C_ccall f_17299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17293)
static void C_ccall f_17293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17276)
static void C_ccall f_17276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17286)
static void C_ccall f_17286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17279)
static void C_fcall f_17279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17240)
static void C_ccall f_17240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17249)
static void C_ccall f_17249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_fcall f_17243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17167)
static void C_ccall f_17167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17185)
static void C_fcall f_17185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17218)
static void C_ccall f_17218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17204)
static void C_ccall f_17204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17212)
static void C_ccall f_17212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17195)
static void C_ccall f_17195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17170)
static void C_ccall f_17170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17082)
static void C_ccall f_17082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17104)
static void C_fcall f_17104(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17151)
static void C_ccall f_17151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17137)
static void C_ccall f_17137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17145)
static void C_ccall f_17145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17117)
static void C_ccall f_17117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17120)
static void C_fcall f_17120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17085)
static void C_ccall f_17085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17088)
static void C_fcall f_17088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16953)
static void C_ccall f_16953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16959)
static void C_ccall f_16959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17017)
static void C_ccall f_17017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17020)
static void C_ccall f_17020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17041)
static void C_ccall f_17041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17052)
static void C_ccall f_17052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17031)
static void C_ccall f_17031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16965)
static void C_ccall f_16965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_ccall f_16975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17011)
static void C_ccall f_17011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16981)
static void C_ccall f_16981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16996)
static void C_ccall f_16996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17000)
static void C_ccall f_17000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17004)
static void C_ccall f_17004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16988)
static void C_ccall f_16988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16830)
static void C_fcall f_16830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16832)
static void C_ccall f_16832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16880)
static void C_ccall f_16880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16836)
static void C_ccall f_16836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16839)
static void C_fcall f_16839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16844)
static void C_fcall f_16844(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16865)
static void C_ccall f_16865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16822)
static void C_fcall f_16822(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16824)
static void C_ccall f_16824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16614)
static void C_fcall f_16614(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16631)
static void C_ccall f_16631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16635)
static void C_ccall f_16635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16581)
static void C_fcall f_16581(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16588)
static void C_ccall f_16588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16532)
static void C_ccall f_16532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16539)
static void C_ccall f_16539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16597)
static void C_ccall f_16597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16820)
static void C_ccall f_16820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16813)
static void C_ccall f_16813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16659)
static void C_ccall f_16659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16662)
static void C_ccall f_16662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16686)
static void C_ccall f_16686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16743)
static void C_ccall f_16743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16749)
static void C_ccall f_16749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16758)
static void C_ccall f_16758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16767)
static void C_ccall f_16767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16776)
static void C_ccall f_16776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16785)
static void C_ccall f_16785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16737)
static void C_ccall f_16737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16692)
static void C_ccall f_16692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16698)
static void C_ccall f_16698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16704)
static void C_ccall f_16704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16710)
static void C_ccall f_16710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16716)
static void C_ccall f_16716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16722)
static void C_ccall f_16722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16563)
static void C_fcall f_16563(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16570)
static void C_ccall f_16570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16553)
static void C_fcall f_16553(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16541)
static void C_fcall f_16541(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16509)
static void C_fcall f_16509(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16516)
static void C_ccall f_16516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16523)
static void C_ccall f_16523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16493)
static void C_fcall f_16493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16500)
static void C_ccall f_16500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16507)
static void C_ccall f_16507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16481)
static void C_fcall f_16481(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16463)
static void C_fcall f_16463(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16445)
static void C_fcall f_16445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16430)
static void C_fcall f_16430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16424)
static void C_fcall f_16424(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16412)
static void C_fcall f_16412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16394)
static void C_fcall f_16394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16373)
static void C_fcall f_16373(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16341)
static void C_fcall f_16341(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16348)
static void C_ccall f_16348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16283)
static void C_fcall f_16283(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16291)
static void C_ccall f_16291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16273)
static void C_fcall f_16273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16281)
static void C_ccall f_16281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16267)
static void C_fcall f_16267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16255)
static void C_fcall f_16255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16252)
static void C_ccall f_16252(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16231)
static void C_fcall f_16231(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16144)
static void C_fcall f_16144(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16123)
static void C_fcall f_16123(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_16113)
static void C_fcall f_16113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16101)
static void C_fcall f_16101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16072)
static void C_ccall f_16072(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16060)
static void C_fcall f_16060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16042)
static void C_fcall f_16042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16024)
static void C_fcall f_16024(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16003)
static void C_ccall f_16003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15909)
static void C_ccall f_15909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15913)
static void C_ccall f_15913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_ccall f_15942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15947)
static void C_fcall f_15947(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15972)
static void C_fcall f_15972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15957)
static void C_ccall f_15957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15391)
static void C_ccall f_15391(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15391)
static void C_ccall f_15391r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15662)
static void C_ccall f_15662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15666)
static void C_ccall f_15666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15671)
static void C_ccall f_15671(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15671)
static void C_ccall f_15671r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15877)
static void C_ccall f_15877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15892)
static void C_ccall f_15892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15884)
static void C_ccall f_15884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15848)
static void C_ccall f_15848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15852)
static void C_ccall f_15852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15813)
static void C_ccall f_15813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15817)
static void C_ccall f_15817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15675)
static void C_fcall f_15675(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15777)
static void C_ccall f_15777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15792)
static void C_ccall f_15792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15784)
static void C_ccall f_15784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15748)
static void C_ccall f_15748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15752)
static void C_ccall f_15752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15713)
static void C_ccall f_15713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15717)
static void C_ccall f_15717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_fcall f_15678(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15681)
static void C_ccall f_15681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_fcall f_15684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15653)
static void C_ccall f_15653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15395)
static void C_ccall f_15395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15622)
static void C_ccall f_15622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15637)
static void C_ccall f_15637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15629)
static void C_ccall f_15629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15593)
static void C_ccall f_15593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15597)
static void C_ccall f_15597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15558)
static void C_ccall f_15558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15562)
static void C_ccall f_15562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15398)
static void C_fcall f_15398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15522)
static void C_ccall f_15522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15537)
static void C_ccall f_15537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15529)
static void C_ccall f_15529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15493)
static void C_ccall f_15493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15497)
static void C_ccall f_15497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_ccall f_15458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15462)
static void C_ccall f_15462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15401)
static void C_fcall f_15401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15404)
static void C_ccall f_15404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15407)
static void C_ccall f_15407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15419)
static void C_ccall f_15419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15437)
static void C_ccall f_15437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15425)
static void C_ccall f_15425(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15413)
static void C_ccall f_15413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15328)
static void C_fcall f_15328(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14988)
static void C_ccall f_14988(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15170)
static void C_ccall f_15170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15174)
static void C_ccall f_15174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15176)
static void C_fcall f_15176(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15101)
static void C_fcall f_15101(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15111)
static void C_fcall f_15111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15118)
static void C_fcall f_15118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15186)
static void C_ccall f_15186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15189)
static void C_ccall f_15189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15193)
static void C_ccall f_15193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15213)
static void C_fcall f_15213(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15229)
static void C_ccall f_15229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15196)
static void C_ccall f_15196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14991)
static void C_fcall f_14991(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15003)
static void C_fcall f_15003(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15039)
static void C_ccall f_15039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15059)
static void C_ccall f_15059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15064)
static void C_fcall f_15064(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14501)
static void C_ccall f_14501(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14501)
static void C_ccall f_14501r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14428)
static void C_fcall f_14428(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14273)
static void C_ccall f_14273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14279)
static void C_ccall f_14279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_fcall f_14364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14291)
static void C_ccall f_14291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14307)
static void C_ccall f_14307(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14311)
static void C_fcall f_14311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14314)
static void C_fcall f_14314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14294)
static void C_ccall f_14294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14305)
static void C_ccall f_14305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14445)
static void C_ccall f_14445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14982)
static void C_ccall f_14982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14505)
static void C_ccall f_14505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14951)
static void C_ccall f_14951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14966)
static void C_ccall f_14966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14958)
static void C_ccall f_14958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14922)
static void C_ccall f_14922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14926)
static void C_ccall f_14926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14887)
static void C_ccall f_14887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14891)
static void C_ccall f_14891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_ccall f_14856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14508)
static void C_fcall f_14508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14816)
static void C_ccall f_14816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14831)
static void C_ccall f_14831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14823)
static void C_ccall f_14823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14787)
static void C_ccall f_14787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14791)
static void C_ccall f_14791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14752)
static void C_ccall f_14752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14756)
static void C_ccall f_14756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14717)
static void C_ccall f_14717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14721)
static void C_ccall f_14721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14511)
static void C_fcall f_14511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14681)
static void C_ccall f_14681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14696)
static void C_ccall f_14696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14688)
static void C_ccall f_14688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14652)
static void C_ccall f_14652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14656)
static void C_ccall f_14656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14617)
static void C_ccall f_14617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14621)
static void C_ccall f_14621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14582)
static void C_ccall f_14582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14586)
static void C_ccall f_14586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14514)
static void C_fcall f_14514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14517)
static void C_ccall f_14517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14520)
static void C_ccall f_14520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14553)
static void C_ccall f_14553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14561)
static void C_ccall f_14561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14526)
static void C_ccall f_14526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14539)
static void C_ccall f_14539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14529)
static void C_fcall f_14529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14532)
static void C_ccall f_14532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14068)
static void C_ccall f_14068(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14072)
static void C_ccall f_14072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14075)
static void C_ccall f_14075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14078)
static void C_ccall f_14078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_ccall f_14247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14260)
static void C_ccall f_14260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14264)
static void C_ccall f_14264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14084)
static void C_ccall f_14084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14221)
static void C_ccall f_14221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14228)
static void C_ccall f_14228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14232)
static void C_ccall f_14232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14090)
static void C_fcall f_14090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14096)
static void C_ccall f_14096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14180)
static void C_ccall f_14180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14182)
static void C_fcall f_14182(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14204)
static void C_ccall f_14204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14211)
static void C_ccall f_14211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14215)
static void C_ccall f_14215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14201)
static void C_fcall f_14201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14197)
static void C_ccall f_14197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14138)
static void C_ccall f_14138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14155)
static void C_fcall f_14155(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14165)
static void C_ccall f_14165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14141)
static void C_ccall f_14141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14100)
static void C_fcall f_14100(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14108)
static void C_ccall f_14108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14110)
static void C_fcall f_14110(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14131)
static void C_ccall f_14131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13956)
static void C_fcall f_13956(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14025)
static void C_fcall f_14025(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14058)
static void C_ccall f_14058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14054)
static void C_ccall f_14054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14039)
static void C_ccall f_14039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13963)
static void C_ccall f_13963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13971)
static void C_fcall f_13971(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14016)
static void C_ccall f_14016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14004)
static void C_ccall f_14004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_ccall f_13988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13189)
static void C_ccall f_13189(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13189)
static void C_ccall f_13189r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13506)
static void C_ccall f_13506(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13513)
static void C_fcall f_13513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13918)
static void C_ccall f_13918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13933)
static void C_ccall f_13933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13925)
static void C_ccall f_13925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13889)
static void C_ccall f_13889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13893)
static void C_ccall f_13893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13854)
static void C_ccall f_13854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13858)
static void C_ccall f_13858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13819)
static void C_ccall f_13819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13823)
static void C_ccall f_13823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13516)
static void C_fcall f_13516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13783)
static void C_ccall f_13783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13798)
static void C_ccall f_13798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13790)
static void C_ccall f_13790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13754)
static void C_ccall f_13754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13758)
static void C_ccall f_13758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13719)
static void C_ccall f_13719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13723)
static void C_ccall f_13723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13684)
static void C_ccall f_13684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13688)
static void C_ccall f_13688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13519)
static void C_fcall f_13519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13648)
static void C_ccall f_13648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13663)
static void C_ccall f_13663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13655)
static void C_ccall f_13655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13619)
static void C_ccall f_13619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13623)
static void C_ccall f_13623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13584)
static void C_ccall f_13584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13588)
static void C_ccall f_13588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13549)
static void C_ccall f_13549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13522)
static void C_fcall f_13522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13525)
static void C_ccall f_13525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13193)
static void C_ccall f_13193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13196)
static void C_ccall f_13196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13470)
static void C_ccall f_13470(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13474)
static void C_ccall f_13474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13477)
static void C_ccall f_13477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13480)
static void C_ccall f_13480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13496)
static void C_ccall f_13496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13486)
static void C_fcall f_13486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13202)
static void C_ccall f_13202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13209)
static void C_fcall f_13209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13440)
static void C_ccall f_13440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13455)
static void C_ccall f_13455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13447)
static void C_ccall f_13447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13411)
static void C_ccall f_13411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13415)
static void C_ccall f_13415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_ccall f_13376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13380)
static void C_ccall f_13380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13212)
static void C_fcall f_13212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13340)
static void C_ccall f_13340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13355)
static void C_ccall f_13355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13347)
static void C_ccall f_13347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_ccall f_13311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13315)
static void C_ccall f_13315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13276)
static void C_ccall f_13276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13280)
static void C_ccall f_13280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13215)
static void C_fcall f_13215(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13218)
static void C_ccall f_13218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13233)
static void C_ccall f_13233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13255)
static void C_ccall f_13255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13239)
static void C_ccall f_13239(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13247)
static void C_ccall f_13247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13221)
static void C_ccall f_13221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13224)
static void C_ccall f_13224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13106)
static void C_fcall f_13106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_fcall f_13097(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13088)
static void C_fcall f_13088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13070)
static void C_fcall f_13070(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13052)
static void C_fcall f_13052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_fcall f_13034(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13025)
static void C_fcall f_13025(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13016)
static void C_fcall f_13016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12794)
static void C_ccall f_12794(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12844)
static void C_ccall f_12844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12989)
static void C_ccall f_12989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12870)
static void C_ccall f_12870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12985)
static void C_ccall f_12985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12970)
static void C_ccall f_12970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12951)
static void C_ccall f_12951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12924)
static void C_ccall f_12924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12877)
static void C_ccall f_12877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12847)
static void C_fcall f_12847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12797)
static void C_ccall f_12797(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12803)
static void C_fcall f_12803(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12819)
static void C_ccall f_12819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12320)
static void C_ccall f_12320(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12320)
static void C_ccall f_12320r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12784)
static void C_ccall f_12784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12324)
static void C_fcall f_12324(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12756)
static void C_ccall f_12756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12771)
static void C_ccall f_12771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12727)
static void C_ccall f_12727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12731)
static void C_ccall f_12731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12692)
static void C_ccall f_12692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12696)
static void C_ccall f_12696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12657)
static void C_ccall f_12657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12661)
static void C_ccall f_12661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12327)
static void C_fcall f_12327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12621)
static void C_ccall f_12621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12636)
static void C_ccall f_12636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12628)
static void C_ccall f_12628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12592)
static void C_ccall f_12592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12596)
static void C_ccall f_12596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12557)
static void C_ccall f_12557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12561)
static void C_ccall f_12561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12522)
static void C_ccall f_12522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12526)
static void C_ccall f_12526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12330)
static void C_fcall f_12330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12486)
static void C_ccall f_12486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12501)
static void C_ccall f_12501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12493)
static void C_ccall f_12493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12457)
static void C_ccall f_12457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12461)
static void C_ccall f_12461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12422)
static void C_ccall f_12422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12426)
static void C_ccall f_12426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12387)
static void C_ccall f_12387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12391)
static void C_ccall f_12391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12333)
static void C_fcall f_12333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12336)
static void C_ccall f_12336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12339)
static void C_ccall f_12339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12354)
static void C_ccall f_12354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12366)
static void C_ccall f_12366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12345)
static void C_ccall f_12345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12348)
static void C_ccall f_12348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12244)
static void C_ccall f_12244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12248)
static void C_ccall f_12248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12267)
static void C_ccall f_12267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12277)
static void C_ccall f_12277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12279)
static void C_fcall f_12279(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12296)
static void C_ccall f_12296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12299)
static void C_ccall f_12299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12310)
static void C_ccall f_12310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12251)
static void C_ccall f_12251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11981)
static void C_ccall f_11981(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11981)
static void C_ccall f_11981r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12234)
static void C_ccall f_12234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11985)
static void C_fcall f_11985(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12206)
static void C_ccall f_12206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12221)
static void C_ccall f_12221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12213)
static void C_ccall f_12213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12177)
static void C_ccall f_12177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12181)
static void C_ccall f_12181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12142)
static void C_ccall f_12142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12146)
static void C_ccall f_12146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11988)
static void C_fcall f_11988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12106)
static void C_ccall f_12106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12121)
static void C_ccall f_12121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12113)
static void C_ccall f_12113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12077)
static void C_ccall f_12077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12081)
static void C_ccall f_12081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12042)
static void C_ccall f_12042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12046)
static void C_ccall f_12046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11991)
static void C_fcall f_11991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11994)
static void C_ccall f_11994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11997)
static void C_ccall f_11997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12009)
static void C_ccall f_12009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12021)
static void C_ccall f_12021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12003)
static void C_ccall f_12003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11945)
static void C_ccall f_11945(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11949)
static void C_ccall f_11949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11965)
static void C_ccall f_11965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11958)
static void C_ccall f_11958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11698)
static void C_ccall f_11698(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11698)
static void C_ccall f_11698r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11702)
static void C_fcall f_11702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11915)
static void C_ccall f_11915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11930)
static void C_ccall f_11930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11922)
static void C_ccall f_11922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11886)
static void C_ccall f_11886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11890)
static void C_ccall f_11890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11851)
static void C_ccall f_11851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11855)
static void C_ccall f_11855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11705)
static void C_fcall f_11705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11815)
static void C_ccall f_11815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11830)
static void C_ccall f_11830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11822)
static void C_ccall f_11822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11786)
static void C_ccall f_11786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11790)
static void C_ccall f_11790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11751)
static void C_ccall f_11751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11755)
static void C_ccall f_11755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11708)
static void C_fcall f_11708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11711)
static void C_ccall f_11711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11714)
static void C_ccall f_11714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11722)
static void C_ccall f_11722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11730)
static void C_ccall f_11730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11720)
static void C_ccall f_11720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11483)
static void C_ccall f_11483(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11487)
static void C_ccall f_11487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11696)
static void C_ccall f_11696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11649)
static void C_ccall f_11649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11661)
static void C_fcall f_11661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11517)
static void C_ccall f_11517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11520)
static void C_ccall f_11520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11526)
static void C_ccall f_11526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11529)
static void C_ccall f_11529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11617)
static void C_fcall f_11617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_fcall f_11532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11611)
static void C_ccall f_11611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11538)
static void C_ccall f_11538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11541)
static void C_ccall f_11541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11493)
static void C_ccall f_11493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_ccall f_11496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11503)
static void C_ccall f_11503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11013)
static void C_ccall f_11013(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11013)
static void C_ccall f_11013r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11017)
static void C_fcall f_11017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11453)
static void C_ccall f_11453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11468)
static void C_ccall f_11468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11460)
static void C_ccall f_11460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11424)
static void C_ccall f_11424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11428)
static void C_ccall f_11428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11389)
static void C_ccall f_11389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11393)
static void C_ccall f_11393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11354)
static void C_ccall f_11354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11358)
static void C_ccall f_11358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11020)
static void C_fcall f_11020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11318)
static void C_ccall f_11318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11333)
static void C_ccall f_11333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11325)
static void C_ccall f_11325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11289)
static void C_ccall f_11289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11293)
static void C_ccall f_11293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11254)
static void C_ccall f_11254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11258)
static void C_ccall f_11258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11219)
static void C_ccall f_11219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11223)
static void C_ccall f_11223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11023)
static void C_fcall f_11023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11183)
static void C_ccall f_11183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11198)
static void C_ccall f_11198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11190)
static void C_ccall f_11190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11154)
static void C_ccall f_11154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11158)
static void C_ccall f_11158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11119)
static void C_ccall f_11119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11123)
static void C_ccall f_11123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11084)
static void C_ccall f_11084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11088)
static void C_ccall f_11088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11026)
static void C_fcall f_11026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11029)
static void C_ccall f_11029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11032)
static void C_ccall f_11032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11055)
static void C_ccall f_11055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11063)
static void C_ccall f_11063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11038)
static void C_ccall f_11038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11041)
static void C_ccall f_11041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10933)
static void C_fcall f_10933(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10924)
static void C_fcall f_10924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10852)
static void C_ccall f_10852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10856)
static void C_ccall f_10856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10859)
static void C_fcall f_10859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10597)
static void C_ccall f_10597(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10597)
static void C_ccall f_10597r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10601)
static void C_fcall f_10601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10822)
static void C_ccall f_10822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10837)
static void C_ccall f_10837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10829)
static void C_ccall f_10829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10793)
static void C_ccall f_10793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10797)
static void C_ccall f_10797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10758)
static void C_ccall f_10758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10762)
static void C_ccall f_10762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10604)
static void C_fcall f_10604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10722)
static void C_ccall f_10722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10737)
static void C_ccall f_10737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10729)
static void C_ccall f_10729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10693)
static void C_ccall f_10693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10697)
static void C_ccall f_10697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10658)
static void C_ccall f_10658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10662)
static void C_ccall f_10662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10607)
static void C_fcall f_10607(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10610)
static void C_ccall f_10610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10613)
static void C_ccall f_10613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10625)
static void C_ccall f_10625(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10637)
static void C_ccall f_10637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10619)
static void C_ccall f_10619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10482)
static void C_fcall f_10482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10595)
static void C_ccall f_10595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10492)
static void C_ccall f_10492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10580)
static void C_ccall f_10580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10591)
static void C_ccall f_10591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10587)
static void C_ccall f_10587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10495)
static void C_ccall f_10495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10577)
static void C_ccall f_10577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10503)
static void C_ccall f_10503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10567)
static void C_ccall f_10567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10512)
static void C_ccall f_10512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10531)
static void C_ccall f_10531(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10560)
static void C_ccall f_10560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10541)
static void C_ccall f_10541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10556)
static void C_ccall f_10556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10544)
static void C_ccall f_10544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10515)
static void C_ccall f_10515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10525)
static void C_ccall f_10525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10506)
static void C_fcall f_10506(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10509)
static void C_ccall f_10509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10436)
static void C_fcall f_10436(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10427)
static void C_fcall f_10427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10126)
static void C_fcall f_10126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10133)
static void C_ccall f_10133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10422)
static void C_ccall f_10422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10136)
static void C_ccall f_10136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10407)
static void C_ccall f_10407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10399)
static void C_ccall f_10399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10391)
static void C_ccall f_10391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10394)
static void C_ccall f_10394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10362)
static void C_fcall f_10362(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10385)
static void C_ccall f_10385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10368)
static void C_fcall f_10368(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10372)
static void C_ccall f_10372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10139)
static void C_ccall f_10139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10145)
static void C_ccall f_10145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10237)
static void C_ccall f_10237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10349)
static void C_ccall f_10349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10356)
static void C_ccall f_10356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10260)
static void C_fcall f_10260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10262)
static void C_fcall f_10262(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10311)
static void C_fcall f_10311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10346)
static void C_ccall f_10346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10335)
static void C_ccall f_10335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10480)
static void C_ccall f_10480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10455)
static void C_ccall f_10455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10476)
static void C_ccall f_10476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10472)
static void C_ccall f_10472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10464)
static void C_ccall f_10464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10328)
static void C_ccall f_10328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10321)
static void C_ccall f_10321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10269)
static void C_ccall f_10269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10309)
static void C_ccall f_10309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10273)
static void C_ccall f_10273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10305)
static void C_ccall f_10305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10300)
static void C_ccall f_10300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10296)
static void C_ccall f_10296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10276)
static void C_fcall f_10276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10279)
static void C_ccall f_10279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10253)
static void C_ccall f_10253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10240)
static void C_ccall f_10240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10249)
static void C_ccall f_10249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10244)
static void C_ccall f_10244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10151)
static void C_ccall f_10151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10231)
static void C_ccall f_10231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10211)
static void C_ccall f_10211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10217)
static void C_ccall f_10217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10228)
static void C_ccall f_10228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10208)
static void C_ccall f_10208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10196)
static void C_ccall f_10196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10199)
static void C_ccall f_10199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10154)
static void C_ccall f_10154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10190)
static void C_ccall f_10190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10185)
static void C_ccall f_10185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10157)
static void C_ccall f_10157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10170)
static void C_ccall f_10170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10160)
static void C_fcall f_10160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10163)
static void C_ccall f_10163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10166)
static void C_ccall f_10166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10003)
static void C_ccall f_10003(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10003)
static void C_ccall f_10003r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10062)
static void C_ccall f_10062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10072)
static void C_ccall f_10072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10074)
static void C_fcall f_10074(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10103)
static void C_ccall f_10103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_ccall f_10108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10093)
static void C_fcall f_10093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10024)
static void C_fcall f_10024(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10056)
static void C_ccall f_10056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9984)
static void C_ccall f_9984(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9991)
static void C_ccall f_9991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9998)
static void C_ccall f_9998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9965)
static void C_ccall f_9965(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9972)
static void C_ccall f_9972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9979)
static void C_ccall f_9979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9785)
static void C_fcall f_9785(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_9789)
static void C_ccall f_9789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9792)
static void C_ccall f_9792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9795)
static void C_ccall f_9795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9798)
static void C_ccall f_9798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9955)
static void C_ccall f_9955(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9962)
static void C_ccall f_9962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9801)
static void C_ccall f_9801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9804)
static void C_fcall f_9804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9810)
static void C_ccall f_9810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9816)
static void C_ccall f_9816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9879)
static void C_ccall f_9879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9893)
static void C_ccall f_9893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9819)
static void C_fcall f_9819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9822)
static void C_ccall f_9822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9828)
static void C_fcall f_9828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9841)
static void C_ccall f_9841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9831)
static void C_ccall f_9831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9834)
static void C_ccall f_9834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9775)
static void C_fcall f_9775(C_word t0) C_noret;
C_noret_decl(f_9720)
static void C_fcall f_9720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9711)
static void C_fcall f_9711(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9594)
static void C_fcall f_9594(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9585)
static void C_fcall f_9585(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9576)
static void C_ccall f_9576(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9567)
static void C_fcall f_9567(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9558)
static void C_fcall f_9558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9540)
static void C_fcall f_9540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_fcall f_9531(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9522)
static void C_fcall f_9522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9504)
static void C_fcall f_9504(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9495)
static void C_fcall f_9495(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9486)
static void C_fcall f_9486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9471)
static void C_fcall f_9471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9426)
static void C_fcall f_9426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9408)
static void C_fcall f_9408(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9399)
static void C_fcall f_9399(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9372)
static void C_fcall f_9372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9354)
static void C_fcall f_9354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9336)
static void C_fcall f_9336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9327)
static void C_fcall f_9327(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9315)
static void C_fcall f_9315(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_9007)
static void C_ccall f_9007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9108)
static void C_ccall f_9108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9157)
static void C_ccall f_9157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9153)
static void C_ccall f_9153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9125)
static void C_ccall f_9125(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9060)
static void C_fcall f_9060(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9069)
static void C_fcall f_9069(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9053)
static void C_ccall f_9053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8872)
static void C_ccall f_8872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8998)
static void C_ccall f_8998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8994)
static void C_ccall f_8994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8972)
static void C_ccall f_8972(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8902)
static void C_fcall f_8902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8918)
static void C_fcall f_8918(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8827)
static void C_ccall f_8827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8870)
static void C_ccall f_8870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8859)
static void C_ccall f_8859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8711)
static void C_ccall f_8711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8825)
static void C_ccall f_8825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8726)
static void C_fcall f_8726(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8756)
static void C_fcall f_8756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8775)
static void C_ccall f_8775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8760)
static void C_ccall f_8760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8739)
static void C_fcall f_8739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8589)
static void C_ccall f_8589(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8709)
static void C_ccall f_8709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8604)
static void C_fcall f_8604(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8634)
static void C_fcall f_8634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8653)
static void C_ccall f_8653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8638)
static void C_ccall f_8638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8617)
static void C_fcall f_8617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8492)
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8587)
static void C_ccall f_8587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8507)
static void C_fcall f_8507(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8553)
static void C_ccall f_8553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8538)
static void C_ccall f_8538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8520)
static void C_fcall f_8520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8439)
static void C_fcall f_8439(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8477)
static void C_ccall f_8477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8462)
static void C_ccall f_8462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8437)
static void C_ccall f_8437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8409)
static void C_fcall f_8409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8411)
static void C_ccall f_8411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8389)
static void C_ccall f_8389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8337)
static void C_fcall f_8337(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8374)
static void C_ccall f_8374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8341)
static void C_ccall f_8341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8357)
static void C_ccall f_8357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8359)
static void C_ccall f_8359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8309)
static void C_ccall f_8309(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8309)
static void C_ccall f_8309r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8290)
static void C_ccall f_8290(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8290)
static void C_ccall f_8290r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8249)
static void C_ccall f_8249(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8249)
static void C_ccall f_8249r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8230)
static void C_ccall f_8230(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8230)
static void C_ccall f_8230r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8002)
static void C_ccall f_8002(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8002)
static void C_ccall f_8002r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8207)
static void C_ccall f_8207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8222)
static void C_ccall f_8222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8214)
static void C_ccall f_8214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8178)
static void C_ccall f_8178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8182)
static void C_ccall f_8182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8143)
static void C_ccall f_8143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8147)
static void C_ccall f_8147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8006)
static void C_fcall f_8006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8107)
static void C_ccall f_8107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8122)
static void C_ccall f_8122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8078)
static void C_ccall f_8078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8082)
static void C_ccall f_8082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8043)
static void C_ccall f_8043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8047)
static void C_ccall f_8047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8009)
static void C_fcall f_8009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8012)
static void C_ccall f_8012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8015)
static void C_fcall f_8015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7771)
static void C_ccall f_7771(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7771)
static void C_ccall f_7771r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7976)
static void C_ccall f_7976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7991)
static void C_ccall f_7991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7983)
static void C_ccall f_7983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7947)
static void C_ccall f_7947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7951)
static void C_ccall f_7951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7912)
static void C_ccall f_7912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7916)
static void C_ccall f_7916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7775)
static void C_fcall f_7775(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7876)
static void C_ccall f_7876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7891)
static void C_ccall f_7891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7883)
static void C_ccall f_7883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7847)
static void C_ccall f_7847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7851)
static void C_ccall f_7851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7812)
static void C_ccall f_7812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7816)
static void C_ccall f_7816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7778)
static void C_fcall f_7778(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7781)
static void C_ccall f_7781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7791)
static void C_ccall f_7791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7728)
static void C_ccall f_7728r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7761)
static void C_ccall f_7761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7746)
static void C_ccall f_7746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7707)
static void C_ccall f_7707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7672)
static void C_ccall f_7672(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7672)
static void C_ccall f_7672r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7676)
static void C_fcall f_7676(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7564)
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7564)
static void C_ccall f_7564r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7651)
static void C_ccall f_7651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7571)
static void C_fcall f_7571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7580)
static void C_fcall f_7580(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7627)
static void C_ccall f_7627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7593)
static void C_fcall f_7593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7619)
static void C_ccall f_7619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7431)
static void C_ccall f_7431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_7431)
static void C_ccall f_7431r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_7435)
static void C_fcall f_7435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7438)
static void C_fcall f_7438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7542)
static void C_ccall f_7542(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7440)
static void C_fcall f_7440(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7447)
static void C_ccall f_7447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7489)
static void C_ccall f_7489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7496)
static void C_ccall f_7496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7470)
static void C_ccall f_7470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7404)
static void C_ccall f_7404(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7404)
static void C_ccall f_7404r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7309)
static void C_ccall f_7309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7309)
static void C_ccall f_7309r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7313)
static void C_ccall f_7313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7316)
static void C_ccall f_7316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7328)
static void C_fcall f_7328(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7350)
static void C_ccall f_7350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7294)
static void C_ccall f_7294(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7279)
static void C_ccall f_7279(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7043)
static void C_ccall f_7043(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7043)
static void C_ccall f_7043r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7256)
static void C_ccall f_7256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7271)
static void C_ccall f_7271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7263)
static void C_ccall f_7263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7227)
static void C_ccall f_7227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7231)
static void C_ccall f_7231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7192)
static void C_ccall f_7192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7196)
static void C_ccall f_7196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7047)
static void C_fcall f_7047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7156)
static void C_ccall f_7156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7171)
static void C_ccall f_7171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7163)
static void C_ccall f_7163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7127)
static void C_ccall f_7127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7131)
static void C_ccall f_7131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7092)
static void C_ccall f_7092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7096)
static void C_ccall f_7096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7050)
static void C_fcall f_7050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7053)
static void C_ccall f_7053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7064)
static void C_ccall f_7064(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7024)
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7024)
static void C_ccall f_7024r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7003)
static void C_ccall f_7003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7015)
static void C_ccall f_7015(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6977)
static void C_ccall f_6977(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6977)
static void C_ccall f_6977r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6935)
static void C_ccall f_6935(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6935)
static void C_ccall f_6935r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6920)
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6809)
static void C_ccall f_6809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6809)
static void C_ccall f_6809r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6884)
static void C_ccall f_6884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6813)
static void C_fcall f_6813(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6853)
static void C_ccall f_6853(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6842)
static void C_ccall f_6842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6827)
static void C_ccall f_6827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6835)
static void C_ccall f_6835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6775)
static void C_ccall f_6775(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6775)
static void C_ccall f_6775r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6787)
static void C_ccall f_6787(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6772)
static void C_ccall f_6772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6769)
static void C_ccall f_6769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6762)
static void C_fcall f_6762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6759)
static void C_ccall f_6759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6752)
static void C_fcall f_6752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6734)
static void C_fcall f_6734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6723)
static void C_fcall f_6723(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6720)
static void C_ccall f_6720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6717)
static void C_ccall f_6717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6714)
static void C_ccall f_6714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6685)
static void C_fcall f_6685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6678)
static void C_fcall f_6678(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6675)
static void C_ccall f_6675(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6654)
static void C_fcall f_6654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6647)
static void C_ccall f_6647(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6640)
static void C_ccall f_6640(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6625)
static void C_fcall f_6625(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6614)
static void C_fcall f_6614(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6603)
static void C_fcall f_6603(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6596)
static void C_ccall f_6596(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6569)
static void C_fcall f_6569(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6542)
static void C_fcall f_6542(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6501)
static void C_fcall f_6501(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6507)
static void C_fcall f_6507(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6517)
static void C_fcall f_6517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6415)
static void C_ccall f_6415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6415)
static void C_ccall f_6415r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6316)
static void C_ccall f_6316(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6316)
static void C_ccall f_6316r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6320)
static void C_ccall f_6320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6345)
static void C_fcall f_6345(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6362)
static void C_ccall f_6362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6366)
static void C_ccall f_6366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6322)
static void C_fcall f_6322(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6339)
static void C_ccall f_6339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6306)
static void C_ccall f_6306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6266)
static void C_ccall f_6266(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6266)
static void C_ccall f_6266r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6296)
static void C_ccall f_6296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6128)
static void C_ccall f_6128(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6162)
static void C_ccall f_6162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6105)
static void C_ccall f_6105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6099)
static void C_ccall f_6099(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6084)
static void C_ccall f_6084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6070)
static void C_ccall f_6070(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6060)
static void C_ccall f_6060(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6050)
static void C_ccall f_6050(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6040)
static void C_ccall f_6040(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6030)
static void C_ccall f_6030(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6001)
static void C_ccall f_6001(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6001)
static void C_ccall f_6001r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6010)
static void C_ccall f_6010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6015)
static void C_ccall f_6015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5990)
static void C_ccall f_5990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5995)
static void C_ccall f_5995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5697)
static void C_ccall f_5697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5707)
static void C_ccall f_5707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5958)
static void C_ccall f_5958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5710)
static void C_ccall f_5710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5713)
static void C_ccall f_5713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5728)
static void C_fcall f_5728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5738)
static void C_ccall f_5738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5740)
static void C_fcall f_5740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5799)
static void C_ccall f_5799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5809)
static void C_ccall f_5809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5926)
static void C_ccall f_5926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5914)
static void C_ccall f_5914(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5912)
static void C_ccall f_5912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5899)
static void C_ccall f_5899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5853)
static void C_ccall f_5853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5880)
static void C_ccall f_5880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5859)
static void C_ccall f_5859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5793)
static void C_fcall f_5793(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5752)
static void C_fcall f_5752(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5765)
static void C_fcall f_5765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5975)
static void C_ccall f_5975(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5966)
static void C_ccall f_5966(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5974)
static void C_ccall f_5974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5977)
static void C_ccall f_5977(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5977)
static void C_ccall f_5977r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5985)
static void C_ccall f_5985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5399)
static void C_ccall f_5399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5652)
static void C_ccall f_5652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5685)
static void C_ccall f_5685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5681)
static void C_ccall f_5681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5670)
static void C_ccall f_5670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5666)
static void C_ccall f_5666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5560)
static void C_ccall f_5560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5563)
static void C_ccall f_5563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5566)
static void C_ccall f_5566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5646)
static void C_ccall f_5646(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5471)
static void C_ccall f_5471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5412)
static void C_ccall f_5412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5569)
static void C_ccall f_5569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5576)
static void C_ccall f_5576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5636)
static void C_ccall f_5636(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5622)
static void C_ccall f_5622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5588)
static void C_ccall f_5588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5614)
static void C_ccall f_5614(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5549)
static void C_ccall f_5549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5596)
static void C_ccall f_5596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5592)
static void C_ccall f_5592(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_33782)
static void C_fcall trf_33782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33782(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33782(t0,t1,t2);}

C_noret_decl(trf_33842)
static void C_fcall trf_33842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33842(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_33842(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_33862)
static void C_fcall trf_33862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33862(t0,t1);}

C_noret_decl(trf_33865)
static void C_fcall trf_33865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33865(t0,t1);}

C_noret_decl(trf_33736)
static void C_fcall trf_33736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33736(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33736(t0,t1);}

C_noret_decl(trf_33658)
static void C_fcall trf_33658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33658(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33658(t0,t1,t2);}

C_noret_decl(trf_33470)
static void C_fcall trf_33470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33470(t0,t1);}

C_noret_decl(trf_32352)
static void C_fcall trf_32352(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32352(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32352(t0,t1);}

C_noret_decl(trf_32225)
static void C_fcall trf_32225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32225(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32225(t0,t1,t2);}

C_noret_decl(trf_31909)
static void C_fcall trf_31909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31909(t0,t1);}

C_noret_decl(trf_31004)
static void C_fcall trf_31004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31004(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31004(t0,t1,t2);}

C_noret_decl(trf_31039)
static void C_fcall trf_31039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31039(t0,t1);}

C_noret_decl(trf_31063)
static void C_fcall trf_31063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31063(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31063(t0,t1);}

C_noret_decl(trf_31042)
static void C_fcall trf_31042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31042(t0,t1);}

C_noret_decl(trf_30845)
static void C_fcall trf_30845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30845(t0,t1);}

C_noret_decl(trf_30663)
static void C_fcall trf_30663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30663(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30663(t0,t1);}

C_noret_decl(trf_30670)
static void C_fcall trf_30670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30670(t0,t1);}

C_noret_decl(trf_30651)
static void C_fcall trf_30651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30651(t0,t1);}

C_noret_decl(trf_18571)
static void C_fcall trf_18571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18571(t0,t1);}

C_noret_decl(trf_18578)
static void C_fcall trf_18578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18578(t0,t1);}

C_noret_decl(trf_18876)
static void C_fcall trf_18876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18876(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18876(t0,t1,t2);}

C_noret_decl(trf_18899)
static void C_fcall trf_18899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18899(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18899(t0,t1,t2);}

C_noret_decl(trf_18916)
static void C_fcall trf_18916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18916(t0,t1);}

C_noret_decl(trf_18919)
static void C_fcall trf_18919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18919(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18919(t0,t1);}

C_noret_decl(trf_18922)
static void C_fcall trf_18922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18922(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18922(t0,t1);}

C_noret_decl(trf_18840)
static void C_fcall trf_18840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18840(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18840(t0,t1,t2);}

C_noret_decl(trf_18784)
static void C_fcall trf_18784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18784(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18784(t0,t1,t2);}

C_noret_decl(trf_18800)
static void C_fcall trf_18800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18800(t0,t1);}

C_noret_decl(trf_18594)
static void C_fcall trf_18594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18594(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18594(t0,t1);}

C_noret_decl(trf_18597)
static void C_fcall trf_18597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18597(t0,t1);}

C_noret_decl(trf_30160)
static void C_fcall trf_30160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30160(t0,t1);}

C_noret_decl(trf_30163)
static void C_fcall trf_30163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30163(t0,t1);}

C_noret_decl(trf_30006)
static void C_fcall trf_30006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30006(t0,t1);}

C_noret_decl(trf_29814)
static void C_fcall trf_29814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29814(t0,t1);}

C_noret_decl(trf_29664)
static void C_fcall trf_29664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29664(t0,t1);}

C_noret_decl(trf_29753)
static void C_fcall trf_29753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29753(t0,t1);}

C_noret_decl(trf_29667)
static void C_fcall trf_29667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29667(t0,t1);}

C_noret_decl(trf_29683)
static void C_fcall trf_29683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29683(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29683(t0,t1,t2,t3);}

C_noret_decl(trf_29705)
static void C_fcall trf_29705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29705(t0,t1);}

C_noret_decl(trf_29600)
static void C_fcall trf_29600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29600(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29600(t0,t1,t2);}

C_noret_decl(trf_29547)
static void C_fcall trf_29547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29547(t0,t1);}

C_noret_decl(trf_22991)
static void C_fcall trf_22991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22991(t0,t1);}

C_noret_decl(trf_22853)
static void C_fcall trf_22853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22853(t0,t1);}

C_noret_decl(trf_23067)
static void C_fcall trf_23067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23067(t0,t1);}

C_noret_decl(trf_29151)
static void C_fcall trf_29151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29151(t0,t1,t2);}

C_noret_decl(trf_29179)
static void C_fcall trf_29179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29179(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29179(t0,t1);}

C_noret_decl(trf_28882)
static void C_fcall trf_28882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28882(t0,t1);}

C_noret_decl(trf_29046)
static void C_fcall trf_29046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29046(t0,t1);}

C_noret_decl(trf_28895)
static void C_fcall trf_28895(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28895(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28895(t0,t1);}

C_noret_decl(trf_29130)
static void C_fcall trf_29130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29130(t0,t1);}

C_noret_decl(trf_28820)
static void C_fcall trf_28820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28820(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28820(t0,t1,t2);}

C_noret_decl(trf_28761)
static void C_fcall trf_28761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28761(t0,t1);}

C_noret_decl(trf_28697)
static void C_fcall trf_28697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28697(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28697(t0,t1,t2);}

C_noret_decl(trf_28617)
static void C_fcall trf_28617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28617(t0,t1);}

C_noret_decl(trf_28543)
static void C_fcall trf_28543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28543(t0,t1);}

C_noret_decl(trf_28538)
static void C_fcall trf_28538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28538(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28538(t0,t1,t2);}

C_noret_decl(trf_28426)
static void C_fcall trf_28426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28426(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28426(t0,t1,t2,t3);}

C_noret_decl(trf_28497)
static void C_fcall trf_28497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28497(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28497(t0,t1,t2);}

C_noret_decl(trf_28456)
static void C_fcall trf_28456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28456(t0,t1);}

C_noret_decl(trf_28428)
static void C_fcall trf_28428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28428(t0,t1);}

C_noret_decl(trf_28383)
static void C_fcall trf_28383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28383(t0,t1);}

C_noret_decl(trf_28339)
static void C_fcall trf_28339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28339(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28339(t0,t1,t2,t3);}

C_noret_decl(trf_28330)
static void C_fcall trf_28330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28330(t0,t1);}

C_noret_decl(trf_28160)
static void C_fcall trf_28160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28160(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28160(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28189)
static void C_fcall trf_28189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28189(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28189(t0,t1,t2);}

C_noret_decl(trf_28226)
static void C_fcall trf_28226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28226(t0,t1);}

C_noret_decl(trf_28056)
static void C_fcall trf_28056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28056(t0,t1);}

C_noret_decl(trf_28036)
static void C_fcall trf_28036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28036(t0,t1);}

C_noret_decl(trf_27999)
static void C_fcall trf_27999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27999(t0,t1);}

C_noret_decl(trf_27979)
static void C_fcall trf_27979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27979(t0,t1);}

C_noret_decl(trf_26814)
static void C_fcall trf_26814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26814(t0,t1);}

C_noret_decl(trf_26817)
static void C_fcall trf_26817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26817(t0,t1);}

C_noret_decl(trf_26820)
static void C_fcall trf_26820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26820(t0,t1);}

C_noret_decl(trf_26344)
static void C_fcall trf_26344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26344(t0,t1);}

C_noret_decl(trf_26347)
static void C_fcall trf_26347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26347(t0,t1);}

C_noret_decl(trf_26350)
static void C_fcall trf_26350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26350(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26350(t0,t1);}

C_noret_decl(trf_25874)
static void C_fcall trf_25874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25874(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25874(t0,t1);}

C_noret_decl(trf_25877)
static void C_fcall trf_25877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25877(t0,t1);}

C_noret_decl(trf_25880)
static void C_fcall trf_25880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25880(t0,t1);}

C_noret_decl(trf_25126)
static void C_fcall trf_25126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25126(t0,t1);}

C_noret_decl(trf_25129)
static void C_fcall trf_25129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25129(t0,t1);}

C_noret_decl(trf_25132)
static void C_fcall trf_25132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25132(t0,t1);}

C_noret_decl(trf_25135)
static void C_fcall trf_25135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25135(t0,t1);}

C_noret_decl(trf_24378)
static void C_fcall trf_24378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24378(t0,t1);}

C_noret_decl(trf_24381)
static void C_fcall trf_24381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24381(t0,t1);}

C_noret_decl(trf_24384)
static void C_fcall trf_24384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24384(t0,t1);}

C_noret_decl(trf_24387)
static void C_fcall trf_24387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24387(t0,t1);}

C_noret_decl(trf_23908)
static void C_fcall trf_23908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23908(t0,t1);}

C_noret_decl(trf_23911)
static void C_fcall trf_23911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23911(t0,t1);}

C_noret_decl(trf_23914)
static void C_fcall trf_23914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23914(t0,t1);}

C_noret_decl(trf_23160)
static void C_fcall trf_23160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23160(t0,t1);}

C_noret_decl(trf_23163)
static void C_fcall trf_23163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23163(t0,t1);}

C_noret_decl(trf_23166)
static void C_fcall trf_23166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23166(t0,t1);}

C_noret_decl(trf_23169)
static void C_fcall trf_23169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23169(t0,t1);}

C_noret_decl(trf_22818)
static void C_fcall trf_22818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22818(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22818(t0,t1,t2,t3);}

C_noret_decl(trf_22658)
static void C_fcall trf_22658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22658(t0,t1);}

C_noret_decl(trf_22693)
static void C_fcall trf_22693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22693(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22693(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22703)
static void C_fcall trf_22703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22703(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22703(t0,t1);}

C_noret_decl(trf_22666)
static void C_fcall trf_22666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22666(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22666(t0,t1,t2);}

C_noret_decl(trf_22826)
static void C_fcall trf_22826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22826(t0,t1);}

C_noret_decl(trf_22444)
static void C_fcall trf_22444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22444(t0,t1);}

C_noret_decl(trf_22450)
static void C_fcall trf_22450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22450(t0,t1);}

C_noret_decl(trf_22473)
static void C_fcall trf_22473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22473(t0,t1);}

C_noret_decl(trf_22486)
static void C_fcall trf_22486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22486(t0,t1);}

C_noret_decl(trf_22460)
static void C_fcall trf_22460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22460(t0,t1);}

C_noret_decl(trf_22273)
static void C_fcall trf_22273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22273(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22273(t0,t1,t2,t3);}

C_noret_decl(trf_22282)
static void C_fcall trf_22282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22282(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22282(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22236)
static void C_fcall trf_22236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22236(t0,t1);}

C_noret_decl(trf_22099)
static void C_fcall trf_22099(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22099(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22099(t0,t1);}

C_noret_decl(trf_22029)
static void C_fcall trf_22029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22029(t0,t1);}

C_noret_decl(trf_21390)
static void C_fcall trf_21390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21390(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21390(t0,t1,t2);}

C_noret_decl(trf_21350)
static void C_fcall trf_21350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21350(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21350(t0,t1,t2);}

C_noret_decl(trf_21363)
static void C_fcall trf_21363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21363(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21363(t0,t1);}

C_noret_decl(trf_21942)
static void C_fcall trf_21942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21942(t0,t1);}

C_noret_decl(trf_21732)
static void C_fcall trf_21732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21732(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21732(t0,t1);}

C_noret_decl(trf_21848)
static void C_fcall trf_21848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21848(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21848(t0,t1);}

C_noret_decl(trf_21735)
static void C_fcall trf_21735(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21735(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21735(t0,t1);}

C_noret_decl(trf_21738)
static void C_fcall trf_21738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21738(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21738(t0,t1);}

C_noret_decl(trf_21643)
static void C_fcall trf_21643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21643(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21643(t0,t1);}

C_noret_decl(trf_21558)
static void C_fcall trf_21558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21558(t0,t1);}

C_noret_decl(trf_21515)
static void C_fcall trf_21515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21515(t0,t1);}

C_noret_decl(trf_21482)
static void C_fcall trf_21482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21482(t0,t1);}

C_noret_decl(trf_21477)
static void C_fcall trf_21477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21477(t0,t1);}

C_noret_decl(trf_21472)
static void C_fcall trf_21472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21472(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21472(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21219)
static void C_fcall trf_21219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21219(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21219(t0,t1);}

C_noret_decl(trf_21066)
static void C_fcall trf_21066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21066(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21066(t0,t1,t2,t3);}

C_noret_decl(trf_20912)
static void C_fcall trf_20912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20912(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20912(t0,t1,t2);}

C_noret_decl(trf_20754)
static void C_fcall trf_20754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20754(t0,t1,t2);}

C_noret_decl(trf_20787)
static void C_fcall trf_20787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20787(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20787(t0,t1);}

C_noret_decl(trf_20694)
static void C_fcall trf_20694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20694(t0,t1);}

C_noret_decl(trf_20659)
static void C_fcall trf_20659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20659(t0,t1);}

C_noret_decl(trf_20675)
static void C_fcall trf_20675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20675(t0,t1);}

C_noret_decl(trf_20630)
static void C_fcall trf_20630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20630(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20630(t0,t1);}

C_noret_decl(trf_20537)
static void C_fcall trf_20537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20537(t0,t1);}

C_noret_decl(trf_20293)
static void C_fcall trf_20293(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20293(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20293(t0,t1,t2);}

C_noret_decl(trf_20097)
static void C_fcall trf_20097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20097(t0,t1);}

C_noret_decl(trf_20260)
static void C_fcall trf_20260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20260(t0,t1);}

C_noret_decl(trf_20100)
static void C_fcall trf_20100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20100(t0,t1);}

C_noret_decl(trf_20103)
static void C_fcall trf_20103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20103(t0,t1);}

C_noret_decl(trf_20106)
static void C_fcall trf_20106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20106(t0,t1);}

C_noret_decl(trf_20148)
static void C_fcall trf_20148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20148(t0,t1);}

C_noret_decl(trf_20113)
static void C_fcall trf_20113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20113(t0,t1);}

C_noret_decl(trf_19842)
static void C_fcall trf_19842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19842(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19842(t0,t1,t2,t3);}

C_noret_decl(trf_19850)
static void C_fcall trf_19850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19850(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19850(t0,t1,t2,t3);}

C_noret_decl(trf_19979)
static void C_fcall trf_19979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19979(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19979(t0,t1,t2);}

C_noret_decl(trf_19933)
static void C_fcall trf_19933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19933(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19933(t0,t1,t2);}

C_noret_decl(trf_19836)
static void C_fcall trf_19836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19836(t0,t1,t2);}

C_noret_decl(trf_19830)
static void C_fcall trf_19830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19830(t0,t1);}

C_noret_decl(trf_19824)
static void C_fcall trf_19824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19824(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19824(t0,t1,t2);}

C_noret_decl(trf_19753)
static void C_fcall trf_19753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19753(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19753(t0,t1,t2);}

C_noret_decl(trf_19755)
static void C_fcall trf_19755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19755(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19755(t0,t1,t2);}

C_noret_decl(trf_19761)
static void C_fcall trf_19761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19761(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19761(t0,t1,t2);}

C_noret_decl(trf_19602)
static void C_fcall trf_19602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19602(t0,t1);}

C_noret_decl(trf_19617)
static void C_fcall trf_19617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19617(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19617(t0,t1,t2);}

C_noret_decl(trf_19560)
static void C_fcall trf_19560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19560(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19560(t0,t1,t2);}

C_noret_decl(trf_19500)
static void C_fcall trf_19500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19500(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19500(t0,t1,t2);}

C_noret_decl(trf_19376)
static void C_fcall trf_19376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19376(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19376(t0,t1,t2);}

C_noret_decl(trf_19252)
static void C_fcall trf_19252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19252(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19252(t0,t1,t2,t3);}

C_noret_decl(trf_19288)
static void C_fcall trf_19288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19288(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19288(t0,t1,t2);}

C_noret_decl(trf_19084)
static void C_fcall trf_19084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19084(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19084(t0,t1);}

C_noret_decl(trf_16916)
static void C_fcall trf_16916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16916(t0,t1);}

C_noret_decl(trf_19218)
static void C_fcall trf_19218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19218(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19218(t0,t1,t2);}

C_noret_decl(trf_19228)
static void C_fcall trf_19228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19228(t0,t1);}

C_noret_decl(trf_19188)
static void C_fcall trf_19188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19188(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19188(t0,t1,t2);}

C_noret_decl(trf_19198)
static void C_fcall trf_19198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19198(t0,t1);}

C_noret_decl(trf_18258)
static void C_fcall trf_18258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18258(t0,t1);}

C_noret_decl(trf_18261)
static void C_fcall trf_18261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18261(t0,t1);}

C_noret_decl(trf_18264)
static void C_fcall trf_18264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18264(t0,t1);}

C_noret_decl(trf_18267)
static void C_fcall trf_18267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18267(t0,t1);}

C_noret_decl(trf_18270)
static void C_fcall trf_18270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18270(t0,t1);}

C_noret_decl(trf_18273)
static void C_fcall trf_18273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18273(t0,t1);}

C_noret_decl(trf_18101)
static void C_fcall trf_18101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18101(t0,t1);}

C_noret_decl(trf_18030)
static void C_fcall trf_18030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18030(t0,t1);}

C_noret_decl(trf_17845)
static void C_fcall trf_17845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17845(t0,t1);}

C_noret_decl(trf_17857)
static void C_fcall trf_17857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17857(t0,t1);}

C_noret_decl(trf_17894)
static void C_fcall trf_17894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17894(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17894(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17929)
static void C_fcall trf_17929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17929(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17929(t0,t1);}

C_noret_decl(trf_17824)
static void C_fcall trf_17824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17824(t0,t1);}

C_noret_decl(trf_17759)
static void C_fcall trf_17759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17759(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17759(t0,t1,t2);}

C_noret_decl(trf_17768)
static void C_fcall trf_17768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17768(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17768(t0,t1,t2);}

C_noret_decl(trf_17781)
static void C_fcall trf_17781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17781(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17781(t0,t1);}

C_noret_decl(trf_17715)
static void C_fcall trf_17715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17715(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17715(t0,t1,t2);}

C_noret_decl(trf_17703)
static void C_fcall trf_17703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17703(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17703(t0,t1);}

C_noret_decl(trf_17601)
static void C_fcall trf_17601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17601(t0,t1);}

C_noret_decl(trf_17553)
static void C_fcall trf_17553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17553(t0,t1);}

C_noret_decl(trf_16934)
static void C_fcall trf_16934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16934(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_16934(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_16944)
static void C_fcall trf_16944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16944(t0,t1);}

C_noret_decl(trf_17073)
static void C_fcall trf_17073(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17073(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17073(t0,t1);}

C_noret_decl(trf_17161)
static void C_fcall trf_17161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17161(t0,t1);}

C_noret_decl(trf_17234)
static void C_fcall trf_17234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17234(t0,t1);}

C_noret_decl(trf_17312)
static void C_fcall trf_17312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17312(t0,t1);}

C_noret_decl(trf_17263)
static void C_fcall trf_17263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17263(t0,t1);}

C_noret_decl(trf_17279)
static void C_fcall trf_17279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17279(t0,t1);}

C_noret_decl(trf_17243)
static void C_fcall trf_17243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17243(t0,t1);}

C_noret_decl(trf_17185)
static void C_fcall trf_17185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17185(t0,t1,t2);}

C_noret_decl(trf_17104)
static void C_fcall trf_17104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17104(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17104(t0,t1,t2);}

C_noret_decl(trf_17120)
static void C_fcall trf_17120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17120(t0,t1);}

C_noret_decl(trf_17088)
static void C_fcall trf_17088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17088(t0,t1);}

C_noret_decl(trf_16830)
static void C_fcall trf_16830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16830(t0,t1);}

C_noret_decl(trf_16839)
static void C_fcall trf_16839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16839(t0,t1);}

C_noret_decl(trf_16844)
static void C_fcall trf_16844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16844(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16844(t0,t1,t2);}

C_noret_decl(trf_16822)
static void C_fcall trf_16822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16822(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16822(t0,t1);}

C_noret_decl(trf_16614)
static void C_fcall trf_16614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16614(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16614(t0,t1,t2,t3);}

C_noret_decl(trf_16581)
static void C_fcall trf_16581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16581(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16581(t0,t1,t2,t3);}

C_noret_decl(trf_16563)
static void C_fcall trf_16563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16563(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16563(t0,t1,t2,t3);}

C_noret_decl(trf_16553)
static void C_fcall trf_16553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16553(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16553(t0,t1,t2,t3);}

C_noret_decl(trf_16541)
static void C_fcall trf_16541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16541(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16541(t0,t1,t2);}

C_noret_decl(trf_16509)
static void C_fcall trf_16509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16509(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16509(t0,t1,t2);}

C_noret_decl(trf_16493)
static void C_fcall trf_16493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16493(t0,t1);}

C_noret_decl(trf_16481)
static void C_fcall trf_16481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16481(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16481(t0,t1);}

C_noret_decl(trf_16463)
static void C_fcall trf_16463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16463(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16463(t0,t1);}

C_noret_decl(trf_16445)
static void C_fcall trf_16445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16445(t0,t1);}

C_noret_decl(trf_16430)
static void C_fcall trf_16430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16430(t0,t1);}

C_noret_decl(trf_16424)
static void C_fcall trf_16424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16424(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16424(t0,t1,t2,t3);}

C_noret_decl(trf_16412)
static void C_fcall trf_16412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16412(t0,t1);}

C_noret_decl(trf_16394)
static void C_fcall trf_16394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16394(t0,t1);}

C_noret_decl(trf_16373)
static void C_fcall trf_16373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16373(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16373(t0,t1,t2);}

C_noret_decl(trf_16341)
static void C_fcall trf_16341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16341(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16341(t0,t1);}

C_noret_decl(trf_16283)
static void C_fcall trf_16283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16283(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16283(t0,t1,t2);}

C_noret_decl(trf_16273)
static void C_fcall trf_16273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16273(t0,t1);}

C_noret_decl(trf_16267)
static void C_fcall trf_16267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16267(t0,t1);}

C_noret_decl(trf_16255)
static void C_fcall trf_16255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16255(t0,t1);}

C_noret_decl(trf_16231)
static void C_fcall trf_16231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16231(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16231(t0,t1,t2);}

C_noret_decl(trf_16144)
static void C_fcall trf_16144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16144(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16144(t0,t1);}

C_noret_decl(trf_16123)
static void C_fcall trf_16123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16123(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_16123(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_16113)
static void C_fcall trf_16113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16113(t0,t1);}

C_noret_decl(trf_16101)
static void C_fcall trf_16101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16101(t0,t1);}

C_noret_decl(trf_16060)
static void C_fcall trf_16060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16060(t0,t1);}

C_noret_decl(trf_16042)
static void C_fcall trf_16042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16042(t0,t1);}

C_noret_decl(trf_16024)
static void C_fcall trf_16024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16024(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16024(t0,t1);}

C_noret_decl(trf_15947)
static void C_fcall trf_15947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15947(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15947(t0,t1,t2);}

C_noret_decl(trf_15972)
static void C_fcall trf_15972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15972(t0,t1);}

C_noret_decl(trf_15675)
static void C_fcall trf_15675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15675(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15675(t0,t1);}

C_noret_decl(trf_15678)
static void C_fcall trf_15678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15678(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15678(t0,t1);}

C_noret_decl(trf_15684)
static void C_fcall trf_15684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15684(t0,t1);}

C_noret_decl(trf_15398)
static void C_fcall trf_15398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15398(t0,t1);}

C_noret_decl(trf_15401)
static void C_fcall trf_15401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15401(t0,t1);}

C_noret_decl(trf_15328)
static void C_fcall trf_15328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15328(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15328(t0,t1);}

C_noret_decl(trf_15176)
static void C_fcall trf_15176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15176(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15176(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15101)
static void C_fcall trf_15101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15101(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15101(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15111)
static void C_fcall trf_15111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15111(t0,t1);}

C_noret_decl(trf_15118)
static void C_fcall trf_15118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15118(t0,t1);}

C_noret_decl(trf_15213)
static void C_fcall trf_15213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15213(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15213(t0,t1,t2);}

C_noret_decl(trf_14991)
static void C_fcall trf_14991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14991(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14991(t0,t1,t2,t3);}

C_noret_decl(trf_15003)
static void C_fcall trf_15003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15003(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15003(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15064)
static void C_fcall trf_15064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15064(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15064(t0,t1,t2);}

C_noret_decl(trf_14428)
static void C_fcall trf_14428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14428(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14428(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14364)
static void C_fcall trf_14364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14364(t0,t1);}

C_noret_decl(trf_14311)
static void C_fcall trf_14311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14311(t0,t1);}

C_noret_decl(trf_14314)
static void C_fcall trf_14314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14314(t0,t1);}

C_noret_decl(trf_14508)
static void C_fcall trf_14508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14508(t0,t1);}

C_noret_decl(trf_14511)
static void C_fcall trf_14511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14511(t0,t1);}

C_noret_decl(trf_14514)
static void C_fcall trf_14514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14514(t0,t1);}

C_noret_decl(trf_14529)
static void C_fcall trf_14529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14529(t0,t1);}

C_noret_decl(trf_14090)
static void C_fcall trf_14090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14090(t0,t1);}

C_noret_decl(trf_14182)
static void C_fcall trf_14182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14182(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14182(t0,t1,t2);}

C_noret_decl(trf_14201)
static void C_fcall trf_14201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14201(t0,t1);}

C_noret_decl(trf_14155)
static void C_fcall trf_14155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14155(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14155(t0,t1,t2);}

C_noret_decl(trf_14100)
static void C_fcall trf_14100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14100(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14100(t0,t1,t2);}

C_noret_decl(trf_14110)
static void C_fcall trf_14110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14110(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14110(t0,t1,t2,t3);}

C_noret_decl(trf_13956)
static void C_fcall trf_13956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13956(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13956(t0,t1,t2);}

C_noret_decl(trf_14025)
static void C_fcall trf_14025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14025(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14025(t0,t1,t2);}

C_noret_decl(trf_13971)
static void C_fcall trf_13971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13971(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13971(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13513)
static void C_fcall trf_13513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13513(t0,t1);}

C_noret_decl(trf_13516)
static void C_fcall trf_13516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13516(t0,t1);}

C_noret_decl(trf_13519)
static void C_fcall trf_13519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13519(t0,t1);}

C_noret_decl(trf_13522)
static void C_fcall trf_13522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13522(t0,t1);}

C_noret_decl(trf_13486)
static void C_fcall trf_13486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13486(t0,t1);}

C_noret_decl(trf_13209)
static void C_fcall trf_13209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13209(t0,t1);}

C_noret_decl(trf_13212)
static void C_fcall trf_13212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13212(t0,t1);}

C_noret_decl(trf_13215)
static void C_fcall trf_13215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13215(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13215(t0,t1);}

C_noret_decl(trf_13106)
static void C_fcall trf_13106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13106(t0,t1);}

C_noret_decl(trf_13097)
static void C_fcall trf_13097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13097(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13097(t0,t1,t2);}

C_noret_decl(trf_13088)
static void C_fcall trf_13088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13088(t0,t1);}

C_noret_decl(trf_13070)
static void C_fcall trf_13070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13070(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13070(t0,t1);}

C_noret_decl(trf_13052)
static void C_fcall trf_13052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13052(t0,t1);}

C_noret_decl(trf_13034)
static void C_fcall trf_13034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13034(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13034(t0,t1);}

C_noret_decl(trf_13025)
static void C_fcall trf_13025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13025(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13025(t0,t1,t2);}

C_noret_decl(trf_13016)
static void C_fcall trf_13016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13016(t0,t1);}

C_noret_decl(trf_12847)
static void C_fcall trf_12847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12847(t0,t1);}

C_noret_decl(trf_12803)
static void C_fcall trf_12803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12803(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12803(t0,t1,t2);}

C_noret_decl(trf_12324)
static void C_fcall trf_12324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12324(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12324(t0,t1);}

C_noret_decl(trf_12327)
static void C_fcall trf_12327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12327(t0,t1);}

C_noret_decl(trf_12330)
static void C_fcall trf_12330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12330(t0,t1);}

C_noret_decl(trf_12333)
static void C_fcall trf_12333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12333(t0,t1);}

C_noret_decl(trf_12279)
static void C_fcall trf_12279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12279(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12279(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11985)
static void C_fcall trf_11985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11985(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11985(t0,t1);}

C_noret_decl(trf_11988)
static void C_fcall trf_11988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11988(t0,t1);}

C_noret_decl(trf_11991)
static void C_fcall trf_11991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11991(t0,t1);}

C_noret_decl(trf_11702)
static void C_fcall trf_11702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11702(t0,t1);}

C_noret_decl(trf_11705)
static void C_fcall trf_11705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11705(t0,t1);}

C_noret_decl(trf_11708)
static void C_fcall trf_11708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11708(t0,t1);}

C_noret_decl(trf_11661)
static void C_fcall trf_11661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11661(t0,t1);}

C_noret_decl(trf_11617)
static void C_fcall trf_11617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11617(t0,t1);}

C_noret_decl(trf_11532)
static void C_fcall trf_11532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11532(t0,t1);}

C_noret_decl(trf_11017)
static void C_fcall trf_11017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11017(t0,t1);}

C_noret_decl(trf_11020)
static void C_fcall trf_11020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11020(t0,t1);}

C_noret_decl(trf_11023)
static void C_fcall trf_11023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11023(t0,t1);}

C_noret_decl(trf_11026)
static void C_fcall trf_11026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11026(t0,t1);}

C_noret_decl(trf_10933)
static void C_fcall trf_10933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10933(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10933(t0,t1,t2);}

C_noret_decl(trf_10924)
static void C_fcall trf_10924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10924(t0,t1);}

C_noret_decl(trf_10859)
static void C_fcall trf_10859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10859(t0,t1);}

C_noret_decl(trf_10601)
static void C_fcall trf_10601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10601(t0,t1);}

C_noret_decl(trf_10604)
static void C_fcall trf_10604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10604(t0,t1);}

C_noret_decl(trf_10607)
static void C_fcall trf_10607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10607(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10607(t0,t1);}

C_noret_decl(trf_10482)
static void C_fcall trf_10482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10482(t0,t1);}

C_noret_decl(trf_10506)
static void C_fcall trf_10506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10506(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10506(t0,t1);}

C_noret_decl(trf_10436)
static void C_fcall trf_10436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10436(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10436(t0,t1,t2);}

C_noret_decl(trf_10427)
static void C_fcall trf_10427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10427(t0,t1);}

C_noret_decl(trf_10126)
static void C_fcall trf_10126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10126(t0,t1);}

C_noret_decl(trf_10362)
static void C_fcall trf_10362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10362(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10362(t0,t1);}

C_noret_decl(trf_10368)
static void C_fcall trf_10368(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10368(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10368(t0,t1);}

C_noret_decl(trf_10260)
static void C_fcall trf_10260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10260(t0,t1);}

C_noret_decl(trf_10262)
static void C_fcall trf_10262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10262(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10262(t0,t1,t2,t3);}

C_noret_decl(trf_10311)
static void C_fcall trf_10311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10311(t0,t1);}

C_noret_decl(trf_10276)
static void C_fcall trf_10276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10276(t0,t1);}

C_noret_decl(trf_10160)
static void C_fcall trf_10160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10160(t0,t1);}

C_noret_decl(trf_10074)
static void C_fcall trf_10074(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10074(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10074(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10093)
static void C_fcall trf_10093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10093(t0,t1);}

C_noret_decl(trf_10024)
static void C_fcall trf_10024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10024(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10024(t0,t1,t2,t3);}

C_noret_decl(trf_9785)
static void C_fcall trf_9785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9785(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_9785(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_9804)
static void C_fcall trf_9804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9804(t0,t1);}

C_noret_decl(trf_9819)
static void C_fcall trf_9819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9819(t0,t1);}

C_noret_decl(trf_9828)
static void C_fcall trf_9828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9828(t0,t1);}

C_noret_decl(trf_9775)
static void C_fcall trf_9775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9775(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_9775(t0);}

C_noret_decl(trf_9720)
static void C_fcall trf_9720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9720(t0,t1);}

C_noret_decl(trf_9711)
static void C_fcall trf_9711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9711(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9711(t0,t1,t2);}

C_noret_decl(trf_9594)
static void C_fcall trf_9594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9594(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9594(t0,t1);}

C_noret_decl(trf_9585)
static void C_fcall trf_9585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9585(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9585(t0,t1,t2);}

C_noret_decl(trf_9567)
static void C_fcall trf_9567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9567(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9567(t0,t1,t2);}

C_noret_decl(trf_9558)
static void C_fcall trf_9558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9558(t0,t1);}

C_noret_decl(trf_9540)
static void C_fcall trf_9540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9540(t0,t1);}

C_noret_decl(trf_9531)
static void C_fcall trf_9531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9531(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9531(t0,t1,t2);}

C_noret_decl(trf_9522)
static void C_fcall trf_9522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9522(t0,t1);}

C_noret_decl(trf_9504)
static void C_fcall trf_9504(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9504(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9504(t0,t1);}

C_noret_decl(trf_9495)
static void C_fcall trf_9495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9495(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9495(t0,t1,t2);}

C_noret_decl(trf_9486)
static void C_fcall trf_9486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9486(t0,t1);}

C_noret_decl(trf_9471)
static void C_fcall trf_9471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9471(t0,t1);}

C_noret_decl(trf_9426)
static void C_fcall trf_9426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9426(t0,t1);}

C_noret_decl(trf_9408)
static void C_fcall trf_9408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9408(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9408(t0,t1);}

C_noret_decl(trf_9399)
static void C_fcall trf_9399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9399(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9399(t0,t1,t2);}

C_noret_decl(trf_9372)
static void C_fcall trf_9372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9372(t0,t1);}

C_noret_decl(trf_9354)
static void C_fcall trf_9354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9354(t0,t1);}

C_noret_decl(trf_9336)
static void C_fcall trf_9336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9336(t0,t1);}

C_noret_decl(trf_9327)
static void C_fcall trf_9327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9327(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9327(t0,t1,t2);}

C_noret_decl(trf_9315)
static void C_fcall trf_9315(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9315(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_9315(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_9060)
static void C_fcall trf_9060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9060(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9060(t0,t1,t2);}

C_noret_decl(trf_9069)
static void C_fcall trf_9069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9069(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9069(t0,t1,t2,t3);}

C_noret_decl(trf_8902)
static void C_fcall trf_8902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8902(t0,t1);}

C_noret_decl(trf_8918)
static void C_fcall trf_8918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8918(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8918(t0,t1,t2,t3);}

C_noret_decl(trf_8726)
static void C_fcall trf_8726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8726(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8726(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8756)
static void C_fcall trf_8756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8756(t0,t1);}

C_noret_decl(trf_8739)
static void C_fcall trf_8739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8739(t0,t1);}

C_noret_decl(trf_8604)
static void C_fcall trf_8604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8604(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8604(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8634)
static void C_fcall trf_8634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8634(t0,t1);}

C_noret_decl(trf_8617)
static void C_fcall trf_8617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8617(t0,t1);}

C_noret_decl(trf_8507)
static void C_fcall trf_8507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8507(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8507(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8520)
static void C_fcall trf_8520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8520(t0,t1);}

C_noret_decl(trf_8439)
static void C_fcall trf_8439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8439(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8439(t0,t1,t2,t3);}

C_noret_decl(trf_8409)
static void C_fcall trf_8409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8409(t0,t1);}

C_noret_decl(trf_8337)
static void C_fcall trf_8337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8337(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8337(t0,t1,t2,t3);}

C_noret_decl(trf_8006)
static void C_fcall trf_8006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8006(t0,t1);}

C_noret_decl(trf_8009)
static void C_fcall trf_8009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8009(t0,t1);}

C_noret_decl(trf_8015)
static void C_fcall trf_8015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8015(t0,t1);}

C_noret_decl(trf_7775)
static void C_fcall trf_7775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7775(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7775(t0,t1);}

C_noret_decl(trf_7778)
static void C_fcall trf_7778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7778(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7778(t0,t1);}

C_noret_decl(trf_7676)
static void C_fcall trf_7676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7676(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7676(t0,t1);}

C_noret_decl(trf_7571)
static void C_fcall trf_7571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7571(t0,t1);}

C_noret_decl(trf_7580)
static void C_fcall trf_7580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7580(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7580(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7593)
static void C_fcall trf_7593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7593(t0,t1);}

C_noret_decl(trf_7435)
static void C_fcall trf_7435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7435(t0,t1);}

C_noret_decl(trf_7438)
static void C_fcall trf_7438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7438(t0,t1);}

C_noret_decl(trf_7440)
static void C_fcall trf_7440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7440(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7440(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7328)
static void C_fcall trf_7328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7328(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7328(t0,t1,t2);}

C_noret_decl(trf_7047)
static void C_fcall trf_7047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7047(t0,t1);}

C_noret_decl(trf_7050)
static void C_fcall trf_7050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7050(t0,t1);}

C_noret_decl(trf_6813)
static void C_fcall trf_6813(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6813(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6813(t0,t1);}

C_noret_decl(trf_6762)
static void C_fcall trf_6762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6762(t0,t1);}

C_noret_decl(trf_6752)
static void C_fcall trf_6752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6752(t0,t1);}

C_noret_decl(trf_6734)
static void C_fcall trf_6734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6734(t0,t1);}

C_noret_decl(trf_6723)
static void C_fcall trf_6723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6723(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6723(t0,t1,t2);}

C_noret_decl(trf_6685)
static void C_fcall trf_6685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6685(t0,t1);}

C_noret_decl(trf_6678)
static void C_fcall trf_6678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6678(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6678(t0,t1);}

C_noret_decl(trf_6654)
static void C_fcall trf_6654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6654(t0,t1);}

C_noret_decl(trf_6625)
static void C_fcall trf_6625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6625(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6625(t0,t1,t2,t3);}

C_noret_decl(trf_6614)
static void C_fcall trf_6614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6614(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6614(t0,t1,t2);}

C_noret_decl(trf_6603)
static void C_fcall trf_6603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6603(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6603(t0,t1,t2);}

C_noret_decl(trf_6569)
static void C_fcall trf_6569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6569(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6569(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6542)
static void C_fcall trf_6542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6542(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6542(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6501)
static void C_fcall trf_6501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6501(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6501(t0,t1,t2);}

C_noret_decl(trf_6507)
static void C_fcall trf_6507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6507(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6507(t0,t1,t2);}

C_noret_decl(trf_6517)
static void C_fcall trf_6517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6517(t0,t1);}

C_noret_decl(trf_6345)
static void C_fcall trf_6345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6345(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6345(t0,t1,t2,t3);}

C_noret_decl(trf_6322)
static void C_fcall trf_6322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6322(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6322(t0,t1,t2,t3);}

C_noret_decl(trf_5728)
static void C_fcall trf_5728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5728(t0,t1);}

C_noret_decl(trf_5740)
static void C_fcall trf_5740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5740(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5740(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5793)
static void C_fcall trf_5793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5793(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5793(t0,t1);}

C_noret_decl(trf_5752)
static void C_fcall trf_5752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5752(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5752(t0,t1,t2);}

C_noret_decl(trf_5765)
static void C_fcall trf_5765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5765(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4964)){
C_save(t1);
C_rereclaim2(4964*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,847);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],9,"make-list");
lf[62]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[87]=C_h_intern(&lf[87],7,"rescale");
lf[88]=C_h_intern(&lf[88],8,"discrete");
lf[89]=C_h_intern(&lf[89],4,"not\077");
lf[90]=C_h_intern(&lf[90],3,"int");
lf[91]=C_h_intern(&lf[91],4,"plus");
lf[92]=C_h_intern(&lf[92],1,"+");
lf[93]=C_h_intern(&lf[93],5,"minus");
lf[94]=C_h_intern(&lf[94],1,"-");
lf[95]=C_h_intern(&lf[95],5,"times");
lf[96]=C_h_intern(&lf[96],1,"*");
lf[97]=C_h_intern(&lf[97],6,"divide");
lf[98]=C_h_intern(&lf[98],1,"/");
lf[99]=C_h_intern(&lf[99],8,"quantize");
lf[100]=C_h_intern(&lf[100],8,"decimals");
lf[101]=C_h_intern(&lf[101],15,"rhythm->seconds");
lf[102]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[103]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[104]=C_h_intern(&lf[104],6,"\000tempo");
lf[105]=C_h_intern(&lf[105],5,"\000beat");
lf[106]=C_h_intern(&lf[106],12,"cents->ratio");
lf[107]=C_h_intern(&lf[107],12,"ratio->cents");
lf[108]=C_h_intern(&lf[108],7,"interpl");
lf[109]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[110]=C_h_intern(&lf[110],3,"err");
lf[111]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[112]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[113]=C_h_intern(&lf[113],6,"interp");
lf[114]=C_h_intern(&lf[114],3,"fit");
lf[115]=C_h_intern(&lf[115],9,"remainder");
lf[116]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[117]=C_h_intern(&lf[117],5,"scale");
lf[118]=C_h_intern(&lf[118],6,"modulo");
lf[119]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[120]=C_h_intern(&lf[120],8,"ran-set!");
lf[121]=C_h_intern(&lf[121],3,"ran");
lf[122]=C_h_intern(&lf[122],7,"between");
lf[123]=C_h_intern(&lf[123],4,"pick");
lf[124]=C_h_intern(&lf[124],4,"odds");
lf[125]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[126]=C_h_intern(&lf[126],5,"\000true");
lf[127]=C_h_intern(&lf[127],6,"\000false");
lf[128]=C_h_intern(&lf[128],6,"ranlow");
lf[129]=C_h_intern(&lf[129],7,"ranhigh");
lf[130]=C_h_intern(&lf[130],9,"ranmiddle");
lf[131]=C_h_intern(&lf[131],7,"ranbeta");
lf[132]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[133]=C_h_intern(&lf[133],2,"\000a");
lf[134]=C_h_intern(&lf[134],2,"\000b");
lf[135]=C_h_intern(&lf[135],6,"ranexp");
lf[136]=C_h_intern(&lf[136],8,"rangauss");
lf[137]=C_h_intern(&lf[137],9,"rancauchy");
lf[138]=C_h_intern(&lf[138],10,"ranpoisson");
lf[139]=C_h_intern(&lf[139],3,"arg");
lf[140]=C_h_intern(&lf[140],8,"rangamma");
lf[141]=C_h_intern(&lf[141],8,"ranbrown");
lf[142]=C_h_intern(&lf[142],7,"ranpink");
lf[145]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[146]=C_h_intern(&lf[146],13,"string-append");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[149]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[150]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[151]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[152]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[153]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[154]=C_h_intern(&lf[154],5,"floor");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[156]=C_h_intern(&lf[156],4,"note");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[158]=C_h_intern(&lf[158],3,"key");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[160]=C_h_intern(&lf[160],2,"hz");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[162]=C_h_intern(&lf[162],2,"pc");
lf[163]=C_h_intern(&lf[163],6,"invert");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[166]=C_h_intern(&lf[166],9,"transpose");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[168]=C_h_intern(&lf[168],10,"retrograde");
lf[169]=C_h_intern(&lf[169],7,"reverse");
lf[171]=C_h_intern(&lf[171],6,"period");
lf[173]=C_h_intern(&lf[173],14,"\003sysblock-set!");
lf[181]=C_h_intern(&lf[181],7,"pattern");
lf[196]=C_h_intern(&lf[196],4,"\000nad");
lf[197]=C_h_intern(&lf[197],8,"\000periods");
lf[198]=C_h_intern(&lf[198],12,"\000depth-first");
lf[200]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[201]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[202]=C_h_intern(&lf[202],14,"\000breadth-first");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[204]=C_h_intern(&lf[204],7,"\000values");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[207]=C_h_intern(&lf[207],4,"eop\077");
lf[208]=C_h_intern(&lf[208],4,"\000eop");
lf[209]=C_h_intern(&lf[209],4,"eod\077");
lf[210]=C_h_intern(&lf[210],4,"\000eod");
lf[211]=C_h_intern(&lf[211],4,"next");
lf[215]=C_h_intern(&lf[215],5,"force");
lf[216]=C_h_intern(&lf[216],8,"promise\077");
lf[217]=C_h_intern(&lf[217],3,"max");
lf[218]=C_h_intern(&lf[218],10,"make-cycle");
lf[219]=C_h_intern(&lf[219],12,"\003sysfor-each");
lf[221]=C_h_intern(&lf[221],4,"\000for");
lf[222]=C_h_intern(&lf[222],7,"\000repeat");
lf[224]=C_h_intern(&lf[224],5,"palin");
lf[226]=C_h_intern(&lf[226],15,"make-palindrome");
lf[228]=C_h_intern(&lf[228],6,"\000elide");
lf[229]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[230]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[231]=C_h_intern(&lf[231],9,"make-line");
lf[233]=C_h_intern(&lf[233],9,"make-heap");
lf[235]=C_h_intern(&lf[235],13,"make-rotation");
lf[237]=C_h_intern(&lf[237],7,"\000rotate");
lf[239]=C_h_intern(&lf[239],11,"random-item");
lf[247]=C_h_intern(&lf[247],14,"make-weighting");
lf[250]=C_h_intern(&lf[250],7,"\000weight");
lf[251]=C_h_intern(&lf[251],4,"\000min");
lf[252]=C_h_intern(&lf[252],4,"\000max");
lf[253]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[254]=C_h_intern(&lf[254],11,"make-markov");
lf[256]=C_h_intern(&lf[256],5,"\000past");
lf[257]=C_h_intern(&lf[257],2,"->");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[259]=C_h_intern(&lf[259],3,"\000->");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[262]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[265]=C_h_intern(&lf[265],10,"graph-node");
lf[266]=C_h_intern(&lf[266],10,"make-graph");
lf[268]=C_h_intern(&lf[268],3,"\000to");
lf[269]=C_h_intern(&lf[269],3,"\000id");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[272]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[274]=C_h_intern(&lf[274],5,"token");
lf[279]=C_h_intern(&lf[279],1,"t");
lf[284]=C_h_intern(&lf[284],4,"rule");
lf[287]=C_h_intern(&lf[287],22,"hash-table-ref/default");
lf[294]=C_h_intern(&lf[294],11,"parse-error");
lf[298]=C_h_intern(&lf[298],10,"parse-unit");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[312]=C_h_intern(&lf[312],14,"string->symbol");
lf[313]=C_h_intern(&lf[313],4,"expt");
lf[314]=C_h_intern(&lf[314],5,"equal");
lf[315]=C_h_intern(&lf[315],3,"and");
lf[316]=C_h_intern(&lf[316],2,"or");
lf[317]=C_h_intern(&lf[317],3,"not");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[319]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[330]=C_h_intern(&lf[330],1,"@");
lf[331]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[332]=C_h_intern(&lf[332],6,"printf");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[338]=C_h_intern(&lf[338],2,">=");
lf[339]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[340]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[341]=C_h_intern(&lf[341],5,"begin");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[344]=C_h_intern(&lf[344],1,">");
lf[345]=C_h_intern(&lf[345],2,"<=");
lf[346]=C_h_intern(&lf[346],1,"<");
lf[347]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[353]=C_h_intern(&lf[353],17,"*sal-trace-input*");
lf[354]=C_h_intern(&lf[354],3,"sal");
lf[355]=C_h_intern(&lf[355],11,"print-error");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[357]=C_h_intern(&lf[357],11,"make-string");
lf[358]=C_h_intern(&lf[358],9,"substring");
lf[359]=C_h_intern(&lf[359],2,"pp");
lf[360]=C_h_intern(&lf[360],4,"eval");
lf[361]=C_h_intern(&lf[361],7,"\000syntax");
lf[362]=C_h_intern(&lf[362],7,"\000scheme");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[364]=C_h_intern(&lf[364],7,"call/cc");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[366]=C_h_intern(&lf[366],9,"sal:print");
lf[367]=C_h_intern(&lf[367],13,"print-message");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[369]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[373]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[374]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[375]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[376]=C_h_intern(&lf[376],9,"sal:chdir");
lf[377]=C_h_intern(&lf[377],8,"sal:load");
lf[378]=C_h_intern(&lf[378],13,"load-sal-file");
lf[379]=C_h_intern(&lf[379],4,"load");
lf[380]=C_h_intern(&lf[380],15,"\003syssubstring=\077");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[383]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[384]=C_h_intern(&lf[384],12,"file-exists\077");
lf[385]=C_h_intern(&lf[385],8,"sal:open");
lf[386]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[387]=C_h_intern(&lf[387],10,"sal:output");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[400]=C_h_intern(&lf[400],8,"operator");
lf[401]=C_h_intern(&lf[401],8,"bindings");
lf[402]=C_h_intern(&lf[402],10,"collectors");
lf[403]=C_h_intern(&lf[403],9,"initially");
lf[404]=C_h_intern(&lf[404],9,"end-tests");
lf[405]=C_h_intern(&lf[405],7,"looping");
lf[406]=C_h_intern(&lf[406],8,"stepping");
lf[407]=C_h_intern(&lf[407],7,"finally");
lf[408]=C_h_intern(&lf[408],9,"returning");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[415]=C_h_intern(&lf[415],7,"newline");
lf[416]=C_h_intern(&lf[416],7,"display");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[432]=C_h_intern(&lf[432],3,"for");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[435]=C_h_intern(&lf[435],8,"downfrom");
lf[436]=C_h_intern(&lf[436],5,"above");
lf[437]=C_h_intern(&lf[437],5,"below");
lf[438]=C_h_intern(&lf[438],6,"downto");
lf[439]=C_h_intern(&lf[439],4,"from");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[446]=C_h_intern(&lf[446],2,"to");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[454]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[456]=C_h_intern(&lf[456],2,"by");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[460]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[463]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[465]=C_h_intern(&lf[465],6,"across");
lf[466]=C_h_intern(&lf[466],13,"vector-length");
lf[467]=C_h_intern(&lf[467],10,"vector-ref");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[470]=C_h_intern(&lf[470],4,"over");
lf[471]=C_h_intern(&lf[471],2,"in");
lf[472]=C_h_intern(&lf[472],5,"quote");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[476]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[477]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[479]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[480]=C_h_intern(&lf[480],2,"on");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[484]=C_h_intern(&lf[484],1,"=");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[486]=C_h_intern(&lf[486],4,"then");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[492]=C_h_intern(&lf[492],4,"with");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[515]=C_h_intern(&lf[515],3,"sum");
lf[516]=C_h_intern(&lf[516],5,"count");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[518]=C_h_intern(&lf[518],8,"minimize");
lf[519]=C_h_intern(&lf[519],8,"maximize");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[522]=C_h_intern(&lf[522],4,"list");
lf[523]=C_h_intern(&lf[523],8,"set-cdr!");
lf[524]=C_h_intern(&lf[524],9,"last-pair");
lf[525]=C_h_intern(&lf[525],7,"collect");
lf[526]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[530]=C_h_intern(&lf[530],5,"nconc");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[534]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[535]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[536]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[537]=C_h_intern(&lf[537],4,"into");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[544]=C_h_intern(&lf[544],6,"return");
lf[546]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[547]=C_h_intern(&lf[547],5,"until");
lf[548]=C_h_intern(&lf[548],5,"while");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[552]=C_h_intern(&lf[552],7,"thereis");
lf[553]=C_h_intern(&lf[553],6,"always");
lf[554]=C_h_intern(&lf[554],5,"never");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[564]=C_h_intern(&lf[564],4,"task");
lf[565]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[567]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[573]=C_h_intern(&lf[573],2,"do");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[577]=C_h_intern(&lf[577],4,"iter");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[580]=C_h_intern(&lf[580],6,"repeat");
lf[581]=C_h_intern(&lf[581],2,"as");
lf[583]=C_h_intern(&lf[583],10,"mm:make-on");
lf[584]=C_h_intern(&lf[584],5,"\000time");
lf[585]=C_h_intern(&lf[585],4,"\000key");
lf[586]=C_h_intern(&lf[586],4,"\000vel");
lf[587]=C_h_intern(&lf[587],5,"\000chan");
lf[588]=C_h_intern(&lf[588],6,"mm:on\077");
lf[589]=C_h_intern(&lf[589],11,"mm:make-off");
lf[590]=C_h_intern(&lf[590],7,"mm:off\077");
lf[591]=C_h_intern(&lf[591],13,"mm:make-touch");
lf[592]=C_h_intern(&lf[592],4,"\000val");
lf[593]=C_h_intern(&lf[593],9,"mm:touch\077");
lf[594]=C_h_intern(&lf[594],12,"mm:make-ctrl");
lf[595]=C_h_intern(&lf[595],4,"\000num");
lf[596]=C_h_intern(&lf[596],8,"mm:ctrl\077");
lf[597]=C_h_intern(&lf[597],12,"mm:make-prog");
lf[598]=C_h_intern(&lf[598],8,"mm:prog\077");
lf[599]=C_h_intern(&lf[599],13,"mm:make-press");
lf[600]=C_h_intern(&lf[600],9,"mm:press\077");
lf[601]=C_h_intern(&lf[601],12,"mm:make-bend");
lf[602]=C_h_intern(&lf[602],7,"mm:free");
lf[603]=C_h_intern(&lf[603],7,"mm:copy");
lf[604]=C_h_intern(&lf[604],7,"mm:time");
lf[605]=C_h_intern(&lf[605],12,"mm:time-set!");
lf[606]=C_h_intern(&lf[606],7,"mm:chan");
lf[607]=C_h_intern(&lf[607],12,"mm:chan-set!");
lf[608]=C_h_intern(&lf[608],6,"mm:key");
lf[609]=C_h_intern(&lf[609],11,"mm:key-set!");
lf[610]=C_h_intern(&lf[610],6,"mm:vel");
lf[611]=C_h_intern(&lf[611],11,"mm:vel-set!");
lf[612]=C_h_intern(&lf[612],6,"mm:val");
lf[613]=C_h_intern(&lf[613],8,"mm:type\077");
lf[614]=C_h_intern(&lf[614],11,"mm:val-set!");
lf[615]=C_h_intern(&lf[615],1,"k");
lf[616]=C_h_intern(&lf[616],6,"mm:num");
lf[617]=C_h_intern(&lf[617],11,"mm:num-set!");
lf[618]=C_h_intern(&lf[618],7,"mp:note");
lf[619]=C_h_intern(&lf[619],7,"mp:midi");
lf[620]=C_h_intern(&lf[620],6,"mp:off");
lf[621]=C_h_intern(&lf[621],5,"mp:on");
lf[622]=C_h_intern(&lf[622],8,"mp:touch");
lf[623]=C_h_intern(&lf[623],7,"mp:ctrl");
lf[624]=C_h_intern(&lf[624],7,"mp:prog");
lf[625]=C_h_intern(&lf[625],8,"mp:press");
lf[626]=C_h_intern(&lf[626],7,"mp:bend");
lf[627]=C_h_intern(&lf[627],5,"mp:mm");
lf[628]=C_h_intern(&lf[628],9,"mp:inhook");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[630]=C_h_intern(&lf[630],27,"condition-property-accessor");
lf[631]=C_h_intern(&lf[631],3,"exn");
lf[632]=C_h_intern(&lf[632],7,"message");
lf[633]=C_h_intern(&lf[633],22,"with-exception-handler");
lf[634]=C_h_intern(&lf[634],30,"call-with-current-continuation");
lf[635]=C_h_intern(&lf[635],4,"cs:i");
lf[636]=C_h_intern(&lf[636],4,"cs:f");
lf[637]=C_h_intern(&lf[637],8,"cs:clear");
lf[638]=C_h_intern(&lf[638],7,"cm-logo");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[641]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[646]=C_h_intern(&lf[646],25,"current-time-milliseconds");
lf[647]=C_h_intern(&lf[647],20,"current-time-seconds");
lf[649]=C_h_intern(&lf[649],6,"\003sysgc");
lf[652]=C_h_intern(&lf[652],6,"sprout");
lf[653]=C_h_intern(&lf[653],9,"\003syserror");
lf[654]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[655]=C_h_intern(&lf[655],3,"now");
lf[656]=C_h_intern(&lf[656],11,"time-format");
lf[657]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[658]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[659]=C_h_intern(&lf[659],1,"m");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[661]=C_h_intern(&lf[661],1,"s");
lf[662]=C_h_intern(&lf[662],5,"pause");
lf[663]=C_h_intern(&lf[663],7,"paused\077");
lf[664]=C_h_intern(&lf[664],4,"cont");
lf[665]=C_h_intern(&lf[665],4,"stop");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[667]=C_h_intern(&lf[667],4,"hush");
lf[669]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[675]=C_h_intern(&lf[675],14,"return-to-host");
lf[676]=C_h_intern(&lf[676],6,"define");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[678]=C_h_intern(&lf[678],18,"\003sysregister-macro");
lf[679]=C_h_intern(&lf[679],14,"define-process");
lf[680]=C_h_intern(&lf[680],6,"lambda");
lf[681]=C_h_intern(&lf[681],7,"elapsed");
lf[682]=C_h_intern(&lf[682],1,"x");
lf[683]=C_h_intern(&lf[683],4,"wait");
lf[684]=C_h_intern(&lf[684],18,"current-error-port");
lf[685]=C_h_intern(&lf[685],19,"print-error-message");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[690]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[691]=C_h_intern(&lf[691],3,"run");
lf[692]=C_h_intern(&lf[692],20,"\003sysregister-macro-2");
lf[693]=C_h_intern(&lf[693],15,"hash-table-set!");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[695]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[697]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[699]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[701]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[703]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[705]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[707]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[709]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[711]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[712]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[713]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[715]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[717]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[719]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[721]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[722]=C_h_intern(&lf[722],5,":loop");
lf[723]=C_h_intern(&lf[723],7,"tagbody");
lf[724]=C_h_intern(&lf[724],5,"block");
lf[725]=C_h_intern(&lf[725],3,"nil");
lf[726]=C_h_intern(&lf[726],2,"go");
lf[727]=C_h_intern(&lf[727],8,"function");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[729]=C_h_intern(&lf[729],3,"pop");
lf[730]=C_h_intern(&lf[730],4,"cons");
lf[731]=C_h_intern(&lf[731],4,"push");
lf[732]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[733]=C_h_intern(&lf[733],4,"loop");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[735]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[742]=C_h_intern(&lf[742],7,"\000return");
lf[743]=C_h_intern(&lf[743],9,"\000function");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[745]=C_h_intern(&lf[745],8,"\000process");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[750]=C_h_intern(&lf[750],4,"cond");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[756]=C_h_intern(&lf[756],5,"\000loop");
lf[757]=C_h_intern(&lf[757],4,"\000run");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[766]=C_h_intern(&lf[766],9,"list-tail");
lf[767]=C_h_intern(&lf[767],8,"set-car!");
lf[768]=C_h_intern(&lf[768],3,"min");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[771]=C_h_intern(&lf[771],9,"\000bindings");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[779]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[783]=C_h_intern(&lf[783],10,"sal:system");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[801]=C_h_intern(&lf[801],7,"unquote");
lf[802]=C_h_intern(&lf[802],16,"unquote-splicing");
lf[803]=C_h_intern(&lf[803],5,"\000list");
lf[804]=C_h_intern(&lf[804],8,"\000unquote");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[808]=C_h_intern(&lf[808],10,"quasiquote");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[813]=C_h_intern(&lf[813],7,"fprintf");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[816]=C_h_intern(&lf[816],27,"\003sysregister-record-printer");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[818]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[819]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[820]=C_h_intern(&lf[820],6,"ruleid");
lf[821]=C_h_intern(&lf[821],9,"make-rule");
lf[822]=C_h_intern(&lf[822],7,"*rules*");
lf[823]=C_h_intern(&lf[823],7,"defrule");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[825]=C_h_intern(&lf[825],15,"make-hash-table");
lf[826]=C_h_intern(&lf[826],3,"eq\077");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[829]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[831]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[832]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[833]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[834]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[840]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[841]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[842]=C_h_intern(&lf[842],6,"equal\077");
lf[843]=C_h_intern(&lf[843],4,"send");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[845]=C_h_intern(&lf[845],19,"define-send-message");
lf[846]=C_h_intern(&lf[846],12,"with-optkeys");
C_register_lf2(lf,847,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5388,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5386 */
static void C_ccall f_5388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5391,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5389 in k5386 */
static void C_ccall f_5391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5394,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5392 in k5389 in k5386 */
static void C_ccall f_5394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5397,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5397,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5399,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34056,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 245  ##sys#register-macro");
t5=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[846],t4);}

/* a34055 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_34056(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_34056r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_34056r(t0,t1,t2,t3);}}

static void C_ccall f_34056r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 246  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5692,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 252  make-hash-table");
t3=C_retrieve(lf[825]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[842]+1));}

/* k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5692,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5695,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34004,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 254  ##sys#register-macro");
t5=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[845],t4);}

/* a34003 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_34004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34004,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34008,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_34008(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34041,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 261  string->symbol");
t10=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34051,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 263  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 265  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[844]);}}}}

/* k34049 in a34003 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_34051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34008(2,t3,t2);}

/* k34039 in a34003 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_34041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34008(2,t3,t2);}

/* k34006 in a34003 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_34008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34008,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[472],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[693],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5695,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5697,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5988,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33998,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 350  ##sys#register-macro");
t5=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[843],t4);}

/* a33997 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33998(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33998r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33998r(t0,t1,t2,t3);}}

static void C_ccall f_33998r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 351  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word ab[186],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5988,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5990,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6001,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6030,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6040,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6050,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6060,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6070,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6084,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6099,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6105,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6128,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6266,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6306,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6316,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[63],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6415,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6501,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6542,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6569,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6596,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6603,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6614,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6625,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6640,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6647,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6654,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6675,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6678,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6685,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6714,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6717,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6720,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6723,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6734,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6752,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6759,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6762,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6769,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6772,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6775,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6809,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6920,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[91]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6935,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6977,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[95]+1,*((C_word*)lf[96]+1));
t47=C_mutate((C_word*)lf[97]+1,*((C_word*)lf[98]+1));
t48=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7003,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7024,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7043,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7279,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7294,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[108]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7309,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7404,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7431,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7564,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[120]+1,C_retrieve2(lf[74],"tb:ran-set!"));
t58=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7672,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7707,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[123]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7728,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[124]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7771,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[128]+1,C_retrieve2(lf[77],"tb:ranlow"));
t63=C_mutate((C_word*)lf[129]+1,C_retrieve2(lf[78],"tb:ranhigh"));
t64=C_mutate((C_word*)lf[130]+1,C_retrieve2(lf[79],"tb:ranmiddle"));
t65=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8002,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8230,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8249,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[137]+1,C_retrieve2(lf[83],"tb:rancauchy"));
t69=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8290,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8309,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[141]+1,C_retrieve2(lf[86],"tb:ranbrown"));
t72=C_mutate((C_word*)lf[142]+1,C_retrieve2(lf[85],"tb:ranpink"));
t73=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8332,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  make-hash-table");
t74=C_retrieve(lf[825]);
((C_proc3)C_retrieve_proc(t74))(3,t74,t73,*((C_word*)lf[842]+1));}

/* k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8332,2,t0,t1);}
t2=C_mutate(&lf[143],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8335,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33782,a[2]=t7,a[3]=t4,a[4]=((C_word)li539),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_33782(t9,t5,C_fix(0));}

/* do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33782(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33782,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[828],C_fix(-1),lf[829],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33795,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t5=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[143],"*notes*"),lf[830],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33996,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 372  modulo");
t4=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33996,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[831],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33816,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  modulo");
t6=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33816,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[832]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[833]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33828,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 372  tb:keynum->hertz");
f_6654(t4,((C_word*)t0)[4]);}

/* k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33832,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[841]);
C_trace("ChickenBridge.scm: 372  tb:keynum->hertz");
f_6654(t2,t3);}

/* k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33836,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[840]);
C_trace("ChickenBridge.scm: 372  tb:keynum->hertz");
f_6654(t2,t3);}

/* k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33980,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 372  floor");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33980,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33842,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li538),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_33842(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33842,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33852,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33862,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_33862(t21,(C_word)C_i_string_equal_p(t20,lf[839]));}
else{
t20=t19;
f_33862(t20,C_SCHEME_FALSE);}}}

/* k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33862,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_33852(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33865,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[837]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_33865(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[838]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_33865(t7,t6);}
else{
t5=t2;
f_33865(t5,C_SCHEME_UNDEFINED);}}}}

/* k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33865,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[834],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_33873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 372  string-append");
t6=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33873,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33880,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[143],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33883,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t4=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[143],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_33883(2,t4,C_SCHEME_UNDEFINED);}}

/* k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 372  string-append");
t4=*((C_word*)lf[146]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[836],((C_word*)((C_word*)t0)[8])[1]);}

/* k33885 in k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33887,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33894,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[143],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k33892 in k33885 in k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t4=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[143],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_33897(2,t4,C_SCHEME_UNDEFINED);}}

/* k33895 in k33892 in k33885 in k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 372  string-append");
t4=*((C_word*)lf[146]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[835],((C_word*)((C_word*)t0)[6])[1]);}

/* k33899 in k33895 in k33892 in k33885 in k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33901,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33908,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[143],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k33906 in k33899 in k33895 in k33892 in k33885 in k33881 in k33878 in k33871 in k33863 in k33860 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[143],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_33852(2,t3,C_SCHEME_UNDEFINED);}}

/* k33850 in do558 in k33978 in k33834 in k33830 in k33826 in k33814 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_33842(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k33803 in k33994 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33805,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_33782(t3,((C_word*)t0)[2],t2);}

/* k33793 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33798,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[143],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k33796 in k33793 in do552 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8335,2,t0,t1);}
t2=C_mutate(&lf[144],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8337,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8439,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8492,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8589,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[160]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8711,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8827,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[163]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8872,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[166]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9007,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[168]+1,*((C_word*)lf[169]+1));
t11=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9315,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[172],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9327,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[174],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9336,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[175],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9354,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[176],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9372,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[177],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9399,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9408,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[179],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9426,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[180],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9471,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9486,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9495,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9504,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9522,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9531,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[187],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9540,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9558,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9567,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9576,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9585,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9594,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[193],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9711,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9720,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9775,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9785,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9965,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[209]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9984,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[211]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10003,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[212],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10126,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[213],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10427,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[206],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10436,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[214],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10482,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[218]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10597,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10852,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10924,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10933,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11013,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11483,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[231]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11698,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11945,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[233]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11981,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12244,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[235]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12320,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12794,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13016,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13025,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13034,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13052,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13070,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13088,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13097,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13106,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[247]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13189,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[248],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13956,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14068,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[254]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14501,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[255],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14988,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15328,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[266]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15391,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15909,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16003,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16024,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16042,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16060,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t74=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16070,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33768,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  ##sys#register-record-printer");
t76=C_retrieve(lf[816]);
((C_proc4)C_retrieve_proc(t76))(4,t76,t74,lf[274],t75);}

/* a33767 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33768,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33776,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-type");
f_16024(t4,t2);}

/* k33774 in a33767 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33780,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-string");
f_16042(t2,((C_word*)t0)[2]);}

/* k33778 in k33774 in a33767 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  fprintf");
t2=C_retrieve(lf[813]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[827],((C_word*)t0)[2],t1);}

/* k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16070,2,t0,t1);}
t2=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16072,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16101,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16113,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16121,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-hash-table");
t6=C_retrieve(lf[825]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[826]+1));}

/* k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16121,2,t0,t1);}
t2=C_mutate(&lf[282],t1);
t3=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16123,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16144,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16226,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33758,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  ##sys#register-record-printer");
t7=C_retrieve(lf[816]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[284],t6);}

/* a33757 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33758(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33758,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33766,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  rule-name");
f_16144(t4,t2);}

/* k33764 in a33757 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  fprintf");
t2=C_retrieve(lf[813]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[824],t1);}

/* k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16226,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16229,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33655,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  ##sys#register-macro");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[823],t3);}

/* a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33655(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_33655r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_33655r(t0,t1,t2,t3,t4);}}

static void C_ccall f_33655r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33658,a[2]=t6,a[3]=((C_word)li534),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[820],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33718,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33716 in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33722,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_33658(t3,t2,((C_word*)t0)[2]);}

/* k33720 in k33716 in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33722,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_33736(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_33736(t7,(C_word)C_i_nullp(t6));}}

/* k33734 in k33720 in k33716 in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33736(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33736,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[821],((C_word*)t0)[6],lf[820],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[693],lf[822],lf[820],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33658(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_33658,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[818]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33678,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[819]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[472],t2):t2));}}}

/* k33676 in ppat in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33682,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_33658(t4,t2,t3);}

/* k33680 in k33676 in ppat in a33654 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33682,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[730],((C_word*)t0)[2],t1));}

/* k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16229,2,t0,t1);}
t2=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16231,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16252,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16255,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16267,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16273,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16283,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16341,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[293],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16373,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16394,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16412,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33641,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  ##sys#register-record-printer");
t14=C_retrieve(lf[816]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[294],t13);}

/* a33640 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33641(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33641,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33649,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-error-string");
f_16394(t4,t2);}

/* k33647 in a33640 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33653,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-error-position");
f_16412(t2,((C_word*)t0)[2]);}

/* k33651 in k33647 in a33640 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  fprintf");
t2=C_retrieve(lf[813]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[817],((C_word*)t0)[2],t1);}

/* k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16422,2,t0,t1);}
t2=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16424,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16430,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16445,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16463,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16481,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16491,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33615,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  ##sys#register-record-printer");
t9=C_retrieve(lf[816]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[298],t8);}

/* a33614 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33615,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33619,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t4,t2);}

/* k33617 in a33614 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33625,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalRuleType?");
f_17703(t2,t1);}

/* k33623 in k33617 in a33614 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33625,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33636,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  get-rule");
f_16231(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 374  fprintf");
t2=C_retrieve(lf[813]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[815],((C_word*)t0)[2]);}}

/* k33634 in k33623 in k33617 in a33614 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  rule-name");
f_16144(((C_word*)t0)[2],t1);}

/* k33630 in k33623 in k33617 in a33614 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  fprintf");
t2=C_retrieve(lf[813]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[814],t1);}

/* k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16491,2,t0,t1);}
t2=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16493,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16509,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16541,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16553,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16563,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16581,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16614,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16822,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[325],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16830,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t11=lf[326]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[327],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16934,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17553,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17601,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17703,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17715,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17736,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33593,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[316],t21);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t18,lf[812],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33591 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(25856),t1);}

/* k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17739,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33573,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t5);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[811],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33571 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(26112),t1);}

/* k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17742,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33533,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[316],t10);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[810],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33531 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(26368),t1);}

/* k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17745,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33423,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[96],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[315],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33429,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33439,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[809],C_fix(26624),t9,t10,t11);}

/* a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33439,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33443,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t5,lf[803],t3);}

/* k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33443,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t2,((C_word*)t0)[2]);}

/* k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33446,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[522]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33464,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t3,lf[803],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k33462 in k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33467,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k33465 in k33462 in k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33467,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33470,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33498,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t5,lf[803],((C_word*)t0)[2]);}

/* k33496 in k33465 in k33462 in k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33498,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[804]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[808],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33470(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[472],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33470(t5,t4);}}

/* k33468 in k33465 in k33462 in k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_33470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t2,lf[771],((C_word*)t0)[2]);}

/* k33474 in k33468 in k33465 in k33462 in k33444 in k33441 in a33438 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33476,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[522]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a33428 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33429,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k33421 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(26624),t1);}

/* k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17748,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33323,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[315],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33331,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t10,C_fix(27648));}

/* k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33333,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[3],lf[807],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33333,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33337,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33340,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,t3,C_fix(5376));}

/* k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33343,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t2,lf[803],((C_word*)t0)[4]);}

/* k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_33346(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33375,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[805]:lf[806]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33383,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t5,t6);}}

/* k33381 in k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33373 in k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33344 in k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33349,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k33347 in k33344 in k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33352,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  set-emit-info!");
f_16563(t2,lf[803],lf[804],((C_word*)t0)[2]);}

/* k33350 in k33347 in k33344 in k33341 in k33338 in k33335 in a33332 in k33329 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33352,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[801],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[802],((C_word*)t0)[2])));}

/* k33321 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(27648),t1);}

/* k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17751,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33295,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[316],t7);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[800],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33293 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(26880),t1);}

/* k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17754,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33235,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[315],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33241,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33259,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[799],C_fix(27136),t8,t9,t10);}

/* a33258 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33259(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33259,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33267,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33271,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k33269 in a33258 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33265 in a33258 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33267,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a33240 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33241,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k33233 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(27136),t1);}

/* k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17757,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33112,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[330],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[315],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33118,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33149,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[798],C_fix(27392),t14,t15,t16);}

/* a33148 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33149,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33153,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k33151 in a33148 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33154 in k33151 in a33148 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33157 in k33154 in k33151 in a33148 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33159,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33172,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k33170 in k33157 in k33154 in k33151 in a33148 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33172,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a33117 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33118(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33118,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33122,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k33120 in a33117 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33122,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33137,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k33135 in k33120 in a33117 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33137,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k33110 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(27392),t1);}

/* k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17757,2,t0,t1);}
t2=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17759,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17813,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32992,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[92],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[316],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32998,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t4,lf[797],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a32997 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32998(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32998,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33014,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t4,t8,C_fix(256));}
else{
t7=t4;
f_33014(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_33014(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k33012 in a32997 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33014,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33025,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k33023 in k33012 in a32997 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_33025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33025,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k32990 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(28416),t1);}

/* k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17816,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32853,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[92],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[315],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[315],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[316],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32859,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[796],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a32858 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32859(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32859,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32879,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32882,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t7,t11,C_fix(256));}
else{
t10=t7;
f_32882(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_32882(2,t9,C_SCHEME_FALSE);}}

/* k32880 in a32858 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_32879(2,t2,C_SCHEME_END_OF_LIST);}}

/* k32877 in a32858 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32879,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k32851 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(28672),t1);}

/* k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17819,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32701,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[315],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[315],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[316],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32707,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[795],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a32706 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32707,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32725,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t10,t7,C_fix(768));}

/* k32723 in a32706 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32725,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32734,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,t3,C_fix(256));}}

/* k32732 in k32723 in a32706 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 374  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k32699 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(28160),t1);}

/* k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17822,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32630,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32636,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32654,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[794],C_fix(27904),t6,t7,t8);}

/* a32653 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32654,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32658,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k32656 in a32653 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32659 in k32656 in a32653 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32677,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32675 in k32659 in k32656 in a32653 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32677,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a32635 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32636,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k32628 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(27904),t1);}

/* k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17822,2,t0,t1);}
t2=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17824,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17845,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17961,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32554,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[316],t21);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t5,lf[793],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32552 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(28928),t1);}

/* k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17964,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32474,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[315],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32480,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[792],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a32479 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32480,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32487,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 374  is-op?");
f_17824(t4,t7);}
else{
t6=t4;
f_32487(2,t6,C_SCHEME_FALSE);}}

/* k32485 in a32479 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32487,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 374  inf->pre");
f_17845(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k32472 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(29184),t1);}

/* k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17967,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32338,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[315],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[315],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[316],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32344,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32370,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[791],C_fix(29440),t23,t24,t25);}

/* a32369 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32370,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32378,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k32376 in a32369 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32343 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32344(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32344,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32352,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32361,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t5,t6,C_fix(512));}
else{
t5=t4;
f_32352(t5,t2);}}

/* k32359 in a32343 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32352(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k32350 in a32343 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_32352(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k32336 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(29440),t1);}

/* k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17970,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32294,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[316],t11);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[790],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32292 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(29696),t1);}

/* k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17973,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32184,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32190,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32212,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[789],C_fix(33536),t10,t11,t12);}

/* a32211 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32212,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[366]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32223,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t8,t2);}

/* k32221 in a32211 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32223,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li515),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_32225(t5,((C_word*)t0)[2],t1);}

/* do2709 in k32221 in a32211 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_32225(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32225,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32254,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k32252 in do2709 in k32221 in a32211 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32254,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_32225(t7,((C_word*)t0)[2],t6);}

/* a32189 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32190,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32206,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t5,t6,C_fix(256));}

/* k32204 in a32189 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32206,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k32182 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(33536),t1);}

/* k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17976,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32109,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32115,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32137,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[788],C_fix(34560),t10,t11,t12);}

/* a32136 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32137(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32137,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32141,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k32139 in a32136 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32148,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32146 in k32139 in a32136 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32148,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[652],t1));}

/* a32114 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32115,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32131,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t5,t6,C_fix(256));}

/* k32129 in a32114 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32131,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k32107 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(34560),t1);}

/* k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17979,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31896,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[316],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[330],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[315],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31902,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31977,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[787],C_fix(34304),t21,t22,t23);}

/* a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31977,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31981,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32017,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k32015 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31979 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31981,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li510),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a31996 in k31979 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31997(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_31997r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31997r(t0,t1,t2,t3);}}

static void C_ccall f_31997r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32005,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32009,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k32007 in a31996 in k31979 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32013,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t2,((C_word*)t0)[2]);}

/* k32011 in k32007 in a31996 in k31979 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32003 in a31996 in k31979 in a31976 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_32005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a31901 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31902,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31909,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31945,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_31945(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_31909(t10,t9);}}

/* k31943 in a31901 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31945,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_31909(t2,C_SCHEME_UNDEFINED);}}

/* k31947 in k31943 in a31901 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31909(t3,t2);}

/* k31907 in a31901 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_31909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31909,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31920,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t4,t5);}

/* k31918 in k31907 in a31901 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k31894 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(34304),t1);}

/* k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17982,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31870,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31876,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[786],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a31875 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31876(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31876,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k31868 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(33792),t1);}

/* k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17985,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31842,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31850,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(35072));}

/* k31848 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31854,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-emitter");
f_16830(t2,lf[377]);}

/* k31852 in k31848 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[4],lf[785],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31840 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(35072),t1);}

/* k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17988,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31814,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31822,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(35584));}

/* k31820 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31826,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-emitter");
f_16830(t2,lf[376]);}

/* k31824 in k31820 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[4],lf[784],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31812 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(35584),t1);}

/* k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17991,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31786,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31794,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(35328));}

/* k31792 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31798,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-emitter");
f_16830(t2,lf[783]);}

/* k31796 in k31792 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[4],lf[782],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31784 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(35328),t1);}

/* k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17994,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31758,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31766,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(34816));}

/* k31764 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31770,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-emitter");
f_16830(t2,lf[387]);}

/* k31768 in k31764 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[4],lf[781],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31756 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(34816),t1);}

/* k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17997,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31621,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[316],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[315],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[316],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[96],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[315],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31627,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31657,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[780],C_fix(36096),t22,t23,t24);}

/* a31656 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31657(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31657,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[779]);}

/* a31626 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31627,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31651,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t6,t7,C_fix(256));}

/* k31649 in a31626 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31651,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k31619 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(36096),t1);}

/* k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18000,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31563,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31571,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(31744));}

/* k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31573,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[3],lf[778],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31573,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31577,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k31575 in a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31580,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31605,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t3,lf[757],((C_word*)t0)[3]);}

/* k31603 in k31575 in a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31605,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31580(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31593,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31597,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t3,t4);}}

/* k31595 in k31603 in k31575 in a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[2],lf[777],t1);}

/* k31591 in k31603 in k31575 in a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31578 in k31575 in a31572 in k31569 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31561 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(31744),t1);}

/* k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18003,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31502,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31510,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t7,C_fix(31488));}

/* k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31512,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[3],lf[776],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31512,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31516,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31547,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t3,lf[743],((C_word*)t0)[3]);}

/* k31545 in k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31547,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31519(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31535,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31539,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t3,t4);}}

/* k31537 in k31545 in k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[2],lf[775],t1);}

/* k31533 in k31545 in k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31517 in k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  set-emit-info!");
f_16563(t2,lf[743],lf[742],((C_word*)t0)[3]);}

/* k31520 in k31517 in k31514 in a31511 in k31508 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31500 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(31488),t1);}

/* k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18006,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31411,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[315],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[316],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31417,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31452,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[774],C_fix(30208),t10,t11,t12);}

/* a31451 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31452(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31452,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31458,a[2]=t4,a[3]=t3,a[4]=((C_word)li502),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31466,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k31464 in a31451 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31457 in a31451 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31458(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31458,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31416 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31417(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31417,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31450,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t4,C_fix(4608),lf[773],C_SCHEME_FALSE);}}

/* k31448 in a31416 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31450,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k31409 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(30208),t1);}

/* k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18009,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31309,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31315,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31358,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[772],C_fix(29952),t10,t11,t12);}

/* a31357 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31358,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31362,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t5,lf[771],C_SCHEME_TRUE,t3);}

/* k31360 in a31357 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31367,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li499),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31375,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t3,((C_word*)t0)[2]);}

/* k31373 in k31360 in a31357 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31366 in k31360 in a31357 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31367(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31367,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31314 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31315,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31348,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k31346 in a31314 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31348,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k31307 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(29952),t1);}

/* k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18012,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31223,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[316],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[315],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31229,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[770],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a31228 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31229,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k31221 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(30720),t1);}

/* k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18015,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30943,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30949,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30992,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[769],C_fix(30464),t10,t11,t12);}

/* a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30992,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30996,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30996,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[341]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li495),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_31004(t8,((C_word*)t0)[2],t1);}

/* do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_31004(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31004,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t3,t4);}}

/* k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t2,t3);}

/* k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31036,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31036,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31096,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t5,((C_word*)t0)[2],C_fix(10756));}

/* k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31096,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_31039(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31103,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_31039(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31113,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_31039(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k31121 in k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31123,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[522],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_31039(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k31135 in k31121 in k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31137,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[730],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_31039(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k31145 in k31135 in k31121 in k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31147,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_31039(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k31155 in k31145 in k31135 in k31121 in k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31157,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[768],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_31039(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k31165 in k31155 in k31145 in k31135 in k31121 in k31111 in k31101 in k31094 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_31167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31167,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[217],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31039(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31039(t2,C_SCHEME_UNDEFINED);}}

/* k31037 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_31039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31039,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31063,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_31063(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_31063(t4,C_SCHEME_FALSE);}}

/* k31061 in k31037 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_31063(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31063,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[766],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[767],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31042(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31042(t4,t3);}}

/* k31040 in k31037 in k31034 in k31031 in k31028 in k31025 in do2788 in k30994 in a30991 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_31042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31042,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31004(t7,((C_word*)t0)[2],t6);}

/* a30948 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30949,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30982,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k30980 in a30948 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30982,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k30941 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(30464),t1);}

/* k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18018,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30829,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[330],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[96],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[315],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30835,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30861,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[765],C_fix(32000),t12,t13,t14);}

/* a30860 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30861,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30865,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k30863 in a30860 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30865,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30869 in k30863 in a30860 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30871,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30891,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[341],t1));}}

/* k30889 in k30869 in k30863 in a30860 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30891,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a30834 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30835,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30845,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_30845(t12,t11);}
else{
t10=t8;
f_30845(t10,C_SCHEME_FALSE);}}

/* k30843 in a30834 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30845,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k30827 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(32000),t1);}

/* k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18021,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30632,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[330],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[330],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[315],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[315],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[315],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[316],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30638,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30706,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[764],C_fix(32256),t26,t27,t28);}

/* a30705 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30706,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30710,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t5,t2);}

/* k30708 in a30705 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30638,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30651,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30657,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t9,t4,C_fix(14336));}

/* k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30657,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30663,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_30663(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30692,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t11,C_fix(4608),lf[763],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30651(t5,t4);}}

/* k30690 in k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30663(t3,t2);}

/* k30661 in k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30663(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30663,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k30665 in k30661 in k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30667,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_30670(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30681,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t5,C_fix(4608),lf[762],C_SCHEME_FALSE);}}

/* k30679 in k30665 in k30661 in k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30670(t3,t2);}

/* k30668 in k30665 in k30661 in k30655 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30670,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30651(t4,t3);}

/* k30649 in a30637 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k30630 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(32256),t1);}

/* k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18021,2,t0,t1);}
t2=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18023,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18544,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30360,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[315],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[330],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[315],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[315],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[316],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[330],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[330],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[315],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[316],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[330],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[315],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[316],t58);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t4,lf[761],C_fix(33024),t59,C_retrieve2(lf[337],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k30358 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(33024),t1);}

/* k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18547,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30304,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[315],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[316],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30312,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  simple-unit-parser");
f_16822(t13,C_fix(33280));}

/* k30310 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(((C_word*)t0)[3],lf[760],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k30302 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(33280),t1);}

/* k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19053,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30132,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[330],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[96],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[96],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[92],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[330],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[315],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30138,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30184,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[759],C_fix(32512),t25,t26,t27);}

/* a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30184,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18553,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t7,t2);}

/* k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18553,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18571,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19012,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t17,t18,C_fix(14864));}

/* k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19012,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19016,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t2,lf[756],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19019,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t3,lf[745],((C_word*)((C_word*)t0)[6])[1]);}}

/* k19044 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19046,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19019(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19034,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19038,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t3,t4);}}

/* k19036 in k19044 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[2],lf[758],t1);}

/* k19032 in k19044 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19017 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t2,lf[757],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k19021 in k19017 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_18571(t4,t3);}

/* k19014 in k19010 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18571(t3,t2);}

/* k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18571,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19001,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19005,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_18578(t5,C_SCHEME_UNDEFINED);}}

/* k19003 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18999 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18578(t3,t2);}

/* k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18578(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18578,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18876,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li488),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_18876(t7,t2,t3);}

/* do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18876(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18876,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18886,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18897,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t4,t5);}}

/* k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18897,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li487),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18899(t5,((C_word*)t0)[2],t1);}

/* do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18899(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18899,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 374  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18913,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18916,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18966,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 374  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_18916(t4,C_SCHEME_UNDEFINED);}}

/* k18964 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18916(t3,t2);}

/* k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18916,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18951,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 374  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_18919(t3,C_SCHEME_UNDEFINED);}}

/* k18949 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18919(t3,t2);}

/* k18917 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18919(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18919,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18922,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18932,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18930 in k18917 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18932,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18944,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18922(t2,C_SCHEME_UNDEFINED);}}

/* k18942 in k18930 in k18917 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18944,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 374  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18934 in k18930 in k18917 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18922(t3,t2);}

/* k18920 in k18917 in k18914 in k18911 in do2901 in k18895 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18922(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18899(t3,((C_word*)t0)[2],t2);}

/* k18884 in do2898 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18876(t3,((C_word*)t0)[2],t2);}

/* k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li486),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18840(t7,t2,t3);}

/* do2912 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18840(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18840,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18851,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18866,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k18864 in do2912 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18866,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 374  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18849 in do2912 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18840(t4,((C_word*)t0)[2],t3);}

/* k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 374  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18588,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18784,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li485),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18784(t8,t3,t4);}

/* do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18784(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18784,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t3,t4);}}

/* k18792 in do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18797,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18795 in k18792 in do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18797,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18800,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18818,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t5,t6,C_fix(20224));}

/* k18816 in k18795 in k18792 in do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18818,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[317],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18800(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18800(t2,C_SCHEME_UNDEFINED);}}

/* k18798 in k18795 in k18792 in do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18800(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18800,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 374  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k18802 in k18798 in k18795 in k18792 in do2917 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18784(t4,((C_word*)t0)[2],t3);}

/* k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18594(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[316],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18594(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_18594(t4,t3);}}

/* k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18594(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18594,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18597,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18745 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18747,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18751,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_18597(t3,t2);}}

/* k18753 in k18745 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18749 in k18745 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18597(t3,t2);}

/* k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18597,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[755]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[573],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[754]);}

/* k18626 in k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18631,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[753]);}

/* k18629 in k18626 in k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[752]);}

/* k18632 in k18629 in k18626 in k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[751]);}

/* k18635 in k18632 in k18629 in k18626 in k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18637,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[680],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[681],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[680],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[683],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[684]);
t14=(C_word)C_a_i_list(&a,4,lf[685],((C_word*)t0)[7],t13,lf[749]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[680],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k18694 in k18635 in k18632 in k18629 in k18626 in k18623 in k18595 in k18592 in k18589 in k18586 in k18582 in k18579 in k18576 in k18569 in k18551 in a30183 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18696,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[750],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[680],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[633],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[680],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[634],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[680],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30138,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30154,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k30152 in a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30157,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k30155 in k30152 in a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30157,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30160,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_30160(t7,t6);}
else{
t5=t4;
f_30160(t5,C_SCHEME_UNDEFINED);}}

/* k30158 in k30155 in k30152 in a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_30163(t5,t4);}
else{
t3=t2;
f_30163(t3,C_SCHEME_UNDEFINED);}}

/* k30161 in k30158 in k30155 in k30152 in a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30163,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30174,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t3,((C_word*)t0)[8]);}

/* k30172 in k30161 in k30158 in k30155 in k30152 in a30137 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k30130 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(32512),t1);}

/* k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19056,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29987,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[315],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[96],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[315],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[316],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[315],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29993,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[748],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a29992 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29993,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30006,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_30006(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30032,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t12,t13,C_fix(256));}}

/* k30030 in a29992 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_30032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30032,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30006(t4,t3);}

/* k30004 in a29992 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_30006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30006,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k29985 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(37632),t1);}

/* k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19059,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29530,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[96],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[315],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[315],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[315],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[316],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[315],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29536,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29575,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[747],C_fix(36352),t23,t24,t25);}

/* a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29575,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29579,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29579,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[341]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29588,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29591,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t7,t2,C_fix(24576));}

/* k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29591,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29600,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li480),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_29600(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29649,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t2,t3);}}

/* k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 374  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29867,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_29664(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29805,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 374  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k29803 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29805,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29814,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29839,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 374  substring");
t6=*((C_word*)lf[358]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_29814(t4,C_SCHEME_FALSE);}}

/* k29837 in k29803 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29814(t2,(C_word)C_i_string_equal_p(t1,lf[746]));}

/* k29812 in k29803 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29814,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29821,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29825,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 374  substring");
t5=*((C_word*)lf[358]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_29664(t2,C_SCHEME_UNDEFINED);}}

/* k29823 in k29812 in k29803 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  string->symbol");
t2=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29819 in k29812 in k29803 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29664(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29667,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t3,((C_word*)t0)[2],C_fix(24064));}

/* k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29742,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t2,lf[743],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29783,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k29781 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29783,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t2,lf[745],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_29667(t2,C_SCHEME_UNDEFINED);}}

/* k29785 in k29781 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29787,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29791,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29789 in k29785 in k29781 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29791,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[676],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[744]);
t6=((C_word*)t0)[2];
f_29667(t6,t5);}

/* k29744 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29746,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29750,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29748 in k29744 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29750,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29777,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  get-emit-info");
f_16541(t4,lf[743],((C_word*)((C_word*)t0)[2])[1]);}

/* k29775 in k29748 in k29744 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29777,2,t0,t1);}
t2=(C_word)C_eqp(lf[742],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[544]);
t4=(C_word)C_a_i_list(&a,3,lf[680],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[634],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29753(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_29753(t3,C_SCHEME_UNDEFINED);}}

/* k29751 in k29748 in k29744 in k29740 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29753,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[676],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[741]);
t5=((C_word*)t0)[2];
f_29667(t5,t4);}

/* k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29670,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29681,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29739,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k29737 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  string-append");
t2=*((C_word*)lf[146]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[740]);}

/* k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29681,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29683,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li481),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_29683(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29683(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29683,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29698,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  string-append");
t6=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[738]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29702,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29731,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 374  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k29729 in do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  string-append");
t2=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29700 in do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29702,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29705,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_29705(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29719,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  string-append");
t6=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[739]);}}

/* k29717 in k29700 in do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29705(t3,t2);}

/* k29703 in k29700 in do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_29683(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k29696 in do2999 in k29679 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29698,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[367],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k29668 in k29665 in k29662 in k29865 in k29653 in k29650 in k29647 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29670,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_29588(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2973 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29600(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29600,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29610,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k29608 in do2973 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29610,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29616,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[737],t2);}

/* k29614 in k29608 in do2973 in k29589 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29616,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[676],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[366],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_29600(t9,((C_word*)t0)[2],t8);}

/* k29586 in k29577 in a29574 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a29535 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29536,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29547,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29553,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t9,t7,C_fix(24576));}

/* k29551 in a29535 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29553,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 374  remove-token-type");
f_17759(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_29547(t2,C_SCHEME_UNDEFINED);}}

/* k29567 in k29551 in a29535 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29569,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29547(t5,t4);}

/* k29545 in a29535 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29547(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k29528 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(36352),t1);}

/* k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19062,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29454,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[316],t19);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[736],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k29452 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(36608),t1);}

/* k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19065,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29410,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[92],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29416,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29430,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  make-rule");
f_16123(t3,lf[735],C_fix(36864),t5,t6,t7);}

/* a29429 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29430,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29438,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29442,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k29440 in a29429 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29436 in a29429 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29438,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[341],t1));}

/* a29415 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29416,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29424,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  parse-unit-position");
f_16481(t4,t5);}

/* k29422 in a29415 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k29408 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  hash-table-set!");
t2=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[282],"*rules*"),C_fix(36864),t1);}

/* k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19065,2,t0,t1);}
t2=lf[350]=C_SCHEME_FALSE;;
t3=lf[351]=C_SCHEME_FALSE;;
t4=lf[352]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[353],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[354]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19072,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[366]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19249,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[376]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19402,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[377]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19411,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[385]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19458,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[387]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19464,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19483,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29402,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  ##sys#register-macro-2");
t14=C_retrieve(lf[692]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[733],t13);}

/* a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29402(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29402,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22836,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[734]);}

/* k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22839,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  parse-iteration");
f_22818(t2,lf[733],((C_word*)t0)[2],C_retrieve2(lf[582],"*loop-operators*"));}

/* k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22839,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[544],C_retrieve2(lf[582],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22846,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22991,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23005,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  loop-returning");
t11=C_retrieve2(lf[398],"loop-returning");
f_19590(3,t11,t10,t1);}

/* k23003 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23005,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_22991(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23001,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  loop-returning");
t3=C_retrieve2(lf[398],"loop-returning");
f_19590(3,t3,t2,((C_word*)t0)[2]);}}

/* k22999 in k23003 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_22991(t2,(C_word)C_i_car(t1));}

/* k22989 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22846,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  loop-end-tests");
t4=C_retrieve2(lf[393],"loop-end-tests");
f_19542(3,t4,t3,((C_word*)t0)[2]);}

/* k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_22853(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[316],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[732],C_SCHEME_FALSE);
t7=t2;
f_22853(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22853,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22864,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  loop-bindings");
t4=C_retrieve2(lf[390],"loop-bindings");
f_19506(3,t4,t3,((C_word*)t0)[2]);}

/* k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22868,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  loop-initially");
t4=C_retrieve2(lf[392],"loop-initially");
f_19530(3,t4,t3,((C_word*)t0)[3]);}

/* k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22872,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[544]);
t3=(C_word)C_a_i_list(&a,1,lf[726]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22940,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping");
t7=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t7,t6,((C_word*)t0)[3]);}

/* k22942 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22948,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22952,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  loop-stepping");
t4=C_retrieve2(lf[396],"loop-stepping");
f_19566(3,t4,t3,((C_word*)t0)[2]);}

/* k22950 in k22942 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22952,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 375  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k22946 in k22942 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22938 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22934 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22936,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[680],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[634],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22904,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22908,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  loop-finally");
t9=C_retrieve2(lf[397],"loop-finally");
f_19578(3,t9,t8,((C_word*)t0)[2]);}

/* k22906 in k22934 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22908,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 375  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22902 in k22934 in k22870 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22904,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[680],t3);
t5=(C_word)C_a_i_list(&a,2,lf[634],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 375  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k22866 in k22862 in k22851 in k22848 in k22844 in k22837 in k22834 in a29401 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22868,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19486,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29388,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  ##sys#register-macro");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[731],t3);}

/* a29387 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29388,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[730],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[341],t5,t3));}

/* k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19489,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29359,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  ##sys#register-macro");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[729],t3);}

/* a29358 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29359(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29359,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29363,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[728]);}

/* k29361 in a29358 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29363,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19492,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29356,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  ##sys#register-macro");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[727],t3);}

/* a29355 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29356(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29356,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19492,2,t0,t1);}
t2=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19500,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19506,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19518,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19530,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19542,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19554,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19560,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19566,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19578,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19590,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19602,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19753,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19824,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[411],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19830,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19836,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19842,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[423],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20002,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20084,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20466,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20513,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[483],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20864,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[491],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21006,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[505],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21199,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[508],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21266,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[511],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21304,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[514],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21463,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[543],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22009,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[545],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22015,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22081,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[557],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22172,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[560],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22273,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[566],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22404,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[572],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22818,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[492],C_retrieve2(lf[491],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[403],C_retrieve2(lf[511],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[580],C_retrieve2(lf[461],"parse-repeat"),lf[577]);
t38=(C_word)C_a_i_list(&a,2,lf[439],C_retrieve2(lf[431],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[435],C_retrieve2(lf[431],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[437],C_retrieve2(lf[431],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[446],C_retrieve2(lf[431],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[436],C_retrieve2(lf[431],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[438],C_retrieve2(lf[431],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[471],C_retrieve2(lf[464],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[480],C_retrieve2(lf[464],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[465],C_retrieve2(lf[464],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[484],C_retrieve2(lf[483],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[470],C_retrieve2(lf[464],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[432],C_retrieve2(lf[423],"parse-for"),lf[577],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[581],C_retrieve2(lf[423],"parse-for"),lf[577]);
t51=(C_word)C_a_i_list(&a,3,lf[573],C_retrieve2(lf[505],"parse-do"),lf[564]);
t52=(C_word)C_a_i_list(&a,3,lf[525],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t54=(C_word)C_a_i_list(&a,3,lf[530],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t55=(C_word)C_a_i_list(&a,3,lf[515],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t56=(C_word)C_a_i_list(&a,3,lf[516],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t57=(C_word)C_a_i_list(&a,3,lf[518],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t58=(C_word)C_a_i_list(&a,3,lf[519],C_retrieve2(lf[514],"parse-accumulation"),lf[564]);
t59=(C_word)C_a_i_list(&a,4,lf[552],C_retrieve2(lf[551],"parse-thereis"),lf[564],C_retrieve2(lf[543],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[553],C_retrieve2(lf[551],"parse-thereis"),lf[564],C_retrieve2(lf[543],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[554],C_retrieve2(lf[551],"parse-thereis"),lf[564],C_retrieve2(lf[543],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[544],C_retrieve2(lf[557],"parse-return"),lf[564],C_retrieve2(lf[543],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[548],C_retrieve2(lf[545],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[547],C_retrieve2(lf[545],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[566],"parse-conditional"),lf[564]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[566],"parse-conditional"),lf[564]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[566],"parse-conditional"),lf[564]);
t68=(C_word)C_a_i_list(&a,3,lf[407],C_retrieve2(lf[508],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[582],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23012,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29214,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  ##sys#register-macro-2");
t73=C_retrieve(lf[692]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[577],t72);}

/* a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29214(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29214,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23018,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  parse-iteration");
f_22818(t3,lf[577],t2,C_retrieve2(lf[582],"*loop-operators*"));}

/* k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23021,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[544],C_retrieve2(lf[582],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23150,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  loop-returning");
t6=C_retrieve2(lf[398],"loop-returning");
f_19590(3,t6,t5,t1);}

/* k23148 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23150,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23032,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-bindings");
t3=C_retrieve2(lf[390],"loop-bindings");
f_19506(3,t3,t2,((C_word*)t0)[2]);}

/* k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23036,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-initially");
t4=C_retrieve2(lf[392],"loop-initially");
f_19530(3,t4,t3,((C_word*)t0)[2]);}

/* k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23060,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-end-tests");
t4=C_retrieve2(lf[393],"loop-end-tests");
f_19542(3,t4,t3,((C_word*)t0)[2]);}

/* k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23067,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[316],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[726],lf[279]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_23067(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_23067(t3,C_SCHEME_END_OF_LIST);}}

/* k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23067,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23071,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping");
t4=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t4,t3,((C_word*)t0)[2]);}

/* k23073 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23079,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-stepping");
t4=C_retrieve2(lf[396],"loop-stepping");
f_19566(3,t4,t3,((C_word*)t0)[2]);}

/* k23081 in k23073 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23083,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[726],lf[722]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23099,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23103,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  loop-finally");
t5=C_retrieve2(lf[397],"loop-finally");
f_19578(3,t5,t4,((C_word*)t0)[2]);}

/* k23101 in k23081 in k23073 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23103,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k23097 in k23081 in k23073 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23099,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[279],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k23077 in k23073 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23069 in k23065 in k23062 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23058 in k23038 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23060,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[722],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[723],t2);
t4=(C_word)C_a_i_list(&a,3,lf[724],lf[725],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k23034 in k23030 in k23019 in k23016 in a29213 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23036,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23012,2,t0,t1);}
t2=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23156,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23885,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[589]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23904,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24355,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24374,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25103,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25122,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25851,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25870,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26321,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26340,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26791,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26810,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27280,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27298,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27313,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27328,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[606]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27347,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27362,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[608]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27381,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[609]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27400,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[610]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27423,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27442,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27465,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27512,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[616]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27567,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[617]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27586,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[618]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27609,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[619]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27637,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27665,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27693,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[622]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27721,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[623]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27749,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[624]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27777,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[625]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27805,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[626]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27833,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[627]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27861,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27876,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27934,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t41=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[720],lf[721]);}

/* k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27937,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[718],lf[719]);}

/* k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27940,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[716],lf[717]);}

/* k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27943,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[714],lf[715]);}

/* k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27946,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[712],lf[713]);}

/* k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[710],lf[711]);}

/* k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27952,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[708],lf[709]);}

/* k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27955,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[706],lf[707]);}

/* k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27958,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[704],lf[705]);}

/* k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27961,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[702],lf[703]);}

/* k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27964,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[700],lf[701]);}

/* k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27964,2,t0,t1);}
t2=C_mutate((C_word*)lf[635]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27966,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[636]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28023,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[637]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28080,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28089,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[698],lf[699]);}

/* k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28092,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[696],lf[697]);}

/* k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28095,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[693]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[694],lf[695]);}

/* k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28095,2,t0,t1);}
t2=C_mutate((C_word*)lf[638]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28097,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[367]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28287,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[355]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28301,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[646]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28315,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[647]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28318,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28330,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28339,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[651],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28383,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[378]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28405,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[652]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28424,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[655]+1,C_retrieve(lf[647]));
t13=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28592,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[662]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28655,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[663]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28664,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[664]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28670,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[665]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28679,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28737,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[668],lf[669]);
t20=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28747,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28818,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29151,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li471),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_29151(t28,t24,C_retrieve2(lf[582],"*loop-operators*"));}

/* do5301 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29151(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29151,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[548],C_retrieve2(lf[670],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[547],C_retrieve2(lf[670],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29179,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[525]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[530]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[515]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[516]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[518]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[519]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[552]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[553]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[554]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[544]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[548]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[547]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_29179(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_29179(t11,t10);}}}

/* k29177 in do5301 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29179(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29151(t3,((C_word*)t0)[2],t2);}

/* k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28818,2,t0,t1);}
t2=C_mutate(&lf[673],t1);
t3=C_mutate(&lf[674],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28820,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29108,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29145,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 653  ##sys#register-macro-2");
t6=C_retrieve(lf[692]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[691],t5);}

/* a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29145(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29145,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28863,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 598  parse-iteration");
f_22818(t3,lf[691],t2,C_retrieve2(lf[673],"*run-operators*"));}

/* k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28863,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[668],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28869,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 606  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[690]);}

/* k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 607  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[689]);}

/* k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 608  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[688]);}

/* k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 610  loop-end-tests");
t3=C_retrieve2(lf[393],"loop-end-tests");
f_19542(3,t3,t2,((C_word*)t0)[3]);}

/* k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28879,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29089,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 611  loop-finally");
t5=C_retrieve2(lf[397],"loop-finally");
f_19578(3,t5,t4,((C_word*)t0)[3]);}

/* k29087 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29089,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29101,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 612  loop-finally");
t4=C_retrieve2(lf[397],"loop-finally");
f_19578(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_28882(t2,C_SCHEME_UNDEFINED);}}

/* k29099 in k29087 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29101,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 597  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29095 in k29087 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29097,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[341],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28882(t4,t3);}

/* k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28882,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29075,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29082,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 620  loop-looping");
t5=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29046,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_29046(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[316],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_29046(t7,t6);}}}

/* k29044 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29046,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_28885(2,t5,t4);}

/* k29080 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 619  process-code-terminates?");
f_28820(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k29073 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_28885(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 621  printf");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[687]);}}

/* k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28885,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[680],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[681],t4);
t6=(C_word)C_a_i_list(&a,1,lf[682]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[682]);
t8=(C_word)C_a_i_list(&a,3,lf[680],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[683],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[684]);
t14=(C_word)C_a_i_list(&a,4,lf[685],((C_word*)t0)[6],t13,lf[686]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[680],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28976,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28980,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 640  loop-looping");
t20=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t20,t19,((C_word*)t0)[3]);}

/* k28982 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28988,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28992,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 641  loop-stepping");
t4=C_retrieve2(lf[396],"loop-stepping");
f_19566(3,t4,t3,((C_word*)t0)[2]);}

/* k28990 in k28982 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28992,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 597  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k28986 in k28982 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 597  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28978 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 597  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28976,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[680],t2);
t4=(C_word)C_a_i_list(&a,3,lf[633],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[680],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[634],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[680],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28932,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 645  loop-bindings");
t12=C_retrieve2(lf[390],"loop-bindings");
f_19506(3,t12,t11,((C_word*)t0)[2]);}

/* k28930 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28932,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28928,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 646  loop-initially");
t3=C_retrieve2(lf[392],"loop-initially");
f_19530(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_28895(t2,C_SCHEME_FALSE);}}

/* k28926 in k28930 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28895(t2,(C_word)C_i_nullp(t1));}

/* k28893 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28895(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28895,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 649  loop-bindings");
t3=C_retrieve2(lf[390],"loop-bindings");
f_19506(3,t3,t2,((C_word*)t0)[2]);}}

/* k28904 in k28893 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28910,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28914,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 650  loop-initially");
t4=C_retrieve2(lf[392],"loop-initially");
f_19530(3,t4,t3,((C_word*)t0)[2]);}

/* k28912 in k28904 in k28893 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28914,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 597  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k28908 in k28904 in k28893 in k28974 in k28883 in k28880 in k28877 in k28873 in k28870 in k28867 in k28861 in a29144 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28910,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29111,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29116,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 656  ##sys#register-macro");
t4=C_retrieve(lf[678]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[679],t3);}

/* a29115 in k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29116(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_29116r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_29116r(t0,t1,t2,t3);}}

static void C_ccall f_29116r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29120,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29130,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_29130(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_29130(t6,C_SCHEME_FALSE);}}

/* k29128 in a29115 in k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_29130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_29120(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 658  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[677],((C_word*)t0)[2]);}}

/* k29118 in a29115 in k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29120,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[676],t2));}

/* k29109 in k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29114,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 765  return-to-host");
t3=C_retrieve(lf[675]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k29112 in k29109 in k29106 in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_29114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28820(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_28820,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28836,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 593  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k28834 in process-code-terminates? in k28816 in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 594  process-code-terminates?");
f_28820(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28747,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28758,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 561  loop-error");
f_19842(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[671],t7,lf[672]));}
else{
t13=t12;
f_28758(2,t13,C_SCHEME_UNDEFINED);}}

/* k28756 in run-while-until in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[547]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_28761(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[548]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[317],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_28761(t10,t9);}
else{
t5=t2;
f_28761(t5,C_SCHEME_UNDEFINED);}}}

/* k28759 in k28756 in run-while-until in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28761(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28761,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28768,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[668],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 565  make-loop-clause");
f_19602(t2,(C_word)C_a_i_list(&a,4,lf[400],((C_word*)t0)[2],lf[405],t4));}

/* k28766 in k28759 in k28756 in run-while-until in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 565  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28741,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28400,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28398 in hush in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28400,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5213,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28739 in hush in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 546  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28679(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_28679r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28679r(t0,t1,t2);}}

static void C_ccall f_28679r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28683,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 536  scheduler-stop");
f_28383(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28697,a[2]=t5,a[3]=((C_word)li463),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_28697(t7,t3,t2);}}

/* do5271 in stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28697(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28697,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28707,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 540  scheduler-stop");
f_28383(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 541  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[666],t5);}}}

/* k28705 in do5271 in stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28697(t3,((C_word*)t0)[2],t2);}

/* k28681 in stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 542  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28674,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28378,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28376 in cont in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28378,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5203,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28672 in cont in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 532  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28360,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k28358 in paused? in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28360,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5195,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28659,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28369,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28367 in pause in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28369,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5199,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28657 in pause in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 525  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28592(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_28592r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_28592r(t0,t1,t2);}}

static void C_ccall f_28592r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28605,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28325,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[658]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28617,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_28617(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_28617(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[661])));}}}

/* k28615 in time-format in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[655]+1,C_retrieve(lf[647]));
C_trace("ChickenBridge.scm: 514  scheduler-set-time-milliseconds");
f_28330(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[659]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[655]+1,C_retrieve(lf[646]));
C_trace("ChickenBridge.scm: 518  scheduler-set-time-milliseconds");
f_28330(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 521  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[660],t4);}}}

/* k28323 in time-format in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28325,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5175,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28603 in time-format in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[657]));}

/* sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28424(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_28424r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_28424r(t0,t1,t2,t3);}}

static void C_ccall f_28424r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28426,a[2]=t2,a[3]=((C_word)li451),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28538,a[2]=t4,a[3]=((C_word)li452),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28543,a[2]=t5,a[3]=((C_word)li453),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start52305251");
t7=t6;
f_28543(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id52315249");
t9=t5;
f_28538(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body52285233");
t11=t4;
f_28426(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[653]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[654],t10);}}}}

/* def-start5230 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28543,NULL,2,t0,t1);}
C_trace("def-id52315249");
t2=((C_word*)t0)[2];
f_28538(t2,t1,C_fix(0));}

/* def-id5231 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28538(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28538,NULL,3,t0,t1,t2);}
C_trace("body52285233");
t3=((C_word*)t0)[2];
f_28426(t3,t1,t2,C_fix(-1));}

/* body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28426(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28426,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28428,a[2]=t4,a[3]=((C_word)li448),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28456,a[2]=t5,a[3]=((C_word)li449),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28486,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28497,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li450),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_28497(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28529,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28533,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 498  nextstart");
t11=t6;
f_28428(t11,t10);}}

/* k28531 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28537,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 498  nextid");
t3=((C_word*)t0)[2];
f_28456(t3,t2);}

/* k28535 in k28531 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 498  scheduler-sprout");
f_28339(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28527 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28486(2,t2,((C_word*)t0)[2]);}

/* do5242 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28497(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28497,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28507,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28522,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 496  nextstart");
t6=((C_word*)t0)[2];
f_28428(t6,t5);}}

/* k28520 in do5242 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28526,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 496  nextid");
t3=((C_word*)t0)[2];
f_28456(t3,t2);}

/* k28524 in k28520 in do5242 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 496  scheduler-sprout");
f_28339(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28505 in do5242 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28497(t3,((C_word*)t0)[2],t2);}

/* k28484 in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 502  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28456,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5228 in sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28428,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28405,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28410,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28410 in load-sal-file in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28410(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28410,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28415,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28415(2,t4,C_SCHEME_FALSE);}}

/* k28413 */
static void C_ccall f_28415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5219(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28383(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28383,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28387,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28385 in scheduler-stop in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28387,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5208,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28339(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28339,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28343,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k28341 in scheduler-sprout in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28343,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5188,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28330(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28330,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28334,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[649]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28332 in scheduler-set-time-milliseconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28334,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5180,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28318,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5172(t2));}

/* current-time-milliseconds in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28315,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5169(t2));}

/* print-error in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28301,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28306,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28306(2,t4,C_SCHEME_FALSE);}}

/* k28304 in print-error in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5164(C_SCHEME_UNDEFINED,t1));}

/* print-message in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28287(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28287,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28292,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28292(2,t4,C_SCHEME_FALSE);}}

/* k28290 in print-message in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5158(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28097(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28097,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28151,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28158,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 393  make-string");
t5=*((C_word*)lf[357]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28158,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28160,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li434),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28160(t5,((C_word*)t0)[2],lf[645],t1,C_fix(0));}

/* do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28160(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28160,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28170,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 396  printf");
t6=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_28170(2,t6,C_SCHEME_UNDEFINED);}}}

/* k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28187,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28189,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li433),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_28189(t7,t3,C_fix(0));}

/* do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28189(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28189,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28209,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28144,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 385  floor");
t14=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 401  string-append");
t3=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[644]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28226,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28229,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 403  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k28227 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28229,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_28226(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 404  modulo");
t4=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k28269 in k28227 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28271,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_28226(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 406  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k28239 in k28269 in k28227 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28241,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_28226(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_28226(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k28224 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28226,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_28189(t4,((C_word*)t0)[2],t3);}

/* k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28144,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28109,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 386  modulo");
t5=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28109,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28136,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 387  floor");
t5=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28134 in k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28136,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 388  modulo");
t5=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k28115 in k28134 in k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28117,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 389  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28122 in k28115 in k28134 in k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28128,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 390  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28126 in k28122 in k28115 in k28134 in k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28132,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 391  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28130 in k28126 in k28122 in k28115 in k28134 in k28107 in k28142 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 389  string-append");
t2=*((C_word*)lf[146]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[641],((C_word*)t0)[3],lf[642],((C_word*)t0)[2],lf[643],t1);}

/* k28207 in do5146 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 400  string-append");
t2=*((C_word*)lf[146]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[639],t1,lf[640]);}

/* k28185 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 397  printf");
t2=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k28171 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 409  printf");
t3=C_retrieve(lf[332]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k28174 in k28171 in k28168 in do5132 in k28156 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28176,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_28160(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k28149 in cm-logo in k28093 in k28090 in k28087 in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 410  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28085,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_28085 in cs:clear in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28085,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5124(C_SCHEME_UNDEFINED));}

/* cs:f in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28023(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_28023r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28023r(t0,t1,t2);}}

static void C_ccall f_28023r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28027,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_28027(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28036,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28056,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_28056(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_28056(t8,C_SCHEME_FALSE);}}}

/* k28054 in cs:f in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28036(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_28036(t2,C_SCHEME_UNDEFINED);}}

/* k28034 in cs:f in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_28036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28036,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28044,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_28044 in k28034 in cs:f in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28044,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5117(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k28025 in cs:f in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_28027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27966(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27966r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27966r(t0,t1,t2);}}

static void C_ccall f_27966r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27970,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27970(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27979,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27999,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27999(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27999(t8,C_SCHEME_FALSE);}}}

/* k27997 in cs:i in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_27999(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27979(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27979(t2,C_SCHEME_UNDEFINED);}}

/* k27977 in cs:i in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_27979(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27979,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27987,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27987 in k27977 in cs:i in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27987,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5106(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27968 in cs:i in k27962 in k27959 in k27956 in k27953 in k27950 in k27947 in k27944 in k27941 in k27938 in k27935 in k27932 in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27876(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27876,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27888,a[2]=t2,a[3]=((C_word)li423),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27925,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27930,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_27930 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27930(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27930,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5050(C_SCHEME_UNDEFINED,t2));}

/* f_27925 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27925(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27925,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5041(C_SCHEME_UNDEFINED,t2));}

/* a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27888(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27888,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27894,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li422),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  call-with-current-continuation");
t4=*((C_word*)lf[634]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27894(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27894,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27900,a[2]=t2,a[3]=((C_word)li420),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li421),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  with-exception-handler");
t5=C_retrieve(lf[633]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a27919 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27924,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27922 in a27919 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a27899 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27900(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27900,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27904,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27911,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27915,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27918,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  condition-property-accessor");
t7=C_retrieve(lf[630]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[631],lf[632]);}

/* k27916 in a27899 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27913 in a27899 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[629],t1);}

/* k27909 in a27899 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  print-error");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27902 in a27899 in a27893 in a27887 in mp:inhook in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27861(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27861,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27866,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27866 in mp:mm in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27866(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27866,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5034(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27833,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27838,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_27838 in mp:bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27838,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5025(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27805,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27810,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_27810 in mp:press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27810(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27810,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5010(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27777,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27782,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_27782 in mp:prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27782,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4995(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27749,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27754,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_27754 in mp:ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27754,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4980(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27721(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27721,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27726,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_27726 in mp:touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27726,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4964(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27693,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27698,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_27698 in mp:on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27698,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4948(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27665,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27670,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_27670 in mp:off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27670,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4932(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27637,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27642,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27642 in mp:midi in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27642,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4917(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27609,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27614,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27614 in mp:note in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27614,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4900(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27586,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27590,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27591,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27591 in mm:num-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27591,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4882(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27588 in mm:num-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27567,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27572,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27572 in mm:num in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27572,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4871(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27512(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27512,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27516,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27519,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  mm:type?");
t6=C_retrieve(lf[613]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k27517 in mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_27522(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 376  mm:type?");
t3=C_retrieve(lf[613]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k27520 in k27517 in mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27522,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27526,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27546,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[615]));}}

/* f_27546 in k27520 in k27517 in mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27546,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4860(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_27526 in k27520 in k27517 in mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27526(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27526,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4850(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27514 in mm:val-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27465(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27465,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27472,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  mm:type?");
t4=C_retrieve(lf[613]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k27470 in mm:val in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_27475(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 376  mm:type?");
t3=C_retrieve(lf[613]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k27473 in k27470 in mm:val in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27475,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27479,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27495,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_27495 in k27473 in k27470 in mm:val in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27495,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4837(C_SCHEME_UNDEFINED,t4,t5));}

/* f_27479 in k27473 in k27470 in mm:val in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27479,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4829(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27442,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27446,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27447,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_27447 in mm:vel-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27447(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27447,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4816(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27444 in mm:vel-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27423(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27423,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27428,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_27428 in mm:vel in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27428,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4805(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27400,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27404,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27405,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27405 in mm:key-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27405,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4794(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27402 in mm:key-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27381,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27386,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27386 in mm:key in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27386,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4783(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27362,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27366,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27367,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27367 in mm:chan-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27367,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4773(C_SCHEME_UNDEFINED,t4,t5));}

/* k27364 in mm:chan-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27347(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27347,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27352,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27352 in mm:chan in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27352,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4764(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27328,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27332,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27333,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27333 in mm:time-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27333,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4755(C_SCHEME_UNDEFINED,t4,t5));}

/* k27330 in mm:time-set! in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27313,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27318,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27318 in mm:time in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27318(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27318,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4745(t3,t4));}

/* mm:copy in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27298(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27298,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27303,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27303 in mm:copy in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27303(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27303,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4737(t3,t4));}

/* mm:free in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27280(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27280,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27284,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27288,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_27288 in mm:free in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27288(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27288,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4729(C_SCHEME_UNDEFINED,t3));}

/* k27282 in mm:free in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26810(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26810r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26810r(t0,t1,t2);}}

static void C_ccall f_26810r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26814,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26814(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[584]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27139,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[584]);}
else{
t23=t22;
f_27139(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[592]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27174,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[592]);}
else{
t24=t23;
f_27174(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[587]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27209,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[587]);}
else{
t25=t24;
f_27209(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27238,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_27238(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k27236 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27238,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27253,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27251 in k27236 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27245(2,t2,C_SCHEME_UNDEFINED);}}

/* k27243 in k27236 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26814(t5,t4);}

/* k27207 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27213(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27211 in k27207 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26814(t7,t6);}

/* k27172 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27178,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27178(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27176 in k27172 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26814(t7,t6);}

/* k27137 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27143(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27141 in k27137 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26814(t7,t6);}

/* k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26814,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26817(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27004,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_27004(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27039,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_27039(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27074,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_27074(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27103,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27103(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27101 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27103,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27118,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27116 in k27101 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27110(2,t2,C_SCHEME_UNDEFINED);}}

/* k27108 in k27101 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26817(t5,t4);}

/* k27072 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27078(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27076 in k27072 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26817(t7,t6);}

/* k27037 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27041 in k27037 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26817(t7,t6);}

/* k27002 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27008(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27006 in k27002 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_27008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26817(t7,t6);}

/* k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26817,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26820,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26820(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26869,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_26869(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26904,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_26904(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26939,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_26939(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26968,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26968(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26966 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26968,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26983,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26981 in k26966 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26975(2,t2,C_SCHEME_UNDEFINED);}}

/* k26973 in k26966 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26820(t5,t4);}

/* k26937 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26943(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26941 in k26937 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26820(t7,t6);}

/* k26902 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26908(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26906 in k26902 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26820(t7,t6);}

/* k26867 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26873,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26873(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26871 in k26867 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26820(t7,t6);}

/* k26818 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26820,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26823,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26823(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26821 in k26818 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26827,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26827 in k26821 in k26818 in k26815 in k26812 in mm:make-bend in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26827,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4706(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26791(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26791,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26796,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_26796 in mm:press? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26796,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4627(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26340(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26340r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26340r(t0,t1,t2);}}

static void C_ccall f_26340r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26344,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26344(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[584]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26669,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[584]);}
else{
t23=t22;
f_26669(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[592]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26704,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[592]);}
else{
t24=t23;
f_26704(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[587]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26739,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[587]);}
else{
t25=t24;
f_26739(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26768,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26768(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26766 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26768,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26783,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26781 in k26766 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26775(2,t2,C_SCHEME_UNDEFINED);}}

/* k26773 in k26766 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26344(t5,t4);}

/* k26737 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26743(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26741 in k26737 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26344(t7,t6);}

/* k26702 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26706 in k26702 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26344(t7,t6);}

/* k26667 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26671 in k26667 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26344(t7,t6);}

/* k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26344,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26347,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26347(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26534,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_26534(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26569,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_26569(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26604,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_26604(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26633,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26633(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26631 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26633,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26648,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26646 in k26631 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26640(2,t2,C_SCHEME_UNDEFINED);}}

/* k26638 in k26631 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26347(t5,t4);}

/* k26602 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26608(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26606 in k26602 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26347(t7,t6);}

/* k26567 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26573(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26571 in k26567 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26347(t7,t6);}

/* k26532 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26538(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26536 in k26532 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26347(t7,t6);}

/* k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26347(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26347,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26350,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26350(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26399,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_26399(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26434,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_26434(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26469,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_26469(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26498,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26498(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26496 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26498,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26513,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26511 in k26496 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26505(2,t2,C_SCHEME_UNDEFINED);}}

/* k26503 in k26496 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26350(t5,t4);}

/* k26467 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26471 in k26467 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26350(t7,t6);}

/* k26432 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26436 in k26432 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26350(t7,t6);}

/* k26397 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26401 in k26397 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26350(t7,t6);}

/* k26348 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_26350(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26350,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26353,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26353(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26351 in k26348 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26357,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26357 in k26351 in k26348 in k26345 in k26342 in mm:make-press in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26357,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4612(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26321(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26321,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26326,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_26326 in mm:prog? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26326,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4533(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25870(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25870r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25870r(t0,t1,t2);}}

static void C_ccall f_25870r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25874,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25874(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[584]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26199,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[584]);}
else{
t23=t22;
f_26199(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[592]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26234,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[592]);}
else{
t24=t23;
f_26234(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[587]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26269,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[587]);}
else{
t25=t24;
f_26269(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26298,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26298(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26296 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26298,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26313,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26311 in k26296 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26305(2,t2,C_SCHEME_UNDEFINED);}}

/* k26303 in k26296 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25874(t5,t4);}

/* k26267 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26273(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26271 in k26267 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25874(t7,t6);}

/* k26232 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26236 in k26232 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25874(t7,t6);}

/* k26197 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26201 in k26197 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25874(t7,t6);}

/* k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25874(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25874,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25877(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26064,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_26064(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26099,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_26099(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26134,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_26134(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26163,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26163(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26161 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26163,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26178,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26176 in k26161 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26170(2,t2,C_SCHEME_UNDEFINED);}}

/* k26168 in k26161 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25877(t5,t4);}

/* k26132 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26136 in k26132 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25877(t7,t6);}

/* k26097 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26101 in k26097 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25877(t7,t6);}

/* k26062 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26066 in k26062 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25877(t7,t6);}

/* k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25877,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25880,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25880(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25929,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_25929(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25964,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[592]);}
else{
t7=t6;
f_25964(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25999,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_25999(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26028,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26028(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26026 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26028,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26043,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26041 in k26026 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26035(2,t2,C_SCHEME_UNDEFINED);}}

/* k26033 in k26026 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25880(t5,t4);}

/* k25997 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26001 in k25997 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_26003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25880(t7,t6);}

/* k25962 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25966 in k25962 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25880(t7,t6);}

/* k25927 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25931 in k25927 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25880(t7,t6);}

/* k25878 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25880,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25883,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25883(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25881 in k25878 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25887,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25887 in k25881 in k25878 in k25875 in k25872 in mm:make-prog in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25887(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25887,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4518(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25851(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25851,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25856,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_25856 in mm:ctrl? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25856,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4439(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25122(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_25122r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25122r(t0,t1,t2);}}

static void C_ccall f_25122r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25126,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_25126(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[584]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25694,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[584]);}
else{
t27=t26;
f_25694(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[595]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25729,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[595]);}
else{
t28=t27;
f_25729(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[592]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25764,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[592]);}
else{
t29=t28;
f_25764(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[587]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25799,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[587]);}
else{
t30=t29;
f_25799(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25828,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25828(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25826 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25828,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25843,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25841 in k25826 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25835(2,t2,C_SCHEME_UNDEFINED);}}

/* k25833 in k25826 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25126(t5,t4);}

/* k25797 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25803(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25801 in k25797 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25126(t7,t6);}

/* k25762 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25768(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25766 in k25762 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25126(t7,t6);}

/* k25727 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25733,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25733(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25731 in k25727 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25126(t7,t6);}

/* k25692 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25698,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25698(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25696 in k25692 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25126(t7,t6);}

/* k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25126,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25129(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25524,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_25524(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25559,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[595]);}
else{
t7=t6;
f_25559(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25594,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_25594(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25629,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_25629(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25658,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25658(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25656 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25658,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25673,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25671 in k25656 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25665(2,t2,C_SCHEME_UNDEFINED);}}

/* k25663 in k25656 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25129(t5,t4);}

/* k25627 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25631 in k25627 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25129(t7,t6);}

/* k25592 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25596 in k25592 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25129(t7,t6);}

/* k25557 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25561 in k25557 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25129(t7,t6);}

/* k25522 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25526 in k25522 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25129(t7,t6);}

/* k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25129,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25132(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25354,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_25354(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25389,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[595]);}
else{
t7=t6;
f_25389(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25424,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_25424(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25459,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_25459(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25488,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25488(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25486 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25488,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25503,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25501 in k25486 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25495(2,t2,C_SCHEME_UNDEFINED);}}

/* k25493 in k25486 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25132(t5,t4);}

/* k25457 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25461 in k25457 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25132(t7,t6);}

/* k25422 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25426 in k25422 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25132(t7,t6);}

/* k25387 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25391 in k25387 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25132(t7,t6);}

/* k25352 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25358(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25356 in k25352 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25132(t7,t6);}

/* k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25132,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25135,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_25135(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25184,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_25184(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25219,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[595]);}
else{
t7=t6;
f_25219(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25254,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_25254(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25289,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_25289(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25318,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25318(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25316 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25318,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25333,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25331 in k25316 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25325(2,t2,C_SCHEME_UNDEFINED);}}

/* k25323 in k25316 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25135(t5,t4);}

/* k25287 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25293(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25291 in k25287 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25135(t7,t6);}

/* k25252 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25258(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25256 in k25252 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25135(t7,t6);}

/* k25217 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25223(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25221 in k25217 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25135(t7,t6);}

/* k25182 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25188(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25186 in k25182 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25135(t7,t6);}

/* k25133 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_25135(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25135,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25138(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25136 in k25133 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25142,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_25142 in k25136 in k25133 in k25130 in k25127 in k25124 in mm:make-ctrl in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25142,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4423(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25103(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25103,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25108,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_25108 in mm:touch? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25108,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4307(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24374(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24374r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24374r(t0,t1,t2);}}

static void C_ccall f_24374r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24378,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24378(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[584]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24946,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[584]);}
else{
t27=t26;
f_24946(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24981,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[585]);}
else{
t28=t27;
f_24981(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[592]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25016,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[592]);}
else{
t29=t28;
f_25016(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[587]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25051,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[587]);}
else{
t30=t29;
f_25051(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25080,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25080(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25078 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25080,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25095,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25093 in k25078 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25087(2,t2,C_SCHEME_UNDEFINED);}}

/* k25085 in k25078 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24378(t5,t4);}

/* k25049 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25053 in k25049 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24378(t7,t6);}

/* k25014 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25018 in k25014 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_25020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24378(t7,t6);}

/* k24979 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24985(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24983 in k24979 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24378(t7,t6);}

/* k24944 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24950(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24948 in k24944 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24378(t7,t6);}

/* k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_24378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24378,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24381(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24776,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_24776(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24811,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_24811(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24846,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_24846(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24881,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_24881(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24910,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24910(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24908 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24910,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24925,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24923 in k24908 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24917(2,t2,C_SCHEME_UNDEFINED);}}

/* k24915 in k24908 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24381(t5,t4);}

/* k24879 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24883 in k24879 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24381(t7,t6);}

/* k24844 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24848 in k24844 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24381(t7,t6);}

/* k24809 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24813 in k24809 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24381(t7,t6);}

/* k24774 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24780,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24780(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24778 in k24774 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24381(t7,t6);}

/* k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_24381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24381,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24384(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24606,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_24606(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24641,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_24641(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24676,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_24676(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24711,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_24711(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24740,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24740(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24738 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24740,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24755,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24753 in k24738 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24747(2,t2,C_SCHEME_UNDEFINED);}}

/* k24745 in k24738 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24384(t5,t4);}

/* k24709 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24713 in k24709 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24384(t7,t6);}

/* k24674 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24680(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24678 in k24674 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24384(t7,t6);}

/* k24639 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24645,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24645(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24643 in k24639 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24384(t7,t6);}

/* k24604 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24610(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24608 in k24604 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24384(t7,t6);}

/* k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_24384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24384,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24387,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24387(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24436,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_24436(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24471,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_24471(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24506,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[592]);}
else{
t8=t7;
f_24506(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24541,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_24541(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24570,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24570(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24568 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24570,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24585,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24583 in k24568 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24577(2,t2,C_SCHEME_UNDEFINED);}}

/* k24575 in k24568 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24387(t5,t4);}

/* k24539 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24545(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24543 in k24539 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24387(t7,t6);}

/* k24504 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24510(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24508 in k24504 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24387(t7,t6);}

/* k24469 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24473 in k24469 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24387(t7,t6);}

/* k24434 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24440,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24440(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24438 in k24434 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24387(t7,t6);}

/* k24385 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_24387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24390,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24390(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24388 in k24385 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24394,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24394 in k24388 in k24385 in k24382 in k24379 in k24376 in mm:make-touch in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24394(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24394,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4291(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24355(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24355,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24360,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_24360 in mm:off? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24360(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24360,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4175(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23904(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_23904r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23904r(t0,t1,t2);}}

static void C_ccall f_23904r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23908,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_23908(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[584]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24233,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[584]);}
else{
t23=t22;
f_24233(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24268,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_24268(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[587]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24303,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[587]);}
else{
t25=t24;
f_24303(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24332,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_24332(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k24330 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24332,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24347,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24345 in k24330 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24339(2,t2,C_SCHEME_UNDEFINED);}}

/* k24337 in k24330 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23908(t5,t4);}

/* k24301 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24305 in k24301 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23908(t7,t6);}

/* k24266 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24270 in k24266 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23908(t7,t6);}

/* k24231 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24237(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24235 in k24231 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23908(t7,t6);}

/* k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23911(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24098,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_24098(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24133,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_24133(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24168,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_24168(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24197,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_24197(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24195 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24197,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24212,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24210 in k24195 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24204(2,t2,C_SCHEME_UNDEFINED);}}

/* k24202 in k24195 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23911(t5,t4);}

/* k24166 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24172(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24170 in k24166 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23911(t7,t6);}

/* k24131 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24137(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24135 in k24131 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23911(t7,t6);}

/* k24096 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24102(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24100 in k24096 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23911(t7,t6);}

/* k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23911,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23914,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23914(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23963,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_23963(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23998,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_23998(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24033,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[587]);}
else{
t8=t7;
f_24033(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24062,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_24062(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k24060 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24062,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24077,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24075 in k24060 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24069(2,t2,C_SCHEME_UNDEFINED);}}

/* k24067 in k24060 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23914(t5,t4);}

/* k24031 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24037(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24035 in k24031 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23914(t7,t6);}

/* k23996 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24002(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24000 in k23996 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_24002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23914(t7,t6);}

/* k23961 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23967(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23965 in k23961 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23914(t7,t6);}

/* k23912 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23917,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23917(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23915 in k23912 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23921,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_23921 in k23915 in k23912 in k23909 in k23906 in mm:make-off in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23921,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4160(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23885(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23885,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23890,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_23890 in mm:on? in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23890,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4081(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23156(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_23156r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23156r(t0,t1,t2);}}

static void C_ccall f_23156r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23160,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_23160(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[584]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23728,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[584]);}
else{
t27=t26;
f_23728(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23763,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[585]);}
else{
t28=t27;
f_23763(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[586]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23798,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[586]);}
else{
t29=t28;
f_23798(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[587]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23833,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[587]);}
else{
t30=t29;
f_23833(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23862,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_23862(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23860 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23862,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23877,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23875 in k23860 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23869(2,t2,C_SCHEME_UNDEFINED);}}

/* k23867 in k23860 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23160(t5,t4);}

/* k23831 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23835 in k23831 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23160(t7,t6);}

/* k23796 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23800 in k23796 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23160(t7,t6);}

/* k23761 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23765 in k23761 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23160(t7,t6);}

/* k23726 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23730 in k23726 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23160(t7,t6);}

/* k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23163(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23558,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_23558(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23593,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_23593(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23628,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_23628(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23663,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_23663(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23692,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23692(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23690 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23692,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23707,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23705 in k23690 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23699(2,t2,C_SCHEME_UNDEFINED);}}

/* k23697 in k23690 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23163(t5,t4);}

/* k23661 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23665 in k23661 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23163(t7,t6);}

/* k23626 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23630 in k23626 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23163(t7,t6);}

/* k23591 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23595 in k23591 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23163(t7,t6);}

/* k23556 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23560 in k23556 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23163(t7,t6);}

/* k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23163,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23166(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23388,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_23388(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23423,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_23423(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23458,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_23458(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23493,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_23493(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23522,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23522(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23520 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23522,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23537,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23535 in k23520 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23529(2,t2,C_SCHEME_UNDEFINED);}}

/* k23527 in k23520 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23166(t5,t4);}

/* k23491 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23495 in k23491 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23166(t7,t6);}

/* k23456 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23460 in k23456 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23166(t7,t6);}

/* k23421 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23425 in k23421 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23166(t7,t6);}

/* k23386 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23392(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23390 in k23386 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23166(t7,t6);}

/* k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23166,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23169,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_23169(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[584]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23218,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[584]);}
else{
t6=t5;
f_23218(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23253,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_23253(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[586]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23288,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[586]);}
else{
t8=t7;
f_23288(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[587]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23323,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[587]);}
else{
t9=t8;
f_23323(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23352,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23352(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23350 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23352,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23367,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23365 in k23350 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23359(2,t2,C_SCHEME_UNDEFINED);}}

/* k23357 in k23350 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23169(t5,t4);}

/* k23321 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23327(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23325 in k23321 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23169(t7,t6);}

/* k23286 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23290 in k23286 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23169(t7,t6);}

/* k23251 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23255 in k23251 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23169(t7,t6);}

/* k23216 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23222(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23220 in k23216 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23169(t7,t6);}

/* k23167 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_23169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23169,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23172,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23172(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23170 in k23167 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23176,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_23176 in k23170 in k23167 in k23164 in k23161 in k23158 in mm:make-on in k23010 in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_23176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23176,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4065(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22818(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22818,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22826,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22658,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_22658(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_22658(t12,(C_word)C_i_not(t11));}}

/* k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22658,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22665,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(t2,(C_word)C_a_i_list(&a,4,lf[400],lf[573],lf[405],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22666,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22691,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22693,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li342),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_22693(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22693(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22693,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[315]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_22703(t16,t13);}
else{
t13=t10;
f_22703(t13,C_SCHEME_UNDEFINED);}}}

/* k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22703(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22703,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t2,t3,((C_word*)t0)[3]);}

/* k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22707,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22710,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_22710(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[578],t5,lf[579]));}}

/* k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li340),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22771,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li341),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22770 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22771,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22761 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22762,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22711 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22716,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  op-type?");
f_22666(t3,((C_word*)((C_word*)t0)[6])[1],lf[564]);}

/* k22730 in k22711 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22732,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_22716(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  op-type?");
f_22666(t2,((C_word*)((C_word*)t0)[6])[1],lf[577]);}}

/* k22737 in k22730 in k22711 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22739,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_22716(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[574],t2,lf[575],t3,lf[576]));}}
else{
t2=((C_word*)t0)[5];
f_22716(2,t2,C_SCHEME_UNDEFINED);}}

/* k22714 in k22711 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22716,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 375  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k22720 in k22714 in k22711 in k22708 in k22705 in k22701 in do3863 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_22693(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22689 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_22826(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22666(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22666,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k22663 in k22656 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22665,2,t0,t1);}
t2=((C_word*)t0)[2];
f_22826(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k22824 in parse-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  gather-clauses");
f_19753(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22404,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[567],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22426,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[570],t8,lf[571]));}
else{
t19=t17;
f_22426(2,t19,C_SCHEME_UNDEFINED);}}

/* k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22426,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[569]));}
else{
t9=t8;
f_22441(2,t9,C_SCHEME_UNDEFINED);}}

/* k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[317],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_22444(t6,t5);}
else{
t4=t2;
f_22444(t4,C_SCHEME_UNDEFINED);}}

/* k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22614,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li336),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22620,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li337),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22619 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22620(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22620,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22613 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22614,2,t0,t1);}
C_trace("ChickenBridge.scm: 375  parse-then-else-dependents");
f_22273(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22450,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_22450(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22596,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  gather-clauses");
f_19753(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k22594 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22450(t3,t2);}

/* k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22450,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  loop-operator-set!");
f_19500(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22589,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping");
t4=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k22587 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22589,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[341],t1);
C_trace("ChickenBridge.scm: 375  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22577,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22460,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_22473(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_22473(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22473,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[568]));}
else{
t5=t4;
f_22480(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_22460(t2,C_SCHEME_UNDEFINED);}}

/* k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22483,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22536,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li334),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22550,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li335),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22549 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22550(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22550,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22535 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22544,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 375  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k22542 in a22535 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  parse-then-else-dependents");
f_22273(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_22486(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22522,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  gather-clauses");
f_19753(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k22520 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22486(t3,t2);}

/* k22484 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22486,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22515,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping");
t4=C_retrieve2(lf[394],"loop-looping");
f_19554(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22513 in k22484 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22515,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[341],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping-set!");
f_19560(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k22490 in k22513 in k22484 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  loop-looping-set!");
f_19560(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k22493 in k22490 in k22513 in k22484 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 375  gather-clauses");
f_19753(t2,lf[20],t3);}

/* k22497 in k22493 in k22490 in k22513 in k22484 in k22481 in k22478 in k22471 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22460(t3,t2);}

/* k22458 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 375  loop-looping-set!");
f_19560(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k22461 in k22458 in k22575 in k22451 in k22448 in k22445 in k22442 in k22439 in k22424 in parse-conditional in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22273(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22273,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22277,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22282,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li332),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_22282(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22282(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22282,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t12,t10,t11);}}

/* k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_22236(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[564]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[565]);
t8=t2;
f_22236(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_22236(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_22236(t3,C_SCHEME_FALSE);}}

/* k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22236,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22299,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_22299(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[562],t6,lf[563]));}}

/* k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22372,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li330),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22385,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li331),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22384 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22385,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22371 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22380,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22378 in a22371 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22300 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k22304 in k22300 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22306,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22311,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_22311(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[315]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[561]));}
else{
t10=t5;
f_22311(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_22311(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22349,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t10,t11,((C_word*)t0)[3]);}}}}

/* k22347 in k22304 in k22300 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_22311(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_22311(2,t2,C_SCHEME_UNDEFINED);}}

/* k22309 in k22304 in k22300 in k22297 in k22234 in k22228 in do3796 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_22282(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22275 in parse-then-else-dependents in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22172,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22179,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[558],t13,lf[559]));}
else{
t13=t11;
f_22179(2,t13,C_SCHEME_UNDEFINED);}}

/* k22177 in parse-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22179,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22210,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22208 in k22177 in parse-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22210,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22206,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k22204 in k22208 in k22177 in parse-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22206,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[400],lf[544],lf[405],t2));}

/* k22196 in k22208 in k22177 in parse-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22081,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22088,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[555],t15,lf[556]));}
else{
t15=t13;
f_22088(2,t15,C_SCHEME_UNDEFINED);}}

/* k22086 in parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22088,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22156,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22154 in k22086 in parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22156,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22099,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[552]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_22099(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[553]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[317],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_22099(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[554]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_22099(t9,t8);}
else{
t8=t4;
f_22099(t8,C_SCHEME_UNDEFINED);}}}}

/* k22097 in k22154 in k22086 in parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22099(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22099,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22110,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22126,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 375  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k22124 in k22097 in k22154 in k22086 in parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22126,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[400],lf[552],lf[405],t3,lf[408],t4));}

/* k22108 in k22097 in k22154 in k22086 in parse-thereis in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22015,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22026,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[549],t7,lf[550]));}
else{
t13=t12;
f_22026(2,t13,C_SCHEME_UNDEFINED);}}

/* k22024 in parse-while-until in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[547]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_22029(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[548]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[317],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_22029(t10,t9);}
else{
t5=t2;
f_22029(t5,C_SCHEME_UNDEFINED);}}}

/* k22027 in k22024 in parse-while-until in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_22029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22029,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22036,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[546]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(t2,(C_word)C_a_i_list(&a,4,lf[400],((C_word*)t0)[2],lf[405],t4));}

/* k22034 in k22027 in k22024 in parse-while-until in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_22009(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22009,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[544],t2));}

/* parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21463,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21472,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21477,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21482,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21494,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[541],t7,lf[542]));}
else{
t30=t29;
f_21494(2,t30,C_SCHEME_UNDEFINED);}}

/* k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21494,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_21505(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[537]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[540]));}
else{
t11=t9;
f_21958(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_21505(2,t9,C_SCHEME_UNDEFINED);}}}

/* k21956 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 375  loop-variable?");
f_19830(t2,t3);}

/* k21962 in k21956 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21964,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_21505(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[538],t2,lf[539]));}}

/* k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21390,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li324),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_21390(t9,t2,C_SCHEME_FALSE);}

/* do3618 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21390(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21390,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21404,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21415,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  loop-collectors");
t9=C_retrieve2(lf[391],"loop-collectors");
f_19518(3,t9,t7,t8);}}

/* k21413 in do3618 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21415,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21350,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li323),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_21350(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3610 in k21413 in do3618 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21350(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21350,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21363,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_21363(t12,t11);}
else{
t10=t6;
f_21363(t10,C_SCHEME_UNDEFINED);}}}

/* k21361 in do3610 in k21413 in do3618 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21363(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_21350(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21402 in do3618 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21390(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21509,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_21512,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21942,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21946,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  collector-type");
f_21477(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_21512(2,t6,t5);}}

/* k21944 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[534];
t3=lf[535];
t4=lf[536];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_21942(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_21942(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_21942(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_21942(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k21940 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21942,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_21512(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21938,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  collector-type");
f_21477(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21936 in k21940 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21938,2,t0,t1);}
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[531],t1,lf[532],((C_word*)t0)[2],lf[533]));}

/* k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21515,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[515]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[516]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21558,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21596,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_21596(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 375  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[517]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21625,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  collector-acc");
f_21482(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[518]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[519]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[521]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_21732(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[525]);
t10=t8;
f_21732(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[530])));}}}}

/* k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21732(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21732,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21735,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21848,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21906,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t9,((C_word*)((C_word*)t0)[13])[1],lf[529]);}
else{
t9=t8;
f_21848(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21841,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  collector-acc");
f_21482(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_21515(t2,C_SCHEME_UNDEFINED);}}

/* k21839 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21735(t6,t5);}

/* k21904 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21906,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21848(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21848(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21848,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[528]);}

/* k21850 in k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21852,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[527]);}

/* k21854 in k21850 in k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21856,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)((C_word*)t0)[11])[1],lf[526]);}

/* k21896 in k21854 in k21850 in k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21898,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21894,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k21892 in k21896 in k21854 in k21850 in k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21894,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21872,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-collector");
f_21472(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k21870 in k21892 in k21896 in k21854 in k21850 in k21846 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21872,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21735(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21735(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21733 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21735(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21735,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21738,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[522]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[523],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[524],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21738(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[525]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[522],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[523],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21738(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[523],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[524],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_21738(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21736 in k21733 in k21730 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21738(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21738,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21515(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_21515(t2,C_SCHEME_UNDEFINED);}}

/* k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21637,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[518]);
t3=(C_truep(t2)?lf[346]:lf[344]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21643,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21687,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_21687(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 375  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[520]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21720,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  collector-acc");
f_21482(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21718 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21643(t3,t2);}

/* k21685 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21687,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k21711 in k21685 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21713,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21695,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-collector");
f_21472(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21693 in k21711 in k21685 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21695,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21643(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[316],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21643(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21641 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21643(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21643,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k21681 in k21641 in k21635 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21683,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[317],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[316],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[341],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_21515(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k21623 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21558(t3,t2);}

/* k21594 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21596,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k21616 in k21594 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21618,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21604,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-collector");
f_21472(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21602 in k21616 in k21594 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21604,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21558(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_21558(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21556 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21558,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[515]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21515(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_21515(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21515(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21515,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21522,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t4=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21524 in k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21528 in k21524 in k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21534,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21532 in k21528 in k21524 in k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21538,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21536 in k21532 in k21528 in k21524 in k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21538,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[400],((C_word*)t0)[5],lf[401],((C_word*)t0)[4],lf[403],((C_word*)t0)[3],lf[405],((C_word*)t0)[2],lf[408],t1,lf[402],t2,lf[404],C_SCHEME_END_OF_LIST));}

/* k21520 in k21513 in k21510 in k21507 in k21503 in k21492 in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21482(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21482,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21477(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21477,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21472(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21472,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21304,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21315,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[512],t6,lf[513]));}
else{
t12=t11;
f_21315(2,t12,C_SCHEME_UNDEFINED);}}

/* k21313 in parse-initially in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21315,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21330,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(t6,(C_word)C_a_i_list(&a,4,lf[400],((C_word*)t0)[2],lf[403],t7));}

/* k21328 in k21313 in parse-initially in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21266,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21277,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[509],t6,lf[510]));}
else{
t12=t11;
f_21277(2,t12,C_SCHEME_UNDEFINED);}}

/* k21275 in parse-finally in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21277,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21292,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(t6,(C_word)C_a_i_list(&a,4,lf[400],((C_word*)t0)[2],lf[407],t7));}

/* k21290 in k21275 in parse-finally in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21199,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21210,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21219,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li316),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_21219(t16,t12);}

/* do3567 in parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21219(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21219,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_21229(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t3,t4,((C_word*)t0)[5]);}}

/* k21227 in do3567 in parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21229,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[506],((C_word*)t0)[4],lf[507]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21242,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_21219(t7,((C_word*)t0)[7]);}}

/* k21240 in k21227 in do3567 in parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21208 in parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21217,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(t2,(C_word)C_a_i_list(&a,4,lf[400],((C_word*)t0)[3],lf[405],((C_word*)((C_word*)t0)[2])[1]));}

/* k21215 in k21208 in parse-do in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21006,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21013,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21066,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li314),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_21066(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_21066(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21066,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_21076(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t7,t8,((C_word*)t0)[5]);}}

/* k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21076,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21087,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21190,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  loop-variable?");
f_19830(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21190,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21096,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[496],((C_word*)((C_word*)t0)[10])[1],lf[497]));}
else{
t4=t3;
f_21096(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[315]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21118,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[498]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21147,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21155,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[499]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[484]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[500]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_21087(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[501],((C_word*)((C_word*)t0)[10])[1],lf[502]));}
else{
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[503],((C_word*)((C_word*)t0)[10])[1],lf[504]));}}}}}

/* k21153 in k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21155,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21118(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21145 in k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21147,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21118(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k21116 in k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_21087(2,t6,t5);}

/* k21094 in k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21099,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[494],((C_word*)((C_word*)t0)[8])[1],lf[495]));}
else{
t3=t2;
f_21099(2,t3,C_SCHEME_UNDEFINED);}}

/* k21097 in k21094 in k21188 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_21087(2,t6,t5);}

/* k21085 in k21074 in do3523 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_21066(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21016,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[493]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21056,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21064,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_21016(2,t3,C_SCHEME_UNDEFINED);}}}

/* k21062 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21064,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21016(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21054 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21056,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21016(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k21014 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21023,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21027,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t4=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21025 in k21014 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21031,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21029 in k21025 in k21014 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21031,2,t0,t1);}
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[400],lf[492],lf[401],((C_word*)t0)[2],lf[403],t1));}

/* k21021 in k21014 in k21011 in parse-with in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_21023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20864,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20874,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20912,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li312),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_20912(t22,t18,C_SCHEME_FALSE);}

/* do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20912(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20912,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20922(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t5,t6,((C_word*)t0)[5]);}}

/* k20920 in do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20922,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[490]));}
else{
t7=t6;
f_20933(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20931 in k20920 in do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20933,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20936,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[484]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20945,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[485]));}
else{
t6=t5;
f_20945(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[486]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20970,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[487]));}
else{
t7=t6;
f_20970(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[488],((C_word*)((C_word*)t0)[12])[1],lf[489]));}}}

/* k20968 in k20931 in k20920 in do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20970,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_20936(2,t10,t9);}

/* k20943 in k20931 in k20920 in do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20945,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_20936(2,t8,t7);}

/* k20934 in k20931 in k20920 in do3485 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20912(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20872 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20881,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20910,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k20908 in k20872 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20910,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[400],lf[432],lf[401],t2,lf[403],t3,lf[405],t4,lf[406],t5));}

/* k20879 in k20872 in parse-general-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20513,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20520,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[482]);}

/* k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20520,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20526,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20754,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li310),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_20754(t25,t21,C_SCHEME_FALSE);}

/* do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20754(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20754,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20764(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t5,t6,((C_word*)t0)[4]);}}

/* k20762 in do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20764,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[481]));}
else{
t7=t6;
f_20775(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20773 in k20762 in do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20775,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20778,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[471]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20787,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20787(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[480]);
if(C_truep(t6)){
t7=t5;
f_20787(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[465]);
t8=t5;
f_20787(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[470])));}}}

/* k20785 in k20773 in k20762 in do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20787(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20787,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20790,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[473],((C_word*)((C_word*)t0)[9])[1],lf[474],((C_word*)((C_word*)t0)[10])[1],lf[475]));}
else{
t3=t2;
f_20790(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[456]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[476]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[465]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[477]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_20778(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[478],((C_word*)((C_word*)t0)[9])[1],lf[479]));}}}

/* k20788 in k20785 in k20773 in k20762 in do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20778(2,t7,t6);}

/* k20776 in k20773 in k20762 in do3418 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20754(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20752,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20748,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20748,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20537,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[465]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20554,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[469]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[470]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20630,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[211],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_20630(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)t0)[4]);
t9=t7;
f_20630(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20694,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_20694(t10,(C_word)C_eqp(t9,lf[472]));}
else{
t9=t8;
f_20694(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_20659(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k20692 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20694,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20659(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20659(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20657 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20659,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20675,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[471]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_20675(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_20675(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k20673 in k20657 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20675(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20675,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20537(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20628 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20630(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20630,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[209],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[341],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20537(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k20552 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[468]);}

/* k20555 in k20552 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t2,((C_word*)t0)[7],C_fix(0));}

/* k20619 in k20555 in k20552 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20621,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k20615 in k20619 in k20555 in k20552 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20617,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[466],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[92],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[467],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[346],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[317],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_20537(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k20535 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20537,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20544,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20548,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t4=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20546 in k20535 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20548,2,t0,t1);}
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[400],lf[432],lf[401],t1,lf[404],((C_word*)((C_word*)t0)[5])[1],lf[403],((C_word*)((C_word*)t0)[4])[1],lf[405],((C_word*)((C_word*)t0)[3])[1],lf[406],((C_word*)((C_word*)t0)[2])[1]));}

/* k20542 in k20535 in k20746 in k20750 in k20524 in k20518 in parse-sequence-iteration in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20466(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20466,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[462]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20481,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li307),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20499,a[2]=t2,a[3]=((C_word)li308),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a20498 in parse-repeat in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20499(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20499,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,t1,t2,t4);}

/* a20480 in parse-repeat in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[463]);}

/* k20491 in a20480 in parse-repeat in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20493,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[432],t1,lf[437],t2);
C_trace("ChickenBridge.scm: 375  parse-numerical-for");
t4=C_retrieve2(lf[431],"parse-numerical-for");
f_20084(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20084(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20084,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20094,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20293,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li305),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_20293(t31,t27,C_SCHEME_FALSE);}

/* do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20293(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20293,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20303(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t5,t6,((C_word*)t0)[6]);}}

/* k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20303,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[460]));}
else{
t7=t6;
f_20314(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20314,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20317,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[439]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[435]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20329,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[440],((C_word*)((C_word*)t0)[12])[1],lf[441],((C_word*)((C_word*)t0)[9])[1],lf[442]));}
else{
t7=t6;
f_20329(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[437]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20350,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[443],((C_word*)((C_word*)t0)[12])[1],lf[444],((C_word*)((C_word*)t0)[3])[1],lf[445]));}
else{
t8=t7;
f_20350(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[446]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20371,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[447],((C_word*)((C_word*)t0)[12])[1],lf[448],((C_word*)((C_word*)t0)[3])[1],lf[449]));}
else{
t9=t8;
f_20371(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[436]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20392,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[450],((C_word*)((C_word*)t0)[12])[1],lf[451],((C_word*)((C_word*)t0)[3])[1],lf[452]));}
else{
t10=t9;
f_20392(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[438]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20413,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[453],((C_word*)((C_word*)t0)[12])[1],lf[454],((C_word*)((C_word*)t0)[3])[1],lf[455]));}
else{
t11=t10;
f_20413(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[456]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20434,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[457]));}
else{
t12=t11;
f_20434(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[458],((C_word*)((C_word*)t0)[12])[1],lf[459]));}}}}}}}

/* k20432 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_20317(2,t6,t5);}

/* k20411 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20317(2,t7,t6);}

/* k20390 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20317(2,t7,t6);}

/* k20369 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20317(2,t7,t6);}

/* k20348 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20317(2,t7,t6);}

/* k20327 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20317(2,t7,t6);}

/* k20315 in k20312 in k20301 in do3319 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20293(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20097,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_20097(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[439]);
t5=t2;
f_20097(t5,t4);}}

/* k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20097(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20097,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20100,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[435]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20260,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_20260(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[438]);
t6=t4;
f_20260(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[436])));}}

/* k20258 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[94]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[436]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[345]);
t5=((C_word*)t0)[2];
f_20100(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[346]);
t5=((C_word*)t0)[2];
f_20100(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[92]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[437]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[338]);
t5=((C_word*)t0)[2];
f_20100(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[344]);
t5=((C_word*)t0)[2];
f_20100(t5,t4);}}}

/* k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20100,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20231,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20251,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k20249 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20251,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20103(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20229 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20231,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20103(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20103(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20103,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_20106(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20196,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[434]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_20106(t5,t4);}}

/* k20194 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t2,t1,C_SCHEME_FALSE);}

/* k20211 in k20194 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20213,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_20106(t8,t7);}

/* k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20106(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20106,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[433]);}
else{
t6=t5;
f_20113(t6,C_SCHEME_UNDEFINED);}}

/* k20143 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20148,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20163,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20179,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  make-binding");
f_19836(t3,t1,C_SCHEME_FALSE);}}

/* k20177 in k20143 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20179,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20148(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20161 in k20143 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20163,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20148(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20146 in k20143 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20148,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20113(t4,t3);}

/* k20111 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_20113(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20113,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20120,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20124,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t4=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20122 in k20111 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20128,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20126 in k20122 in k20111 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20128,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[400],lf[432],lf[401],((C_word*)t0)[2],lf[403],t1,lf[406],t2,lf[404],t4));}

/* k20118 in k20111 in k20104 in k20101 in k20098 in k20095 in k20092 in parse-numerical-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20002,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20006,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t5,t6,t4);}

/* k20004 in parse-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20006,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[424]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20024,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  loop-variable?");
f_19830(t4,t3);}}

/* k20022 in k20004 in parse-for in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_20024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20024,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[425]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[426],t6,lf[427],lf[428]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 375  loop-error");
f_19842(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[429],t2,lf[430]));}}

/* loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19842(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19842,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19898,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19850,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li302),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19850(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3270 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19850(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19850,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19860,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_19860(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_19860(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  loop-op?");
f_19824(t6,t8,((C_word*)t0)[2]);}}}

/* k19858 in do3270 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19860,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 375  reverse");
t2=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19850(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19901,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  newline");
t3=*((C_word*)lf[415]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  display");
t3=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[422]);}

/* k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19979,a[2]=t4,a[3]=((C_word)li301),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_19979(t6,t2,((C_word*)t0)[2]);}

/* do3280 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19979(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19979,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19989,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  display");
t5=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k19987 in do3280 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19979(t3,((C_word*)t0)[2],t2);}

/* k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  newline");
t3=*((C_word*)lf[415]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  display");
t3=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[421]);}

/* k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19916,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 375  display");
t3=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[417]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19933,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li300),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19933(t6,t2,((C_word*)t0)[2]);}}

/* do3285 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19933(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19933,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19943,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 375  display");
t5=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[420]);}
else{
t5=t3;
f_19943(2,t5,C_SCHEME_UNDEFINED);}}}

/* k19941 in do3285 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  display");
t4=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k19944 in k19941 in do3285 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[418]:lf[419]);
C_trace("ChickenBridge.scm: 375  display");
t6=*((C_word*)lf[416]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k19947 in k19944 in k19941 in do3285 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19933(t3,((C_word*)t0)[2],t2);}

/* k19914 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19919,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  newline");
t3=*((C_word*)lf[415]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19917 in k19914 in k19911 in k19908 in k19905 in k19902 in k19899 in k19896 in loop-error in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[414]);}

/* make-binding in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19836(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19836,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19830(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19830,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19824(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19824,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19753(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19753,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19755,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19794,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t5,t3,C_retrieve2(lf[390],"loop-bindings"));}

/* k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19798,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[391],"loop-collectors"));}

/* k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[392],"loop-initially"));}

/* k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[393],"loop-end-tests"));}

/* k19804 in k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[394],"loop-looping"));}

/* k19808 in k19804 in k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[396],"loop-stepping"));}

/* k19812 in k19808 in k19804 in k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[397],"loop-finally"));}

/* k19816 in k19812 in k19808 in k19804 in k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19822,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  gather-clause");
f_19755(t2,((C_word*)t0)[2],C_retrieve2(lf[398],"loop-returning"));}

/* k19820 in k19816 in k19812 in k19808 in k19804 in k19800 in k19796 in k19792 in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19822,2,t0,t1);}
C_trace("ChickenBridge.scm: 375  make-loop-clause");
f_19602(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[400],((C_word*)t0)[9],lf[401],((C_word*)t0)[8],lf[402],((C_word*)t0)[7],lf[403],((C_word*)t0)[6],lf[404],((C_word*)t0)[5],lf[405],((C_word*)t0)[4],lf[406],((C_word*)t0)[3],lf[407],((C_word*)t0)[2],lf[408],t1));}

/* gather-clause in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19755(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19755,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19761,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li294),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_19761(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3253 in gather-clause in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19761(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19761,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19772,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19783,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 375  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k19781 in do3253 in gather-clause in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19770 in do3253 in gather-clause in gather-clauses in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19761(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19602(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19602,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19617,a[2]=t5,a[3]=t3,a[4]=((C_word)li292),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_19617(t7,t1,t2);}}

/* do3241 in make-loop-clause in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19617(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19617,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19630,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[400]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 375  loop-operator-set!");
f_19500(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_19630(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[402]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_19630(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[403]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_19630(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[404]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_19630(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 375  loop-looping-set!");
f_19560(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_19630(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_19630(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_19630(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_19630(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k19628 in do3241 in make-loop-clause in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19617(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19590(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19590,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19578(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19578,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19566(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19566,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19560(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19560,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19554(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19554,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19542(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19542,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19530(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19530,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19518(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19518,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19506(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19506,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k19490 in k19487 in k19484 in k19481 in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19500(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19500,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19464(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19464,2,t0,t1);}
C_trace("ChickenBridge.scm: 374  print-error");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[388]);}

/* sal:open in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19458(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19458,2,t0,t1);}
C_trace("ChickenBridge.scm: 374  print-error");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[386]);}

/* sal:load in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19411(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19411,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19415,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  file-exists?");
t4=C_retrieve(lf[384]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19413 in sal:load in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19418,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19440,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[380]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[381],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_19440(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19431,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  string-append");
t4=*((C_word*)lf[146]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[382],((C_word*)t0)[2],lf[383]);}}

/* k19429 in k19413 in sal:load in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  print-error");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19438 in k19413 in sal:load in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  load-sal-file");
t2=C_retrieve(lf[378]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 374  load");
t2=C_retrieve(lf[379]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k19416 in k19413 in sal:load in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19402(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19402,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19406,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19404 in sal:chdir in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19249(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_19249r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_19249r(t0,t1,t2);}}

static void C_ccall f_19249r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19252,a[2]=t4,a[3]=((C_word)li275),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19371,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19376,a[2]=t4,a[3]=t8,a[4]=((C_word)li276),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19376(t10,t6,t2);}

/* do3068 in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19376(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19376,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  print-message");
t3=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[375]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19389,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_19252(t5,t3,t4,C_fix(0));}}

/* k19387 in do3068 in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19376(t3,((C_word*)t0)[2],t2);}

/* k19369 in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19252(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19252,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  print-message");
t5=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[368]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19280,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  print-message");
t6=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[371]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 374  print-message");
t6=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[372]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19352,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 374  print-message");
t6=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19368,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[373],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 374  print-message");
t5=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[374]);}}

/* k19366 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  print-message");
t2=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19350 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  print-message");
t2=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19278 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19283,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li274),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_19288(t6,t2,((C_word*)t0)[2]);}

/* do3060 in k19278 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19288(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19288,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19298,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 374  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_19252(t6,t3,t4,t5);}}

/* k19296 in do3060 in k19278 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19301(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 374  print-message");
t4=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[370]);}}

/* k19299 in k19296 in do3060 in k19278 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19288(t3,((C_word*)t0)[2],t2);}

/* k19281 in k19278 in printer in sal:print in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  print-message");
t2=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[369]);}

/* sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19072(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_19072,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19076,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[353]))){
C_trace("ChickenBridge.scm: 374  printf");
t8=C_retrieve(lf[332]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[365],t4);}
else{
t8=t7;
f_19076(2,t8,C_SCHEME_UNDEFINED);}}

/* k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19076,2,t0,t1);}
t2=C_mutate(&lf[350],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[278],"list->token"),t4);}

/* k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19081,2,t0,t1);}
t2=C_mutate(&lf[351],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_19084(t5,t4);}
else{
t4=t3;
f_19084(t4,C_SCHEME_FALSE);}}

/* k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19084(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19084,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[351],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16896,a[2]=t4,a[3]=t3,a[4]=((C_word)li272),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  call/cc");
t7=*((C_word*)lf[364]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a16895 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16896(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16896,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16902,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li270),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16909,a[2]=t2,a[3]=((C_word)li271),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a16908 in a16895 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16909,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16916,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_16916(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_16916(t6,C_SCHEME_FALSE);}}

/* k16914 in a16908 in a16895 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16916,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  add-emit-info");
f_16553(t2,lf[361],lf[362],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 374  make-parse-error");
f_16373(((C_word*)t0)[4],lf[363],C_retrieve2(lf[326],"*maxtokpos*"));}}

/* k16921 in k16914 in a16908 in a16895 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16901 in a16895 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16902,2,t0,t1);}
t2=lf[326]=C_fix(0);;
C_trace("ChickenBridge.scm: 374  parser");
f_16934(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19088,2,t0,t1);}
t2=C_mutate(&lf[352],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19091,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[352],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[294]))){
t5=C_retrieve2(lf[350],"*sal-string*");
t6=C_retrieve2(lf[352],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19125,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  parse-error-position");
f_16412(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 374  pp");
t5=C_retrieve(lf[359]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[352],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 374  eval");
t5=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[352],"*sal-output*"));}}}

/* k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19125,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19218,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li269),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19218(t11,t7,C_SCHEME_FALSE);}

/* do3033 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19218(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19218,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19228,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_19228(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_19228(t11,t10);}}}

/* k19226 in do3033 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19218(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19131,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19188,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li268),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_19188(t9,t5,C_SCHEME_FALSE);}

/* do3040 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19188(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19188,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19198,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_19198(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_19198(t11,t10);}}}

/* k19196 in do3040 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_19198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_19188(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19142,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19149,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  parse-error-string");
f_16394(t4,((C_word*)t0)[2]);}

/* k19151 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  make-string");
t3=*((C_word*)lf[357]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k19155 in k19151 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19161,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  substring");
t3=*((C_word*)lf[358]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19159 in k19155 in k19151 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19165,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  make-string");
t3=*((C_word*)lf[357]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k19163 in k19159 in k19155 in k19151 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19165,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19172,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 374  make-string");
t5=*((C_word*)lf[357]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k19170 in k19163 in k19159 in k19155 in k19151 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19172,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 374  string-append");
t5=*((C_word*)lf[146]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[356],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19147 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  print-error");
t2=C_retrieve(lf[355]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19140 in k19137 in k19129 in k19123 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k19089 in k19086 in k19082 in k19079 in k19074 in sal in k19063 in k19060 in k19057 in k19054 in k19051 in k18545 in k18542 in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_19091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18023,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18030,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_18036,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t33,t34,C_fix(23296));}

/* k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18036,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18040,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_18086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,t3,C_fix(10756));}}

/* k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18086,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18090,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_18183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,t3,C_fix(22784));}}

/* k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18183,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18187,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18251,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18251,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18258,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18508,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_18258(t8,t7);}}

/* k18506 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18258(t3,t2);}

/* k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18258,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18261,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18496,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k18494 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18261(t3,t2);}

/* k18445 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18447,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18451 in k18445 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18453,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_18261(t4,t3);}}

/* k18475 in k18451 in k18445 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18477,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18461,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18473,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k18471 in k18475 in k18451 in k18445 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k18459 in k18475 in k18451 in k18445 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18261(t3,t2);}

/* k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18261,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_18264(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18423,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[349]);}}

/* k18421 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18427,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18425 in k18421 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18264(t4,t3);}

/* k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18264,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18267(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18400,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[348]);}}

/* k18398 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18404,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18402 in k18398 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18267(t4,t3);}

/* k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18267,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_18270(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18377,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[347]);}}
else{
t3=t2;
f_18270(t3,C_SCHEME_UNDEFINED);}}

/* k18375 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18381,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18379 in k18375 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18270(t4,t3);}

/* k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18270,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18273,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18302,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_18273(t7,t6);}}

/* k18300 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18302,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[338],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18273(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k18318 in k18300 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18320,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[344],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18273(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18338,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k18336 in k18318 in k18300 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18338,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[345],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18273(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k18354 in k18336 in k18318 in k18300 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18356,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[346],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18273(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_18273(t2,C_SCHEME_UNDEFINED);}}

/* k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18277,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k18275 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in k18249 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18030(t3,t2);}

/* k18185 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18187,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18191,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k18189 in k18185 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18191,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[343]);}

/* k18193 in k18189 in k18185 in k18181 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18195,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_18030(t12,t11);}

/* k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18090,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18094,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 374  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18096 in k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18098,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18101,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18117,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_18101(t6,t5);}}

/* k18115 in k18096 in k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18117,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[342]);}

/* k18119 in k18115 in k18096 in k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18121,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[341],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_18101(t12,t11);}

/* k18099 in k18096 in k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18101,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18105,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 374  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k18103 in k18099 in k18096 in k18092 in k18088 in k18084 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18030(t3,t2);}

/* k18038 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18040,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[340]);}

/* k18042 in k18038 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18044,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18048,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[339]);}

/* k18046 in k18042 in k18038 in k18034 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_18048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18048,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[338],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_18030(t10,t9);}

/* k18028 in sal-parse-stepping in k18019 in k18016 in k18013 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17992 in k17989 in k17986 in k17983 in k17980 in k17977 in k17974 in k17971 in k17968 in k17965 in k17962 in k17959 in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_18030(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17845(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17845,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17857,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li265),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_17857(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17857(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17857,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17876,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  is-op?");
f_17824(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17876,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17879,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17894,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li264),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_17894(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_17879(2,t5,t4);}}

/* do2671 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17894(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17894,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17908,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17922,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  reverse");
t12=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17926,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 374  is-op?");
f_17824(t10,t11);}}

/* k17924 in do2671 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17926,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17929,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_17929(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_17929(t10,t9);}}

/* k17927 in k17924 in do2671 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17929(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_17894(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17920 in do2671 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  inf->pre");
f_17845(((C_word*)t0)[2],t1);}

/* k17906 in do2671 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17908,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17877 in k17874 in do2669 in inf->pre in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17857(t2,((C_word*)t0)[2]);}

/* is-op? in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17824(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17824,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17831,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  token-unit?");
f_16493(t3,t2);}

/* k17829 in is-op? in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17831,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17834,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k17832 in k17829 in is-op? in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17840,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  SalOpType?");
f_17601(t2,t1);}

/* k17838 in k17832 in k17829 in is-op? in k17820 in k17817 in k17814 in k17811 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17840,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17759(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17759,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17768,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li261),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_17768(t10,t1,t2);}

/* do2635 in remove-token-type in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17768(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17768,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17781,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17791,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  token-unit-type=?");
f_16509(t4,t5,((C_word*)t0)[2]);}}

/* k17789 in do2635 in remove-token-type in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17791,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17781(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_17781(t7,t6);}}

/* k17779 in do2635 in remove-token-type in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17781(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17768(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17715(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17715,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17703(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17703,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17601(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17601,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17553(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17553,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16934(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16934,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16938,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 374  printf");
t10=C_retrieve(lf[332]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[333],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_16938(2,t10,C_SCHEME_UNDEFINED);}}

/* k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  null-tokens?");
f_16113(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_16944(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17359,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17363,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17367,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  first-token");
f_16101(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k17365 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  token-position");
f_16060(((C_word*)t0)[2],t1);}

/* k17361 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  max");
t2=*((C_word*)lf[217]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[326],"*maxtokpos*"),t1);}

/* k17357 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[326],t1);
t3=((C_word*)t0)[2];
f_16944(t3,t2);}

/* k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16944(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16944,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  pattern-value");
t4=C_retrieve2(lf[190],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17067,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t3,((C_word*)t0)[8]);}}

/* k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17067,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16300,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t4,t3);}
else{
C_trace("ChickenBridge.scm: 374  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[331],((C_word*)t0)[2]);}}

/* k16298 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17073(t3,(C_word)C_eqp(t2,lf[315]));}
else{
t2=((C_word*)t0)[2];
f_17073(t2,C_SCHEME_FALSE);}}

/* k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17073(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17073,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 374  pattern-nsubs");
f_16273(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16316,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t5,t4);}}

/* k16314 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17161(t3,(C_word)C_eqp(t2,lf[316]));}
else{
t2=((C_word*)t0)[2];
f_17161(t2,C_SCHEME_FALSE);}}

/* k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17161,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17167,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 374  pattern-nsubs");
f_16273(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  pattern-zero-or-more?");
f_16341(t2,((C_word*)t0)[2]);}}

/* k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_17234(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16332,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t4,t3);}}

/* k16330 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17234(t3,(C_word)C_eqp(t2,lf[92]));}
else{
t2=((C_word*)t0)[2];
f_17234(t2,C_SCHEME_FALSE);}}

/* k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17234,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17240,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li253),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_17263(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16364,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t4,t3);}}

/* k16362 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17312(t3,(C_word)C_eqp(t2,lf[330]));}
else{
t2=((C_word*)t0)[2];
f_17312(t2,C_SCHEME_FALSE);}}

/* k17310 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17312(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17312,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17321,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17332,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li254),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17338,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li255),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[329],t3);}}

/* a17337 in k17310 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17338,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17331 in k17310 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17332,2,t0,t1);}
C_trace("ChickenBridge.scm: 374  parser");
f_16934(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17319 in k17310 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17263,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_17273(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 374  null-tokens?");
f_16113(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17273,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17276,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li251),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17299,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li252),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a17298 in k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17299(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17299,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17292 in k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17293,2,t0,t1);}
C_trace("ChickenBridge.scm: 374  parser");
f_16934(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17274 in k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17279,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17286,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_17279(t3,C_SCHEME_UNDEFINED);}}

/* k17284 in k17274 in k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17286,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_17279(t6,t5);}

/* k17277 in k17274 in k17271 in do2372 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17263(t2,((C_word*)t0)[2]);}

/* k17238 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17243,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17249,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  pattern-zero-or-more?");
f_16341(t3,((C_word*)t0)[2]);}

/* k17247 in k17238 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_17243(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_17243(t5,t4);}}

/* k17241 in k17238 in k17232 in k17229 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17170,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17185,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li250),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_17185(t6,t2,C_fix(0));}

/* do2352 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17185(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17185,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17195,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17204,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li248),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17218,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li249),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a17217 in do2352 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17218,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17203 in do2352 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17212,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  pattern-sub");
f_16283(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17210 in a17203 in do2352 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17212,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 374  parser");
f_16934(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17193 in do2352 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17195,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_17185(t3,((C_word*)t0)[2],t2);}

/* k17168 in k17165 in k17159 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17082,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17085,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li247),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_17104(t8,t4,C_fix(0));}

/* do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17104(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17104,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17117,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17137,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li245),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17151,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li246),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a17150 in do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17151,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17136 in do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  pattern-sub");
f_16283(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17143 in a17136 in do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17145,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 374  parser");
f_16934(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17115 in do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17120,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_17120(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_17120(t5,t4);}}

/* k17118 in k17115 in do2330 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17120,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_17104(t3,((C_word*)t0)[2],t2);}

/* k17083 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17088,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_17088(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17102,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  reverse");
t5=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17100 in k17083 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17088(t3,t2);}

/* k17086 in k17083 in k17080 in k17071 in k17065 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_17088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  SalTokenType?");
f_17553(t2,t1);}

/* k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16959,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16965,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  null-tokens?");
f_16113(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17017,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 374  SalRuleType?");
f_17703(t2,((C_word*)t0)[5]);}}

/* k17015 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17017,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 374  get-rule");
f_16231(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 374  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[328],((C_word*)t0)[2]);}}

/* k17018 in k17015 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17020,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[284]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[284]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li243),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17041,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li244),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a17040 in k17018 in k17015 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17041,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17052,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 374  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_17052(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k17050 in a17040 in k17018 in k17015 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a17030 in k17018 in k17015 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17031,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 374  parser");
f_16934(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16965,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  first-token");
f_16101(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16981,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17011,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  token-type");
f_16024(t3,t1);}

/* k17009 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k16979 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16981,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16996,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  token-type");
f_16024(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k16994 in k16979 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17000,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-string");
f_16042(t2,((C_word*)t0)[2]);}

/* k16998 in k16994 in k16979 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17004,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-position");
f_16060(t2,((C_word*)t0)[2]);}

/* k17002 in k16998 in k16994 in k16979 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_17004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16986 in k16979 in k16973 in k16963 in k16957 in k16951 in k16942 in k16939 in k16936 in parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16830(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16830,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16832,a[2]=t2,a[3]=((C_word)li241),tmp=(C_word)a,a+=4,tmp));}

/* f_16832 in simple-unit-emitter in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16832,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16836,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16880,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t6,t2);}

/* k16878 */
static void C_ccall f_16880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16834 */
static void C_ccall f_16836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16836,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16839,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_16839(t9,t8);}
else{
t6=t5;
f_16839(t6,C_SCHEME_UNDEFINED);}}

/* k16837 in k16834 */
static void C_fcall f_16839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16839,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16844,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li240),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16844(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2287 in k16837 in k16834 */
static void C_fcall f_16844(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16844,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16865,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16863 in do2287 in k16837 in k16834 */
static void C_ccall f_16865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16844(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16822(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16822,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16824,a[2]=t2,a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp));}

/* f_16824 in simple-unit-parser in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16824,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 374  make-parse-unit");
f_16424(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16614(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16614,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16631,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  emit");
f_16581(t5,t6,t3,t4);}}

/* k16629 in emit-list in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16635,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  emit-list");
f_16614(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16633 in k16629 in emit-list in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16635,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16581(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16581,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16588,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  token-unit?");
f_16493(t5,t2);}

/* k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16588,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16659,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16532,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit?");
f_16430(t4,t3);}}

/* k16530 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16532,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16539,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16597(2,t2,C_SCHEME_FALSE);}}

/* k16537 in k16530 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  SalRuleType?");
f_17703(((C_word*)t0)[2],t1);}

/* k16595 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16597,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16797,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16820,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 374  emit-list");
f_16614(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 374  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[322],((C_word*)t0)[4]);}}}

/* k16818 in k16595 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  get-rule");
f_16231(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16795 in k16595 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16797,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[284]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 374  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t4,((C_word*)t0)[4]);}}

/* k16811 in k16795 in k16595 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  emit");
f_16581(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-parsed");
f_16463(t2,((C_word*)t0)[2]);}

/* k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16662,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 374  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 374  string->symbol");
t8=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalOpType?");
f_17601(t8,((C_word*)t0)[4]);}}}

/* k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16686,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16737,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16743,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16749,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k16747 in k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16749,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k16756 in k16747 in k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16758,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k16765 in k16756 in k16747 in k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16767,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  string->symbol");
t2=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16776,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k16774 in k16765 in k16756 in k16747 in k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16776,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[318],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16785,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k16783 in k16774 in k16765 in k16756 in k16747 in k16741 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 374  string->symbol");
t2=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 374  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[319],((C_word*)t0)[2]);}}

/* k16735 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16692,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[118]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k16696 in k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16698,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[313]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k16702 in k16696 in k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16704,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[314]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16710,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k16708 in k16702 in k16696 in k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16710,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[315]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k16714 in k16708 in k16702 in k16696 in k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16716,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[316]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16722,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k16720 in k16714 in k16708 in k16702 in k16696 in k16690 in k16684 in k16660 in k16657 in k16586 in emit in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[317]);}
else{
C_trace("ChickenBridge.scm: 374  string->symbol");
t2=*((C_word*)lf[312]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16563(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16563,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16570,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_16570(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 374  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[310],t2);}}

/* k16568 in set-emit-info! in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16553(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16553,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16541(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16541,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16509(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16509,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16516,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 374  token-unit?");
f_16493(t4,t2);}

/* k16514 in token-unit-type=? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16516,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16521 in k16514 in token-unit-type=? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  SalType=?");
f_17715(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16493(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16493,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16500,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit?");
f_16430(t3,t2);}

/* k16498 in token-unit? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16500,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16507,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  parse-unit-type");
f_16445(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16505 in k16498 in token-unit? in k16489 in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 374  SalTokenType?");
f_17553(((C_word*)t0)[2],t1);}

/* parse-unit-position in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16481(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16481,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16463(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16463,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16445(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16445,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[298]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16430(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16430,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[298]));}

/* make-parse-unit in k16420 in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16424(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16424,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[298],t2,t3,t4));}

/* parse-error-position in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16412(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16412,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[294]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16394(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16394,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[294]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16373(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16373,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[294],t2,t3));}

/* pattern-zero-or-more? in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16341(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16341,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16348,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-clause?");
f_16255(t3,t2);}

/* k16346 in pattern-zero-or-more? in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[96]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16283(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16283,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16291,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 374  pattern-subs");
f_16267(t4,t2);}

/* k16289 in pattern-sub in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16273(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16273,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16281,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 374  pattern-subs");
f_16267(t3,t2);}

/* k16279 in pattern-nsubs in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16267(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16267,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16255(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16255,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16252(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16252,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k16227 in k16224 in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16231(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16231,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 374  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[282],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 374  hash-table-ref/default");
t4=C_retrieve(lf[287]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[282],"*rules*"),t3);}}

/* rule-name in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16144(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16144,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[284]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k16119 in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16123(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16123,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[284],t2,t3,t4,t5,t6));}

/* null-tokens? in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16113(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16113,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16101(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16101,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k16068 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16072(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16072,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[279]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[273],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[273],"make-token"),t2);}}

/* token-position in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16060(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16060,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16042(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16042,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_16024(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16024,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[274]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_16003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16003,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[274],t2,t3,t4));}

/* next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15909,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15913,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t3,t2);}

/* k15911 in next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15913,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15942,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[265]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 373  graph-node-datum");
f_15328(((C_word*)t0)[2],t6);}}

/* k15940 in k15911 in next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15942,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15947,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li205),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_15947(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2048 in k15940 in k15911 in next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15947(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15947,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15957,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_15957(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[272],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15972,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[265]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_15972(t12,t11);}
else{
t10=t5;
f_15972(t10,C_SCHEME_UNDEFINED);}}}

/* k15970 in do2048 in k15940 in k15911 in next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15947(t3,((C_word*)t0)[2],t2);}

/* k15955 in do2048 in k15940 in k15911 in next-in-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  graph-node-datum");
f_15328(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15391(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_15391r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15391r(t0,t1,t2,t3);}}

static void C_ccall f_15391r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15395,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15653,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15662,a[2]=t9,a[3]=((C_word)li203),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[271],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15662,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15666,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_15666(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[270],t2);}}

/* k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15671,a[2]=((C_word*)t0)[4],a[3]=((C_word)li202),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15671(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_15671r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15671r(t0,t1,t2,t3);}}

static void C_ccall f_15671r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15675,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_15675(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[268]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15813,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[268]);}
else{
t20=t19;
f_15813(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[269]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15848,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[269]);}
else{
t21=t20;
f_15848(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15877,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_15877(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k15875 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15877,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15892,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15890 in k15875 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15884(2,t2,C_SCHEME_UNDEFINED);}}

/* k15882 in k15875 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15675(t5,t4);}

/* k15846 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15852(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15850 in k15846 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15675(t7,t6);}

/* k15811 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15817(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15815 in k15811 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15675(t7,t6);}

/* k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15675(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15675,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15678,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15678(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15713,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[268]);}
else{
t6=t5;
f_15713(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[269]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15748,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[269]);}
else{
t7=t6;
f_15748(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15777,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15777(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15775 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15777,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15792,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15790 in k15775 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15784(2,t2,C_SCHEME_UNDEFINED);}}

/* k15782 in k15775 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15678(t5,t4);}

/* k15746 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15752(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15750 in k15746 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15678(t7,t6);}

/* k15711 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15717(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15715 in k15711 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15678(t7,t6);}

/* k15676 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15678(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15678,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15681,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15681(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15679 in k15676 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15684,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_15684(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_15684(t4,t3);}}

/* k15682 in k15679 in k15676 in k15673 in a15670 in k15664 in parse-graph-item in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15684,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[265],t5,t6,t7));}

/* k15651 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15395(2,t3,t2);}

/* k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15395,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15398,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15398(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[221]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15558,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 373  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[221]);}
else{
t18=t17;
f_15558(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[222]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15593,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[222]);}
else{
t19=t18;
f_15593(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15622,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15622(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15620 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15622,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15637,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15635 in k15620 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15629(2,t2,C_SCHEME_UNDEFINED);}}

/* k15627 in k15620 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15398(t5,t4);}

/* k15591 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15595 in k15591 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15398(t7,t6);}

/* k15556 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15560 in k15556 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15398(t7,t6);}

/* k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15398,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15401,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15401(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15458,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_15458(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15493,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_15493(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15522,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15522(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15520 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15522,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15537,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15535 in k15520 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15529(2,t2,C_SCHEME_UNDEFINED);}}

/* k15527 in k15520 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15401(t5,t4);}

/* k15491 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15495 in k15491 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15401(t7,t6);}

/* k15456 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15460 in k15456 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15401(t7,t6);}

/* k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15401,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15404,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15404(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k15405 in k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15407,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15413,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15419,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[267],"next-in-graph"),t5);}

/* a15418 in k15405 in k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15419,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15425,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15437,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t5,t3);}

/* k15435 in a15418 in k15405 in k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15424 in a15418 in k15405 in k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15425(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15425,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 373  graph-node-datum");
f_15328(t1,t2);}

/* k15411 in k15405 in k15402 in k15399 in k15396 in k15393 in make-graph in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15328(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15328,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14988(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14988,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14991,a[2]=t4,a[3]=((C_word)li194),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15170,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t6,t2);}

/* k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15174,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache");
f_9720(t2,((C_word*)t0)[4]);}

/* k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15174,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15176,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li197),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15176(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15176(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15176,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15186,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_15186(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_15186(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15101,a[2]=t13,a[3]=((C_word)li196),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_15101(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1874 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15101(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15101,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15111,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_15111(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_15111(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k15109 in do1874 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15111,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[96]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15118,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_15118(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_15118(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_15118(t9,(C_word)C_eqp(t8,lf[96]));}}}}

/* k15116 in k15109 in do1874 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_15101(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15186,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[263],((C_word*)t0)[6]);}
else{
t3=t2;
f_15189(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_15176(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k15187 in k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15193,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 373  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_14991(t7,t2,t4,t6);}

/* k15191 in k15187 in k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15193,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15196,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_15196(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_15196(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15213,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li195),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_15213(t8,t3,((C_word*)t0)[3]);}}}

/* do1898 in k15191 in k15187 in k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15213(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_15213,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15229,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k15227 in do1898 in k15191 in k15187 in k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k15194 in k15191 in k15187 in k15184 in do1889 in k15172 in k15168 in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14991(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14991,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15059,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  tb:ranf");
f_6685(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15003,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li193),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_15003(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1858 in select-output in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15003(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15003,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 373  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_14991(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15039,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_15039(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t9,t11);}}}

/* k15037 in do1858 in select-output in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15039,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_15003(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k15057 in select-output in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_15059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15059,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15064,a[2]=t3,a[3]=t1,a[4]=((C_word)li192),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15064(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1868 in k15057 in select-output in next-in-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_15064(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15064,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14501(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_14501r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14501r(t0,t1,t2,t3);}}

static void C_ccall f_14501r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14505,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14982,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14428,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li190),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_14428(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[262],((C_word*)t4)[1]);}}

/* do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14428(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14428,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14273,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_14273(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[261],((C_word*)t11)[1]);}}}

/* k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14273,2,t0,t1);}
t2=(C_word)C_i_member(lf[257],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14279,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_14279(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[259],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_14279(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 373  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[260],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14279,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14291,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14364,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li189),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_14364(t17,t13);}

/* do1737 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14364,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li188),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a14306 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14307(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14307,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14311,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_14311(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_14311(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_14311(t13,t12);}}

/* k14309 in a14306 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14311,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_14314(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_14314(t5,t4);}}

/* k14312 in k14309 in a14306 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14314(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14314,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k14292 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14305,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 373  reverse");
t3=*((C_word*)lf[169]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k14303 in k14292 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14305,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_14445(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[258],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14445(2,t10,t9);}}

/* k14443 in k14303 in k14292 in k14289 in k14277 in k14271 in do1759 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14445,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_14428(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k14980 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14505(2,t3,t2);}

/* k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14505,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14508,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14508(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[221]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14852,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[221]);}
else{
t22=t21;
f_14852(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[222]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14887,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 373  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[222]);}
else{
t23=t22;
f_14887(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[256]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14922,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[256]);}
else{
t24=t23;
f_14922(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14951,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14951(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14949 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14951,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14958,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14966,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14964 in k14949 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14958(2,t2,C_SCHEME_UNDEFINED);}}

/* k14956 in k14949 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14508(t5,t4);}

/* k14920 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14924 in k14920 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14508(t7,t6);}

/* k14885 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14891(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14889 in k14885 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14508(t7,t6);}

/* k14850 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14856(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14854 in k14850 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14508(t7,t6);}

/* k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14508,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14511(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14717,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_14717(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14752,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_14752(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[256]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14787,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[256]);}
else{
t8=t7;
f_14787(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14816,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14816(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14814 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14816,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14831,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14829 in k14814 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14823(2,t2,C_SCHEME_UNDEFINED);}}

/* k14821 in k14814 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14511(t5,t4);}

/* k14785 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14791(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14789 in k14785 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14511(t7,t6);}

/* k14750 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14756(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14754 in k14750 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14511(t7,t6);}

/* k14715 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14721(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14719 in k14715 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14511(t7,t6);}

/* k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14511,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14514,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14514(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14582,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_14582(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14617,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_14617(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[256]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14652,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[256]);}
else{
t8=t7;
f_14652(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14681,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14681(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14679 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14681,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14696,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14694 in k14679 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14688(2,t2,C_SCHEME_UNDEFINED);}}

/* k14686 in k14679 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14514(t5,t4);}

/* k14650 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14654 in k14650 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14514(t7,t6);}

/* k14615 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14619 in k14615 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14514(t7,t6);}

/* k14580 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14586(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14584 in k14580 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14514(t7,t6);}

/* k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14514,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14517,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14517(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14520,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14526,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14553,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[255],"next-in-markov"),t4);}

/* a14552 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14553,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14561,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k14559 in a14552 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14524 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14529(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14539,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 373  make-list");
t7=C_retrieve(lf[61]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[96]);}}

/* k14537 in k14524 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14529(t3,t2);}

/* k14527 in k14524 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14529(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14529,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14530 in k14527 in k14524 in k14518 in k14515 in k14512 in k14509 in k14506 in k14503 in make-markov in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14068(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14068,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14072,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t3,t2);}

/* k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}

/* k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14078,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-flags");
f_9486(t2,((C_word*)t0)[2]);}

/* k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14078,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14247,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t4,t1,C_fix(4));}

/* k14245 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14247,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_14084(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  period-count");
f_9336(t2,((C_word*)t0)[2]);}}

/* k14258 in k14245 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  period-length");
f_9354(t2,((C_word*)t0)[2]);}

/* k14262 in k14258 in k14245 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 373  recalc-weightings");
f_13956(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_14084(2,t2,C_SCHEME_UNDEFINED);}}

/* k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_14090(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14221,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14240,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-count");
f_13106(t4,((C_word*)t0)[4]);}}

/* k14238 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14240,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 373  random-item-count-set!");
f_13097(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14219 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-count");
f_13106(t2,((C_word*)t0)[2]);}

/* k14226 in k14219 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14232,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-min");
f_13070(t2,((C_word*)t0)[2]);}

/* k14230 in k14226 in k14219 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_14090(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14090(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14090,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  random-item-datum");
f_13016(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14096,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache");
f_9720(t2,((C_word*)t0)[2]);}}

/* k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14096,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14100,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14138,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14180,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  pick");
f_14100(t7,t2,t1);}

/* k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14180,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li185),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_14182(t5,((C_word*)t0)[2],t1);}

/* do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14182(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14182,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14201,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14204,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-max");
f_13088(t4,t2);}

/* k14202 in do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14204,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-count");
f_13106(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14201(t2,C_SCHEME_FALSE);}}

/* k14209 in k14202 in do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14215,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-max");
f_13088(t2,((C_word*)t0)[2]);}

/* k14213 in k14209 in k14202 in do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_14201(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k14199 in do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14201,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14197,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pick");
f_14100(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k14195 in k14199 in do1711 in k14178 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_14182(t2,((C_word*)t0)[2],t1);}

/* k14136 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14141,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_14141(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14155,a[2]=t5,a[3]=((C_word)li184),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_14155(t7,t2,((C_word*)t0)[2]);}}

/* do1715 in k14136 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14155(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14155,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14165,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 373  random-item-count-set!");
f_13097(t3,t4,C_fix(0));}}

/* k14163 in do1715 in k14136 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14155(t3,((C_word*)t0)[2],t2);}

/* k14139 in k14136 in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 373  random-item-datum");
f_13016(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14100(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14100,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14108,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  tb:ranf");
f_6685(t4,t3);}

/* k14106 in pick in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14108,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14110,a[2]=t3,a[3]=((C_word)li182),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_14110(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1706 in k14106 in pick in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14110(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14110,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14131,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 373  random-item-index");
f_13034(t4,t5);}

/* k14129 in do1706 in k14106 in pick in k14094 in k14088 in k14082 in k14076 in k14073 in k14070 in next-in-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14110(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13956(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13956,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14066,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t2);}

/* k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14066,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[253];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13963,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14025,a[2]=t7,a[3]=t4,a[4]=((C_word)li180),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_14025(t9,t5,t2);}

/* do1678 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_14025(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14025,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14054,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14058,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 373  random-item-weight");
f_13052(t4,t5);}}

/* k14056 in do1678 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(((C_word*)t0)[2],t1);}

/* k14052 in do1678 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14054,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14039,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 373  random-item-index-set!");
f_13025(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k14037 in k14052 in do1678 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14025(t3,((C_word*)t0)[2],t2);}

/* k13961 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13963,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13971,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li179),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13971(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1684 in k13961 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13971(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13971,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14004,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14016,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 373  random-item-index");
f_13034(t8,t9);}}

/* k14014 in do1684 in k13961 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14016,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 373  floor");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k14002 in do1684 in k13961 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_14004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14004,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 373  random-item-index-set!");
f_13025(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k13986 in k14002 in do1684 in k13961 in k14064 in recalc-weightings in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13971(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13189(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_13189r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13189r(t0,t1,t2,t3);}}

static void C_ccall f_13189r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13193,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13506,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13506(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13506,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13513,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_13513(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_13513(t9,t8);}}

/* k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13513,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13516,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13516(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[250]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13819,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[250]);}
else{
t22=t21;
f_13819(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[251]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13854,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 373  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[251]);}
else{
t23=t22;
f_13854(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[252]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13889,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[252]);}
else{
t24=t23;
f_13889(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13918,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_13918(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13916 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13918,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13933,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13931 in k13916 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13925(2,t2,C_SCHEME_UNDEFINED);}}

/* k13923 in k13916 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13516(t5,t4);}

/* k13887 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13893(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13891 in k13887 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13516(t7,t6);}

/* k13852 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13856 in k13852 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13516(t7,t6);}

/* k13817 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13821 in k13817 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13516(t7,t6);}

/* k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13516,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13519(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[250]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13684,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[250]);}
else{
t6=t5;
f_13684(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13719,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[251]);}
else{
t7=t6;
f_13719(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[252]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13754,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[252]);}
else{
t8=t7;
f_13754(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13783,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13783(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13781 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13783,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13798,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13796 in k13781 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13790(2,t2,C_SCHEME_UNDEFINED);}}

/* k13788 in k13781 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13519(t5,t4);}

/* k13752 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13758(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13756 in k13752 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13519(t7,t6);}

/* k13717 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13723(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13721 in k13717 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13519(t7,t6);}

/* k13682 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13688(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13686 in k13682 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13519(t7,t6);}

/* k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13519,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13522,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13522(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[250]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13549,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[250]);}
else{
t6=t5;
f_13549(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13584,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[251]);}
else{
t7=t6;
f_13584(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[252]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13619,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[252]);}
else{
t8=t7;
f_13619(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13648,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13648(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13646 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13648,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13663,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13661 in k13646 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13655(2,t2,C_SCHEME_UNDEFINED);}}

/* k13653 in k13646 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13522(t5,t4);}

/* k13617 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13623(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13621 in k13617 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13522(t7,t6);}

/* k13582 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13588(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13586 in k13582 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13522(t7,t6);}

/* k13547 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13553(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13551 in k13547 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13522(t7,t6);}

/* k13520 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13522,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13525,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13525(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k13523 in k13520 in k13517 in k13514 in k13511 in %make-random-item in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13525,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[239],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13196,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13202,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13470,a[2]=t8,a[3]=t6,a[4]=((C_word)li176),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13470(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13470,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13474,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  random-item-min");
f_13070(t3,t2);}

/* k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  random-item-max");
f_13088(t2,((C_word*)t0)[2]);}

/* k13475 in k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  random-item-weight");
f_13052(t2,((C_word*)t0)[2]);}

/* k13478 in k13475 in k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13483,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  random-item-datum");
f_13016(t2,((C_word*)t0)[2]);}

/* k13481 in k13478 in k13475 in k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13496,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t1);}

/* k13494 in k13481 in k13478 in k13475 in k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13496,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_13486(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_13486(t2,C_SCHEME_UNDEFINED);}}

/* k13484 in k13481 in k13478 in k13475 in k13472 in a13469 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13202,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13209,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_13209(t8,t7);}
else{
t6=t5;
f_13209(t6,C_SCHEME_UNDEFINED);}}

/* k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13209,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_13212,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13212(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[221]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13376,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 373  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[221]);}
else{
t18=t17;
f_13376(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[222]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13411,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[222]);}
else{
t19=t18;
f_13411(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13440,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_13440(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13438 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13440,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13455,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13453 in k13438 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13447(2,t2,C_SCHEME_UNDEFINED);}}

/* k13445 in k13438 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13212(t5,t4);}

/* k13409 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13415(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13413 in k13409 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13212(t7,t6);}

/* k13374 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13380(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13378 in k13374 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13212(t7,t6);}

/* k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13212(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13212,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13215,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13215(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13276,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_13276(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13311,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_13311(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13340,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13340(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13338 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13340,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13347,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13355,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13353 in k13338 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13347(2,t2,C_SCHEME_UNDEFINED);}}

/* k13345 in k13338 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13215(t5,t4);}

/* k13309 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13313 in k13309 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13215(t7,t6);}

/* k13274 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13280(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13278 in k13274 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13215(t7,t6);}

/* k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13215(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13215,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13218,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13218(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13221,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13233,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[249],"next-in-weighting"),t4);}

/* a13232 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13233,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13239,a[2]=t2,a[3]=((C_word)li174),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13255,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t5,t3);}

/* k13253 in a13232 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a13238 in a13232 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13239(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13239,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13247,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  random-item-datum");
f_13016(t3,t2);}

/* k13245 in a13238 in a13232 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k13219 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  recalc-weightings");
f_13956(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_13224(2,t3,C_SCHEME_UNDEFINED);}}

/* k13222 in k13219 in k13216 in k13213 in k13210 in k13207 in k13200 in k13194 in k13191 in make-weighting in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_13224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13106(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13106,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13097(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13097,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[239]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13088(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13088,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13070(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13070,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13052(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13052,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13034(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13034,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13025(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13025,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[239]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_13016(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13016,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[239]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12794(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12794,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12797,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12844,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t2);}

/* k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12847,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12870,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12989,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache");
f_9720(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_12847(t4,C_SCHEME_UNDEFINED);}}

/* k12987 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(((C_word*)t0)[2],t1);}

/* k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12877,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12924,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 373  pattern-length");
f_9522(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12951,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  pattern-length");
f_9522(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12970,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-length");
f_9522(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12985,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-length");
f_9522(t3,((C_word*)t0)[2]);}}

/* k12983 in k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12985,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  rotate-items");
t3=((C_word*)t0)[5];
f_12797(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12968 in k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12970,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  rotate-items");
t3=((C_word*)t0)[5];
f_12797(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12949 in k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12951,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  rotate-items");
t3=((C_word*)t0)[6];
f_12797(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k12922 in k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12924,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 373  rotate-items");
t4=((C_word*)t0)[7];
f_12797(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12875 in k12868 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12847(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k12845 in k12842 in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12797(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12797,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12803,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li163),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_12803(t10,t1,t3);}

/* do1446 in rotate-items in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12803(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12803,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12819,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 373  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k12817 in do1446 in rotate-items in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12822,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 373  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k12820 in k12817 in do1446 in rotate-items in next-in-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12822,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12803(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12320(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_12320r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12320r(t0,t1,t2,t3);}}

static void C_ccall f_12320r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12324,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12784,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_12324(t8,t7);}}

/* k12782 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12324(t3,t2);}

/* k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12324(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12324,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12327,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12327(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[221]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12657,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[221]);}
else{
t22=t21;
f_12657(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[222]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12692,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 373  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[222]);}
else{
t23=t22;
f_12692(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[237]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12727,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[237]);}
else{
t24=t23;
f_12727(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12756,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_12756(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12754 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12756,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12771,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12769 in k12754 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12763(2,t2,C_SCHEME_UNDEFINED);}}

/* k12761 in k12754 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12327(t5,t4);}

/* k12725 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12731(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12729 in k12725 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12327(t7,t6);}

/* k12690 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12696(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12694 in k12690 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12327(t7,t6);}

/* k12655 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12659 in k12655 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12327(t7,t6);}

/* k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12327,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12330(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12522,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12522(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12557,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12557(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12592,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[237]);}
else{
t8=t7;
f_12592(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12621,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12621(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12619 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12621,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12636,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12634 in k12619 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12628(2,t2,C_SCHEME_UNDEFINED);}}

/* k12626 in k12619 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12330(t5,t4);}

/* k12590 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12596(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12594 in k12590 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12330(t7,t6);}

/* k12555 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12561(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12559 in k12555 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12330(t7,t6);}

/* k12520 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12526(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12524 in k12520 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12330(t7,t6);}

/* k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12330,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12333,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12333(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12387,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12387(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12422,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12422(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12457,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[237]);}
else{
t8=t7;
f_12457(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12486,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12486(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12484 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12486,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12501,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12499 in k12484 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12493(2,t2,C_SCHEME_UNDEFINED);}}

/* k12491 in k12484 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12333(t5,t4);}

/* k12455 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12461(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12459 in k12455 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12333(t7,t6);}

/* k12420 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12426(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12424 in k12420 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12333(t7,t6);}

/* k12385 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12389 in k12385 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12333(t7,t6);}

/* k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12333,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12336,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12336(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12339,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k12337 in k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12339,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12345,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12354,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[236],"next-in-rotation"),t5);}

/* a12353 in k12337 in k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12354,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12366,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k12364 in a12353 in k12337 in k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12343 in k12337 in k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12346 in k12343 in k12337 in k12334 in k12331 in k12328 in k12325 in k12322 in make-rotation in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12244,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12248,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t3,t2);}

/* k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12251,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12267,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-length");
f_9522(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_12251(2,t4,C_SCHEME_UNDEFINED);}}

/* k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12267,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12277,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  tb:rani");
f_6678(t3,t1);}

/* k12275 in k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12277,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12279,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li159),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_12279(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1346 in k12275 in k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_12279(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12279,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12296,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 373  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k12294 in do1346 in k12275 in k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12299,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k12297 in k12294 in do1346 in k12275 in k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12299,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12310,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  tb:rani");
f_6678(t3,((C_word*)t0)[2]);}

/* k12308 in k12297 in k12294 in do1346 in k12275 in k12265 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12279(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k12249 in k12246 in next-in-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11981(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11981r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11981r(t0,t1,t2,t3);}}

static void C_ccall f_11981r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11985,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12234,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11985(t8,t7);}}

/* k12232 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11985(t3,t2);}

/* k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11985(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11985,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11988,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11988(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[221]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12142,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 373  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[221]);}
else{
t18=t17;
f_12142(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[222]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12177,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[222]);}
else{
t19=t18;
f_12177(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12206,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_12206(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k12204 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12206,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12221,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12219 in k12204 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12213(2,t2,C_SCHEME_UNDEFINED);}}

/* k12211 in k12204 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11988(t5,t4);}

/* k12175 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12181,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12181(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12179 in k12175 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11988(t7,t6);}

/* k12140 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12146(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12144 in k12140 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11988(t7,t6);}

/* k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11988,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11991,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11991(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12042,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_12042(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12077,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_12077(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12106,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_12106(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k12104 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12106,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12121,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12119 in k12104 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12113(2,t2,C_SCHEME_UNDEFINED);}}

/* k12111 in k12104 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11991(t5,t4);}

/* k12075 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12081(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12079 in k12075 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11991(t7,t6);}

/* k12040 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12046(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12044 in k12040 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11991(t7,t6);}

/* k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11991(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11991,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11994(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11992 in k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k11995 in k11992 in k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11997,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12003,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12009,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[234],"next-in-heap"),t5);}

/* a12008 in k11995 in k11992 in k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12009(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12009,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12021,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k12019 in a12008 in k11995 in k11992 in k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12001 in k11995 in k11992 in k11989 in k11986 in k11983 in make-heap in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_12003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11945(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11945,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11949,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t3,t2);}

/* k11947 in next-in-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11949,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11958,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11965,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11971,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 373  pattern-data-set!");
f_9495(t4,((C_word*)t0)[2],t5);}}

/* k11969 in k11947 in next-in-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k11963 in k11947 in next-in-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[2],t1,C_fix(1));}

/* k11956 in k11947 in next-in-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11698(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11698r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11698r(t0,t1,t2,t3);}}

static void C_ccall f_11698r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11702,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11702(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11702(t8,t7);}}

/* k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11702,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11705,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11705(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[221]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11851,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 373  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[221]);}
else{
t18=t17;
f_11851(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[222]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11886,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[222]);}
else{
t19=t18;
f_11886(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11915,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11915(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11913 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11915,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11930,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11928 in k11913 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11922(2,t2,C_SCHEME_UNDEFINED);}}

/* k11920 in k11913 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11705(t5,t4);}

/* k11884 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11890(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11888 in k11884 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11705(t7,t6);}

/* k11849 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11855(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11853 in k11849 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11705(t7,t6);}

/* k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11705,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11708,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11708(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11751,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11751(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11786,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11786(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11815,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11815(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11813 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11815,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11830,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11828 in k11813 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11822(2,t2,C_SCHEME_UNDEFINED);}}

/* k11820 in k11813 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11708(t5,t4);}

/* k11784 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11790(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11788 in k11784 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11708(t7,t6);}

/* k11749 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11755(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11753 in k11749 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11708(t7,t6);}

/* k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11708,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11711,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11711(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11709 in k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k11712 in k11709 in k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11714,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11720,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11722,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[232],"next-in-line"),t4);}

/* a11721 in k11712 in k11709 in k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11722(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11722,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11730,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k11728 in a11721 in k11712 in k11709 in k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11718 in k11712 in k11709 in k11706 in k11703 in k11700 in make-line in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11483(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11483,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11487,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-cache");
f_9720(t3,t2);}

/* k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11487,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[224]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11493,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11517,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[224]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11696,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  palin-len");
f_10924(t8,t1);}}

/* k11694 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11696,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11649,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  palin-inc-set!");
f_10933(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_11493(2,t2,C_SCHEME_UNDEFINED);}}

/* k11647 in k11694 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11649,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[224]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_11661(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_11661(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_11661(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_11661(t7,C_SCHEME_FALSE);}}}

/* k11659 in k11647 in k11694 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11661,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11493(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11493(2,t4,t3);}}

/* k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  palin-len");
f_10924(t2,((C_word*)t0)[2]);}

/* k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11520,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[224]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t7=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 373  palin-inc-set!");
f_10933(t2,((C_word*)t0)[2],C_fix(1));}

/* k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11617,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_11617(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_11617(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_11617(t5,C_SCHEME_FALSE);}}}

/* k11615 in k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11532(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_11532(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11532(t3,t2);}}

/* k11530 in k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11532,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11611,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-flags");
f_9486(t3,((C_word*)t0)[2]);}

/* k11609 in k11530 in k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(((C_word*)t0)[2],t1,C_fix(2));}

/* k11536 in k11530 in k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11538,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_11493(2,t2,C_SCHEME_UNDEFINED);}}

/* k11539 in k11536 in k11530 in k11527 in k11524 in k11518 in k11515 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11541,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[229]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[230]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],t1,t2);}}}}

/* k11491 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[224]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[224]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t9=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k11494 in k11491 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11503,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t2,((C_word*)t0)[2]);}

/* k11501 in k11494 in k11491 in k11485 in next-in-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11013(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11013r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11013r(t0,t1,t2,t3);}}

static void C_ccall f_11013r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11017,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11017(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11017(t8,t7);}}

/* k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11017(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11017,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11020,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_11020(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[221]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11354,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[221]);}
else{
t22=t21;
f_11354(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[222]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11389,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 373  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[222]);}
else{
t23=t22;
f_11389(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[228]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11424,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[228]);}
else{
t24=t23;
f_11424(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11453,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 373  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_11453(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11451 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11453,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11468,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11466 in k11451 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11460(2,t2,C_SCHEME_UNDEFINED);}}

/* k11458 in k11451 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11020(t5,t4);}

/* k11422 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11426 in k11422 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11020(t7,t6);}

/* k11387 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11391 in k11387 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11020(t7,t6);}

/* k11352 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11358(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11356 in k11352 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11020(t7,t6);}

/* k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11023(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11219,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11219(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11254,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11254(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[228]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11289,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[228]);}
else{
t8=t7;
f_11289(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11318,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11318(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11316 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11318,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11333,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11331 in k11316 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11325(2,t2,C_SCHEME_UNDEFINED);}}

/* k11323 in k11316 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11023(t5,t4);}

/* k11287 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11293(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11291 in k11287 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11023(t7,t6);}

/* k11252 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11258(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11256 in k11252 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11023(t7,t6);}

/* k11217 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11223(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11221 in k11217 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11023(t7,t6);}

/* k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11023,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11026,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_11026(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11084,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_11084(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11119,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_11119(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[228]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11154,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[228]);}
else{
t8=t7;
f_11154(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11183,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11183(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11181 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11183,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11198,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11196 in k11181 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11190(2,t2,C_SCHEME_UNDEFINED);}}

/* k11188 in k11181 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11026(t5,t4);}

/* k11152 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11158,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11158(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11156 in k11152 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11026(t7,t6);}

/* k11117 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11123(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11121 in k11117 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11026(t7,t6);}

/* k11082 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11088(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11086 in k11082 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11026(t7,t6);}

/* k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_11026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11026,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11029,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11029(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k11030 in k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11032,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11038,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11055,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[227],"next-in-palindrome"),t5);}

/* a11054 in k11030 in k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11055,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11063,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k11061 in a11054 in k11030 in k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11036 in k11030 in k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11041,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[224],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 373  pattern-cache-set!");
f_9711(t2,((C_word*)t0)[4],t5);}

/* k11039 in k11036 in k11030 in k11027 in k11024 in k11021 in k11018 in k11015 in make-palindrome in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_11041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10933(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10933,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[224]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10924(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10924,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[224]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10852,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10856,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t3,t2);}

/* k10854 in next-in-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10859,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_10859(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_10859(t4,C_SCHEME_UNDEFINED);}}

/* k10857 in k10854 in next-in-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10597(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10597r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10597r(t0,t1,t2,t3);}}

static void C_ccall f_10597r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10601,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10601(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10601(t8,t7);}}

/* k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10601,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10604,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10604(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[221]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10758,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 373  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[221]);}
else{
t18=t17;
f_10758(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[222]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10793,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[222]);}
else{
t19=t18;
f_10793(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10822,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 373  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_10822(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10820 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10822,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10837,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10835 in k10820 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10829(2,t2,C_SCHEME_UNDEFINED);}}

/* k10827 in k10820 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10604(t5,t4);}

/* k10791 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10797(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10795 in k10791 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10604(t7,t6);}

/* k10756 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10762(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10760 in k10756 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10604(t7,t6);}

/* k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10604,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10607,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10607(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[221]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10658,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 373  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[221]);}
else{
t6=t5;
f_10658(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[222]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10693,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[222]);}
else{
t7=t6;
f_10693(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10722,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 373  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10722(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10720 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10722,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10737,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10735 in k10720 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10729(2,t2,C_SCHEME_UNDEFINED);}}

/* k10727 in k10720 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10607(t5,t4);}

/* k10691 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10695 in k10691 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10607(t7,t6);}

/* k10656 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10662,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 373  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10662(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10660 in k10656 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10607(t7,t6);}

/* k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10607(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10607,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10610,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10610(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 373  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10608 in k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10613,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  %alloc-pattern");
f_9775(t2);}

/* k10611 in k10608 in k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10613,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10619,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10625,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  initialize-pattern");
f_9785(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[220],"next-in-cycle"),t5);}

/* a10624 in k10611 in k10608 in k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10625(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10625,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10637,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data");
f_9504(t4,t3);}

/* k10635 in a10624 in k10611 in k10608 in k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[219]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10617 in k10611 in k10608 in k10605 in k10602 in k10599 in make-cycle in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10482(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10482,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10595,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t2);}

/* k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10595,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10492,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10495,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10580,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-stream");
f_9372(t7,t1);}

/* k10578 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10580,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10591,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  period-stream");
f_9372(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_10495(2,t2,C_SCHEME_UNDEFINED);}}

/* k10589 in k10578 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(((C_word*)t0)[2],t1);}

/* k10585 in k10578 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[171]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t4=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 373  period-length");
f_9354(t2,((C_word*)t0)[3]);}

/* k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10577,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10503,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[171]);
t7=t4;
f_10503(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 373  period-length");
f_9354(t4,((C_word*)t0)[3]);}}

/* k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10503,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10506,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10512,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10567,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-flags");
f_9486(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_10512(2,t5,C_SCHEME_FALSE);}}

/* k10565 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(((C_word*)t0)[2],t1,C_fix(8));}

/* k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10512,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10531,a[2]=t3,a[3]=((C_word)li144),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  map-pattern-data");
f_10436(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10506(t2,C_SCHEME_UNDEFINED);}}

/* a10530 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10531(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10531,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10560,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  reset-period");
f_10482(t3,t2);}

/* k10558 in a10530 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10560,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k10539 in k10558 in a10530 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10556,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-omit");
f_9408(t3,t1);}

/* k10554 in k10539 in k10558 in a10530 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10556,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  period-omit-set!");
f_9399(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10542 in k10539 in k10558 in a10530 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10544,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k10513 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10515,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 373  max");
t4=*((C_word*)lf[217]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_10506(t2,C_SCHEME_UNDEFINED);}}

/* k10523 in k10513 in k10510 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10506(t3,t2);}

/* k10504 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10506(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10506,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k10507 in k10504 in k10501 in k10575 in k10493 in k10490 in k10593 in reset-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10436(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10436,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[181]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10427(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10427,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[181]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10126(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10126,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10133,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t2);}

/* k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10133,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 373  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  promise?");
t3=C_retrieve(lf[216]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k10420 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  force");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10136,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10139,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10407,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  period-count");
f_9336(t5,t1);}

/* k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10407,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10399,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  period-reps");
f_9426(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_10139(2,t2,C_SCHEME_UNDEFINED);}}

/* k10397 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10399,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10391,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-value-set!");
f_9567(t5,((C_word*)t0)[4],lf[210]);}
else{
t5=((C_word*)t0)[2];
f_10362(t5,C_SCHEME_UNDEFINED);}}

/* k10389 in k10397 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-state-set!");
f_9585(t2,((C_word*)t0)[2],lf[208]);}

/* k10392 in k10389 in k10397 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[210]);
t3=((C_word*)t0)[2];
f_10362(t3,t2);}

/* k10360 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10362(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10362,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_10368(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10385,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  reset-period");
f_10482(t4,((C_word*)t0)[2]);}}

/* k10383 in k10360 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10368(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k10366 in k10360 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10368(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10368,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[196]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-value-set!");
f_9567(t3,((C_word*)t0)[2],lf[196]);}
else{
t2=((C_word*)t0)[3];
f_10139(2,t2,C_SCHEME_UNDEFINED);}}

/* k10370 in k10366 in k10360 in k10405 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  pattern-state-set!");
f_9585(((C_word*)t0)[3],((C_word*)t0)[2],lf[208]);}

/* k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10139,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-flags");
f_9486(t2,((C_word*)t0)[3]);}}

/* k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10145,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10151,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10237,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t10,t1,C_fix(1));}

/* k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10237,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10240,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10253,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  next-in-pattern");
f_10427(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10260,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10349,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t3,((C_word*)t0)[2],C_fix(8));}}

/* k10347 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10349,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10356,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  period-length");
f_9354(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10260(t2,C_SCHEME_FALSE);}}

/* k10354 in k10347 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10260(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10260,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li140),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_10262(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10262(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10262,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10311,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li139),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10311(t9,t5);}}

/* do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10311,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum");
f_9540(t2,((C_word*)t0)[3]);}

/* k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10346,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[196]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10321,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10328,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10335,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  next-in-pattern");
f_10427(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 373  next-in-pattern");
f_10427(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10480,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t2,t1);}

/* k10478 in k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10480,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-period");
f_9558(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10328(2,t2,((C_word*)t0)[2]);}}

/* k10453 in k10478 in k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10476,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  period-omit");
f_9408(t2,t1);}

/* k10474 in k10453 in k10478 in k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10476,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10464,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10472,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-omit");
f_9408(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_10328(2,t2,((C_word*)t0)[2]);}}

/* k10470 in k10474 in k10453 in k10478 in k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10472,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  period-omit-set!");
f_9399(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10462 in k10474 in k10453 in k10478 in k10333 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10328(2,t2,lf[196]);}

/* k10326 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  pattern-datum-set!");
f_9531(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10319 in k10344 in do998 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_10311(t2,((C_word*)t0)[2]);}

/* k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10309,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum");
f_9540(t3,((C_word*)t0)[3]);}

/* k10307 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(((C_word*)t0)[2],t1);}

/* k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10273,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10292,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10305,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum");
f_9540(t5,((C_word*)t0)[3]);}

/* k10303 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(((C_word*)t0)[2],t1);}

/* k10290 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10292,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10300,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum");
f_9540(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[208]);
t3=((C_word*)t0)[3];
f_10276(t3,t2);}}

/* k10298 in k10290 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  pattern-state");
f_9594(((C_word*)t0)[2],t1);}

/* k10294 in k10290 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10276(t3,t2);}

/* k10274 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10279,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[196]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 373  pattern-datum-set!");
f_9531(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_10279(2,t5,t4);}}

/* k10277 in k10274 in k10271 in k10267 in do994 in k10258 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10262(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10251 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  pattern-datum-set!");
f_9531(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10238 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10249,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum");
f_9540(t3,((C_word*)t0)[2]);}

/* k10247 in k10238 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(((C_word*)t0)[2],t1);}

/* k10242 in k10238 in k10235 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[208]);
t4=((C_word*)t0)[2];
f_10151(2,t4,t3);}

/* k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[208]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10196,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10208,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-count");
f_9336(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10231,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t5,((C_word*)t0)[2],C_fix(64));}}

/* k10229 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 373  pattern-datum-set!");
f_9531(((C_word*)t0)[3],((C_word*)t0)[2],lf[196]);}
else{
t2=((C_word*)t0)[3];
f_10211(2,t2,C_SCHEME_UNDEFINED);}}

/* k10209 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t2,((C_word*)t0)[2],C_fix(16));}

/* k10215 in k10209 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10217,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-count");
f_9336(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10154(2,t2,C_SCHEME_UNDEFINED);}}

/* k10226 in k10215 in k10209 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10228,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10206 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10208,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 373  period-count-set!");
f_9327(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10194 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-datum-set!");
f_9531(t2,((C_word*)t0)[2],lf[196]);}

/* k10197 in k10194 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_10154(2,t3,t2);}

/* k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10157,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10190,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  period-count");
f_9336(t3,((C_word*)t0)[2]);}

/* k10188 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10190,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[208]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  period-reps");
f_9426(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_10157(2,t3,t2);}}

/* k10183 in k10188 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10185,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[171]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k10155 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10170,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_10160(t3,C_SCHEME_UNDEFINED);}}

/* k10168 in k10155 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10160(t3,t2);}

/* k10158 in k10155 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  pattern-state-set!");
f_9585(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10161 in k10158 in k10155 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern-value-set!");
f_9567(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k10164 in k10161 in k10158 in k10155 in k10152 in k10149 in k10143 in k10137 in k10134 in k10131 in next-1 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10003(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_10003r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_10003r(t0,t1,t2,t3);}}

static void C_ccall f_10003r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10024,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li136),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_10024(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10062,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t1,t2);}}

/* k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10062,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k10070 in k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10072,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10074,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li137),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_10074(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do970 in k10070 in k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10074(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10074,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[210]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10093,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10103,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  eop?");
t13=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k10101 in do970 in k10070 in k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10103,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_10093(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10108,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t2,((C_word*)t0)[2]);}}

/* k10106 in k10101 in do970 in k10070 in k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10093(t3,t2);}

/* k10091 in do970 in k10070 in k10060 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_10074(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do963 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_10024(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10024,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10056,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 373  next-1");
f_10126(t4,((C_word*)t0)[2]);}}

/* k10054 in do963 in next in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_10056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10056,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_10024(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9984(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9984,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9991,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t2);}

/* k9989 in eod? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9991,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9998,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-value");
t3=C_retrieve2(lf[190],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[210]));}}

/* k9996 in k9989 in eod? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  eod?");
t2=C_retrieve(lf[209]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9965(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9965,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9972,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t2);}

/* k9970 in eop? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9972,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9979,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 373  pattern-state");
f_9594(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[208]));}}

/* k9977 in k9970 in eop? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  eop?");
t2=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9785(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9785,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9789,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 373  pattern-data-set!");
f_9495(t12,t2,t3);}

/* k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t6=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t6=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t6=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9798,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9801,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9955,a[2]=t3,a[3]=((C_word)li132),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  map-pattern-data");
f_10436(t4,t5,((C_word*)t0)[7]);}

/* a9954 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9955(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9955,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9962,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  pattern?");
f_9471(t3,t2);}

/* k9960 in a9954 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_9804(t5,t4);}
else{
t3=t2;
f_9804(t3,C_SCHEME_UNDEFINED);}}

/* k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9804,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[197]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9810(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[204]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9810(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[205],t4);}}}

/* k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9810,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[198]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9816(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[202]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9816(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 373  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[203],t4);}}}

/* k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9879,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k9877 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9879,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[200]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9819(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 373  bitwise-test");
f_6501(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k9891 in k9877 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9893,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[201]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9819(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9819(t4,t3);}}

/* k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9819,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9822,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t8=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k9820 in k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9822,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9828,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_9828(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_9828(t8,t7);}}

/* k9826 in k9820 in k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9828,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9831,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9841,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 373  make-period");
f_9315(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 373  make-period");
f_9315(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k9839 in k9826 in k9820 in k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t4=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k9829 in k9826 in k9820 in k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9834,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t6=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k9832 in k9829 in k9826 in k9820 in k9817 in k9814 in k9808 in k9802 in k9799 in k9796 in k9793 in k9790 in k9787 in initialize-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 373  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9775(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9775,NULL,1,t1);}
t2=lf[196];
t3=lf[196];
t4=lf[196];
t5=lf[197];
t6=lf[198];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[181],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9720(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9720,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9711(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9711,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9594(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9594,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9585(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9585,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_9576 in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9576(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9576,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9567(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9567,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9558(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9558,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9540(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9540,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9531(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9531,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9522(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9522,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9504(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9504,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9495(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9495,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[181]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9486(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9486,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[181]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9471(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9471,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[181]));}

/* period-reps in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9426(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9426,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[171]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9408(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9408,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[171]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9399(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9399,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[171]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9372(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9372,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[171]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9354(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9354,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[171]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9336(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9336,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[171]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9327(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9327,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[171]);
C_trace("ChickenBridge.scm: 373  ##sys#block-set!");
t5=*((C_word*)lf[173]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9315(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9315,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[171],t2,t3,t4,t5,t6,t7));}

/* transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9007,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 372  modulo");
t7=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9053,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  key");
t5=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9060,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9108,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_9108(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 372  key");
t6=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 372  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[167],t2);}}}

/* k9106 in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9108,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9125,a[2]=t1,a[3]=((C_word)li107),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 372  transpkeys");
f_9060(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9153,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9157,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  key");
t5=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k9155 in k9106 in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  transpkeys");
f_9060(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k9151 in k9106 in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  note");
t2=C_retrieve(lf[156]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a9124 in k9106 in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9125(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9125,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 372  modulo");
t4=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9060(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9060,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9069,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li105),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_9069(t8,t1,t2,t4);}

/* do668 in transpkeys in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_9069(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_9069,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k9051 in transpose in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_9053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9053,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 372  note");
t3=C_retrieve(lf[156]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8872,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 372  modulo");
t4=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 372  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[164],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8902,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8972,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 372  invkeys");
f_8902(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8994,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8998,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  key");
t7=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 372  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[165],t2);}}}

/* k8996 in invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  invkeys");
f_8902(((C_word*)t0)[2],t1);}

/* k8992 in invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  note");
t2=C_retrieve(lf[156]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8971 in invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8972(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8972,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 372  modulo");
t4=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8902(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8902,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8918,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li101),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8918(t9,t1,t5,t4);}

/* do653 in invkeys in invert in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8918(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8918,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8827,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 372  modulo");
t3=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[162]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8859,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  key");
t5=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8870,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  key");
t4=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k8868 in pc in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  modulo");
t2=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k8857 in pc in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[162]),t1);}

/* hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8711,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8726,a[2]=t5,a[3]=t3,a[4]=((C_word)li98),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8726(t7,t1,t2,lf[161],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 372  tb:keynum->hertz");
f_6654(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8825,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8823 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do633 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8726(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8726,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8739,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8756,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8756(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8756(t14,(C_word)C_i_listp(t13));}}}

/* k8754 in do633 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8756,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8760,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 372  hz");
t4=C_retrieve(lf[160]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8775,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8773 in k8754 in do633 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8775,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8739(t9,t8);}

/* k8758 in k8754 in do633 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8760,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8739(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8737 in do633 in hz in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8739(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8726(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8589(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8589,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8604,a[2]=t5,a[3]=t3,a[4]=((C_word)li96),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8604(t7,t1,t2,lf[159],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub243(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8709,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8707 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do617 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8604(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8604,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8617,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8634,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8634(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8634(t14,(C_word)C_i_numberp(t13));}}}

/* k8632 in do617 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8634(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8634,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8638,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 372  key");
t4=C_retrieve(lf[158]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8653,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8651 in k8632 in do617 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8653,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8617(t9,t8);}

/* k8636 in k8632 in do617 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8638,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8617(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8615 in do617 in key in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8604(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8492,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8507,a[2]=t5,a[3]=t3,a[4]=((C_word)li94),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8507(t7,t1,t2,lf[157],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8587,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k8585 in note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do603 in note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8507(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8507,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8520,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8538,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 372  note");
t13=C_retrieve(lf[156]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8553,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 372  note-aux");
f_8439(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k8551 in do603 in note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8553,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_8520(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k8536 in do603 in note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8538,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8520(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8518 in do603 in note in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8507(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8439(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8439,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8389,a[2]=t6,a[3]=t7,a[4]=((C_word)li91),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[143],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8437,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  floor");
t9=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8462,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 372  string->note-entry");
f_8337(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8477,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 372  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k8475 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8477,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 372  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[155],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k8482 in k8475 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  string->note-entry");
f_8337(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8460 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  string->note-entry");
f_8337(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8435 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8437,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[151]))){
t5=t4;
f_8409(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[152]);
t6=t4;
f_8409(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[153]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k8407 in k8435 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8409,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li92),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[143],"*notes*"),t1,t2);}

/* a8410 in k8407 in k8435 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8411,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 372  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[150],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a8388 in note-aux in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8389,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 372  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[149],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8337(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8337,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8341,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8374,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[143],"*notes*"),t2,t6);}

/* a8373 in string->note-entry in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8374,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k8339 in string->note-entry in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8341,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8357,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  string-append");
t4=*((C_word*)lf[146]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 372  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[147],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k8355 in k8339 in string->note-entry in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li88),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[143],"*notes*"),t1,t2);}

/* a8358 in k8355 in k8339 in string->note-entry in k8333 in k8330 in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8359,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 372  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[145],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* rangamma in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8309(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8309r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8309r(t0,t1,t2);}}

static void C_ccall f_8309r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 372  tb:rangamma");
f_6752(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 372  tb:rangamma");
f_6752(t1,t3);}}

/* ranpoisson in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8290(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8290r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8290r(t0,t1,t2);}}

static void C_ccall f_8290r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[139])))){
C_trace("ChickenBridge.scm: 372  tb:ranpoisson");
f_6762(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 372  tb:ranpoisson");
f_6762(t1,t3);}}

/* rangauss in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8249(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8249r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8249r(t0,t1,t2);}}

static void C_ccall f_8249r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 372  tb:rangauss");
f_6723(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 372  tb:rangauss");
f_6723(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 372  tb:rangauss");
f_6723(t1,t4,t5);}}}

/* ranexp in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8230(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8230r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8230r(t0,t1,t2);}}

static void C_ccall f_8230r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 372  tb:ranexp");
f_6734(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 372  tb:ranexp");
f_6734(t1,t3);}}

/* ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8002(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_8002r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8002r(t0,t1,t2);}}

static void C_ccall f_8002r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[132];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8006,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_8006(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[133]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8143,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[133]);}
else{
t19=t18;
f_8143(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[134]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8178,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[134]);}
else{
t20=t19;
f_8178(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8207,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_8207(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k8205 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8207,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8222,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8220 in k8205 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8214(2,t2,C_SCHEME_UNDEFINED);}}

/* k8212 in k8205 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8006(t5,t4);}

/* k8176 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8180 in k8176 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8006(t7,t6);}

/* k8141 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8145 in k8141 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8006(t7,t6);}

/* k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8009,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8009(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[133]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8043,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[133]);}
else{
t6=t5;
f_8043(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[134]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8078,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[134]);}
else{
t7=t6;
f_8078(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8107,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8107(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8105 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8107,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8122,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8120 in k8105 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8114(2,t2,C_SCHEME_UNDEFINED);}}

/* k8112 in k8105 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8009(t5,t4);}

/* k8076 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8082(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8080 in k8076 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8009(t7,t6);}

/* k8041 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8047(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8045 in k8041 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8009(t7,t6);}

/* k8007 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8009,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8012,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8012(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8010 in k8007 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_8012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_8015(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_8015(t5,t4);}}

/* k8013 in k8010 in k8007 in k8004 in ranbeta in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_8015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8015,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub296(t5,t6,t7));}

/* odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7771(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7771r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7771r(t0,t1,t2,t3);}}

static void C_ccall f_7771r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7775,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7775(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[126]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7912,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[126]);}
else{
t20=t19;
f_7912(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[127]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7947,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[127]);}
else{
t21=t20;
f_7947(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7976,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7976(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7974 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7976,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7991,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7989 in k7974 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7983(2,t2,C_SCHEME_UNDEFINED);}}

/* k7981 in k7974 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7775(t5,t4);}

/* k7945 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7951(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7949 in k7945 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7775(t7,t6);}

/* k7910 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7916,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7916(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7914 in k7910 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7775(t7,t6);}

/* k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7775(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7775,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7778,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7778(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[126]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7812,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[126]);}
else{
t6=t5;
f_7812(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[127]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7847,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[127]);}
else{
t7=t6;
f_7847(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7876,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7876(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7874 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7876,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7891,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7889 in k7874 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7883(2,t2,C_SCHEME_UNDEFINED);}}

/* k7881 in k7874 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7778(t5,t4);}

/* k7845 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7849 in k7845 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7778(t7,t6);}

/* k7810 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7814 in k7810 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7778(t7,t6);}

/* k7776 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7778(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7778,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7781,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7781(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7779 in k7776 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7791,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 372  tb:ranf");
f_6685(t2,lf[125]);}

/* k7789 in k7779 in k7776 in k7773 in odds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7728(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_7728r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7728r(t0,t1,t2);}}

static void C_ccall f_7728r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7746,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 372  tb:rani");
f_6678(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7761,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 372  tb:rani");
f_6678(t4,t5);}}

/* k7759 in pick in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k7744 in pick in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7707,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub262(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub268(t9,t10,t11));}}

/* ran in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7672(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_7672r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7672r(t0,t1,t2);}}

static void C_ccall f_7672r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7676,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_7676(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_7676(t7,t6);}}

/* k7674 in ran in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7676(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 372  tb:rani");
f_6678(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 372  tb:ranf");
f_6685(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 372  tb:ranf");
f_6685(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_7564r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7564r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7564r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7571,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_7571(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7651,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 372  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[119],((C_word*)t8)[1]);}
else{
t15=t14;
f_7651(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_7571(t11,C_SCHEME_UNDEFINED);}}

/* k7649 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7571(t4,t3);}

/* k7569 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7571(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7571,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li77),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_7580(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do442 in k7569 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7580(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7580,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7593,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7627,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  fit");
t10=C_retrieve(lf[114]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_7593(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k7625 in do442 in k7569 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7593(t3,t2);}

/* k7591 in do442 in k7569 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7593,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7619,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 372  modulo");
t7=*((C_word*)lf[118]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k7617 in k7591 in do442 in k7569 in scale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7619,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_7580(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7431(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_7431r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_7431r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_7431r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7435,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_7435(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_7435(t12,t11);}}

/* k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7435,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_7438(t6,t5);}
else{
t3=t2;
f_7438(t3,C_SCHEME_UNDEFINED);}}

/* k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7438,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7440,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7542,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li75),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 372  fit1");
f_7440(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7541 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7542(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7542,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 372  fit1");
f_7440(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7440(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7440,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7447,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 372  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k7445 in fit1 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7447,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7470,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 372  remainder");
t9=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7489,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 372  remainder");
t8=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 372  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[116],((C_word*)t0)[2]);}}}

/* k7487 in k7445 in fit1 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[94]+1):*((C_word*)lf[92]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 372  -");
C_minus(3,0,t2,t1);}}

/* k7494 in k7487 in k7445 in fit1 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7496,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k7468 in k7445 in fit1 in k7436 in k7433 in fit in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7470,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* interp in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7404(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7404r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7404r(t0,t1,t2,t3);}}

static void C_ccall f_7404r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[108]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 372  interpl");
t5=C_retrieve(lf[108]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_7309r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_7309r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7309r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7313,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 372  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[112],t3);}
else{
t6=t5;
f_7313(2,t6,(C_word)C_i_car(t3));}}

/* k7311 in interpl in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7313,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 372  err");
t6=C_retrieve(lf[110]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[111],((C_word*)t0)[4]);}
else{
t6=t4;
f_7316(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k7314 in k7311 in interpl in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7316,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7328,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li71),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_7328(t14,((C_word*)t0)[2],t10);}

/* do403 in k7314 in k7311 in interpl in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7328(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7328,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 372  tb:rescale");
f_6542(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7350,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 372  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[109],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_7350(2,t13,t12);}}}

/* k7348 in do403 in k7314 in k7311 in interpl in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7328(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7294(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7294,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 372  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_6647(3,t3,t1,t2);}}

/* cents->ratio in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7279(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7279,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 372  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_6640(3,t3,t1,t2);}}

/* rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7043(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7043r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7043r(t0,t1,t2,t3);}}

static void C_ccall f_7043r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[102];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[103];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7047,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7047(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[104]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7192,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[104]);}
else{
t20=t19;
f_7192(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[105]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7227,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[105]);}
else{
t21=t20;
f_7227(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7256,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7256(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7254 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7256,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7271,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7269 in k7254 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7263(2,t2,C_SCHEME_UNDEFINED);}}

/* k7261 in k7254 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7047(t5,t4);}

/* k7225 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7231(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7229 in k7225 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7047(t7,t6);}

/* k7190 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7194 in k7190 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7047(t7,t6);}

/* k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7047,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7050,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7050(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7092,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[104]);}
else{
t6=t5;
f_7092(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[105]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7127,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[105]);}
else{
t7=t6;
f_7127(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7156,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7156(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7154 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7156,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7171,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7169 in k7154 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7163(2,t2,C_SCHEME_UNDEFINED);}}

/* k7161 in k7154 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7050(t5,t4);}

/* k7125 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7129 in k7125 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7050(t7,t6);}

/* k7090 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7096(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7094 in k7090 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7050(t7,t6);}

/* k7048 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_7050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7053,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7053(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7051 in k7048 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7053,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li67),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 372  tb:rhythm->seconds");
f_6625(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7063 in k7051 in k7048 in k7045 in rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7064(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7064,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 372  tb:rhythm->seconds");
f_6625(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_7024r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_7024r(t0,t1,t2,t3);}}

static void C_ccall f_7024r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 372  tb:decimals");
f_6603(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 372  tb:decimals");
f_6603(t1,t2,t4);}}

/* quantize in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7003(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7003,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7015,a[2]=t3,a[3]=((C_word)li64),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 372  tb:quantize");
f_6614(t1,t2,t3);}}

/* a7014 in quantize in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_7015(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7015,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 372  tb:quantize");
f_6614(t1,t2,((C_word*)t0)[2]);}

/* minus in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6977(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6977r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6977r(t0,t1,t2,t3);}}

static void C_ccall f_6977r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}
else{
C_trace("ChickenBridge.scm: 372  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[94]+1),t2,t3);}}

/* plus in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6935(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6935r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6935r(t0,t1,t2);}}

static void C_ccall f_6935r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[92]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[92]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[92]+1),t2);}}}

/* int in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6920,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[67],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 372  tb:int");
t3=C_retrieve2(lf[67],"tb:int");
f_6596(3,t3,t1,t2);}}

/* discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_6809r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6809r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6809r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6813,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_6813(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6884,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 372  not?");
t20=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_6813(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_6813(t19,t18);}}}

/* k6882 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_6813(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_6813(t2,C_SCHEME_UNDEFINED);}}

/* k6811 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6813(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6813,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6827,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li58),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6842,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  tb:discrete");
f_6569(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6853,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li59),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 372  tb:discrete");
f_6569(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a6852 in k6811 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6853(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6853,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 372  tb:discrete");
f_6569(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6840 in k6811 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a6826 in k6811 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6827,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6835,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 372  tb:discrete");
f_6569(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6833 in a6826 in k6811 in discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6775(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6775r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6775r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6775r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6787,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li56),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 372  tb:rescale");
f_6542(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 372  tb:rescale");
f_6542(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6786 in rescale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6787(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6787,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[87]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6772,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub316(t2));}

/* tb:ranpink in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6769,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub313(t2));}

/* tb:ranpoisson in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6762(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6762,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub310(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6759,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub306(t2));}

/* tb:rangamma in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6752(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6752,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub302(t3,t4));}

/* tb:ranexp in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6734(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6734,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub290(t3,t4));}

/* tb:rangauss in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6723(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6723,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub284(t4,t5,t6));}

/* tb:ranmiddle in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6720,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub279(t2));}

/* tb:ranhigh in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6717,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub276(t2));}

/* tb:ranlow in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6714,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub273(t2));}

/* tb:ranf in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6685(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6685,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub256(t3,t4));}

/* tb:rani in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6678(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6678,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub252(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6675(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6675,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub248(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6654(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6654,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub234(t3,t4));}

/* tb:scaler->cents in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6647(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6647,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub230(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6640(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6640,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub225(t3,t4));}

/* tb:rhythm->seconds in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6625(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6625,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub218(t5,t6,t7,t8));}

/* tb:quantize in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6614(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6614,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub210(t4,t5,t6));}

/* tb:decimals in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6603(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6603,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub203(t4,t5,t6));}

/* tb:int in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6596(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6596,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub198(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6569(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6569,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub189(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6542(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6542,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub174(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6501(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6501,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6507,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li32),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6507(t9,t1,C_SCHEME_FALSE);}

/* do143 in bitwise-test in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6507(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6507,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6517,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6517(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6517(t7,t6);}}
else{
t5=t4;
f_6517(t5,C_SCHEME_UNDEFINED);}}}

/* k6515 in do143 in bitwise-test in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6517,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6507(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6415(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6415r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6415r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6415r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[63],"list-prop"),t7,t3,t4);}}}

/* make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6316(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_6316r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6316r(t0,t1,t2,t3);}}

static void C_ccall f_6316r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6320,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 371  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[62],t2);}
else{
t5=t4;
f_6320(2,t5,C_SCHEME_UNDEFINED);}}

/* k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6320,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6322,a[2]=t3,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6345,a[2]=t5,a[3]=((C_word)li29),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 371  l1");
t8=((C_word*)t3)[1];
f_6322(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 371  l2");
t9=((C_word*)t5)[1];
f_6345(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 371  l1");
t10=((C_word*)t3)[1];
f_6322(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6345(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6345,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6362,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k6360 in l2 in k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6366,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 371  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_6345(t4,t2,t3,((C_word*)t0)[2]);}

/* k6364 in k6360 in l2 in k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6366,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_6322(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6322,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6339,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 371  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6337 in l1 in k6318 in make-list in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6339,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6306,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6266(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6266r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6266r(t0,t1,t2);}}

static void C_ccall f_6266r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 371  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6296,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6294 in list* in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6296,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6128(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6128,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6162,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 371  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6160 in butlast in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6162,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6105,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 371  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6099(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6099,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6084,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6070(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6070,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6060(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6060,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6050(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6050,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6040(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6040,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6030(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6030,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6001(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6001r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6001r(t0,t1,t2);}}

static void C_ccall f_6001r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6010,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6010 in chdir in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_6010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6010,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6015,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6015(2,t4,C_SCHEME_FALSE);}}

/* k6013 */
static void C_ccall f_6015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5995,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5995 in cwd in k5986 in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5995,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5697,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5977,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5966,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5975,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5707,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 277  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5707(2,t11,t2);}}

/* k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5710,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5958,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 278  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a5957 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5958,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5713(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 279  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5713,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5728,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5728(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_5728(t9,C_SCHEME_FALSE);}}

/* k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_5728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5728,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5738,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 293  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5738,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5740(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_5740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5740,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5752,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5752(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5793,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5799(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 308  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5799,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5793(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5853,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5926,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 329  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5809,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 319  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5809(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5807 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5809,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5793(t9,t8);}

/* k5924 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5926,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5899,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 334  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5853(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5912,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5914,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 330  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5913 in k5924 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5914(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5914,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 338  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5910 in k5924 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 336  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5897 in k5924 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k5851 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5853,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5859,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5859(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5880,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 345  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5878 in k5851 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 344  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k5857 in k5851 in k5797 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5793(t6,t5);}

/* k5791 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_5793(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5740(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_5752(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5752,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5765,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5765(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5765(t5,C_SCHEME_UNDEFINED);}}}

/* k5763 in do69 in do63 in k5736 in k5726 in k5711 in k5708 in k5705 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_fcall f_5765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5752(t3,((C_word*)t0)[2],t2);}

/* f_5975 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5975(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5975,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5966 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5966(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5966,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5974,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 275  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5972 */
static void C_ccall f_5974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 275  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_5977 in expand-send in k5693 in k5690 in k5686 in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5977(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5977r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5977r(t0,t1,t2,t3);}}

static void C_ccall f_5977r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5985,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k5983 */
static void C_ccall f_5985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 271  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5399,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5560,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5652,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5651 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5652,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5666,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5670,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 223  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5681,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5685,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 224  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5683 in a5651 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 224  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5679 in a5651 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5681,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5668 in a5651 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 223  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5664 in a5651 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5666,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5563,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 226  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 227  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5569,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5646,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5645 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5646(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5646,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5412,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5471,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 187  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5469 in a5645 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 187  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5410 in a5645 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5412,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5576,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5622,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5636,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5635 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5636(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5636,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5620 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5622,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 233  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5586 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5592,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5596,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5613 in k5586 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5614(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5614,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5549,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5547 in a5613 in k5586 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5549,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k5594 in k5586 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5596,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5590 in k5586 in k5574 in k5567 in k5564 in k5561 in k5558 in expand-optkeys in k5395 in k5392 in k5389 in k5386 */
static void C_ccall f_5592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5592,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2282] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5388ChickenBridge.scm",(void*)f_5388},
{"f_5391ChickenBridge.scm",(void*)f_5391},
{"f_5394ChickenBridge.scm",(void*)f_5394},
{"f_5397ChickenBridge.scm",(void*)f_5397},
{"f_34056ChickenBridge.scm",(void*)f_34056},
{"f_5688ChickenBridge.scm",(void*)f_5688},
{"f_5692ChickenBridge.scm",(void*)f_5692},
{"f_34004ChickenBridge.scm",(void*)f_34004},
{"f_34051ChickenBridge.scm",(void*)f_34051},
{"f_34041ChickenBridge.scm",(void*)f_34041},
{"f_34008ChickenBridge.scm",(void*)f_34008},
{"f_5695ChickenBridge.scm",(void*)f_5695},
{"f_33998ChickenBridge.scm",(void*)f_33998},
{"f_5988ChickenBridge.scm",(void*)f_5988},
{"f_8332ChickenBridge.scm",(void*)f_8332},
{"f_33782ChickenBridge.scm",(void*)f_33782},
{"f_33996ChickenBridge.scm",(void*)f_33996},
{"f_33816ChickenBridge.scm",(void*)f_33816},
{"f_33828ChickenBridge.scm",(void*)f_33828},
{"f_33832ChickenBridge.scm",(void*)f_33832},
{"f_33836ChickenBridge.scm",(void*)f_33836},
{"f_33980ChickenBridge.scm",(void*)f_33980},
{"f_33842ChickenBridge.scm",(void*)f_33842},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33865ChickenBridge.scm",(void*)f_33865},
{"f_33873ChickenBridge.scm",(void*)f_33873},
{"f_33880ChickenBridge.scm",(void*)f_33880},
{"f_33883ChickenBridge.scm",(void*)f_33883},
{"f_33887ChickenBridge.scm",(void*)f_33887},
{"f_33894ChickenBridge.scm",(void*)f_33894},
{"f_33897ChickenBridge.scm",(void*)f_33897},
{"f_33901ChickenBridge.scm",(void*)f_33901},
{"f_33908ChickenBridge.scm",(void*)f_33908},
{"f_33852ChickenBridge.scm",(void*)f_33852},
{"f_33805ChickenBridge.scm",(void*)f_33805},
{"f_33795ChickenBridge.scm",(void*)f_33795},
{"f_33798ChickenBridge.scm",(void*)f_33798},
{"f_8335ChickenBridge.scm",(void*)f_8335},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_33776ChickenBridge.scm",(void*)f_33776},
{"f_33780ChickenBridge.scm",(void*)f_33780},
{"f_16070ChickenBridge.scm",(void*)f_16070},
{"f_16121ChickenBridge.scm",(void*)f_16121},
{"f_33758ChickenBridge.scm",(void*)f_33758},
{"f_33766ChickenBridge.scm",(void*)f_33766},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_33655ChickenBridge.scm",(void*)f_33655},
{"f_33718ChickenBridge.scm",(void*)f_33718},
{"f_33722ChickenBridge.scm",(void*)f_33722},
{"f_33736ChickenBridge.scm",(void*)f_33736},
{"f_33658ChickenBridge.scm",(void*)f_33658},
{"f_33678ChickenBridge.scm",(void*)f_33678},
{"f_33682ChickenBridge.scm",(void*)f_33682},
{"f_16229ChickenBridge.scm",(void*)f_16229},
{"f_33641ChickenBridge.scm",(void*)f_33641},
{"f_33649ChickenBridge.scm",(void*)f_33649},
{"f_33653ChickenBridge.scm",(void*)f_33653},
{"f_16422ChickenBridge.scm",(void*)f_16422},
{"f_33615ChickenBridge.scm",(void*)f_33615},
{"f_33619ChickenBridge.scm",(void*)f_33619},
{"f_33625ChickenBridge.scm",(void*)f_33625},
{"f_33636ChickenBridge.scm",(void*)f_33636},
{"f_33632ChickenBridge.scm",(void*)f_33632},
{"f_16491ChickenBridge.scm",(void*)f_16491},
{"f_33593ChickenBridge.scm",(void*)f_33593},
{"f_17736ChickenBridge.scm",(void*)f_17736},
{"f_33573ChickenBridge.scm",(void*)f_33573},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_33533ChickenBridge.scm",(void*)f_33533},
{"f_17742ChickenBridge.scm",(void*)f_17742},
{"f_33439ChickenBridge.scm",(void*)f_33439},
{"f_33443ChickenBridge.scm",(void*)f_33443},
{"f_33446ChickenBridge.scm",(void*)f_33446},
{"f_33464ChickenBridge.scm",(void*)f_33464},
{"f_33467ChickenBridge.scm",(void*)f_33467},
{"f_33498ChickenBridge.scm",(void*)f_33498},
{"f_33470ChickenBridge.scm",(void*)f_33470},
{"f_33476ChickenBridge.scm",(void*)f_33476},
{"f_33429ChickenBridge.scm",(void*)f_33429},
{"f_33423ChickenBridge.scm",(void*)f_33423},
{"f_17745ChickenBridge.scm",(void*)f_17745},
{"f_33331ChickenBridge.scm",(void*)f_33331},
{"f_33333ChickenBridge.scm",(void*)f_33333},
{"f_33337ChickenBridge.scm",(void*)f_33337},
{"f_33340ChickenBridge.scm",(void*)f_33340},
{"f_33343ChickenBridge.scm",(void*)f_33343},
{"f_33383ChickenBridge.scm",(void*)f_33383},
{"f_33375ChickenBridge.scm",(void*)f_33375},
{"f_33346ChickenBridge.scm",(void*)f_33346},
{"f_33349ChickenBridge.scm",(void*)f_33349},
{"f_33352ChickenBridge.scm",(void*)f_33352},
{"f_33323ChickenBridge.scm",(void*)f_33323},
{"f_17748ChickenBridge.scm",(void*)f_17748},
{"f_33295ChickenBridge.scm",(void*)f_33295},
{"f_17751ChickenBridge.scm",(void*)f_17751},
{"f_33259ChickenBridge.scm",(void*)f_33259},
{"f_33271ChickenBridge.scm",(void*)f_33271},
{"f_33267ChickenBridge.scm",(void*)f_33267},
{"f_33241ChickenBridge.scm",(void*)f_33241},
{"f_33235ChickenBridge.scm",(void*)f_33235},
{"f_17754ChickenBridge.scm",(void*)f_17754},
{"f_33149ChickenBridge.scm",(void*)f_33149},
{"f_33153ChickenBridge.scm",(void*)f_33153},
{"f_33156ChickenBridge.scm",(void*)f_33156},
{"f_33159ChickenBridge.scm",(void*)f_33159},
{"f_33172ChickenBridge.scm",(void*)f_33172},
{"f_33118ChickenBridge.scm",(void*)f_33118},
{"f_33122ChickenBridge.scm",(void*)f_33122},
{"f_33137ChickenBridge.scm",(void*)f_33137},
{"f_33112ChickenBridge.scm",(void*)f_33112},
{"f_17757ChickenBridge.scm",(void*)f_17757},
{"f_32998ChickenBridge.scm",(void*)f_32998},
{"f_33014ChickenBridge.scm",(void*)f_33014},
{"f_33025ChickenBridge.scm",(void*)f_33025},
{"f_32992ChickenBridge.scm",(void*)f_32992},
{"f_17813ChickenBridge.scm",(void*)f_17813},
{"f_32859ChickenBridge.scm",(void*)f_32859},
{"f_32882ChickenBridge.scm",(void*)f_32882},
{"f_32879ChickenBridge.scm",(void*)f_32879},
{"f_32853ChickenBridge.scm",(void*)f_32853},
{"f_17816ChickenBridge.scm",(void*)f_17816},
{"f_32707ChickenBridge.scm",(void*)f_32707},
{"f_32725ChickenBridge.scm",(void*)f_32725},
{"f_32734ChickenBridge.scm",(void*)f_32734},
{"f_32701ChickenBridge.scm",(void*)f_32701},
{"f_17819ChickenBridge.scm",(void*)f_17819},
{"f_32654ChickenBridge.scm",(void*)f_32654},
{"f_32658ChickenBridge.scm",(void*)f_32658},
{"f_32661ChickenBridge.scm",(void*)f_32661},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32636ChickenBridge.scm",(void*)f_32636},
{"f_32630ChickenBridge.scm",(void*)f_32630},
{"f_17822ChickenBridge.scm",(void*)f_17822},
{"f_32554ChickenBridge.scm",(void*)f_32554},
{"f_17961ChickenBridge.scm",(void*)f_17961},
{"f_32480ChickenBridge.scm",(void*)f_32480},
{"f_32487ChickenBridge.scm",(void*)f_32487},
{"f_32474ChickenBridge.scm",(void*)f_32474},
{"f_17964ChickenBridge.scm",(void*)f_17964},
{"f_32370ChickenBridge.scm",(void*)f_32370},
{"f_32378ChickenBridge.scm",(void*)f_32378},
{"f_32344ChickenBridge.scm",(void*)f_32344},
{"f_32361ChickenBridge.scm",(void*)f_32361},
{"f_32352ChickenBridge.scm",(void*)f_32352},
{"f_32338ChickenBridge.scm",(void*)f_32338},
{"f_17967ChickenBridge.scm",(void*)f_17967},
{"f_32294ChickenBridge.scm",(void*)f_32294},
{"f_17970ChickenBridge.scm",(void*)f_17970},
{"f_32212ChickenBridge.scm",(void*)f_32212},
{"f_32223ChickenBridge.scm",(void*)f_32223},
{"f_32225ChickenBridge.scm",(void*)f_32225},
{"f_32254ChickenBridge.scm",(void*)f_32254},
{"f_32190ChickenBridge.scm",(void*)f_32190},
{"f_32206ChickenBridge.scm",(void*)f_32206},
{"f_32184ChickenBridge.scm",(void*)f_32184},
{"f_17973ChickenBridge.scm",(void*)f_17973},
{"f_32137ChickenBridge.scm",(void*)f_32137},
{"f_32141ChickenBridge.scm",(void*)f_32141},
{"f_32148ChickenBridge.scm",(void*)f_32148},
{"f_32115ChickenBridge.scm",(void*)f_32115},
{"f_32131ChickenBridge.scm",(void*)f_32131},
{"f_32109ChickenBridge.scm",(void*)f_32109},
{"f_17976ChickenBridge.scm",(void*)f_17976},
{"f_31977ChickenBridge.scm",(void*)f_31977},
{"f_32017ChickenBridge.scm",(void*)f_32017},
{"f_31981ChickenBridge.scm",(void*)f_31981},
{"f_31997ChickenBridge.scm",(void*)f_31997},
{"f_32009ChickenBridge.scm",(void*)f_32009},
{"f_32013ChickenBridge.scm",(void*)f_32013},
{"f_32005ChickenBridge.scm",(void*)f_32005},
{"f_31902ChickenBridge.scm",(void*)f_31902},
{"f_31945ChickenBridge.scm",(void*)f_31945},
{"f_31949ChickenBridge.scm",(void*)f_31949},
{"f_31909ChickenBridge.scm",(void*)f_31909},
{"f_31920ChickenBridge.scm",(void*)f_31920},
{"f_31896ChickenBridge.scm",(void*)f_31896},
{"f_17979ChickenBridge.scm",(void*)f_17979},
{"f_31876ChickenBridge.scm",(void*)f_31876},
{"f_31870ChickenBridge.scm",(void*)f_31870},
{"f_17982ChickenBridge.scm",(void*)f_17982},
{"f_31850ChickenBridge.scm",(void*)f_31850},
{"f_31854ChickenBridge.scm",(void*)f_31854},
{"f_31842ChickenBridge.scm",(void*)f_31842},
{"f_17985ChickenBridge.scm",(void*)f_17985},
{"f_31822ChickenBridge.scm",(void*)f_31822},
{"f_31826ChickenBridge.scm",(void*)f_31826},
{"f_31814ChickenBridge.scm",(void*)f_31814},
{"f_17988ChickenBridge.scm",(void*)f_17988},
{"f_31794ChickenBridge.scm",(void*)f_31794},
{"f_31798ChickenBridge.scm",(void*)f_31798},
{"f_31786ChickenBridge.scm",(void*)f_31786},
{"f_17991ChickenBridge.scm",(void*)f_17991},
{"f_31766ChickenBridge.scm",(void*)f_31766},
{"f_31770ChickenBridge.scm",(void*)f_31770},
{"f_31758ChickenBridge.scm",(void*)f_31758},
{"f_17994ChickenBridge.scm",(void*)f_17994},
{"f_31657ChickenBridge.scm",(void*)f_31657},
{"f_31627ChickenBridge.scm",(void*)f_31627},
{"f_31651ChickenBridge.scm",(void*)f_31651},
{"f_31621ChickenBridge.scm",(void*)f_31621},
{"f_17997ChickenBridge.scm",(void*)f_17997},
{"f_31571ChickenBridge.scm",(void*)f_31571},
{"f_31573ChickenBridge.scm",(void*)f_31573},
{"f_31577ChickenBridge.scm",(void*)f_31577},
{"f_31605ChickenBridge.scm",(void*)f_31605},
{"f_31597ChickenBridge.scm",(void*)f_31597},
{"f_31593ChickenBridge.scm",(void*)f_31593},
{"f_31580ChickenBridge.scm",(void*)f_31580},
{"f_31563ChickenBridge.scm",(void*)f_31563},
{"f_18000ChickenBridge.scm",(void*)f_18000},
{"f_31510ChickenBridge.scm",(void*)f_31510},
{"f_31512ChickenBridge.scm",(void*)f_31512},
{"f_31516ChickenBridge.scm",(void*)f_31516},
{"f_31547ChickenBridge.scm",(void*)f_31547},
{"f_31539ChickenBridge.scm",(void*)f_31539},
{"f_31535ChickenBridge.scm",(void*)f_31535},
{"f_31519ChickenBridge.scm",(void*)f_31519},
{"f_31522ChickenBridge.scm",(void*)f_31522},
{"f_31502ChickenBridge.scm",(void*)f_31502},
{"f_18003ChickenBridge.scm",(void*)f_18003},
{"f_31452ChickenBridge.scm",(void*)f_31452},
{"f_31466ChickenBridge.scm",(void*)f_31466},
{"f_31458ChickenBridge.scm",(void*)f_31458},
{"f_31417ChickenBridge.scm",(void*)f_31417},
{"f_31450ChickenBridge.scm",(void*)f_31450},
{"f_31411ChickenBridge.scm",(void*)f_31411},
{"f_18006ChickenBridge.scm",(void*)f_18006},
{"f_31358ChickenBridge.scm",(void*)f_31358},
{"f_31362ChickenBridge.scm",(void*)f_31362},
{"f_31375ChickenBridge.scm",(void*)f_31375},
{"f_31367ChickenBridge.scm",(void*)f_31367},
{"f_31315ChickenBridge.scm",(void*)f_31315},
{"f_31348ChickenBridge.scm",(void*)f_31348},
{"f_31309ChickenBridge.scm",(void*)f_31309},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_31229ChickenBridge.scm",(void*)f_31229},
{"f_31223ChickenBridge.scm",(void*)f_31223},
{"f_18012ChickenBridge.scm",(void*)f_18012},
{"f_30992ChickenBridge.scm",(void*)f_30992},
{"f_30996ChickenBridge.scm",(void*)f_30996},
{"f_31004ChickenBridge.scm",(void*)f_31004},
{"f_31027ChickenBridge.scm",(void*)f_31027},
{"f_31030ChickenBridge.scm",(void*)f_31030},
{"f_31033ChickenBridge.scm",(void*)f_31033},
{"f_31036ChickenBridge.scm",(void*)f_31036},
{"f_31096ChickenBridge.scm",(void*)f_31096},
{"f_31103ChickenBridge.scm",(void*)f_31103},
{"f_31113ChickenBridge.scm",(void*)f_31113},
{"f_31123ChickenBridge.scm",(void*)f_31123},
{"f_31137ChickenBridge.scm",(void*)f_31137},
{"f_31147ChickenBridge.scm",(void*)f_31147},
{"f_31157ChickenBridge.scm",(void*)f_31157},
{"f_31167ChickenBridge.scm",(void*)f_31167},
{"f_31039ChickenBridge.scm",(void*)f_31039},
{"f_31063ChickenBridge.scm",(void*)f_31063},
{"f_31042ChickenBridge.scm",(void*)f_31042},
{"f_30949ChickenBridge.scm",(void*)f_30949},
{"f_30982ChickenBridge.scm",(void*)f_30982},
{"f_30943ChickenBridge.scm",(void*)f_30943},
{"f_18015ChickenBridge.scm",(void*)f_18015},
{"f_30861ChickenBridge.scm",(void*)f_30861},
{"f_30865ChickenBridge.scm",(void*)f_30865},
{"f_30871ChickenBridge.scm",(void*)f_30871},
{"f_30891ChickenBridge.scm",(void*)f_30891},
{"f_30835ChickenBridge.scm",(void*)f_30835},
{"f_30845ChickenBridge.scm",(void*)f_30845},
{"f_30829ChickenBridge.scm",(void*)f_30829},
{"f_18018ChickenBridge.scm",(void*)f_18018},
{"f_30706ChickenBridge.scm",(void*)f_30706},
{"f_30710ChickenBridge.scm",(void*)f_30710},
{"f_30638ChickenBridge.scm",(void*)f_30638},
{"f_30657ChickenBridge.scm",(void*)f_30657},
{"f_30692ChickenBridge.scm",(void*)f_30692},
{"f_30663ChickenBridge.scm",(void*)f_30663},
{"f_30667ChickenBridge.scm",(void*)f_30667},
{"f_30681ChickenBridge.scm",(void*)f_30681},
{"f_30670ChickenBridge.scm",(void*)f_30670},
{"f_30651ChickenBridge.scm",(void*)f_30651},
{"f_30632ChickenBridge.scm",(void*)f_30632},
{"f_18021ChickenBridge.scm",(void*)f_18021},
{"f_30360ChickenBridge.scm",(void*)f_30360},
{"f_18544ChickenBridge.scm",(void*)f_18544},
{"f_30312ChickenBridge.scm",(void*)f_30312},
{"f_30304ChickenBridge.scm",(void*)f_30304},
{"f_18547ChickenBridge.scm",(void*)f_18547},
{"f_30184ChickenBridge.scm",(void*)f_30184},
{"f_18553ChickenBridge.scm",(void*)f_18553},
{"f_19012ChickenBridge.scm",(void*)f_19012},
{"f_19046ChickenBridge.scm",(void*)f_19046},
{"f_19038ChickenBridge.scm",(void*)f_19038},
{"f_19034ChickenBridge.scm",(void*)f_19034},
{"f_19019ChickenBridge.scm",(void*)f_19019},
{"f_19023ChickenBridge.scm",(void*)f_19023},
{"f_19016ChickenBridge.scm",(void*)f_19016},
{"f_18571ChickenBridge.scm",(void*)f_18571},
{"f_19005ChickenBridge.scm",(void*)f_19005},
{"f_19001ChickenBridge.scm",(void*)f_19001},
{"f_18578ChickenBridge.scm",(void*)f_18578},
{"f_18876ChickenBridge.scm",(void*)f_18876},
{"f_18897ChickenBridge.scm",(void*)f_18897},
{"f_18899ChickenBridge.scm",(void*)f_18899},
{"f_18913ChickenBridge.scm",(void*)f_18913},
{"f_18966ChickenBridge.scm",(void*)f_18966},
{"f_18916ChickenBridge.scm",(void*)f_18916},
{"f_18951ChickenBridge.scm",(void*)f_18951},
{"f_18919ChickenBridge.scm",(void*)f_18919},
{"f_18932ChickenBridge.scm",(void*)f_18932},
{"f_18944ChickenBridge.scm",(void*)f_18944},
{"f_18936ChickenBridge.scm",(void*)f_18936},
{"f_18922ChickenBridge.scm",(void*)f_18922},
{"f_18886ChickenBridge.scm",(void*)f_18886},
{"f_18581ChickenBridge.scm",(void*)f_18581},
{"f_18840ChickenBridge.scm",(void*)f_18840},
{"f_18866ChickenBridge.scm",(void*)f_18866},
{"f_18851ChickenBridge.scm",(void*)f_18851},
{"f_18584ChickenBridge.scm",(void*)f_18584},
{"f_18588ChickenBridge.scm",(void*)f_18588},
{"f_18784ChickenBridge.scm",(void*)f_18784},
{"f_18794ChickenBridge.scm",(void*)f_18794},
{"f_18797ChickenBridge.scm",(void*)f_18797},
{"f_18818ChickenBridge.scm",(void*)f_18818},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18804ChickenBridge.scm",(void*)f_18804},
{"f_18591ChickenBridge.scm",(void*)f_18591},
{"f_18594ChickenBridge.scm",(void*)f_18594},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_18755ChickenBridge.scm",(void*)f_18755},
{"f_18751ChickenBridge.scm",(void*)f_18751},
{"f_18597ChickenBridge.scm",(void*)f_18597},
{"f_18625ChickenBridge.scm",(void*)f_18625},
{"f_18628ChickenBridge.scm",(void*)f_18628},
{"f_18631ChickenBridge.scm",(void*)f_18631},
{"f_18634ChickenBridge.scm",(void*)f_18634},
{"f_18637ChickenBridge.scm",(void*)f_18637},
{"f_18696ChickenBridge.scm",(void*)f_18696},
{"f_30138ChickenBridge.scm",(void*)f_30138},
{"f_30154ChickenBridge.scm",(void*)f_30154},
{"f_30157ChickenBridge.scm",(void*)f_30157},
{"f_30160ChickenBridge.scm",(void*)f_30160},
{"f_30163ChickenBridge.scm",(void*)f_30163},
{"f_30174ChickenBridge.scm",(void*)f_30174},
{"f_30132ChickenBridge.scm",(void*)f_30132},
{"f_19053ChickenBridge.scm",(void*)f_19053},
{"f_29993ChickenBridge.scm",(void*)f_29993},
{"f_30032ChickenBridge.scm",(void*)f_30032},
{"f_30006ChickenBridge.scm",(void*)f_30006},
{"f_29987ChickenBridge.scm",(void*)f_29987},
{"f_19056ChickenBridge.scm",(void*)f_19056},
{"f_29575ChickenBridge.scm",(void*)f_29575},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29591ChickenBridge.scm",(void*)f_29591},
{"f_29649ChickenBridge.scm",(void*)f_29649},
{"f_29652ChickenBridge.scm",(void*)f_29652},
{"f_29655ChickenBridge.scm",(void*)f_29655},
{"f_29867ChickenBridge.scm",(void*)f_29867},
{"f_29805ChickenBridge.scm",(void*)f_29805},
{"f_29839ChickenBridge.scm",(void*)f_29839},
{"f_29814ChickenBridge.scm",(void*)f_29814},
{"f_29825ChickenBridge.scm",(void*)f_29825},
{"f_29821ChickenBridge.scm",(void*)f_29821},
{"f_29664ChickenBridge.scm",(void*)f_29664},
{"f_29742ChickenBridge.scm",(void*)f_29742},
{"f_29783ChickenBridge.scm",(void*)f_29783},
{"f_29787ChickenBridge.scm",(void*)f_29787},
{"f_29791ChickenBridge.scm",(void*)f_29791},
{"f_29746ChickenBridge.scm",(void*)f_29746},
{"f_29750ChickenBridge.scm",(void*)f_29750},
{"f_29777ChickenBridge.scm",(void*)f_29777},
{"f_29753ChickenBridge.scm",(void*)f_29753},
{"f_29667ChickenBridge.scm",(void*)f_29667},
{"f_29739ChickenBridge.scm",(void*)f_29739},
{"f_29681ChickenBridge.scm",(void*)f_29681},
{"f_29683ChickenBridge.scm",(void*)f_29683},
{"f_29731ChickenBridge.scm",(void*)f_29731},
{"f_29702ChickenBridge.scm",(void*)f_29702},
{"f_29719ChickenBridge.scm",(void*)f_29719},
{"f_29705ChickenBridge.scm",(void*)f_29705},
{"f_29698ChickenBridge.scm",(void*)f_29698},
{"f_29670ChickenBridge.scm",(void*)f_29670},
{"f_29600ChickenBridge.scm",(void*)f_29600},
{"f_29610ChickenBridge.scm",(void*)f_29610},
{"f_29616ChickenBridge.scm",(void*)f_29616},
{"f_29588ChickenBridge.scm",(void*)f_29588},
{"f_29536ChickenBridge.scm",(void*)f_29536},
{"f_29553ChickenBridge.scm",(void*)f_29553},
{"f_29569ChickenBridge.scm",(void*)f_29569},
{"f_29547ChickenBridge.scm",(void*)f_29547},
{"f_29530ChickenBridge.scm",(void*)f_29530},
{"f_19059ChickenBridge.scm",(void*)f_19059},
{"f_29454ChickenBridge.scm",(void*)f_29454},
{"f_19062ChickenBridge.scm",(void*)f_19062},
{"f_29430ChickenBridge.scm",(void*)f_29430},
{"f_29442ChickenBridge.scm",(void*)f_29442},
{"f_29438ChickenBridge.scm",(void*)f_29438},
{"f_29416ChickenBridge.scm",(void*)f_29416},
{"f_29424ChickenBridge.scm",(void*)f_29424},
{"f_29410ChickenBridge.scm",(void*)f_29410},
{"f_19065ChickenBridge.scm",(void*)f_19065},
{"f_29402ChickenBridge.scm",(void*)f_29402},
{"f_22836ChickenBridge.scm",(void*)f_22836},
{"f_22839ChickenBridge.scm",(void*)f_22839},
{"f_23005ChickenBridge.scm",(void*)f_23005},
{"f_23001ChickenBridge.scm",(void*)f_23001},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_22846ChickenBridge.scm",(void*)f_22846},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22853ChickenBridge.scm",(void*)f_22853},
{"f_22864ChickenBridge.scm",(void*)f_22864},
{"f_22872ChickenBridge.scm",(void*)f_22872},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_22952ChickenBridge.scm",(void*)f_22952},
{"f_22948ChickenBridge.scm",(void*)f_22948},
{"f_22940ChickenBridge.scm",(void*)f_22940},
{"f_22936ChickenBridge.scm",(void*)f_22936},
{"f_22908ChickenBridge.scm",(void*)f_22908},
{"f_22904ChickenBridge.scm",(void*)f_22904},
{"f_22868ChickenBridge.scm",(void*)f_22868},
{"f_19483ChickenBridge.scm",(void*)f_19483},
{"f_29388ChickenBridge.scm",(void*)f_29388},
{"f_19486ChickenBridge.scm",(void*)f_19486},
{"f_29359ChickenBridge.scm",(void*)f_29359},
{"f_29363ChickenBridge.scm",(void*)f_29363},
{"f_19489ChickenBridge.scm",(void*)f_19489},
{"f_29356ChickenBridge.scm",(void*)f_29356},
{"f_19492ChickenBridge.scm",(void*)f_19492},
{"f_29214ChickenBridge.scm",(void*)f_29214},
{"f_23018ChickenBridge.scm",(void*)f_23018},
{"f_23150ChickenBridge.scm",(void*)f_23150},
{"f_23021ChickenBridge.scm",(void*)f_23021},
{"f_23032ChickenBridge.scm",(void*)f_23032},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_23064ChickenBridge.scm",(void*)f_23064},
{"f_23067ChickenBridge.scm",(void*)f_23067},
{"f_23075ChickenBridge.scm",(void*)f_23075},
{"f_23083ChickenBridge.scm",(void*)f_23083},
{"f_23103ChickenBridge.scm",(void*)f_23103},
{"f_23099ChickenBridge.scm",(void*)f_23099},
{"f_23079ChickenBridge.scm",(void*)f_23079},
{"f_23071ChickenBridge.scm",(void*)f_23071},
{"f_23060ChickenBridge.scm",(void*)f_23060},
{"f_23036ChickenBridge.scm",(void*)f_23036},
{"f_23012ChickenBridge.scm",(void*)f_23012},
{"f_27934ChickenBridge.scm",(void*)f_27934},
{"f_27937ChickenBridge.scm",(void*)f_27937},
{"f_27940ChickenBridge.scm",(void*)f_27940},
{"f_27943ChickenBridge.scm",(void*)f_27943},
{"f_27946ChickenBridge.scm",(void*)f_27946},
{"f_27949ChickenBridge.scm",(void*)f_27949},
{"f_27952ChickenBridge.scm",(void*)f_27952},
{"f_27955ChickenBridge.scm",(void*)f_27955},
{"f_27958ChickenBridge.scm",(void*)f_27958},
{"f_27961ChickenBridge.scm",(void*)f_27961},
{"f_27964ChickenBridge.scm",(void*)f_27964},
{"f_28089ChickenBridge.scm",(void*)f_28089},
{"f_28092ChickenBridge.scm",(void*)f_28092},
{"f_28095ChickenBridge.scm",(void*)f_28095},
{"f_29151ChickenBridge.scm",(void*)f_29151},
{"f_29179ChickenBridge.scm",(void*)f_29179},
{"f_28818ChickenBridge.scm",(void*)f_28818},
{"f_29145ChickenBridge.scm",(void*)f_29145},
{"f_28863ChickenBridge.scm",(void*)f_28863},
{"f_28869ChickenBridge.scm",(void*)f_28869},
{"f_28872ChickenBridge.scm",(void*)f_28872},
{"f_28875ChickenBridge.scm",(void*)f_28875},
{"f_28879ChickenBridge.scm",(void*)f_28879},
{"f_29089ChickenBridge.scm",(void*)f_29089},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29097ChickenBridge.scm",(void*)f_29097},
{"f_28882ChickenBridge.scm",(void*)f_28882},
{"f_29046ChickenBridge.scm",(void*)f_29046},
{"f_29082ChickenBridge.scm",(void*)f_29082},
{"f_29075ChickenBridge.scm",(void*)f_29075},
{"f_28885ChickenBridge.scm",(void*)f_28885},
{"f_28984ChickenBridge.scm",(void*)f_28984},
{"f_28992ChickenBridge.scm",(void*)f_28992},
{"f_28988ChickenBridge.scm",(void*)f_28988},
{"f_28980ChickenBridge.scm",(void*)f_28980},
{"f_28976ChickenBridge.scm",(void*)f_28976},
{"f_28932ChickenBridge.scm",(void*)f_28932},
{"f_28928ChickenBridge.scm",(void*)f_28928},
{"f_28895ChickenBridge.scm",(void*)f_28895},
{"f_28906ChickenBridge.scm",(void*)f_28906},
{"f_28914ChickenBridge.scm",(void*)f_28914},
{"f_28910ChickenBridge.scm",(void*)f_28910},
{"f_29108ChickenBridge.scm",(void*)f_29108},
{"f_29116ChickenBridge.scm",(void*)f_29116},
{"f_29130ChickenBridge.scm",(void*)f_29130},
{"f_29120ChickenBridge.scm",(void*)f_29120},
{"f_29111ChickenBridge.scm",(void*)f_29111},
{"f_29114ChickenBridge.scm",(void*)f_29114},
{"f_28820ChickenBridge.scm",(void*)f_28820},
{"f_28836ChickenBridge.scm",(void*)f_28836},
{"f_28747ChickenBridge.scm",(void*)f_28747},
{"f_28758ChickenBridge.scm",(void*)f_28758},
{"f_28761ChickenBridge.scm",(void*)f_28761},
{"f_28768ChickenBridge.scm",(void*)f_28768},
{"f_28737ChickenBridge.scm",(void*)f_28737},
{"f_28400ChickenBridge.scm",(void*)f_28400},
{"f_28741ChickenBridge.scm",(void*)f_28741},
{"f_28679ChickenBridge.scm",(void*)f_28679},
{"f_28697ChickenBridge.scm",(void*)f_28697},
{"f_28707ChickenBridge.scm",(void*)f_28707},
{"f_28683ChickenBridge.scm",(void*)f_28683},
{"f_28670ChickenBridge.scm",(void*)f_28670},
{"f_28378ChickenBridge.scm",(void*)f_28378},
{"f_28674ChickenBridge.scm",(void*)f_28674},
{"f_28664ChickenBridge.scm",(void*)f_28664},
{"f_28360ChickenBridge.scm",(void*)f_28360},
{"f_28655ChickenBridge.scm",(void*)f_28655},
{"f_28369ChickenBridge.scm",(void*)f_28369},
{"f_28659ChickenBridge.scm",(void*)f_28659},
{"f_28592ChickenBridge.scm",(void*)f_28592},
{"f_28617ChickenBridge.scm",(void*)f_28617},
{"f_28325ChickenBridge.scm",(void*)f_28325},
{"f_28605ChickenBridge.scm",(void*)f_28605},
{"f_28424ChickenBridge.scm",(void*)f_28424},
{"f_28543ChickenBridge.scm",(void*)f_28543},
{"f_28538ChickenBridge.scm",(void*)f_28538},
{"f_28426ChickenBridge.scm",(void*)f_28426},
{"f_28533ChickenBridge.scm",(void*)f_28533},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28529ChickenBridge.scm",(void*)f_28529},
{"f_28497ChickenBridge.scm",(void*)f_28497},
{"f_28522ChickenBridge.scm",(void*)f_28522},
{"f_28526ChickenBridge.scm",(void*)f_28526},
{"f_28507ChickenBridge.scm",(void*)f_28507},
{"f_28486ChickenBridge.scm",(void*)f_28486},
{"f_28456ChickenBridge.scm",(void*)f_28456},
{"f_28428ChickenBridge.scm",(void*)f_28428},
{"f_28405ChickenBridge.scm",(void*)f_28405},
{"f_28410ChickenBridge.scm",(void*)f_28410},
{"f_28415ChickenBridge.scm",(void*)f_28415},
{"f_28383ChickenBridge.scm",(void*)f_28383},
{"f_28387ChickenBridge.scm",(void*)f_28387},
{"f_28339ChickenBridge.scm",(void*)f_28339},
{"f_28343ChickenBridge.scm",(void*)f_28343},
{"f_28330ChickenBridge.scm",(void*)f_28330},
{"f_28334ChickenBridge.scm",(void*)f_28334},
{"f_28318ChickenBridge.scm",(void*)f_28318},
{"f_28315ChickenBridge.scm",(void*)f_28315},
{"f_28301ChickenBridge.scm",(void*)f_28301},
{"f_28306ChickenBridge.scm",(void*)f_28306},
{"f_28287ChickenBridge.scm",(void*)f_28287},
{"f_28292ChickenBridge.scm",(void*)f_28292},
{"f_28097ChickenBridge.scm",(void*)f_28097},
{"f_28158ChickenBridge.scm",(void*)f_28158},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_28170ChickenBridge.scm",(void*)f_28170},
{"f_28189ChickenBridge.scm",(void*)f_28189},
{"f_28229ChickenBridge.scm",(void*)f_28229},
{"f_28271ChickenBridge.scm",(void*)f_28271},
{"f_28241ChickenBridge.scm",(void*)f_28241},
{"f_28226ChickenBridge.scm",(void*)f_28226},
{"f_28144ChickenBridge.scm",(void*)f_28144},
{"f_28109ChickenBridge.scm",(void*)f_28109},
{"f_28136ChickenBridge.scm",(void*)f_28136},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28124ChickenBridge.scm",(void*)f_28124},
{"f_28128ChickenBridge.scm",(void*)f_28128},
{"f_28132ChickenBridge.scm",(void*)f_28132},
{"f_28209ChickenBridge.scm",(void*)f_28209},
{"f_28187ChickenBridge.scm",(void*)f_28187},
{"f_28173ChickenBridge.scm",(void*)f_28173},
{"f_28176ChickenBridge.scm",(void*)f_28176},
{"f_28151ChickenBridge.scm",(void*)f_28151},
{"f_28080ChickenBridge.scm",(void*)f_28080},
{"f_28085ChickenBridge.scm",(void*)f_28085},
{"f_28023ChickenBridge.scm",(void*)f_28023},
{"f_28056ChickenBridge.scm",(void*)f_28056},
{"f_28036ChickenBridge.scm",(void*)f_28036},
{"f_28044ChickenBridge.scm",(void*)f_28044},
{"f_28027ChickenBridge.scm",(void*)f_28027},
{"f_27966ChickenBridge.scm",(void*)f_27966},
{"f_27999ChickenBridge.scm",(void*)f_27999},
{"f_27979ChickenBridge.scm",(void*)f_27979},
{"f_27987ChickenBridge.scm",(void*)f_27987},
{"f_27970ChickenBridge.scm",(void*)f_27970},
{"f_27876ChickenBridge.scm",(void*)f_27876},
{"f_27930ChickenBridge.scm",(void*)f_27930},
{"f_27925ChickenBridge.scm",(void*)f_27925},
{"f_27888ChickenBridge.scm",(void*)f_27888},
{"f_27894ChickenBridge.scm",(void*)f_27894},
{"f_27920ChickenBridge.scm",(void*)f_27920},
{"f_27924ChickenBridge.scm",(void*)f_27924},
{"f_27900ChickenBridge.scm",(void*)f_27900},
{"f_27918ChickenBridge.scm",(void*)f_27918},
{"f_27915ChickenBridge.scm",(void*)f_27915},
{"f_27911ChickenBridge.scm",(void*)f_27911},
{"f_27904ChickenBridge.scm",(void*)f_27904},
{"f_27861ChickenBridge.scm",(void*)f_27861},
{"f_27866ChickenBridge.scm",(void*)f_27866},
{"f_27833ChickenBridge.scm",(void*)f_27833},
{"f_27838ChickenBridge.scm",(void*)f_27838},
{"f_27805ChickenBridge.scm",(void*)f_27805},
{"f_27810ChickenBridge.scm",(void*)f_27810},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27782ChickenBridge.scm",(void*)f_27782},
{"f_27749ChickenBridge.scm",(void*)f_27749},
{"f_27754ChickenBridge.scm",(void*)f_27754},
{"f_27721ChickenBridge.scm",(void*)f_27721},
{"f_27726ChickenBridge.scm",(void*)f_27726},
{"f_27693ChickenBridge.scm",(void*)f_27693},
{"f_27698ChickenBridge.scm",(void*)f_27698},
{"f_27665ChickenBridge.scm",(void*)f_27665},
{"f_27670ChickenBridge.scm",(void*)f_27670},
{"f_27637ChickenBridge.scm",(void*)f_27637},
{"f_27642ChickenBridge.scm",(void*)f_27642},
{"f_27609ChickenBridge.scm",(void*)f_27609},
{"f_27614ChickenBridge.scm",(void*)f_27614},
{"f_27586ChickenBridge.scm",(void*)f_27586},
{"f_27591ChickenBridge.scm",(void*)f_27591},
{"f_27590ChickenBridge.scm",(void*)f_27590},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27572ChickenBridge.scm",(void*)f_27572},
{"f_27512ChickenBridge.scm",(void*)f_27512},
{"f_27519ChickenBridge.scm",(void*)f_27519},
{"f_27522ChickenBridge.scm",(void*)f_27522},
{"f_27546ChickenBridge.scm",(void*)f_27546},
{"f_27526ChickenBridge.scm",(void*)f_27526},
{"f_27516ChickenBridge.scm",(void*)f_27516},
{"f_27465ChickenBridge.scm",(void*)f_27465},
{"f_27472ChickenBridge.scm",(void*)f_27472},
{"f_27475ChickenBridge.scm",(void*)f_27475},
{"f_27495ChickenBridge.scm",(void*)f_27495},
{"f_27479ChickenBridge.scm",(void*)f_27479},
{"f_27442ChickenBridge.scm",(void*)f_27442},
{"f_27447ChickenBridge.scm",(void*)f_27447},
{"f_27446ChickenBridge.scm",(void*)f_27446},
{"f_27423ChickenBridge.scm",(void*)f_27423},
{"f_27428ChickenBridge.scm",(void*)f_27428},
{"f_27400ChickenBridge.scm",(void*)f_27400},
{"f_27405ChickenBridge.scm",(void*)f_27405},
{"f_27404ChickenBridge.scm",(void*)f_27404},
{"f_27381ChickenBridge.scm",(void*)f_27381},
{"f_27386ChickenBridge.scm",(void*)f_27386},
{"f_27362ChickenBridge.scm",(void*)f_27362},
{"f_27367ChickenBridge.scm",(void*)f_27367},
{"f_27366ChickenBridge.scm",(void*)f_27366},
{"f_27347ChickenBridge.scm",(void*)f_27347},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27333ChickenBridge.scm",(void*)f_27333},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27313ChickenBridge.scm",(void*)f_27313},
{"f_27318ChickenBridge.scm",(void*)f_27318},
{"f_27298ChickenBridge.scm",(void*)f_27298},
{"f_27303ChickenBridge.scm",(void*)f_27303},
{"f_27280ChickenBridge.scm",(void*)f_27280},
{"f_27288ChickenBridge.scm",(void*)f_27288},
{"f_27284ChickenBridge.scm",(void*)f_27284},
{"f_26810ChickenBridge.scm",(void*)f_26810},
{"f_27238ChickenBridge.scm",(void*)f_27238},
{"f_27253ChickenBridge.scm",(void*)f_27253},
{"f_27245ChickenBridge.scm",(void*)f_27245},
{"f_27209ChickenBridge.scm",(void*)f_27209},
{"f_27213ChickenBridge.scm",(void*)f_27213},
{"f_27174ChickenBridge.scm",(void*)f_27174},
{"f_27178ChickenBridge.scm",(void*)f_27178},
{"f_27139ChickenBridge.scm",(void*)f_27139},
{"f_27143ChickenBridge.scm",(void*)f_27143},
{"f_26814ChickenBridge.scm",(void*)f_26814},
{"f_27103ChickenBridge.scm",(void*)f_27103},
{"f_27118ChickenBridge.scm",(void*)f_27118},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27074ChickenBridge.scm",(void*)f_27074},
{"f_27078ChickenBridge.scm",(void*)f_27078},
{"f_27039ChickenBridge.scm",(void*)f_27039},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27004ChickenBridge.scm",(void*)f_27004},
{"f_27008ChickenBridge.scm",(void*)f_27008},
{"f_26817ChickenBridge.scm",(void*)f_26817},
{"f_26968ChickenBridge.scm",(void*)f_26968},
{"f_26983ChickenBridge.scm",(void*)f_26983},
{"f_26975ChickenBridge.scm",(void*)f_26975},
{"f_26939ChickenBridge.scm",(void*)f_26939},
{"f_26943ChickenBridge.scm",(void*)f_26943},
{"f_26904ChickenBridge.scm",(void*)f_26904},
{"f_26908ChickenBridge.scm",(void*)f_26908},
{"f_26869ChickenBridge.scm",(void*)f_26869},
{"f_26873ChickenBridge.scm",(void*)f_26873},
{"f_26820ChickenBridge.scm",(void*)f_26820},
{"f_26823ChickenBridge.scm",(void*)f_26823},
{"f_26827ChickenBridge.scm",(void*)f_26827},
{"f_26791ChickenBridge.scm",(void*)f_26791},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26340ChickenBridge.scm",(void*)f_26340},
{"f_26768ChickenBridge.scm",(void*)f_26768},
{"f_26783ChickenBridge.scm",(void*)f_26783},
{"f_26775ChickenBridge.scm",(void*)f_26775},
{"f_26739ChickenBridge.scm",(void*)f_26739},
{"f_26743ChickenBridge.scm",(void*)f_26743},
{"f_26704ChickenBridge.scm",(void*)f_26704},
{"f_26708ChickenBridge.scm",(void*)f_26708},
{"f_26669ChickenBridge.scm",(void*)f_26669},
{"f_26673ChickenBridge.scm",(void*)f_26673},
{"f_26344ChickenBridge.scm",(void*)f_26344},
{"f_26633ChickenBridge.scm",(void*)f_26633},
{"f_26648ChickenBridge.scm",(void*)f_26648},
{"f_26640ChickenBridge.scm",(void*)f_26640},
{"f_26604ChickenBridge.scm",(void*)f_26604},
{"f_26608ChickenBridge.scm",(void*)f_26608},
{"f_26569ChickenBridge.scm",(void*)f_26569},
{"f_26573ChickenBridge.scm",(void*)f_26573},
{"f_26534ChickenBridge.scm",(void*)f_26534},
{"f_26538ChickenBridge.scm",(void*)f_26538},
{"f_26347ChickenBridge.scm",(void*)f_26347},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26513ChickenBridge.scm",(void*)f_26513},
{"f_26505ChickenBridge.scm",(void*)f_26505},
{"f_26469ChickenBridge.scm",(void*)f_26469},
{"f_26473ChickenBridge.scm",(void*)f_26473},
{"f_26434ChickenBridge.scm",(void*)f_26434},
{"f_26438ChickenBridge.scm",(void*)f_26438},
{"f_26399ChickenBridge.scm",(void*)f_26399},
{"f_26403ChickenBridge.scm",(void*)f_26403},
{"f_26350ChickenBridge.scm",(void*)f_26350},
{"f_26353ChickenBridge.scm",(void*)f_26353},
{"f_26357ChickenBridge.scm",(void*)f_26357},
{"f_26321ChickenBridge.scm",(void*)f_26321},
{"f_26326ChickenBridge.scm",(void*)f_26326},
{"f_25870ChickenBridge.scm",(void*)f_25870},
{"f_26298ChickenBridge.scm",(void*)f_26298},
{"f_26313ChickenBridge.scm",(void*)f_26313},
{"f_26305ChickenBridge.scm",(void*)f_26305},
{"f_26269ChickenBridge.scm",(void*)f_26269},
{"f_26273ChickenBridge.scm",(void*)f_26273},
{"f_26234ChickenBridge.scm",(void*)f_26234},
{"f_26238ChickenBridge.scm",(void*)f_26238},
{"f_26199ChickenBridge.scm",(void*)f_26199},
{"f_26203ChickenBridge.scm",(void*)f_26203},
{"f_25874ChickenBridge.scm",(void*)f_25874},
{"f_26163ChickenBridge.scm",(void*)f_26163},
{"f_26178ChickenBridge.scm",(void*)f_26178},
{"f_26170ChickenBridge.scm",(void*)f_26170},
{"f_26134ChickenBridge.scm",(void*)f_26134},
{"f_26138ChickenBridge.scm",(void*)f_26138},
{"f_26099ChickenBridge.scm",(void*)f_26099},
{"f_26103ChickenBridge.scm",(void*)f_26103},
{"f_26064ChickenBridge.scm",(void*)f_26064},
{"f_26068ChickenBridge.scm",(void*)f_26068},
{"f_25877ChickenBridge.scm",(void*)f_25877},
{"f_26028ChickenBridge.scm",(void*)f_26028},
{"f_26043ChickenBridge.scm",(void*)f_26043},
{"f_26035ChickenBridge.scm",(void*)f_26035},
{"f_25999ChickenBridge.scm",(void*)f_25999},
{"f_26003ChickenBridge.scm",(void*)f_26003},
{"f_25964ChickenBridge.scm",(void*)f_25964},
{"f_25968ChickenBridge.scm",(void*)f_25968},
{"f_25929ChickenBridge.scm",(void*)f_25929},
{"f_25933ChickenBridge.scm",(void*)f_25933},
{"f_25880ChickenBridge.scm",(void*)f_25880},
{"f_25883ChickenBridge.scm",(void*)f_25883},
{"f_25887ChickenBridge.scm",(void*)f_25887},
{"f_25851ChickenBridge.scm",(void*)f_25851},
{"f_25856ChickenBridge.scm",(void*)f_25856},
{"f_25122ChickenBridge.scm",(void*)f_25122},
{"f_25828ChickenBridge.scm",(void*)f_25828},
{"f_25843ChickenBridge.scm",(void*)f_25843},
{"f_25835ChickenBridge.scm",(void*)f_25835},
{"f_25799ChickenBridge.scm",(void*)f_25799},
{"f_25803ChickenBridge.scm",(void*)f_25803},
{"f_25764ChickenBridge.scm",(void*)f_25764},
{"f_25768ChickenBridge.scm",(void*)f_25768},
{"f_25729ChickenBridge.scm",(void*)f_25729},
{"f_25733ChickenBridge.scm",(void*)f_25733},
{"f_25694ChickenBridge.scm",(void*)f_25694},
{"f_25698ChickenBridge.scm",(void*)f_25698},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_25658ChickenBridge.scm",(void*)f_25658},
{"f_25673ChickenBridge.scm",(void*)f_25673},
{"f_25665ChickenBridge.scm",(void*)f_25665},
{"f_25629ChickenBridge.scm",(void*)f_25629},
{"f_25633ChickenBridge.scm",(void*)f_25633},
{"f_25594ChickenBridge.scm",(void*)f_25594},
{"f_25598ChickenBridge.scm",(void*)f_25598},
{"f_25559ChickenBridge.scm",(void*)f_25559},
{"f_25563ChickenBridge.scm",(void*)f_25563},
{"f_25524ChickenBridge.scm",(void*)f_25524},
{"f_25528ChickenBridge.scm",(void*)f_25528},
{"f_25129ChickenBridge.scm",(void*)f_25129},
{"f_25488ChickenBridge.scm",(void*)f_25488},
{"f_25503ChickenBridge.scm",(void*)f_25503},
{"f_25495ChickenBridge.scm",(void*)f_25495},
{"f_25459ChickenBridge.scm",(void*)f_25459},
{"f_25463ChickenBridge.scm",(void*)f_25463},
{"f_25424ChickenBridge.scm",(void*)f_25424},
{"f_25428ChickenBridge.scm",(void*)f_25428},
{"f_25389ChickenBridge.scm",(void*)f_25389},
{"f_25393ChickenBridge.scm",(void*)f_25393},
{"f_25354ChickenBridge.scm",(void*)f_25354},
{"f_25358ChickenBridge.scm",(void*)f_25358},
{"f_25132ChickenBridge.scm",(void*)f_25132},
{"f_25318ChickenBridge.scm",(void*)f_25318},
{"f_25333ChickenBridge.scm",(void*)f_25333},
{"f_25325ChickenBridge.scm",(void*)f_25325},
{"f_25289ChickenBridge.scm",(void*)f_25289},
{"f_25293ChickenBridge.scm",(void*)f_25293},
{"f_25254ChickenBridge.scm",(void*)f_25254},
{"f_25258ChickenBridge.scm",(void*)f_25258},
{"f_25219ChickenBridge.scm",(void*)f_25219},
{"f_25223ChickenBridge.scm",(void*)f_25223},
{"f_25184ChickenBridge.scm",(void*)f_25184},
{"f_25188ChickenBridge.scm",(void*)f_25188},
{"f_25135ChickenBridge.scm",(void*)f_25135},
{"f_25138ChickenBridge.scm",(void*)f_25138},
{"f_25142ChickenBridge.scm",(void*)f_25142},
{"f_25103ChickenBridge.scm",(void*)f_25103},
{"f_25108ChickenBridge.scm",(void*)f_25108},
{"f_24374ChickenBridge.scm",(void*)f_24374},
{"f_25080ChickenBridge.scm",(void*)f_25080},
{"f_25095ChickenBridge.scm",(void*)f_25095},
{"f_25087ChickenBridge.scm",(void*)f_25087},
{"f_25051ChickenBridge.scm",(void*)f_25051},
{"f_25055ChickenBridge.scm",(void*)f_25055},
{"f_25016ChickenBridge.scm",(void*)f_25016},
{"f_25020ChickenBridge.scm",(void*)f_25020},
{"f_24981ChickenBridge.scm",(void*)f_24981},
{"f_24985ChickenBridge.scm",(void*)f_24985},
{"f_24946ChickenBridge.scm",(void*)f_24946},
{"f_24950ChickenBridge.scm",(void*)f_24950},
{"f_24378ChickenBridge.scm",(void*)f_24378},
{"f_24910ChickenBridge.scm",(void*)f_24910},
{"f_24925ChickenBridge.scm",(void*)f_24925},
{"f_24917ChickenBridge.scm",(void*)f_24917},
{"f_24881ChickenBridge.scm",(void*)f_24881},
{"f_24885ChickenBridge.scm",(void*)f_24885},
{"f_24846ChickenBridge.scm",(void*)f_24846},
{"f_24850ChickenBridge.scm",(void*)f_24850},
{"f_24811ChickenBridge.scm",(void*)f_24811},
{"f_24815ChickenBridge.scm",(void*)f_24815},
{"f_24776ChickenBridge.scm",(void*)f_24776},
{"f_24780ChickenBridge.scm",(void*)f_24780},
{"f_24381ChickenBridge.scm",(void*)f_24381},
{"f_24740ChickenBridge.scm",(void*)f_24740},
{"f_24755ChickenBridge.scm",(void*)f_24755},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_24711ChickenBridge.scm",(void*)f_24711},
{"f_24715ChickenBridge.scm",(void*)f_24715},
{"f_24676ChickenBridge.scm",(void*)f_24676},
{"f_24680ChickenBridge.scm",(void*)f_24680},
{"f_24641ChickenBridge.scm",(void*)f_24641},
{"f_24645ChickenBridge.scm",(void*)f_24645},
{"f_24606ChickenBridge.scm",(void*)f_24606},
{"f_24610ChickenBridge.scm",(void*)f_24610},
{"f_24384ChickenBridge.scm",(void*)f_24384},
{"f_24570ChickenBridge.scm",(void*)f_24570},
{"f_24585ChickenBridge.scm",(void*)f_24585},
{"f_24577ChickenBridge.scm",(void*)f_24577},
{"f_24541ChickenBridge.scm",(void*)f_24541},
{"f_24545ChickenBridge.scm",(void*)f_24545},
{"f_24506ChickenBridge.scm",(void*)f_24506},
{"f_24510ChickenBridge.scm",(void*)f_24510},
{"f_24471ChickenBridge.scm",(void*)f_24471},
{"f_24475ChickenBridge.scm",(void*)f_24475},
{"f_24436ChickenBridge.scm",(void*)f_24436},
{"f_24440ChickenBridge.scm",(void*)f_24440},
{"f_24387ChickenBridge.scm",(void*)f_24387},
{"f_24390ChickenBridge.scm",(void*)f_24390},
{"f_24394ChickenBridge.scm",(void*)f_24394},
{"f_24355ChickenBridge.scm",(void*)f_24355},
{"f_24360ChickenBridge.scm",(void*)f_24360},
{"f_23904ChickenBridge.scm",(void*)f_23904},
{"f_24332ChickenBridge.scm",(void*)f_24332},
{"f_24347ChickenBridge.scm",(void*)f_24347},
{"f_24339ChickenBridge.scm",(void*)f_24339},
{"f_24303ChickenBridge.scm",(void*)f_24303},
{"f_24307ChickenBridge.scm",(void*)f_24307},
{"f_24268ChickenBridge.scm",(void*)f_24268},
{"f_24272ChickenBridge.scm",(void*)f_24272},
{"f_24233ChickenBridge.scm",(void*)f_24233},
{"f_24237ChickenBridge.scm",(void*)f_24237},
{"f_23908ChickenBridge.scm",(void*)f_23908},
{"f_24197ChickenBridge.scm",(void*)f_24197},
{"f_24212ChickenBridge.scm",(void*)f_24212},
{"f_24204ChickenBridge.scm",(void*)f_24204},
{"f_24168ChickenBridge.scm",(void*)f_24168},
{"f_24172ChickenBridge.scm",(void*)f_24172},
{"f_24133ChickenBridge.scm",(void*)f_24133},
{"f_24137ChickenBridge.scm",(void*)f_24137},
{"f_24098ChickenBridge.scm",(void*)f_24098},
{"f_24102ChickenBridge.scm",(void*)f_24102},
{"f_23911ChickenBridge.scm",(void*)f_23911},
{"f_24062ChickenBridge.scm",(void*)f_24062},
{"f_24077ChickenBridge.scm",(void*)f_24077},
{"f_24069ChickenBridge.scm",(void*)f_24069},
{"f_24033ChickenBridge.scm",(void*)f_24033},
{"f_24037ChickenBridge.scm",(void*)f_24037},
{"f_23998ChickenBridge.scm",(void*)f_23998},
{"f_24002ChickenBridge.scm",(void*)f_24002},
{"f_23963ChickenBridge.scm",(void*)f_23963},
{"f_23967ChickenBridge.scm",(void*)f_23967},
{"f_23914ChickenBridge.scm",(void*)f_23914},
{"f_23917ChickenBridge.scm",(void*)f_23917},
{"f_23921ChickenBridge.scm",(void*)f_23921},
{"f_23885ChickenBridge.scm",(void*)f_23885},
{"f_23890ChickenBridge.scm",(void*)f_23890},
{"f_23156ChickenBridge.scm",(void*)f_23156},
{"f_23862ChickenBridge.scm",(void*)f_23862},
{"f_23877ChickenBridge.scm",(void*)f_23877},
{"f_23869ChickenBridge.scm",(void*)f_23869},
{"f_23833ChickenBridge.scm",(void*)f_23833},
{"f_23837ChickenBridge.scm",(void*)f_23837},
{"f_23798ChickenBridge.scm",(void*)f_23798},
{"f_23802ChickenBridge.scm",(void*)f_23802},
{"f_23763ChickenBridge.scm",(void*)f_23763},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23728ChickenBridge.scm",(void*)f_23728},
{"f_23732ChickenBridge.scm",(void*)f_23732},
{"f_23160ChickenBridge.scm",(void*)f_23160},
{"f_23692ChickenBridge.scm",(void*)f_23692},
{"f_23707ChickenBridge.scm",(void*)f_23707},
{"f_23699ChickenBridge.scm",(void*)f_23699},
{"f_23663ChickenBridge.scm",(void*)f_23663},
{"f_23667ChickenBridge.scm",(void*)f_23667},
{"f_23628ChickenBridge.scm",(void*)f_23628},
{"f_23632ChickenBridge.scm",(void*)f_23632},
{"f_23593ChickenBridge.scm",(void*)f_23593},
{"f_23597ChickenBridge.scm",(void*)f_23597},
{"f_23558ChickenBridge.scm",(void*)f_23558},
{"f_23562ChickenBridge.scm",(void*)f_23562},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_23522ChickenBridge.scm",(void*)f_23522},
{"f_23537ChickenBridge.scm",(void*)f_23537},
{"f_23529ChickenBridge.scm",(void*)f_23529},
{"f_23493ChickenBridge.scm",(void*)f_23493},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23458ChickenBridge.scm",(void*)f_23458},
{"f_23462ChickenBridge.scm",(void*)f_23462},
{"f_23423ChickenBridge.scm",(void*)f_23423},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_23388ChickenBridge.scm",(void*)f_23388},
{"f_23392ChickenBridge.scm",(void*)f_23392},
{"f_23166ChickenBridge.scm",(void*)f_23166},
{"f_23352ChickenBridge.scm",(void*)f_23352},
{"f_23367ChickenBridge.scm",(void*)f_23367},
{"f_23359ChickenBridge.scm",(void*)f_23359},
{"f_23323ChickenBridge.scm",(void*)f_23323},
{"f_23327ChickenBridge.scm",(void*)f_23327},
{"f_23288ChickenBridge.scm",(void*)f_23288},
{"f_23292ChickenBridge.scm",(void*)f_23292},
{"f_23253ChickenBridge.scm",(void*)f_23253},
{"f_23257ChickenBridge.scm",(void*)f_23257},
{"f_23218ChickenBridge.scm",(void*)f_23218},
{"f_23222ChickenBridge.scm",(void*)f_23222},
{"f_23169ChickenBridge.scm",(void*)f_23169},
{"f_23172ChickenBridge.scm",(void*)f_23172},
{"f_23176ChickenBridge.scm",(void*)f_23176},
{"f_22818ChickenBridge.scm",(void*)f_22818},
{"f_22658ChickenBridge.scm",(void*)f_22658},
{"f_22693ChickenBridge.scm",(void*)f_22693},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_22710ChickenBridge.scm",(void*)f_22710},
{"f_22771ChickenBridge.scm",(void*)f_22771},
{"f_22762ChickenBridge.scm",(void*)f_22762},
{"f_22713ChickenBridge.scm",(void*)f_22713},
{"f_22732ChickenBridge.scm",(void*)f_22732},
{"f_22739ChickenBridge.scm",(void*)f_22739},
{"f_22716ChickenBridge.scm",(void*)f_22716},
{"f_22722ChickenBridge.scm",(void*)f_22722},
{"f_22691ChickenBridge.scm",(void*)f_22691},
{"f_22666ChickenBridge.scm",(void*)f_22666},
{"f_22665ChickenBridge.scm",(void*)f_22665},
{"f_22826ChickenBridge.scm",(void*)f_22826},
{"f_22404ChickenBridge.scm",(void*)f_22404},
{"f_22426ChickenBridge.scm",(void*)f_22426},
{"f_22441ChickenBridge.scm",(void*)f_22441},
{"f_22444ChickenBridge.scm",(void*)f_22444},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22614ChickenBridge.scm",(void*)f_22614},
{"f_22447ChickenBridge.scm",(void*)f_22447},
{"f_22596ChickenBridge.scm",(void*)f_22596},
{"f_22450ChickenBridge.scm",(void*)f_22450},
{"f_22453ChickenBridge.scm",(void*)f_22453},
{"f_22589ChickenBridge.scm",(void*)f_22589},
{"f_22577ChickenBridge.scm",(void*)f_22577},
{"f_22473ChickenBridge.scm",(void*)f_22473},
{"f_22480ChickenBridge.scm",(void*)f_22480},
{"f_22550ChickenBridge.scm",(void*)f_22550},
{"f_22536ChickenBridge.scm",(void*)f_22536},
{"f_22544ChickenBridge.scm",(void*)f_22544},
{"f_22483ChickenBridge.scm",(void*)f_22483},
{"f_22522ChickenBridge.scm",(void*)f_22522},
{"f_22486ChickenBridge.scm",(void*)f_22486},
{"f_22515ChickenBridge.scm",(void*)f_22515},
{"f_22492ChickenBridge.scm",(void*)f_22492},
{"f_22495ChickenBridge.scm",(void*)f_22495},
{"f_22499ChickenBridge.scm",(void*)f_22499},
{"f_22460ChickenBridge.scm",(void*)f_22460},
{"f_22463ChickenBridge.scm",(void*)f_22463},
{"f_22273ChickenBridge.scm",(void*)f_22273},
{"f_22282ChickenBridge.scm",(void*)f_22282},
{"f_22230ChickenBridge.scm",(void*)f_22230},
{"f_22236ChickenBridge.scm",(void*)f_22236},
{"f_22299ChickenBridge.scm",(void*)f_22299},
{"f_22385ChickenBridge.scm",(void*)f_22385},
{"f_22372ChickenBridge.scm",(void*)f_22372},
{"f_22380ChickenBridge.scm",(void*)f_22380},
{"f_22302ChickenBridge.scm",(void*)f_22302},
{"f_22306ChickenBridge.scm",(void*)f_22306},
{"f_22349ChickenBridge.scm",(void*)f_22349},
{"f_22311ChickenBridge.scm",(void*)f_22311},
{"f_22277ChickenBridge.scm",(void*)f_22277},
{"f_22172ChickenBridge.scm",(void*)f_22172},
{"f_22179ChickenBridge.scm",(void*)f_22179},
{"f_22210ChickenBridge.scm",(void*)f_22210},
{"f_22206ChickenBridge.scm",(void*)f_22206},
{"f_22198ChickenBridge.scm",(void*)f_22198},
{"f_22081ChickenBridge.scm",(void*)f_22081},
{"f_22088ChickenBridge.scm",(void*)f_22088},
{"f_22156ChickenBridge.scm",(void*)f_22156},
{"f_22099ChickenBridge.scm",(void*)f_22099},
{"f_22126ChickenBridge.scm",(void*)f_22126},
{"f_22110ChickenBridge.scm",(void*)f_22110},
{"f_22015ChickenBridge.scm",(void*)f_22015},
{"f_22026ChickenBridge.scm",(void*)f_22026},
{"f_22029ChickenBridge.scm",(void*)f_22029},
{"f_22036ChickenBridge.scm",(void*)f_22036},
{"f_22009ChickenBridge.scm",(void*)f_22009},
{"f_21463ChickenBridge.scm",(void*)f_21463},
{"f_21494ChickenBridge.scm",(void*)f_21494},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21964ChickenBridge.scm",(void*)f_21964},
{"f_21505ChickenBridge.scm",(void*)f_21505},
{"f_21390ChickenBridge.scm",(void*)f_21390},
{"f_21415ChickenBridge.scm",(void*)f_21415},
{"f_21350ChickenBridge.scm",(void*)f_21350},
{"f_21363ChickenBridge.scm",(void*)f_21363},
{"f_21404ChickenBridge.scm",(void*)f_21404},
{"f_21509ChickenBridge.scm",(void*)f_21509},
{"f_21946ChickenBridge.scm",(void*)f_21946},
{"f_21942ChickenBridge.scm",(void*)f_21942},
{"f_21938ChickenBridge.scm",(void*)f_21938},
{"f_21512ChickenBridge.scm",(void*)f_21512},
{"f_21732ChickenBridge.scm",(void*)f_21732},
{"f_21841ChickenBridge.scm",(void*)f_21841},
{"f_21906ChickenBridge.scm",(void*)f_21906},
{"f_21848ChickenBridge.scm",(void*)f_21848},
{"f_21852ChickenBridge.scm",(void*)f_21852},
{"f_21856ChickenBridge.scm",(void*)f_21856},
{"f_21898ChickenBridge.scm",(void*)f_21898},
{"f_21894ChickenBridge.scm",(void*)f_21894},
{"f_21872ChickenBridge.scm",(void*)f_21872},
{"f_21735ChickenBridge.scm",(void*)f_21735},
{"f_21738ChickenBridge.scm",(void*)f_21738},
{"f_21637ChickenBridge.scm",(void*)f_21637},
{"f_21720ChickenBridge.scm",(void*)f_21720},
{"f_21687ChickenBridge.scm",(void*)f_21687},
{"f_21713ChickenBridge.scm",(void*)f_21713},
{"f_21695ChickenBridge.scm",(void*)f_21695},
{"f_21643ChickenBridge.scm",(void*)f_21643},
{"f_21683ChickenBridge.scm",(void*)f_21683},
{"f_21625ChickenBridge.scm",(void*)f_21625},
{"f_21596ChickenBridge.scm",(void*)f_21596},
{"f_21618ChickenBridge.scm",(void*)f_21618},
{"f_21604ChickenBridge.scm",(void*)f_21604},
{"f_21558ChickenBridge.scm",(void*)f_21558},
{"f_21515ChickenBridge.scm",(void*)f_21515},
{"f_21526ChickenBridge.scm",(void*)f_21526},
{"f_21530ChickenBridge.scm",(void*)f_21530},
{"f_21534ChickenBridge.scm",(void*)f_21534},
{"f_21538ChickenBridge.scm",(void*)f_21538},
{"f_21522ChickenBridge.scm",(void*)f_21522},
{"f_21482ChickenBridge.scm",(void*)f_21482},
{"f_21477ChickenBridge.scm",(void*)f_21477},
{"f_21472ChickenBridge.scm",(void*)f_21472},
{"f_21304ChickenBridge.scm",(void*)f_21304},
{"f_21315ChickenBridge.scm",(void*)f_21315},
{"f_21330ChickenBridge.scm",(void*)f_21330},
{"f_21266ChickenBridge.scm",(void*)f_21266},
{"f_21277ChickenBridge.scm",(void*)f_21277},
{"f_21292ChickenBridge.scm",(void*)f_21292},
{"f_21199ChickenBridge.scm",(void*)f_21199},
{"f_21219ChickenBridge.scm",(void*)f_21219},
{"f_21229ChickenBridge.scm",(void*)f_21229},
{"f_21242ChickenBridge.scm",(void*)f_21242},
{"f_21210ChickenBridge.scm",(void*)f_21210},
{"f_21217ChickenBridge.scm",(void*)f_21217},
{"f_21006ChickenBridge.scm",(void*)f_21006},
{"f_21066ChickenBridge.scm",(void*)f_21066},
{"f_21076ChickenBridge.scm",(void*)f_21076},
{"f_21190ChickenBridge.scm",(void*)f_21190},
{"f_21155ChickenBridge.scm",(void*)f_21155},
{"f_21147ChickenBridge.scm",(void*)f_21147},
{"f_21118ChickenBridge.scm",(void*)f_21118},
{"f_21096ChickenBridge.scm",(void*)f_21096},
{"f_21099ChickenBridge.scm",(void*)f_21099},
{"f_21087ChickenBridge.scm",(void*)f_21087},
{"f_21013ChickenBridge.scm",(void*)f_21013},
{"f_21064ChickenBridge.scm",(void*)f_21064},
{"f_21056ChickenBridge.scm",(void*)f_21056},
{"f_21016ChickenBridge.scm",(void*)f_21016},
{"f_21027ChickenBridge.scm",(void*)f_21027},
{"f_21031ChickenBridge.scm",(void*)f_21031},
{"f_21023ChickenBridge.scm",(void*)f_21023},
{"f_20864ChickenBridge.scm",(void*)f_20864},
{"f_20912ChickenBridge.scm",(void*)f_20912},
{"f_20922ChickenBridge.scm",(void*)f_20922},
{"f_20933ChickenBridge.scm",(void*)f_20933},
{"f_20970ChickenBridge.scm",(void*)f_20970},
{"f_20945ChickenBridge.scm",(void*)f_20945},
{"f_20936ChickenBridge.scm",(void*)f_20936},
{"f_20874ChickenBridge.scm",(void*)f_20874},
{"f_20910ChickenBridge.scm",(void*)f_20910},
{"f_20881ChickenBridge.scm",(void*)f_20881},
{"f_20513ChickenBridge.scm",(void*)f_20513},
{"f_20520ChickenBridge.scm",(void*)f_20520},
{"f_20754ChickenBridge.scm",(void*)f_20754},
{"f_20764ChickenBridge.scm",(void*)f_20764},
{"f_20775ChickenBridge.scm",(void*)f_20775},
{"f_20787ChickenBridge.scm",(void*)f_20787},
{"f_20790ChickenBridge.scm",(void*)f_20790},
{"f_20778ChickenBridge.scm",(void*)f_20778},
{"f_20526ChickenBridge.scm",(void*)f_20526},
{"f_20752ChickenBridge.scm",(void*)f_20752},
{"f_20748ChickenBridge.scm",(void*)f_20748},
{"f_20694ChickenBridge.scm",(void*)f_20694},
{"f_20659ChickenBridge.scm",(void*)f_20659},
{"f_20675ChickenBridge.scm",(void*)f_20675},
{"f_20630ChickenBridge.scm",(void*)f_20630},
{"f_20554ChickenBridge.scm",(void*)f_20554},
{"f_20557ChickenBridge.scm",(void*)f_20557},
{"f_20621ChickenBridge.scm",(void*)f_20621},
{"f_20617ChickenBridge.scm",(void*)f_20617},
{"f_20537ChickenBridge.scm",(void*)f_20537},
{"f_20548ChickenBridge.scm",(void*)f_20548},
{"f_20544ChickenBridge.scm",(void*)f_20544},
{"f_20466ChickenBridge.scm",(void*)f_20466},
{"f_20499ChickenBridge.scm",(void*)f_20499},
{"f_20481ChickenBridge.scm",(void*)f_20481},
{"f_20493ChickenBridge.scm",(void*)f_20493},
{"f_20084ChickenBridge.scm",(void*)f_20084},
{"f_20293ChickenBridge.scm",(void*)f_20293},
{"f_20303ChickenBridge.scm",(void*)f_20303},
{"f_20314ChickenBridge.scm",(void*)f_20314},
{"f_20434ChickenBridge.scm",(void*)f_20434},
{"f_20413ChickenBridge.scm",(void*)f_20413},
{"f_20392ChickenBridge.scm",(void*)f_20392},
{"f_20371ChickenBridge.scm",(void*)f_20371},
{"f_20350ChickenBridge.scm",(void*)f_20350},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20317ChickenBridge.scm",(void*)f_20317},
{"f_20094ChickenBridge.scm",(void*)f_20094},
{"f_20097ChickenBridge.scm",(void*)f_20097},
{"f_20260ChickenBridge.scm",(void*)f_20260},
{"f_20100ChickenBridge.scm",(void*)f_20100},
{"f_20251ChickenBridge.scm",(void*)f_20251},
{"f_20231ChickenBridge.scm",(void*)f_20231},
{"f_20103ChickenBridge.scm",(void*)f_20103},
{"f_20196ChickenBridge.scm",(void*)f_20196},
{"f_20213ChickenBridge.scm",(void*)f_20213},
{"f_20106ChickenBridge.scm",(void*)f_20106},
{"f_20145ChickenBridge.scm",(void*)f_20145},
{"f_20179ChickenBridge.scm",(void*)f_20179},
{"f_20163ChickenBridge.scm",(void*)f_20163},
{"f_20148ChickenBridge.scm",(void*)f_20148},
{"f_20113ChickenBridge.scm",(void*)f_20113},
{"f_20124ChickenBridge.scm",(void*)f_20124},
{"f_20128ChickenBridge.scm",(void*)f_20128},
{"f_20120ChickenBridge.scm",(void*)f_20120},
{"f_20002ChickenBridge.scm",(void*)f_20002},
{"f_20006ChickenBridge.scm",(void*)f_20006},
{"f_20024ChickenBridge.scm",(void*)f_20024},
{"f_19842ChickenBridge.scm",(void*)f_19842},
{"f_19850ChickenBridge.scm",(void*)f_19850},
{"f_19860ChickenBridge.scm",(void*)f_19860},
{"f_19898ChickenBridge.scm",(void*)f_19898},
{"f_19901ChickenBridge.scm",(void*)f_19901},
{"f_19904ChickenBridge.scm",(void*)f_19904},
{"f_19979ChickenBridge.scm",(void*)f_19979},
{"f_19989ChickenBridge.scm",(void*)f_19989},
{"f_19907ChickenBridge.scm",(void*)f_19907},
{"f_19910ChickenBridge.scm",(void*)f_19910},
{"f_19913ChickenBridge.scm",(void*)f_19913},
{"f_19933ChickenBridge.scm",(void*)f_19933},
{"f_19943ChickenBridge.scm",(void*)f_19943},
{"f_19946ChickenBridge.scm",(void*)f_19946},
{"f_19949ChickenBridge.scm",(void*)f_19949},
{"f_19916ChickenBridge.scm",(void*)f_19916},
{"f_19919ChickenBridge.scm",(void*)f_19919},
{"f_19836ChickenBridge.scm",(void*)f_19836},
{"f_19830ChickenBridge.scm",(void*)f_19830},
{"f_19824ChickenBridge.scm",(void*)f_19824},
{"f_19753ChickenBridge.scm",(void*)f_19753},
{"f_19794ChickenBridge.scm",(void*)f_19794},
{"f_19798ChickenBridge.scm",(void*)f_19798},
{"f_19802ChickenBridge.scm",(void*)f_19802},
{"f_19806ChickenBridge.scm",(void*)f_19806},
{"f_19810ChickenBridge.scm",(void*)f_19810},
{"f_19814ChickenBridge.scm",(void*)f_19814},
{"f_19818ChickenBridge.scm",(void*)f_19818},
{"f_19822ChickenBridge.scm",(void*)f_19822},
{"f_19755ChickenBridge.scm",(void*)f_19755},
{"f_19761ChickenBridge.scm",(void*)f_19761},
{"f_19783ChickenBridge.scm",(void*)f_19783},
{"f_19772ChickenBridge.scm",(void*)f_19772},
{"f_19602ChickenBridge.scm",(void*)f_19602},
{"f_19617ChickenBridge.scm",(void*)f_19617},
{"f_19630ChickenBridge.scm",(void*)f_19630},
{"f_19590ChickenBridge.scm",(void*)f_19590},
{"f_19578ChickenBridge.scm",(void*)f_19578},
{"f_19566ChickenBridge.scm",(void*)f_19566},
{"f_19560ChickenBridge.scm",(void*)f_19560},
{"f_19554ChickenBridge.scm",(void*)f_19554},
{"f_19542ChickenBridge.scm",(void*)f_19542},
{"f_19530ChickenBridge.scm",(void*)f_19530},
{"f_19518ChickenBridge.scm",(void*)f_19518},
{"f_19506ChickenBridge.scm",(void*)f_19506},
{"f_19500ChickenBridge.scm",(void*)f_19500},
{"f_19464ChickenBridge.scm",(void*)f_19464},
{"f_19458ChickenBridge.scm",(void*)f_19458},
{"f_19411ChickenBridge.scm",(void*)f_19411},
{"f_19415ChickenBridge.scm",(void*)f_19415},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19440ChickenBridge.scm",(void*)f_19440},
{"f_19418ChickenBridge.scm",(void*)f_19418},
{"f_19402ChickenBridge.scm",(void*)f_19402},
{"f_19406ChickenBridge.scm",(void*)f_19406},
{"f_19249ChickenBridge.scm",(void*)f_19249},
{"f_19376ChickenBridge.scm",(void*)f_19376},
{"f_19389ChickenBridge.scm",(void*)f_19389},
{"f_19371ChickenBridge.scm",(void*)f_19371},
{"f_19252ChickenBridge.scm",(void*)f_19252},
{"f_19368ChickenBridge.scm",(void*)f_19368},
{"f_19352ChickenBridge.scm",(void*)f_19352},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_19288ChickenBridge.scm",(void*)f_19288},
{"f_19298ChickenBridge.scm",(void*)f_19298},
{"f_19301ChickenBridge.scm",(void*)f_19301},
{"f_19283ChickenBridge.scm",(void*)f_19283},
{"f_19072ChickenBridge.scm",(void*)f_19072},
{"f_19076ChickenBridge.scm",(void*)f_19076},
{"f_19081ChickenBridge.scm",(void*)f_19081},
{"f_19084ChickenBridge.scm",(void*)f_19084},
{"f_16896ChickenBridge.scm",(void*)f_16896},
{"f_16909ChickenBridge.scm",(void*)f_16909},
{"f_16916ChickenBridge.scm",(void*)f_16916},
{"f_16923ChickenBridge.scm",(void*)f_16923},
{"f_16902ChickenBridge.scm",(void*)f_16902},
{"f_19088ChickenBridge.scm",(void*)f_19088},
{"f_19125ChickenBridge.scm",(void*)f_19125},
{"f_19218ChickenBridge.scm",(void*)f_19218},
{"f_19228ChickenBridge.scm",(void*)f_19228},
{"f_19131ChickenBridge.scm",(void*)f_19131},
{"f_19188ChickenBridge.scm",(void*)f_19188},
{"f_19198ChickenBridge.scm",(void*)f_19198},
{"f_19139ChickenBridge.scm",(void*)f_19139},
{"f_19153ChickenBridge.scm",(void*)f_19153},
{"f_19157ChickenBridge.scm",(void*)f_19157},
{"f_19161ChickenBridge.scm",(void*)f_19161},
{"f_19165ChickenBridge.scm",(void*)f_19165},
{"f_19172ChickenBridge.scm",(void*)f_19172},
{"f_19149ChickenBridge.scm",(void*)f_19149},
{"f_19142ChickenBridge.scm",(void*)f_19142},
{"f_19091ChickenBridge.scm",(void*)f_19091},
{"f_18023ChickenBridge.scm",(void*)f_18023},
{"f_18036ChickenBridge.scm",(void*)f_18036},
{"f_18086ChickenBridge.scm",(void*)f_18086},
{"f_18183ChickenBridge.scm",(void*)f_18183},
{"f_18251ChickenBridge.scm",(void*)f_18251},
{"f_18508ChickenBridge.scm",(void*)f_18508},
{"f_18258ChickenBridge.scm",(void*)f_18258},
{"f_18496ChickenBridge.scm",(void*)f_18496},
{"f_18447ChickenBridge.scm",(void*)f_18447},
{"f_18453ChickenBridge.scm",(void*)f_18453},
{"f_18477ChickenBridge.scm",(void*)f_18477},
{"f_18473ChickenBridge.scm",(void*)f_18473},
{"f_18461ChickenBridge.scm",(void*)f_18461},
{"f_18261ChickenBridge.scm",(void*)f_18261},
{"f_18423ChickenBridge.scm",(void*)f_18423},
{"f_18427ChickenBridge.scm",(void*)f_18427},
{"f_18264ChickenBridge.scm",(void*)f_18264},
{"f_18400ChickenBridge.scm",(void*)f_18400},
{"f_18404ChickenBridge.scm",(void*)f_18404},
{"f_18267ChickenBridge.scm",(void*)f_18267},
{"f_18377ChickenBridge.scm",(void*)f_18377},
{"f_18381ChickenBridge.scm",(void*)f_18381},
{"f_18270ChickenBridge.scm",(void*)f_18270},
{"f_18302ChickenBridge.scm",(void*)f_18302},
{"f_18320ChickenBridge.scm",(void*)f_18320},
{"f_18338ChickenBridge.scm",(void*)f_18338},
{"f_18356ChickenBridge.scm",(void*)f_18356},
{"f_18273ChickenBridge.scm",(void*)f_18273},
{"f_18277ChickenBridge.scm",(void*)f_18277},
{"f_18187ChickenBridge.scm",(void*)f_18187},
{"f_18191ChickenBridge.scm",(void*)f_18191},
{"f_18195ChickenBridge.scm",(void*)f_18195},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_18094ChickenBridge.scm",(void*)f_18094},
{"f_18098ChickenBridge.scm",(void*)f_18098},
{"f_18117ChickenBridge.scm",(void*)f_18117},
{"f_18121ChickenBridge.scm",(void*)f_18121},
{"f_18101ChickenBridge.scm",(void*)f_18101},
{"f_18105ChickenBridge.scm",(void*)f_18105},
{"f_18040ChickenBridge.scm",(void*)f_18040},
{"f_18044ChickenBridge.scm",(void*)f_18044},
{"f_18048ChickenBridge.scm",(void*)f_18048},
{"f_18030ChickenBridge.scm",(void*)f_18030},
{"f_17845ChickenBridge.scm",(void*)f_17845},
{"f_17857ChickenBridge.scm",(void*)f_17857},
{"f_17876ChickenBridge.scm",(void*)f_17876},
{"f_17894ChickenBridge.scm",(void*)f_17894},
{"f_17926ChickenBridge.scm",(void*)f_17926},
{"f_17929ChickenBridge.scm",(void*)f_17929},
{"f_17922ChickenBridge.scm",(void*)f_17922},
{"f_17908ChickenBridge.scm",(void*)f_17908},
{"f_17879ChickenBridge.scm",(void*)f_17879},
{"f_17824ChickenBridge.scm",(void*)f_17824},
{"f_17831ChickenBridge.scm",(void*)f_17831},
{"f_17834ChickenBridge.scm",(void*)f_17834},
{"f_17840ChickenBridge.scm",(void*)f_17840},
{"f_17759ChickenBridge.scm",(void*)f_17759},
{"f_17768ChickenBridge.scm",(void*)f_17768},
{"f_17791ChickenBridge.scm",(void*)f_17791},
{"f_17781ChickenBridge.scm",(void*)f_17781},
{"f_17715ChickenBridge.scm",(void*)f_17715},
{"f_17703ChickenBridge.scm",(void*)f_17703},
{"f_17601ChickenBridge.scm",(void*)f_17601},
{"f_17553ChickenBridge.scm",(void*)f_17553},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_16941ChickenBridge.scm",(void*)f_16941},
{"f_17367ChickenBridge.scm",(void*)f_17367},
{"f_17363ChickenBridge.scm",(void*)f_17363},
{"f_17359ChickenBridge.scm",(void*)f_17359},
{"f_16944ChickenBridge.scm",(void*)f_16944},
{"f_17067ChickenBridge.scm",(void*)f_17067},
{"f_16300ChickenBridge.scm",(void*)f_16300},
{"f_17073ChickenBridge.scm",(void*)f_17073},
{"f_16316ChickenBridge.scm",(void*)f_16316},
{"f_17161ChickenBridge.scm",(void*)f_17161},
{"f_17231ChickenBridge.scm",(void*)f_17231},
{"f_16332ChickenBridge.scm",(void*)f_16332},
{"f_17234ChickenBridge.scm",(void*)f_17234},
{"f_16364ChickenBridge.scm",(void*)f_16364},
{"f_17312ChickenBridge.scm",(void*)f_17312},
{"f_17338ChickenBridge.scm",(void*)f_17338},
{"f_17332ChickenBridge.scm",(void*)f_17332},
{"f_17321ChickenBridge.scm",(void*)f_17321},
{"f_17263ChickenBridge.scm",(void*)f_17263},
{"f_17273ChickenBridge.scm",(void*)f_17273},
{"f_17299ChickenBridge.scm",(void*)f_17299},
{"f_17293ChickenBridge.scm",(void*)f_17293},
{"f_17276ChickenBridge.scm",(void*)f_17276},
{"f_17286ChickenBridge.scm",(void*)f_17286},
{"f_17279ChickenBridge.scm",(void*)f_17279},
{"f_17240ChickenBridge.scm",(void*)f_17240},
{"f_17249ChickenBridge.scm",(void*)f_17249},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17167ChickenBridge.scm",(void*)f_17167},
{"f_17185ChickenBridge.scm",(void*)f_17185},
{"f_17218ChickenBridge.scm",(void*)f_17218},
{"f_17204ChickenBridge.scm",(void*)f_17204},
{"f_17212ChickenBridge.scm",(void*)f_17212},
{"f_17195ChickenBridge.scm",(void*)f_17195},
{"f_17170ChickenBridge.scm",(void*)f_17170},
{"f_17082ChickenBridge.scm",(void*)f_17082},
{"f_17104ChickenBridge.scm",(void*)f_17104},
{"f_17151ChickenBridge.scm",(void*)f_17151},
{"f_17137ChickenBridge.scm",(void*)f_17137},
{"f_17145ChickenBridge.scm",(void*)f_17145},
{"f_17117ChickenBridge.scm",(void*)f_17117},
{"f_17120ChickenBridge.scm",(void*)f_17120},
{"f_17085ChickenBridge.scm",(void*)f_17085},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_17088ChickenBridge.scm",(void*)f_17088},
{"f_16953ChickenBridge.scm",(void*)f_16953},
{"f_16959ChickenBridge.scm",(void*)f_16959},
{"f_17017ChickenBridge.scm",(void*)f_17017},
{"f_17020ChickenBridge.scm",(void*)f_17020},
{"f_17041ChickenBridge.scm",(void*)f_17041},
{"f_17052ChickenBridge.scm",(void*)f_17052},
{"f_17031ChickenBridge.scm",(void*)f_17031},
{"f_16965ChickenBridge.scm",(void*)f_16965},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_17011ChickenBridge.scm",(void*)f_17011},
{"f_16981ChickenBridge.scm",(void*)f_16981},
{"f_16996ChickenBridge.scm",(void*)f_16996},
{"f_17000ChickenBridge.scm",(void*)f_17000},
{"f_17004ChickenBridge.scm",(void*)f_17004},
{"f_16988ChickenBridge.scm",(void*)f_16988},
{"f_16830ChickenBridge.scm",(void*)f_16830},
{"f_16832ChickenBridge.scm",(void*)f_16832},
{"f_16880ChickenBridge.scm",(void*)f_16880},
{"f_16836ChickenBridge.scm",(void*)f_16836},
{"f_16839ChickenBridge.scm",(void*)f_16839},
{"f_16844ChickenBridge.scm",(void*)f_16844},
{"f_16865ChickenBridge.scm",(void*)f_16865},
{"f_16822ChickenBridge.scm",(void*)f_16822},
{"f_16824ChickenBridge.scm",(void*)f_16824},
{"f_16614ChickenBridge.scm",(void*)f_16614},
{"f_16631ChickenBridge.scm",(void*)f_16631},
{"f_16635ChickenBridge.scm",(void*)f_16635},
{"f_16581ChickenBridge.scm",(void*)f_16581},
{"f_16588ChickenBridge.scm",(void*)f_16588},
{"f_16532ChickenBridge.scm",(void*)f_16532},
{"f_16539ChickenBridge.scm",(void*)f_16539},
{"f_16597ChickenBridge.scm",(void*)f_16597},
{"f_16820ChickenBridge.scm",(void*)f_16820},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_16813ChickenBridge.scm",(void*)f_16813},
{"f_16659ChickenBridge.scm",(void*)f_16659},
{"f_16662ChickenBridge.scm",(void*)f_16662},
{"f_16686ChickenBridge.scm",(void*)f_16686},
{"f_16743ChickenBridge.scm",(void*)f_16743},
{"f_16749ChickenBridge.scm",(void*)f_16749},
{"f_16758ChickenBridge.scm",(void*)f_16758},
{"f_16767ChickenBridge.scm",(void*)f_16767},
{"f_16776ChickenBridge.scm",(void*)f_16776},
{"f_16785ChickenBridge.scm",(void*)f_16785},
{"f_16737ChickenBridge.scm",(void*)f_16737},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_16698ChickenBridge.scm",(void*)f_16698},
{"f_16704ChickenBridge.scm",(void*)f_16704},
{"f_16710ChickenBridge.scm",(void*)f_16710},
{"f_16716ChickenBridge.scm",(void*)f_16716},
{"f_16722ChickenBridge.scm",(void*)f_16722},
{"f_16563ChickenBridge.scm",(void*)f_16563},
{"f_16570ChickenBridge.scm",(void*)f_16570},
{"f_16553ChickenBridge.scm",(void*)f_16553},
{"f_16541ChickenBridge.scm",(void*)f_16541},
{"f_16509ChickenBridge.scm",(void*)f_16509},
{"f_16516ChickenBridge.scm",(void*)f_16516},
{"f_16523ChickenBridge.scm",(void*)f_16523},
{"f_16493ChickenBridge.scm",(void*)f_16493},
{"f_16500ChickenBridge.scm",(void*)f_16500},
{"f_16507ChickenBridge.scm",(void*)f_16507},
{"f_16481ChickenBridge.scm",(void*)f_16481},
{"f_16463ChickenBridge.scm",(void*)f_16463},
{"f_16445ChickenBridge.scm",(void*)f_16445},
{"f_16430ChickenBridge.scm",(void*)f_16430},
{"f_16424ChickenBridge.scm",(void*)f_16424},
{"f_16412ChickenBridge.scm",(void*)f_16412},
{"f_16394ChickenBridge.scm",(void*)f_16394},
{"f_16373ChickenBridge.scm",(void*)f_16373},
{"f_16341ChickenBridge.scm",(void*)f_16341},
{"f_16348ChickenBridge.scm",(void*)f_16348},
{"f_16283ChickenBridge.scm",(void*)f_16283},
{"f_16291ChickenBridge.scm",(void*)f_16291},
{"f_16273ChickenBridge.scm",(void*)f_16273},
{"f_16281ChickenBridge.scm",(void*)f_16281},
{"f_16267ChickenBridge.scm",(void*)f_16267},
{"f_16255ChickenBridge.scm",(void*)f_16255},
{"f_16252ChickenBridge.scm",(void*)f_16252},
{"f_16231ChickenBridge.scm",(void*)f_16231},
{"f_16144ChickenBridge.scm",(void*)f_16144},
{"f_16123ChickenBridge.scm",(void*)f_16123},
{"f_16113ChickenBridge.scm",(void*)f_16113},
{"f_16101ChickenBridge.scm",(void*)f_16101},
{"f_16072ChickenBridge.scm",(void*)f_16072},
{"f_16060ChickenBridge.scm",(void*)f_16060},
{"f_16042ChickenBridge.scm",(void*)f_16042},
{"f_16024ChickenBridge.scm",(void*)f_16024},
{"f_16003ChickenBridge.scm",(void*)f_16003},
{"f_15909ChickenBridge.scm",(void*)f_15909},
{"f_15913ChickenBridge.scm",(void*)f_15913},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15947ChickenBridge.scm",(void*)f_15947},
{"f_15972ChickenBridge.scm",(void*)f_15972},
{"f_15957ChickenBridge.scm",(void*)f_15957},
{"f_15391ChickenBridge.scm",(void*)f_15391},
{"f_15662ChickenBridge.scm",(void*)f_15662},
{"f_15666ChickenBridge.scm",(void*)f_15666},
{"f_15671ChickenBridge.scm",(void*)f_15671},
{"f_15877ChickenBridge.scm",(void*)f_15877},
{"f_15892ChickenBridge.scm",(void*)f_15892},
{"f_15884ChickenBridge.scm",(void*)f_15884},
{"f_15848ChickenBridge.scm",(void*)f_15848},
{"f_15852ChickenBridge.scm",(void*)f_15852},
{"f_15813ChickenBridge.scm",(void*)f_15813},
{"f_15817ChickenBridge.scm",(void*)f_15817},
{"f_15675ChickenBridge.scm",(void*)f_15675},
{"f_15777ChickenBridge.scm",(void*)f_15777},
{"f_15792ChickenBridge.scm",(void*)f_15792},
{"f_15784ChickenBridge.scm",(void*)f_15784},
{"f_15748ChickenBridge.scm",(void*)f_15748},
{"f_15752ChickenBridge.scm",(void*)f_15752},
{"f_15713ChickenBridge.scm",(void*)f_15713},
{"f_15717ChickenBridge.scm",(void*)f_15717},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15681ChickenBridge.scm",(void*)f_15681},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15653ChickenBridge.scm",(void*)f_15653},
{"f_15395ChickenBridge.scm",(void*)f_15395},
{"f_15622ChickenBridge.scm",(void*)f_15622},
{"f_15637ChickenBridge.scm",(void*)f_15637},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15593ChickenBridge.scm",(void*)f_15593},
{"f_15597ChickenBridge.scm",(void*)f_15597},
{"f_15558ChickenBridge.scm",(void*)f_15558},
{"f_15562ChickenBridge.scm",(void*)f_15562},
{"f_15398ChickenBridge.scm",(void*)f_15398},
{"f_15522ChickenBridge.scm",(void*)f_15522},
{"f_15537ChickenBridge.scm",(void*)f_15537},
{"f_15529ChickenBridge.scm",(void*)f_15529},
{"f_15493ChickenBridge.scm",(void*)f_15493},
{"f_15497ChickenBridge.scm",(void*)f_15497},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15462ChickenBridge.scm",(void*)f_15462},
{"f_15401ChickenBridge.scm",(void*)f_15401},
{"f_15404ChickenBridge.scm",(void*)f_15404},
{"f_15407ChickenBridge.scm",(void*)f_15407},
{"f_15419ChickenBridge.scm",(void*)f_15419},
{"f_15437ChickenBridge.scm",(void*)f_15437},
{"f_15425ChickenBridge.scm",(void*)f_15425},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15328ChickenBridge.scm",(void*)f_15328},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_15170ChickenBridge.scm",(void*)f_15170},
{"f_15174ChickenBridge.scm",(void*)f_15174},
{"f_15176ChickenBridge.scm",(void*)f_15176},
{"f_15101ChickenBridge.scm",(void*)f_15101},
{"f_15111ChickenBridge.scm",(void*)f_15111},
{"f_15118ChickenBridge.scm",(void*)f_15118},
{"f_15186ChickenBridge.scm",(void*)f_15186},
{"f_15189ChickenBridge.scm",(void*)f_15189},
{"f_15193ChickenBridge.scm",(void*)f_15193},
{"f_15213ChickenBridge.scm",(void*)f_15213},
{"f_15229ChickenBridge.scm",(void*)f_15229},
{"f_15196ChickenBridge.scm",(void*)f_15196},
{"f_14991ChickenBridge.scm",(void*)f_14991},
{"f_15003ChickenBridge.scm",(void*)f_15003},
{"f_15039ChickenBridge.scm",(void*)f_15039},
{"f_15059ChickenBridge.scm",(void*)f_15059},
{"f_15064ChickenBridge.scm",(void*)f_15064},
{"f_14501ChickenBridge.scm",(void*)f_14501},
{"f_14428ChickenBridge.scm",(void*)f_14428},
{"f_14273ChickenBridge.scm",(void*)f_14273},
{"f_14279ChickenBridge.scm",(void*)f_14279},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14291ChickenBridge.scm",(void*)f_14291},
{"f_14307ChickenBridge.scm",(void*)f_14307},
{"f_14311ChickenBridge.scm",(void*)f_14311},
{"f_14314ChickenBridge.scm",(void*)f_14314},
{"f_14294ChickenBridge.scm",(void*)f_14294},
{"f_14305ChickenBridge.scm",(void*)f_14305},
{"f_14445ChickenBridge.scm",(void*)f_14445},
{"f_14982ChickenBridge.scm",(void*)f_14982},
{"f_14505ChickenBridge.scm",(void*)f_14505},
{"f_14951ChickenBridge.scm",(void*)f_14951},
{"f_14966ChickenBridge.scm",(void*)f_14966},
{"f_14958ChickenBridge.scm",(void*)f_14958},
{"f_14922ChickenBridge.scm",(void*)f_14922},
{"f_14926ChickenBridge.scm",(void*)f_14926},
{"f_14887ChickenBridge.scm",(void*)f_14887},
{"f_14891ChickenBridge.scm",(void*)f_14891},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_14508ChickenBridge.scm",(void*)f_14508},
{"f_14816ChickenBridge.scm",(void*)f_14816},
{"f_14831ChickenBridge.scm",(void*)f_14831},
{"f_14823ChickenBridge.scm",(void*)f_14823},
{"f_14787ChickenBridge.scm",(void*)f_14787},
{"f_14791ChickenBridge.scm",(void*)f_14791},
{"f_14752ChickenBridge.scm",(void*)f_14752},
{"f_14756ChickenBridge.scm",(void*)f_14756},
{"f_14717ChickenBridge.scm",(void*)f_14717},
{"f_14721ChickenBridge.scm",(void*)f_14721},
{"f_14511ChickenBridge.scm",(void*)f_14511},
{"f_14681ChickenBridge.scm",(void*)f_14681},
{"f_14696ChickenBridge.scm",(void*)f_14696},
{"f_14688ChickenBridge.scm",(void*)f_14688},
{"f_14652ChickenBridge.scm",(void*)f_14652},
{"f_14656ChickenBridge.scm",(void*)f_14656},
{"f_14617ChickenBridge.scm",(void*)f_14617},
{"f_14621ChickenBridge.scm",(void*)f_14621},
{"f_14582ChickenBridge.scm",(void*)f_14582},
{"f_14586ChickenBridge.scm",(void*)f_14586},
{"f_14514ChickenBridge.scm",(void*)f_14514},
{"f_14517ChickenBridge.scm",(void*)f_14517},
{"f_14520ChickenBridge.scm",(void*)f_14520},
{"f_14553ChickenBridge.scm",(void*)f_14553},
{"f_14561ChickenBridge.scm",(void*)f_14561},
{"f_14526ChickenBridge.scm",(void*)f_14526},
{"f_14539ChickenBridge.scm",(void*)f_14539},
{"f_14529ChickenBridge.scm",(void*)f_14529},
{"f_14532ChickenBridge.scm",(void*)f_14532},
{"f_14068ChickenBridge.scm",(void*)f_14068},
{"f_14072ChickenBridge.scm",(void*)f_14072},
{"f_14075ChickenBridge.scm",(void*)f_14075},
{"f_14078ChickenBridge.scm",(void*)f_14078},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14260ChickenBridge.scm",(void*)f_14260},
{"f_14264ChickenBridge.scm",(void*)f_14264},
{"f_14084ChickenBridge.scm",(void*)f_14084},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14221ChickenBridge.scm",(void*)f_14221},
{"f_14228ChickenBridge.scm",(void*)f_14228},
{"f_14232ChickenBridge.scm",(void*)f_14232},
{"f_14090ChickenBridge.scm",(void*)f_14090},
{"f_14096ChickenBridge.scm",(void*)f_14096},
{"f_14180ChickenBridge.scm",(void*)f_14180},
{"f_14182ChickenBridge.scm",(void*)f_14182},
{"f_14204ChickenBridge.scm",(void*)f_14204},
{"f_14211ChickenBridge.scm",(void*)f_14211},
{"f_14215ChickenBridge.scm",(void*)f_14215},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14197ChickenBridge.scm",(void*)f_14197},
{"f_14138ChickenBridge.scm",(void*)f_14138},
{"f_14155ChickenBridge.scm",(void*)f_14155},
{"f_14165ChickenBridge.scm",(void*)f_14165},
{"f_14141ChickenBridge.scm",(void*)f_14141},
{"f_14100ChickenBridge.scm",(void*)f_14100},
{"f_14108ChickenBridge.scm",(void*)f_14108},
{"f_14110ChickenBridge.scm",(void*)f_14110},
{"f_14131ChickenBridge.scm",(void*)f_14131},
{"f_13956ChickenBridge.scm",(void*)f_13956},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14025ChickenBridge.scm",(void*)f_14025},
{"f_14058ChickenBridge.scm",(void*)f_14058},
{"f_14054ChickenBridge.scm",(void*)f_14054},
{"f_14039ChickenBridge.scm",(void*)f_14039},
{"f_13963ChickenBridge.scm",(void*)f_13963},
{"f_13971ChickenBridge.scm",(void*)f_13971},
{"f_14016ChickenBridge.scm",(void*)f_14016},
{"f_14004ChickenBridge.scm",(void*)f_14004},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13189ChickenBridge.scm",(void*)f_13189},
{"f_13506ChickenBridge.scm",(void*)f_13506},
{"f_13513ChickenBridge.scm",(void*)f_13513},
{"f_13918ChickenBridge.scm",(void*)f_13918},
{"f_13933ChickenBridge.scm",(void*)f_13933},
{"f_13925ChickenBridge.scm",(void*)f_13925},
{"f_13889ChickenBridge.scm",(void*)f_13889},
{"f_13893ChickenBridge.scm",(void*)f_13893},
{"f_13854ChickenBridge.scm",(void*)f_13854},
{"f_13858ChickenBridge.scm",(void*)f_13858},
{"f_13819ChickenBridge.scm",(void*)f_13819},
{"f_13823ChickenBridge.scm",(void*)f_13823},
{"f_13516ChickenBridge.scm",(void*)f_13516},
{"f_13783ChickenBridge.scm",(void*)f_13783},
{"f_13798ChickenBridge.scm",(void*)f_13798},
{"f_13790ChickenBridge.scm",(void*)f_13790},
{"f_13754ChickenBridge.scm",(void*)f_13754},
{"f_13758ChickenBridge.scm",(void*)f_13758},
{"f_13719ChickenBridge.scm",(void*)f_13719},
{"f_13723ChickenBridge.scm",(void*)f_13723},
{"f_13684ChickenBridge.scm",(void*)f_13684},
{"f_13688ChickenBridge.scm",(void*)f_13688},
{"f_13519ChickenBridge.scm",(void*)f_13519},
{"f_13648ChickenBridge.scm",(void*)f_13648},
{"f_13663ChickenBridge.scm",(void*)f_13663},
{"f_13655ChickenBridge.scm",(void*)f_13655},
{"f_13619ChickenBridge.scm",(void*)f_13619},
{"f_13623ChickenBridge.scm",(void*)f_13623},
{"f_13584ChickenBridge.scm",(void*)f_13584},
{"f_13588ChickenBridge.scm",(void*)f_13588},
{"f_13549ChickenBridge.scm",(void*)f_13549},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13522ChickenBridge.scm",(void*)f_13522},
{"f_13525ChickenBridge.scm",(void*)f_13525},
{"f_13193ChickenBridge.scm",(void*)f_13193},
{"f_13196ChickenBridge.scm",(void*)f_13196},
{"f_13470ChickenBridge.scm",(void*)f_13470},
{"f_13474ChickenBridge.scm",(void*)f_13474},
{"f_13477ChickenBridge.scm",(void*)f_13477},
{"f_13480ChickenBridge.scm",(void*)f_13480},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13496ChickenBridge.scm",(void*)f_13496},
{"f_13486ChickenBridge.scm",(void*)f_13486},
{"f_13202ChickenBridge.scm",(void*)f_13202},
{"f_13209ChickenBridge.scm",(void*)f_13209},
{"f_13440ChickenBridge.scm",(void*)f_13440},
{"f_13455ChickenBridge.scm",(void*)f_13455},
{"f_13447ChickenBridge.scm",(void*)f_13447},
{"f_13411ChickenBridge.scm",(void*)f_13411},
{"f_13415ChickenBridge.scm",(void*)f_13415},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13380ChickenBridge.scm",(void*)f_13380},
{"f_13212ChickenBridge.scm",(void*)f_13212},
{"f_13340ChickenBridge.scm",(void*)f_13340},
{"f_13355ChickenBridge.scm",(void*)f_13355},
{"f_13347ChickenBridge.scm",(void*)f_13347},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13315ChickenBridge.scm",(void*)f_13315},
{"f_13276ChickenBridge.scm",(void*)f_13276},
{"f_13280ChickenBridge.scm",(void*)f_13280},
{"f_13215ChickenBridge.scm",(void*)f_13215},
{"f_13218ChickenBridge.scm",(void*)f_13218},
{"f_13233ChickenBridge.scm",(void*)f_13233},
{"f_13255ChickenBridge.scm",(void*)f_13255},
{"f_13239ChickenBridge.scm",(void*)f_13239},
{"f_13247ChickenBridge.scm",(void*)f_13247},
{"f_13221ChickenBridge.scm",(void*)f_13221},
{"f_13224ChickenBridge.scm",(void*)f_13224},
{"f_13106ChickenBridge.scm",(void*)f_13106},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13088ChickenBridge.scm",(void*)f_13088},
{"f_13070ChickenBridge.scm",(void*)f_13070},
{"f_13052ChickenBridge.scm",(void*)f_13052},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13016ChickenBridge.scm",(void*)f_13016},
{"f_12794ChickenBridge.scm",(void*)f_12794},
{"f_12844ChickenBridge.scm",(void*)f_12844},
{"f_12989ChickenBridge.scm",(void*)f_12989},
{"f_12870ChickenBridge.scm",(void*)f_12870},
{"f_12985ChickenBridge.scm",(void*)f_12985},
{"f_12970ChickenBridge.scm",(void*)f_12970},
{"f_12951ChickenBridge.scm",(void*)f_12951},
{"f_12924ChickenBridge.scm",(void*)f_12924},
{"f_12877ChickenBridge.scm",(void*)f_12877},
{"f_12847ChickenBridge.scm",(void*)f_12847},
{"f_12797ChickenBridge.scm",(void*)f_12797},
{"f_12803ChickenBridge.scm",(void*)f_12803},
{"f_12819ChickenBridge.scm",(void*)f_12819},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12320ChickenBridge.scm",(void*)f_12320},
{"f_12784ChickenBridge.scm",(void*)f_12784},
{"f_12324ChickenBridge.scm",(void*)f_12324},
{"f_12756ChickenBridge.scm",(void*)f_12756},
{"f_12771ChickenBridge.scm",(void*)f_12771},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12727ChickenBridge.scm",(void*)f_12727},
{"f_12731ChickenBridge.scm",(void*)f_12731},
{"f_12692ChickenBridge.scm",(void*)f_12692},
{"f_12696ChickenBridge.scm",(void*)f_12696},
{"f_12657ChickenBridge.scm",(void*)f_12657},
{"f_12661ChickenBridge.scm",(void*)f_12661},
{"f_12327ChickenBridge.scm",(void*)f_12327},
{"f_12621ChickenBridge.scm",(void*)f_12621},
{"f_12636ChickenBridge.scm",(void*)f_12636},
{"f_12628ChickenBridge.scm",(void*)f_12628},
{"f_12592ChickenBridge.scm",(void*)f_12592},
{"f_12596ChickenBridge.scm",(void*)f_12596},
{"f_12557ChickenBridge.scm",(void*)f_12557},
{"f_12561ChickenBridge.scm",(void*)f_12561},
{"f_12522ChickenBridge.scm",(void*)f_12522},
{"f_12526ChickenBridge.scm",(void*)f_12526},
{"f_12330ChickenBridge.scm",(void*)f_12330},
{"f_12486ChickenBridge.scm",(void*)f_12486},
{"f_12501ChickenBridge.scm",(void*)f_12501},
{"f_12493ChickenBridge.scm",(void*)f_12493},
{"f_12457ChickenBridge.scm",(void*)f_12457},
{"f_12461ChickenBridge.scm",(void*)f_12461},
{"f_12422ChickenBridge.scm",(void*)f_12422},
{"f_12426ChickenBridge.scm",(void*)f_12426},
{"f_12387ChickenBridge.scm",(void*)f_12387},
{"f_12391ChickenBridge.scm",(void*)f_12391},
{"f_12333ChickenBridge.scm",(void*)f_12333},
{"f_12336ChickenBridge.scm",(void*)f_12336},
{"f_12339ChickenBridge.scm",(void*)f_12339},
{"f_12354ChickenBridge.scm",(void*)f_12354},
{"f_12366ChickenBridge.scm",(void*)f_12366},
{"f_12345ChickenBridge.scm",(void*)f_12345},
{"f_12348ChickenBridge.scm",(void*)f_12348},
{"f_12244ChickenBridge.scm",(void*)f_12244},
{"f_12248ChickenBridge.scm",(void*)f_12248},
{"f_12267ChickenBridge.scm",(void*)f_12267},
{"f_12277ChickenBridge.scm",(void*)f_12277},
{"f_12279ChickenBridge.scm",(void*)f_12279},
{"f_12296ChickenBridge.scm",(void*)f_12296},
{"f_12299ChickenBridge.scm",(void*)f_12299},
{"f_12310ChickenBridge.scm",(void*)f_12310},
{"f_12251ChickenBridge.scm",(void*)f_12251},
{"f_11981ChickenBridge.scm",(void*)f_11981},
{"f_12234ChickenBridge.scm",(void*)f_12234},
{"f_11985ChickenBridge.scm",(void*)f_11985},
{"f_12206ChickenBridge.scm",(void*)f_12206},
{"f_12221ChickenBridge.scm",(void*)f_12221},
{"f_12213ChickenBridge.scm",(void*)f_12213},
{"f_12177ChickenBridge.scm",(void*)f_12177},
{"f_12181ChickenBridge.scm",(void*)f_12181},
{"f_12142ChickenBridge.scm",(void*)f_12142},
{"f_12146ChickenBridge.scm",(void*)f_12146},
{"f_11988ChickenBridge.scm",(void*)f_11988},
{"f_12106ChickenBridge.scm",(void*)f_12106},
{"f_12121ChickenBridge.scm",(void*)f_12121},
{"f_12113ChickenBridge.scm",(void*)f_12113},
{"f_12077ChickenBridge.scm",(void*)f_12077},
{"f_12081ChickenBridge.scm",(void*)f_12081},
{"f_12042ChickenBridge.scm",(void*)f_12042},
{"f_12046ChickenBridge.scm",(void*)f_12046},
{"f_11991ChickenBridge.scm",(void*)f_11991},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_11997ChickenBridge.scm",(void*)f_11997},
{"f_12009ChickenBridge.scm",(void*)f_12009},
{"f_12021ChickenBridge.scm",(void*)f_12021},
{"f_12003ChickenBridge.scm",(void*)f_12003},
{"f_11945ChickenBridge.scm",(void*)f_11945},
{"f_11949ChickenBridge.scm",(void*)f_11949},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_11965ChickenBridge.scm",(void*)f_11965},
{"f_11958ChickenBridge.scm",(void*)f_11958},
{"f_11698ChickenBridge.scm",(void*)f_11698},
{"f_11702ChickenBridge.scm",(void*)f_11702},
{"f_11915ChickenBridge.scm",(void*)f_11915},
{"f_11930ChickenBridge.scm",(void*)f_11930},
{"f_11922ChickenBridge.scm",(void*)f_11922},
{"f_11886ChickenBridge.scm",(void*)f_11886},
{"f_11890ChickenBridge.scm",(void*)f_11890},
{"f_11851ChickenBridge.scm",(void*)f_11851},
{"f_11855ChickenBridge.scm",(void*)f_11855},
{"f_11705ChickenBridge.scm",(void*)f_11705},
{"f_11815ChickenBridge.scm",(void*)f_11815},
{"f_11830ChickenBridge.scm",(void*)f_11830},
{"f_11822ChickenBridge.scm",(void*)f_11822},
{"f_11786ChickenBridge.scm",(void*)f_11786},
{"f_11790ChickenBridge.scm",(void*)f_11790},
{"f_11751ChickenBridge.scm",(void*)f_11751},
{"f_11755ChickenBridge.scm",(void*)f_11755},
{"f_11708ChickenBridge.scm",(void*)f_11708},
{"f_11711ChickenBridge.scm",(void*)f_11711},
{"f_11714ChickenBridge.scm",(void*)f_11714},
{"f_11722ChickenBridge.scm",(void*)f_11722},
{"f_11730ChickenBridge.scm",(void*)f_11730},
{"f_11720ChickenBridge.scm",(void*)f_11720},
{"f_11483ChickenBridge.scm",(void*)f_11483},
{"f_11487ChickenBridge.scm",(void*)f_11487},
{"f_11696ChickenBridge.scm",(void*)f_11696},
{"f_11649ChickenBridge.scm",(void*)f_11649},
{"f_11661ChickenBridge.scm",(void*)f_11661},
{"f_11517ChickenBridge.scm",(void*)f_11517},
{"f_11520ChickenBridge.scm",(void*)f_11520},
{"f_11526ChickenBridge.scm",(void*)f_11526},
{"f_11529ChickenBridge.scm",(void*)f_11529},
{"f_11617ChickenBridge.scm",(void*)f_11617},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11611ChickenBridge.scm",(void*)f_11611},
{"f_11538ChickenBridge.scm",(void*)f_11538},
{"f_11541ChickenBridge.scm",(void*)f_11541},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11503ChickenBridge.scm",(void*)f_11503},
{"f_11013ChickenBridge.scm",(void*)f_11013},
{"f_11017ChickenBridge.scm",(void*)f_11017},
{"f_11453ChickenBridge.scm",(void*)f_11453},
{"f_11468ChickenBridge.scm",(void*)f_11468},
{"f_11460ChickenBridge.scm",(void*)f_11460},
{"f_11424ChickenBridge.scm",(void*)f_11424},
{"f_11428ChickenBridge.scm",(void*)f_11428},
{"f_11389ChickenBridge.scm",(void*)f_11389},
{"f_11393ChickenBridge.scm",(void*)f_11393},
{"f_11354ChickenBridge.scm",(void*)f_11354},
{"f_11358ChickenBridge.scm",(void*)f_11358},
{"f_11020ChickenBridge.scm",(void*)f_11020},
{"f_11318ChickenBridge.scm",(void*)f_11318},
{"f_11333ChickenBridge.scm",(void*)f_11333},
{"f_11325ChickenBridge.scm",(void*)f_11325},
{"f_11289ChickenBridge.scm",(void*)f_11289},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11254ChickenBridge.scm",(void*)f_11254},
{"f_11258ChickenBridge.scm",(void*)f_11258},
{"f_11219ChickenBridge.scm",(void*)f_11219},
{"f_11223ChickenBridge.scm",(void*)f_11223},
{"f_11023ChickenBridge.scm",(void*)f_11023},
{"f_11183ChickenBridge.scm",(void*)f_11183},
{"f_11198ChickenBridge.scm",(void*)f_11198},
{"f_11190ChickenBridge.scm",(void*)f_11190},
{"f_11154ChickenBridge.scm",(void*)f_11154},
{"f_11158ChickenBridge.scm",(void*)f_11158},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11123ChickenBridge.scm",(void*)f_11123},
{"f_11084ChickenBridge.scm",(void*)f_11084},
{"f_11088ChickenBridge.scm",(void*)f_11088},
{"f_11026ChickenBridge.scm",(void*)f_11026},
{"f_11029ChickenBridge.scm",(void*)f_11029},
{"f_11032ChickenBridge.scm",(void*)f_11032},
{"f_11055ChickenBridge.scm",(void*)f_11055},
{"f_11063ChickenBridge.scm",(void*)f_11063},
{"f_11038ChickenBridge.scm",(void*)f_11038},
{"f_11041ChickenBridge.scm",(void*)f_11041},
{"f_10933ChickenBridge.scm",(void*)f_10933},
{"f_10924ChickenBridge.scm",(void*)f_10924},
{"f_10852ChickenBridge.scm",(void*)f_10852},
{"f_10856ChickenBridge.scm",(void*)f_10856},
{"f_10859ChickenBridge.scm",(void*)f_10859},
{"f_10597ChickenBridge.scm",(void*)f_10597},
{"f_10601ChickenBridge.scm",(void*)f_10601},
{"f_10822ChickenBridge.scm",(void*)f_10822},
{"f_10837ChickenBridge.scm",(void*)f_10837},
{"f_10829ChickenBridge.scm",(void*)f_10829},
{"f_10793ChickenBridge.scm",(void*)f_10793},
{"f_10797ChickenBridge.scm",(void*)f_10797},
{"f_10758ChickenBridge.scm",(void*)f_10758},
{"f_10762ChickenBridge.scm",(void*)f_10762},
{"f_10604ChickenBridge.scm",(void*)f_10604},
{"f_10722ChickenBridge.scm",(void*)f_10722},
{"f_10737ChickenBridge.scm",(void*)f_10737},
{"f_10729ChickenBridge.scm",(void*)f_10729},
{"f_10693ChickenBridge.scm",(void*)f_10693},
{"f_10697ChickenBridge.scm",(void*)f_10697},
{"f_10658ChickenBridge.scm",(void*)f_10658},
{"f_10662ChickenBridge.scm",(void*)f_10662},
{"f_10607ChickenBridge.scm",(void*)f_10607},
{"f_10610ChickenBridge.scm",(void*)f_10610},
{"f_10613ChickenBridge.scm",(void*)f_10613},
{"f_10625ChickenBridge.scm",(void*)f_10625},
{"f_10637ChickenBridge.scm",(void*)f_10637},
{"f_10619ChickenBridge.scm",(void*)f_10619},
{"f_10482ChickenBridge.scm",(void*)f_10482},
{"f_10595ChickenBridge.scm",(void*)f_10595},
{"f_10492ChickenBridge.scm",(void*)f_10492},
{"f_10580ChickenBridge.scm",(void*)f_10580},
{"f_10591ChickenBridge.scm",(void*)f_10591},
{"f_10587ChickenBridge.scm",(void*)f_10587},
{"f_10495ChickenBridge.scm",(void*)f_10495},
{"f_10577ChickenBridge.scm",(void*)f_10577},
{"f_10503ChickenBridge.scm",(void*)f_10503},
{"f_10567ChickenBridge.scm",(void*)f_10567},
{"f_10512ChickenBridge.scm",(void*)f_10512},
{"f_10531ChickenBridge.scm",(void*)f_10531},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10541ChickenBridge.scm",(void*)f_10541},
{"f_10556ChickenBridge.scm",(void*)f_10556},
{"f_10544ChickenBridge.scm",(void*)f_10544},
{"f_10515ChickenBridge.scm",(void*)f_10515},
{"f_10525ChickenBridge.scm",(void*)f_10525},
{"f_10506ChickenBridge.scm",(void*)f_10506},
{"f_10509ChickenBridge.scm",(void*)f_10509},
{"f_10436ChickenBridge.scm",(void*)f_10436},
{"f_10427ChickenBridge.scm",(void*)f_10427},
{"f_10126ChickenBridge.scm",(void*)f_10126},
{"f_10133ChickenBridge.scm",(void*)f_10133},
{"f_10422ChickenBridge.scm",(void*)f_10422},
{"f_10136ChickenBridge.scm",(void*)f_10136},
{"f_10407ChickenBridge.scm",(void*)f_10407},
{"f_10399ChickenBridge.scm",(void*)f_10399},
{"f_10391ChickenBridge.scm",(void*)f_10391},
{"f_10394ChickenBridge.scm",(void*)f_10394},
{"f_10362ChickenBridge.scm",(void*)f_10362},
{"f_10385ChickenBridge.scm",(void*)f_10385},
{"f_10368ChickenBridge.scm",(void*)f_10368},
{"f_10372ChickenBridge.scm",(void*)f_10372},
{"f_10139ChickenBridge.scm",(void*)f_10139},
{"f_10145ChickenBridge.scm",(void*)f_10145},
{"f_10237ChickenBridge.scm",(void*)f_10237},
{"f_10349ChickenBridge.scm",(void*)f_10349},
{"f_10356ChickenBridge.scm",(void*)f_10356},
{"f_10260ChickenBridge.scm",(void*)f_10260},
{"f_10262ChickenBridge.scm",(void*)f_10262},
{"f_10311ChickenBridge.scm",(void*)f_10311},
{"f_10346ChickenBridge.scm",(void*)f_10346},
{"f_10335ChickenBridge.scm",(void*)f_10335},
{"f_10480ChickenBridge.scm",(void*)f_10480},
{"f_10455ChickenBridge.scm",(void*)f_10455},
{"f_10476ChickenBridge.scm",(void*)f_10476},
{"f_10472ChickenBridge.scm",(void*)f_10472},
{"f_10464ChickenBridge.scm",(void*)f_10464},
{"f_10328ChickenBridge.scm",(void*)f_10328},
{"f_10321ChickenBridge.scm",(void*)f_10321},
{"f_10269ChickenBridge.scm",(void*)f_10269},
{"f_10309ChickenBridge.scm",(void*)f_10309},
{"f_10273ChickenBridge.scm",(void*)f_10273},
{"f_10305ChickenBridge.scm",(void*)f_10305},
{"f_10292ChickenBridge.scm",(void*)f_10292},
{"f_10300ChickenBridge.scm",(void*)f_10300},
{"f_10296ChickenBridge.scm",(void*)f_10296},
{"f_10276ChickenBridge.scm",(void*)f_10276},
{"f_10279ChickenBridge.scm",(void*)f_10279},
{"f_10253ChickenBridge.scm",(void*)f_10253},
{"f_10240ChickenBridge.scm",(void*)f_10240},
{"f_10249ChickenBridge.scm",(void*)f_10249},
{"f_10244ChickenBridge.scm",(void*)f_10244},
{"f_10151ChickenBridge.scm",(void*)f_10151},
{"f_10231ChickenBridge.scm",(void*)f_10231},
{"f_10211ChickenBridge.scm",(void*)f_10211},
{"f_10217ChickenBridge.scm",(void*)f_10217},
{"f_10228ChickenBridge.scm",(void*)f_10228},
{"f_10208ChickenBridge.scm",(void*)f_10208},
{"f_10196ChickenBridge.scm",(void*)f_10196},
{"f_10199ChickenBridge.scm",(void*)f_10199},
{"f_10154ChickenBridge.scm",(void*)f_10154},
{"f_10190ChickenBridge.scm",(void*)f_10190},
{"f_10185ChickenBridge.scm",(void*)f_10185},
{"f_10157ChickenBridge.scm",(void*)f_10157},
{"f_10170ChickenBridge.scm",(void*)f_10170},
{"f_10160ChickenBridge.scm",(void*)f_10160},
{"f_10163ChickenBridge.scm",(void*)f_10163},
{"f_10166ChickenBridge.scm",(void*)f_10166},
{"f_10003ChickenBridge.scm",(void*)f_10003},
{"f_10062ChickenBridge.scm",(void*)f_10062},
{"f_10072ChickenBridge.scm",(void*)f_10072},
{"f_10074ChickenBridge.scm",(void*)f_10074},
{"f_10103ChickenBridge.scm",(void*)f_10103},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10093ChickenBridge.scm",(void*)f_10093},
{"f_10024ChickenBridge.scm",(void*)f_10024},
{"f_10056ChickenBridge.scm",(void*)f_10056},
{"f_9984ChickenBridge.scm",(void*)f_9984},
{"f_9991ChickenBridge.scm",(void*)f_9991},
{"f_9998ChickenBridge.scm",(void*)f_9998},
{"f_9965ChickenBridge.scm",(void*)f_9965},
{"f_9972ChickenBridge.scm",(void*)f_9972},
{"f_9979ChickenBridge.scm",(void*)f_9979},
{"f_9785ChickenBridge.scm",(void*)f_9785},
{"f_9789ChickenBridge.scm",(void*)f_9789},
{"f_9792ChickenBridge.scm",(void*)f_9792},
{"f_9795ChickenBridge.scm",(void*)f_9795},
{"f_9798ChickenBridge.scm",(void*)f_9798},
{"f_9955ChickenBridge.scm",(void*)f_9955},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9801ChickenBridge.scm",(void*)f_9801},
{"f_9804ChickenBridge.scm",(void*)f_9804},
{"f_9810ChickenBridge.scm",(void*)f_9810},
{"f_9816ChickenBridge.scm",(void*)f_9816},
{"f_9879ChickenBridge.scm",(void*)f_9879},
{"f_9893ChickenBridge.scm",(void*)f_9893},
{"f_9819ChickenBridge.scm",(void*)f_9819},
{"f_9822ChickenBridge.scm",(void*)f_9822},
{"f_9828ChickenBridge.scm",(void*)f_9828},
{"f_9841ChickenBridge.scm",(void*)f_9841},
{"f_9831ChickenBridge.scm",(void*)f_9831},
{"f_9834ChickenBridge.scm",(void*)f_9834},
{"f_9775ChickenBridge.scm",(void*)f_9775},
{"f_9720ChickenBridge.scm",(void*)f_9720},
{"f_9711ChickenBridge.scm",(void*)f_9711},
{"f_9594ChickenBridge.scm",(void*)f_9594},
{"f_9585ChickenBridge.scm",(void*)f_9585},
{"f_9576ChickenBridge.scm",(void*)f_9576},
{"f_9567ChickenBridge.scm",(void*)f_9567},
{"f_9558ChickenBridge.scm",(void*)f_9558},
{"f_9540ChickenBridge.scm",(void*)f_9540},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9522ChickenBridge.scm",(void*)f_9522},
{"f_9504ChickenBridge.scm",(void*)f_9504},
{"f_9495ChickenBridge.scm",(void*)f_9495},
{"f_9486ChickenBridge.scm",(void*)f_9486},
{"f_9471ChickenBridge.scm",(void*)f_9471},
{"f_9426ChickenBridge.scm",(void*)f_9426},
{"f_9408ChickenBridge.scm",(void*)f_9408},
{"f_9399ChickenBridge.scm",(void*)f_9399},
{"f_9372ChickenBridge.scm",(void*)f_9372},
{"f_9354ChickenBridge.scm",(void*)f_9354},
{"f_9336ChickenBridge.scm",(void*)f_9336},
{"f_9327ChickenBridge.scm",(void*)f_9327},
{"f_9315ChickenBridge.scm",(void*)f_9315},
{"f_9007ChickenBridge.scm",(void*)f_9007},
{"f_9108ChickenBridge.scm",(void*)f_9108},
{"f_9157ChickenBridge.scm",(void*)f_9157},
{"f_9153ChickenBridge.scm",(void*)f_9153},
{"f_9125ChickenBridge.scm",(void*)f_9125},
{"f_9060ChickenBridge.scm",(void*)f_9060},
{"f_9069ChickenBridge.scm",(void*)f_9069},
{"f_9053ChickenBridge.scm",(void*)f_9053},
{"f_8872ChickenBridge.scm",(void*)f_8872},
{"f_8998ChickenBridge.scm",(void*)f_8998},
{"f_8994ChickenBridge.scm",(void*)f_8994},
{"f_8972ChickenBridge.scm",(void*)f_8972},
{"f_8902ChickenBridge.scm",(void*)f_8902},
{"f_8918ChickenBridge.scm",(void*)f_8918},
{"f_8827ChickenBridge.scm",(void*)f_8827},
{"f_8870ChickenBridge.scm",(void*)f_8870},
{"f_8859ChickenBridge.scm",(void*)f_8859},
{"f_8711ChickenBridge.scm",(void*)f_8711},
{"f_8825ChickenBridge.scm",(void*)f_8825},
{"f_8726ChickenBridge.scm",(void*)f_8726},
{"f_8756ChickenBridge.scm",(void*)f_8756},
{"f_8775ChickenBridge.scm",(void*)f_8775},
{"f_8760ChickenBridge.scm",(void*)f_8760},
{"f_8739ChickenBridge.scm",(void*)f_8739},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8709ChickenBridge.scm",(void*)f_8709},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8634ChickenBridge.scm",(void*)f_8634},
{"f_8653ChickenBridge.scm",(void*)f_8653},
{"f_8638ChickenBridge.scm",(void*)f_8638},
{"f_8617ChickenBridge.scm",(void*)f_8617},
{"f_8492ChickenBridge.scm",(void*)f_8492},
{"f_8587ChickenBridge.scm",(void*)f_8587},
{"f_8507ChickenBridge.scm",(void*)f_8507},
{"f_8553ChickenBridge.scm",(void*)f_8553},
{"f_8538ChickenBridge.scm",(void*)f_8538},
{"f_8520ChickenBridge.scm",(void*)f_8520},
{"f_8439ChickenBridge.scm",(void*)f_8439},
{"f_8477ChickenBridge.scm",(void*)f_8477},
{"f_8484ChickenBridge.scm",(void*)f_8484},
{"f_8462ChickenBridge.scm",(void*)f_8462},
{"f_8437ChickenBridge.scm",(void*)f_8437},
{"f_8409ChickenBridge.scm",(void*)f_8409},
{"f_8411ChickenBridge.scm",(void*)f_8411},
{"f_8389ChickenBridge.scm",(void*)f_8389},
{"f_8337ChickenBridge.scm",(void*)f_8337},
{"f_8374ChickenBridge.scm",(void*)f_8374},
{"f_8341ChickenBridge.scm",(void*)f_8341},
{"f_8357ChickenBridge.scm",(void*)f_8357},
{"f_8359ChickenBridge.scm",(void*)f_8359},
{"f_8309ChickenBridge.scm",(void*)f_8309},
{"f_8290ChickenBridge.scm",(void*)f_8290},
{"f_8249ChickenBridge.scm",(void*)f_8249},
{"f_8230ChickenBridge.scm",(void*)f_8230},
{"f_8002ChickenBridge.scm",(void*)f_8002},
{"f_8207ChickenBridge.scm",(void*)f_8207},
{"f_8222ChickenBridge.scm",(void*)f_8222},
{"f_8214ChickenBridge.scm",(void*)f_8214},
{"f_8178ChickenBridge.scm",(void*)f_8178},
{"f_8182ChickenBridge.scm",(void*)f_8182},
{"f_8143ChickenBridge.scm",(void*)f_8143},
{"f_8147ChickenBridge.scm",(void*)f_8147},
{"f_8006ChickenBridge.scm",(void*)f_8006},
{"f_8107ChickenBridge.scm",(void*)f_8107},
{"f_8122ChickenBridge.scm",(void*)f_8122},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8078ChickenBridge.scm",(void*)f_8078},
{"f_8082ChickenBridge.scm",(void*)f_8082},
{"f_8043ChickenBridge.scm",(void*)f_8043},
{"f_8047ChickenBridge.scm",(void*)f_8047},
{"f_8009ChickenBridge.scm",(void*)f_8009},
{"f_8012ChickenBridge.scm",(void*)f_8012},
{"f_8015ChickenBridge.scm",(void*)f_8015},
{"f_7771ChickenBridge.scm",(void*)f_7771},
{"f_7976ChickenBridge.scm",(void*)f_7976},
{"f_7991ChickenBridge.scm",(void*)f_7991},
{"f_7983ChickenBridge.scm",(void*)f_7983},
{"f_7947ChickenBridge.scm",(void*)f_7947},
{"f_7951ChickenBridge.scm",(void*)f_7951},
{"f_7912ChickenBridge.scm",(void*)f_7912},
{"f_7916ChickenBridge.scm",(void*)f_7916},
{"f_7775ChickenBridge.scm",(void*)f_7775},
{"f_7876ChickenBridge.scm",(void*)f_7876},
{"f_7891ChickenBridge.scm",(void*)f_7891},
{"f_7883ChickenBridge.scm",(void*)f_7883},
{"f_7847ChickenBridge.scm",(void*)f_7847},
{"f_7851ChickenBridge.scm",(void*)f_7851},
{"f_7812ChickenBridge.scm",(void*)f_7812},
{"f_7816ChickenBridge.scm",(void*)f_7816},
{"f_7778ChickenBridge.scm",(void*)f_7778},
{"f_7781ChickenBridge.scm",(void*)f_7781},
{"f_7791ChickenBridge.scm",(void*)f_7791},
{"f_7728ChickenBridge.scm",(void*)f_7728},
{"f_7761ChickenBridge.scm",(void*)f_7761},
{"f_7746ChickenBridge.scm",(void*)f_7746},
{"f_7707ChickenBridge.scm",(void*)f_7707},
{"f_7672ChickenBridge.scm",(void*)f_7672},
{"f_7676ChickenBridge.scm",(void*)f_7676},
{"f_7564ChickenBridge.scm",(void*)f_7564},
{"f_7651ChickenBridge.scm",(void*)f_7651},
{"f_7571ChickenBridge.scm",(void*)f_7571},
{"f_7580ChickenBridge.scm",(void*)f_7580},
{"f_7627ChickenBridge.scm",(void*)f_7627},
{"f_7593ChickenBridge.scm",(void*)f_7593},
{"f_7619ChickenBridge.scm",(void*)f_7619},
{"f_7431ChickenBridge.scm",(void*)f_7431},
{"f_7435ChickenBridge.scm",(void*)f_7435},
{"f_7438ChickenBridge.scm",(void*)f_7438},
{"f_7542ChickenBridge.scm",(void*)f_7542},
{"f_7440ChickenBridge.scm",(void*)f_7440},
{"f_7447ChickenBridge.scm",(void*)f_7447},
{"f_7489ChickenBridge.scm",(void*)f_7489},
{"f_7496ChickenBridge.scm",(void*)f_7496},
{"f_7470ChickenBridge.scm",(void*)f_7470},
{"f_7404ChickenBridge.scm",(void*)f_7404},
{"f_7309ChickenBridge.scm",(void*)f_7309},
{"f_7313ChickenBridge.scm",(void*)f_7313},
{"f_7316ChickenBridge.scm",(void*)f_7316},
{"f_7328ChickenBridge.scm",(void*)f_7328},
{"f_7350ChickenBridge.scm",(void*)f_7350},
{"f_7294ChickenBridge.scm",(void*)f_7294},
{"f_7279ChickenBridge.scm",(void*)f_7279},
{"f_7043ChickenBridge.scm",(void*)f_7043},
{"f_7256ChickenBridge.scm",(void*)f_7256},
{"f_7271ChickenBridge.scm",(void*)f_7271},
{"f_7263ChickenBridge.scm",(void*)f_7263},
{"f_7227ChickenBridge.scm",(void*)f_7227},
{"f_7231ChickenBridge.scm",(void*)f_7231},
{"f_7192ChickenBridge.scm",(void*)f_7192},
{"f_7196ChickenBridge.scm",(void*)f_7196},
{"f_7047ChickenBridge.scm",(void*)f_7047},
{"f_7156ChickenBridge.scm",(void*)f_7156},
{"f_7171ChickenBridge.scm",(void*)f_7171},
{"f_7163ChickenBridge.scm",(void*)f_7163},
{"f_7127ChickenBridge.scm",(void*)f_7127},
{"f_7131ChickenBridge.scm",(void*)f_7131},
{"f_7092ChickenBridge.scm",(void*)f_7092},
{"f_7096ChickenBridge.scm",(void*)f_7096},
{"f_7050ChickenBridge.scm",(void*)f_7050},
{"f_7053ChickenBridge.scm",(void*)f_7053},
{"f_7064ChickenBridge.scm",(void*)f_7064},
{"f_7024ChickenBridge.scm",(void*)f_7024},
{"f_7003ChickenBridge.scm",(void*)f_7003},
{"f_7015ChickenBridge.scm",(void*)f_7015},
{"f_6977ChickenBridge.scm",(void*)f_6977},
{"f_6935ChickenBridge.scm",(void*)f_6935},
{"f_6920ChickenBridge.scm",(void*)f_6920},
{"f_6809ChickenBridge.scm",(void*)f_6809},
{"f_6884ChickenBridge.scm",(void*)f_6884},
{"f_6813ChickenBridge.scm",(void*)f_6813},
{"f_6853ChickenBridge.scm",(void*)f_6853},
{"f_6842ChickenBridge.scm",(void*)f_6842},
{"f_6827ChickenBridge.scm",(void*)f_6827},
{"f_6835ChickenBridge.scm",(void*)f_6835},
{"f_6775ChickenBridge.scm",(void*)f_6775},
{"f_6787ChickenBridge.scm",(void*)f_6787},
{"f_6772ChickenBridge.scm",(void*)f_6772},
{"f_6769ChickenBridge.scm",(void*)f_6769},
{"f_6762ChickenBridge.scm",(void*)f_6762},
{"f_6759ChickenBridge.scm",(void*)f_6759},
{"f_6752ChickenBridge.scm",(void*)f_6752},
{"f_6734ChickenBridge.scm",(void*)f_6734},
{"f_6723ChickenBridge.scm",(void*)f_6723},
{"f_6720ChickenBridge.scm",(void*)f_6720},
{"f_6717ChickenBridge.scm",(void*)f_6717},
{"f_6714ChickenBridge.scm",(void*)f_6714},
{"f_6685ChickenBridge.scm",(void*)f_6685},
{"f_6678ChickenBridge.scm",(void*)f_6678},
{"f_6675ChickenBridge.scm",(void*)f_6675},
{"f_6654ChickenBridge.scm",(void*)f_6654},
{"f_6647ChickenBridge.scm",(void*)f_6647},
{"f_6640ChickenBridge.scm",(void*)f_6640},
{"f_6625ChickenBridge.scm",(void*)f_6625},
{"f_6614ChickenBridge.scm",(void*)f_6614},
{"f_6603ChickenBridge.scm",(void*)f_6603},
{"f_6596ChickenBridge.scm",(void*)f_6596},
{"f_6569ChickenBridge.scm",(void*)f_6569},
{"f_6542ChickenBridge.scm",(void*)f_6542},
{"f_6501ChickenBridge.scm",(void*)f_6501},
{"f_6507ChickenBridge.scm",(void*)f_6507},
{"f_6517ChickenBridge.scm",(void*)f_6517},
{"f_6415ChickenBridge.scm",(void*)f_6415},
{"f_6316ChickenBridge.scm",(void*)f_6316},
{"f_6320ChickenBridge.scm",(void*)f_6320},
{"f_6345ChickenBridge.scm",(void*)f_6345},
{"f_6362ChickenBridge.scm",(void*)f_6362},
{"f_6366ChickenBridge.scm",(void*)f_6366},
{"f_6322ChickenBridge.scm",(void*)f_6322},
{"f_6339ChickenBridge.scm",(void*)f_6339},
{"f_6306ChickenBridge.scm",(void*)f_6306},
{"f_6266ChickenBridge.scm",(void*)f_6266},
{"f_6296ChickenBridge.scm",(void*)f_6296},
{"f_6128ChickenBridge.scm",(void*)f_6128},
{"f_6162ChickenBridge.scm",(void*)f_6162},
{"f_6105ChickenBridge.scm",(void*)f_6105},
{"f_6099ChickenBridge.scm",(void*)f_6099},
{"f_6084ChickenBridge.scm",(void*)f_6084},
{"f_6070ChickenBridge.scm",(void*)f_6070},
{"f_6060ChickenBridge.scm",(void*)f_6060},
{"f_6050ChickenBridge.scm",(void*)f_6050},
{"f_6040ChickenBridge.scm",(void*)f_6040},
{"f_6030ChickenBridge.scm",(void*)f_6030},
{"f_6001ChickenBridge.scm",(void*)f_6001},
{"f_6010ChickenBridge.scm",(void*)f_6010},
{"f_6015ChickenBridge.scm",(void*)f_6015},
{"f_5990ChickenBridge.scm",(void*)f_5990},
{"f_5995ChickenBridge.scm",(void*)f_5995},
{"f_5697ChickenBridge.scm",(void*)f_5697},
{"f_5707ChickenBridge.scm",(void*)f_5707},
{"f_5958ChickenBridge.scm",(void*)f_5958},
{"f_5710ChickenBridge.scm",(void*)f_5710},
{"f_5713ChickenBridge.scm",(void*)f_5713},
{"f_5728ChickenBridge.scm",(void*)f_5728},
{"f_5738ChickenBridge.scm",(void*)f_5738},
{"f_5740ChickenBridge.scm",(void*)f_5740},
{"f_5799ChickenBridge.scm",(void*)f_5799},
{"f_5809ChickenBridge.scm",(void*)f_5809},
{"f_5926ChickenBridge.scm",(void*)f_5926},
{"f_5914ChickenBridge.scm",(void*)f_5914},
{"f_5912ChickenBridge.scm",(void*)f_5912},
{"f_5899ChickenBridge.scm",(void*)f_5899},
{"f_5853ChickenBridge.scm",(void*)f_5853},
{"f_5880ChickenBridge.scm",(void*)f_5880},
{"f_5859ChickenBridge.scm",(void*)f_5859},
{"f_5793ChickenBridge.scm",(void*)f_5793},
{"f_5752ChickenBridge.scm",(void*)f_5752},
{"f_5765ChickenBridge.scm",(void*)f_5765},
{"f_5975ChickenBridge.scm",(void*)f_5975},
{"f_5966ChickenBridge.scm",(void*)f_5966},
{"f_5974ChickenBridge.scm",(void*)f_5974},
{"f_5977ChickenBridge.scm",(void*)f_5977},
{"f_5985ChickenBridge.scm",(void*)f_5985},
{"f_5399ChickenBridge.scm",(void*)f_5399},
{"f_5652ChickenBridge.scm",(void*)f_5652},
{"f_5685ChickenBridge.scm",(void*)f_5685},
{"f_5681ChickenBridge.scm",(void*)f_5681},
{"f_5670ChickenBridge.scm",(void*)f_5670},
{"f_5666ChickenBridge.scm",(void*)f_5666},
{"f_5560ChickenBridge.scm",(void*)f_5560},
{"f_5563ChickenBridge.scm",(void*)f_5563},
{"f_5566ChickenBridge.scm",(void*)f_5566},
{"f_5646ChickenBridge.scm",(void*)f_5646},
{"f_5471ChickenBridge.scm",(void*)f_5471},
{"f_5412ChickenBridge.scm",(void*)f_5412},
{"f_5569ChickenBridge.scm",(void*)f_5569},
{"f_5576ChickenBridge.scm",(void*)f_5576},
{"f_5636ChickenBridge.scm",(void*)f_5636},
{"f_5622ChickenBridge.scm",(void*)f_5622},
{"f_5588ChickenBridge.scm",(void*)f_5588},
{"f_5614ChickenBridge.scm",(void*)f_5614},
{"f_5549ChickenBridge.scm",(void*)f_5549},
{"f_5596ChickenBridge.scm",(void*)f_5596},
{"f_5592ChickenBridge.scm",(void*)f_5592},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
